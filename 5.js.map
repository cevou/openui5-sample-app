{"version":3,"sources":["webpack:///../node_modules/@openui5/sap.ui.core/src/sap/ui/core/support/ToolsAPI.js"],"names":["__WEBPACK_UI5_DEFINE_ARRAY__","__WEBPACK_UI5_DEFINE_RESULT__","__webpack_require__","undefined","library","Global","Core","ElementMetadata","LoaderExtensions","UriParameters","configurationInfo","sap","ui","getCore","getConfiguration","_getFrameworkName","versionInfo","getVersionInfo","e","gav","name","indexOf","_getLoadedLibraries","libraries","getLoadedLibraries","formattedLibraries","Object","create","keys","forEach","element","index","array","version","controlTree","_createRenderedTreeModel","nodeElement","resultArray","node","childNode","firstElementChild","results","subResult","control","byId","id","getAttribute","push","getId","getMetadata","getName","type","content","length","this","nextElementSibling","controlInformation","_getOwnProperties","result","controlPropertiesFromMetadata","getProperties","meta","controlName","properties","key","value","getProperty","getType","_copyInheritedProperties","inheritedMetadata","inheritedMetadataProperties","get","_getInheritedProperties","getParent","_getProperties","controlId","own","inherited","_getModelFromContext","controlProperty","bindingContext","getBinding","bindingContextModel","getModel","bindingInfoParts","getBindingInfo","parts","modelNames","i","model","names","path","getPath","mode","getDefaultBindingMode","data","getData","_getBindDataForProperties","getAllProperties","propertiesBindingData","hasOwnProperty","getValue","getBindingMode","_getBindDataForAggregations","aggregations","getAllAggregations","aggregationsBindingData","getFrameworkInformation","commonInformation","frameworkName","buildTime","buildinfo","buildtime","lastChange","lastchange","jquery","jQuery","fn","userAgent","navigator","applicationHREF","window","location","href","documentTitle","document","title","documentMode","debugMode","debug","statistics","configurationBootstrap","configurationComputed","theme","getTheme","language","getLanguage","formatLocale","getFormatLocale","accessibility","getAccessibility","animation","getAnimation","rtl","getRTL","getDebug","inspect","getInspect","originInfo","getOriginInfo","noDuplicateIds","getNoDuplicateIds","versioninfo","loadedLibraries","loadedModules","getAllRequiredModules","sort","URLParameters","mParams","getRenderedControlTree","renderedControlTreeModel","body","getControlProperties","getControlBindings","getBindingContext","contextPath","apply","exports","module"],"mappings":"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","file":"5.js","sourcesContent":["/*!\n * OpenUI5\n * (c) Copyright 2009-2019 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define([\n\t'sap/ui/core/library',\n\t'sap/ui/Global',\n\t'sap/ui/core/Core',\n\t'sap/ui/core/ElementMetadata',\n\t\"sap/base/util/LoaderExtensions\",\n\t\"sap/base/util/UriParameters\"\n],\n\tfunction(\n\t\tlibrary,\n\t\tGlobal,\n\t\tCore,\n\t\tElementMetadata,\n\t\tLoaderExtensions,\n\t\tUriParameters\n\t) {\n\t\t'use strict';\n\n\t\tvar configurationInfo = sap.ui.getCore().getConfiguration();\n\n\t\t// ================================================================================\n\t\t// Technical Information\n\t\t// ================================================================================\n\n\t\t/**\n\t\t * Returns the framework name.\n\t\t * @returns {string}\n\t\t * @private\n\t\t */\n\t\tfunction _getFrameworkName() {\n\t\t\tvar versionInfo;\n\t\t\tvar frameworkInfo;\n\n\t\t\ttry {\n\t\t\t\tversionInfo = sap.ui.getVersionInfo();\n\t\t\t} catch (e) {\n\t\t\t\tversionInfo = undefined;\n\t\t\t}\n\n\t\t\tif (versionInfo) {\n\t\t\t\t// Use group artifact version for maven builds or name for other builds (like SAPUI5-on-ABAP)\n\t\t\t\tframeworkInfo = versionInfo.gav ? versionInfo.gav : versionInfo.name;\n\n\t\t\t\treturn frameworkInfo.indexOf('openui5') !== -1 ? 'OpenUI5' : 'SAPUI5';\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Creates an object with the libraries and their version from the version info file.\n\t\t * @returns {Object}\n\t\t * @private\n\t\t */\n\t\tfunction _getLibraries() {\n\t\t\tvar libraries = Global.versioninfo ? Global.versioninfo.libraries : undefined;\n\t\t\tvar formattedLibraries = Object.create(null);\n\n\t\t\tif (libraries !== undefined) {\n\t\t\t\tlibraries.forEach(function (element, index, array) {\n\t\t\t\t\tformattedLibraries[element.name] = element.version;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn formattedLibraries;\n\t\t}\n\n\t\t/**\n\t\t * Creates an object with the loaded libraries and their version.\n\t\t * @returns {Object}\n\t\t * @private\n\t\t */\n\t\tfunction _getLoadedLibraries() {\n\t\t\tvar libraries = sap.ui.getCore().getLoadedLibraries();\n\t\t\tvar formattedLibraries = Object.create(null);\n\n\t\t\tObject.keys(sap.ui.getCore().getLoadedLibraries()).forEach(function (element, index, array) {\n\t\t\t\tformattedLibraries[element] = libraries[element].version;\n\t\t\t});\n\n\t\t\treturn formattedLibraries;\n\t\t}\n\n\t\t/**\n\t\t * Gets all the relevant information for the framework.\n\t\t * @returns {Object}\n\t\t * @private\n\t\t */\n\t\tfunction _getFrameworkInformation() {\n\t\t\treturn {\n\t\t\t\tcommonInformation: {\n\t\t\t\t\tframeworkName: _getFrameworkName(),\n\t\t\t\t\tversion: Global.version,\n\t\t\t\t\tbuildTime: Global.buildinfo.buildtime,\n\t\t\t\t\tlastChange: Global.buildinfo.lastchange,\n\t\t\t\t\tjquery: jQuery.fn.jquery,\n\t\t\t\t\tuserAgent: navigator.userAgent,\n\t\t\t\t\tapplicationHREF: window.location.href,\n\t\t\t\t\tdocumentTitle: document.title,\n\t\t\t\t\tdocumentMode: document.documentMode || '',\n\t\t\t\t\tdebugMode: jQuery.sap.debug(),\n\t\t\t\t\tstatistics: jQuery.sap.statistics()\n\t\t\t\t},\n\n\t\t\t\tconfigurationBootstrap: window['sap-ui-config'] || Object.create(null),\n\n\t\t\t\tconfigurationComputed: {\n\t\t\t\t\ttheme: configurationInfo.getTheme(),\n\t\t\t\t\tlanguage: configurationInfo.getLanguage(),\n\t\t\t\t\tformatLocale: configurationInfo.getFormatLocale(),\n\t\t\t\t\taccessibility: configurationInfo.getAccessibility(),\n\t\t\t\t\tanimation: configurationInfo.getAnimation(),\n\t\t\t\t\trtl: configurationInfo.getRTL(),\n\t\t\t\t\tdebug: configurationInfo.getDebug(),\n\t\t\t\t\tinspect: configurationInfo.getInspect(),\n\t\t\t\t\toriginInfo: configurationInfo.getOriginInfo(),\n\t\t\t\t\tnoDuplicateIds: configurationInfo.getNoDuplicateIds()\n\t\t\t\t},\n\n\t\t\t\tlibraries: _getLibraries(),\n\n\t\t\t\tloadedLibraries: _getLoadedLibraries(),\n\n\t\t\t\tloadedModules: LoaderExtensions.getAllRequiredModules().sort(),\n\n\t\t\t\tURLParameters: new UriParameters(window.location.href).mParams\n\t\t\t};\n\t\t}\n\n\t\t// ================================================================================\n\t\t// Control tree Information\n\t\t// ================================================================================\n\n\t\t/**\n\t\t * Name space for all methods related to control trees\n\t\t */\n\t\tvar controlTree = {\n\t\t\t/**\n\t\t\t * Creates data model of the rendered controls as a tree.\n\t\t\t * @param {Element} nodeElement - HTML DOM element from which the function will star searching.\n\t\t\t * @param {Array} resultArray - Array that will contains all the information.\n\t\t\t * @private\n\t\t\t */\n\t\t\t_createRenderedTreeModel: function (nodeElement, resultArray) {\n\t\t\t\tvar node = nodeElement;\n\t\t\t\tvar childNode = node.firstElementChild;\n\t\t\t\tvar results = resultArray;\n\t\t\t\tvar subResult = results;\n\t\t\t\tvar control = sap.ui.getCore().byId(node.id);\n\n\t\t\t\tif (node.getAttribute('data-sap-ui') && control) {\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\tid: control.getId(),\n\t\t\t\t\t\tname: control.getMetadata().getName(),\n\t\t\t\t\t\ttype: 'sap-ui-control',\n\t\t\t\t\t\tcontent: []\n\t\t\t\t\t});\n\n\t\t\t\t\tsubResult = results[results.length - 1].content;\n\t\t\t\t} else if (node.getAttribute('data-sap-ui-area')) {\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\tid: node.id,\n\t\t\t\t\t\tname: 'sap-ui-area',\n\t\t\t\t\t\ttype: 'data-sap-ui',\n\t\t\t\t\t\tcontent: []\n\t\t\t\t\t});\n\n\t\t\t\t\tsubResult = results[results.length - 1].content;\n\t\t\t\t}\n\n\t\t\t\twhile (childNode) {\n\t\t\t\t\tthis._createRenderedTreeModel(childNode, subResult);\n\t\t\t\t\tchildNode = childNode.nextElementSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// ================================================================================\n\t\t// Control Information\n\t\t// ================================================================================\n\n\t\t/**\n\t\t * Name space for all information relevant for UI5 control\n\t\t */\n\t\tvar controlInformation = {\n\n\t\t\t// Control Properties Info\n\t\t\t// ================================================================================\n\n\t\t\t/**\n\t\t\t * Creates an object with the control properties that are not inherited.\n\t\t\t * @param {Object} control - UI5 control.\n\t\t\t * @returns {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\t_getOwnProperties: function (control) {\n\t\t\t\tvar result = Object.create(null);\n\t\t\t\tvar controlPropertiesFromMetadata = control.getMetadata().getProperties();\n\n\t\t\t\tresult.meta = Object.create(null);\n\t\t\t\tresult.meta.controlName = control.getMetadata().getName();\n\n\t\t\t\tresult.properties = Object.create(null);\n\t\t\t\tObject.keys(controlPropertiesFromMetadata).forEach(function (key) {\n\t\t\t\t\tresult.properties[key] = Object.create(null);\n\t\t\t\t\tresult.properties[key].value = control.getProperty(key);\n\t\t\t\t\tresult.properties[key].type = controlPropertiesFromMetadata[key].getType().getName ? controlPropertiesFromMetadata[key].getType().getName() : '';\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Copies the inherited properties of a UI5 control from the metadata.\n\t\t\t * @param {Object} control - UI5 Control.\n\t\t\t * @param {Object} inheritedMetadata - UI5 control metadata.\n\t\t\t * @returns {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\t_copyInheritedProperties: function (control, inheritedMetadata) {\n\t\t\t\tvar inheritedMetadataProperties = inheritedMetadata.getProperties();\n\t\t\t\tvar result = Object.create(null);\n\n\t\t\t\tresult.meta = Object.create(null);\n\t\t\t\tresult.meta.controlName = inheritedMetadata.getName();\n\n\t\t\t\tresult.properties = Object.create(null);\n\t\t\t\tObject.keys(inheritedMetadataProperties).forEach(function (key) {\n\t\t\t\t\tresult.properties[key] = Object.create(null);\n\t\t\t\t\tresult.properties[key].value = inheritedMetadataProperties[key].get(control);\n\t\t\t\t\tresult.properties[key].type = inheritedMetadataProperties[key].getType().getName ? inheritedMetadataProperties[key].getType().getName() : '';\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates an array with the control properties that are inherited.\n\t\t\t * @param {Object} control - UI5 control.\n\t\t\t * @returns {Array}\n\t\t\t * @private\n\t\t\t */\n\t\t\t_getInheritedProperties: function (control) {\n\t\t\t\tvar result = [];\n\t\t\t\tvar inheritedMetadata = control.getMetadata().getParent();\n\n\t\t\t\twhile (inheritedMetadata instanceof ElementMetadata) {\n\t\t\t\t\tresult.push(this._copyInheritedProperties(control, inheritedMetadata));\n\t\t\t\t\tinheritedMetadata = inheritedMetadata.getParent();\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates an object with all control properties.\n\t\t\t * @param {string} controlId\n\t\t\t * @returns {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\t_getProperties: function (controlId) {\n\t\t\t\tvar control = sap.ui.getCore().byId(controlId);\n\t\t\t\tvar properties = Object.create(null);\n\n\t\t\t\tif (control) {\n\t\t\t\t\tproperties.own = this._getOwnProperties(control);\n\t\t\t\t\tproperties.inherited = this._getInheritedProperties(control);\n\t\t\t\t}\n\n\t\t\t\treturn properties;\n\t\t\t},\n\n\t\t\t// Binding Info\n\t\t\t// ================================================================================\n\n\t\t\t/**\n\t\t\t * Creates an object with the context model of a UI5 control.\n\t\t\t * @param {Object} control\n\t\t\t * @param {string} controlProperty\n\t\t\t * @returns {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\t_getModelFromContext: function (control, controlProperty) {\n\t\t\t\tvar bindingContext = control.getBinding(controlProperty);\n\t\t\t\tvar bindingContextModel = bindingContext.getModel();\n\t\t\t\tvar bindingInfoParts = (control.getBindingInfo(controlProperty).parts) ? control.getBindingInfo(controlProperty).parts : [];\n\t\t\t\tvar modelNames = [];\n\n\t\t\t\tfor (var i = 0; i < bindingInfoParts.length; i++) {\n\t\t\t\t\tmodelNames.push(bindingInfoParts[i].model);\n\t\t\t\t}\n\n\t\t\t\tvar model = {\n\t\t\t\t\tnames: modelNames,\n\t\t\t\t\tpath: bindingContext.getPath()\n\t\t\t\t};\n\n\t\t\t\tif (bindingContextModel) {\n\t\t\t\t\tmodel.mode = bindingContextModel.getDefaultBindingMode();\n\t\t\t\t\tmodel.type = bindingContextModel.getMetadata().getName();\n\t\t\t\t\tmodel.data = bindingContextModel.getData ? bindingContextModel.getData('/') : undefined;\n\t\t\t\t}\n\n\t\t\t\treturn model;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates an object with the properties bindings of a UI5 control.\n\t\t\t * @param {Object} control\n\t\t\t * @returns {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\t_getBindDataForProperties: function (control) {\n\t\t\t\tvar properties = control.getMetadata().getAllProperties();\n\t\t\t\tvar propertiesBindingData = Object.create(null);\n\n\t\t\t\tfor (var key in properties) {\n\t\t\t\t\tif (properties.hasOwnProperty(key) && control.getBinding(key)) {\n\t\t\t\t\t\tpropertiesBindingData[key] = Object.create(null);\n\t\t\t\t\t\tpropertiesBindingData[key].path = control.getBinding(key).getPath();\n\t\t\t\t\t\tpropertiesBindingData[key].value = control.getBinding(key).getValue();\n\t\t\t\t\t\tpropertiesBindingData[key].type = control.getMetadata().getProperty(key).getType().getName ? control.getMetadata().getProperty(key).getType().getName() : '';\n\t\t\t\t\t\tpropertiesBindingData[key].mode = control.getBinding(key).getBindingMode();\n\t\t\t\t\t\tpropertiesBindingData[key].model = this._getModelFromContext(control, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn propertiesBindingData;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates an object with the agregations bindings of a UI5 control.\n\t\t\t * @param {Object} control\n\t\t\t * @returns {Object}\n\t\t\t * @private\n\t\t\t */\n\t\t\t_getBindDataForAggregations: function (control) {\n\t\t\t\tvar aggregations = control.getMetadata().getAllAggregations();\n\t\t\t\tvar aggregationsBindingData = Object.create(null);\n\n\t\t\t\tfor (var key in aggregations) {\n\t\t\t\t\tif (aggregations.hasOwnProperty(key) && control.getBinding(key)) {\n\t\t\t\t\t\taggregationsBindingData[key] = Object.create(null);\n\t\t\t\t\t\taggregationsBindingData[key].model = this._getModelFromContext(control, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn aggregationsBindingData;\n\t\t\t}\n\t\t};\n\n\t\t// ================================================================================\n\t\t// Public API\n\t\t// ================================================================================\n\n\t\t/**\n\t\t * Global object that provide common information for all support tools\n\t\t * @type {{getFrameworkInformation: Function, getRenderedControlTree: Function, getControlProperties: Function, getControlBindingInformation: Function}}\n\t\t */\n\t\treturn {\n\n\t\t\t/**\n\t\t\t * Common information about the framework\n\t\t\t * @returns {*}\n\t\t\t */\n\t\t\tgetFrameworkInformation: _getFrameworkInformation,\n\n\t\t\t/**\n\t\t\t * Array model of the rendered control as a tree.\n\t\t\t * @returns {Array}\n\t\t\t */\n\t\t\tgetRenderedControlTree: function () {\n\t\t\t\tvar renderedControlTreeModel = [];\n\t\t\t\tcontrolTree._createRenderedTreeModel(document.body, renderedControlTreeModel);\n\n\t\t\t\treturn renderedControlTreeModel;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Gets all control properties.\n\t\t\t * @param {string} controlId\n\t\t\t * @returns {Object}\n\t\t\t */\n\t\t\tgetControlProperties: function (controlId) {\n\t\t\t\treturn controlInformation._getProperties(controlId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Gets control binding information.\n\t\t\t * @param {string} controlId\n\t\t\t * @returns {Object}\n\t\t\t */\n\t\t\tgetControlBindings: function (controlId) {\n\t\t\t\tvar result = Object.create(null);\n\t\t\t\tvar control = sap.ui.getCore().byId(controlId);\n\t\t\t\tvar bindingContext;\n\n\t\t\t\tif (!control) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tbindingContext = control.getBindingContext();\n\n\t\t\t\tresult.meta = Object.create(null);\n\t\t\t\tresult.contextPath = bindingContext ? bindingContext.getPath() : null;\n\t\t\t\tresult.aggregations = controlInformation._getBindDataForAggregations(control);\n\t\t\t\tresult.properties = controlInformation._getBindDataForProperties(control);\n\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\n\t});"],"sourceRoot":""}