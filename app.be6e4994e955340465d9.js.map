{"version":3,"sources":["webpack:///app.be6e4994e955340465d9.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/GroupHeaderListItemRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/NavContainerRenderer.js","webpack:///./app.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/messagebundle_en.properties","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ColumnHeaderRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/Table.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/NavContainer.js","webpack:///./i18n/i18n.properties","webpack:///../bower_components/openui5-sap.m/resources/sap/m/InputRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ShellRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ColumnListItem.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ColumnHeader.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/CheckBoxRenderer.js","webpack:///../bower_components/openui5-sap.ui.core/resources/sap/ui/core/ListItem.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/Label.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/StandardListItemRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/App.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ListBase.js","webpack:///../bower_components/openui5-sap.ui.core/resources/sap/ui/core/ValueStateSupport.js","webpack:///../bower_components/openui5-sap.ui.core/resources/sap/ui/core/messagebundle_en.properties","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ListItemBase.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/GroupHeaderListItem.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/Shell.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/DisplayListItemRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/InputBaseRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/AppRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/PageRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/Title.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/SegmentedButtonItem.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/delegate/ValueStateMessage.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/GrowingEnablement.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/CheckBox.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/List.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ColumnListItemRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/TableRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/messagebundle_de.properties","webpack:///../bower_components/openui5-sap.ui.core/resources/sap/ui/core/format/NumberFormat.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ListRenderer.js","webpack:///../bower_components/openui5-sap.ui.core/resources/sap/ui/core/message/MessageMixin.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/CustomListItemRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/LabelRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/CustomListItem.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/Input.js","webpack:///./manifest.json","webpack:///../bower_components/openui5-sap.m/resources/sap/m/Page.js","webpack:///../bower_components/openui5-sap.ui.core/resources/sap/ui/core/messagebundle.properties","webpack:///../bower_components/openui5-sap.m/resources/sap/m/DisplayListItem.js","webpack:///./i18n/i18n_de.properties","webpack:///../bower_components/openui5-sap.m/resources/sap/m/SegmentedButtonRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/SegmentedButton.js","webpack:///../bower_components/openui5-sap.ui.core/resources/sap/ui/core/messagebundle_de.properties","webpack:///../bower_components/openui5-sap.m/resources/sap/m/messagebundle.properties","webpack:///./i18n/i18n_en.properties","webpack:///./Component.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/StandardListItem.js","webpack:///../bower_components/openui5-sap.ui.core/resources/sap/ui/core/delegate/ItemNavigation.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ListBaseRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/InputBase.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/ListItemBaseRenderer.js","webpack:///../bower_components/openui5-sap.m/resources/sap/m/TitleRenderer.js","webpack:///./view/App.view.xml","webpack:///./controller/App.controller.js"],"names":["webpackJsonp","+Gcz","module","exports","__webpack_require__","__WEBPACK_UI5_DEFINE_ARRAY__","__WEBPACK_UI5_DEFINE_RESULT__","undefined","ListItemBaseRenderer","Renderer","coreLibrary","TextDirection","GroupHeaderListItemRenderer","extend","renderType","rm","oLI","oTable","getTable","write","apply","this","arguments","renderCounter","renderLIAttributes","addClass","getUpperCase","renderLIContentWrapper","writeAttribute","getColSpan","renderLIContent","sTextDir","getTitleTextDirection","Inherit","toLowerCase","writeEscaped","getTitle","iCount","getCount","getCounter","addLegacyOutlineClass","getAriaRole","+q+U","0XQ1","20Fv","NavContainerRenderer","render","oControl","_bRenderingInProgress","getVisible","writeControlData","getWidth","addStyle","sHeight","getHeight","renderAttributes","writeClasses","writeStyles","sTooltip","getTooltip_AsString","writeAttributeEscaped","renderBeforeContent","oContent","getCurrentPage","removeStyleClass","renderControl","2NKA","2O6T","_interopRequireDefault","obj","__esModule","default","_ComponentContainer","_ComponentContainer2","_Component","_Component2","sap","ui","getCore","boot","component","placeAt","3Use","428w","ColumnHeaderRenderer","oRm","sControlId","getId","bInteractive","_isInteractive","renderText","renderIcons","getConfiguration","getAccessibility","getAccessibilityInfo","description","getText","renderSortIcon","renderFilterIcon","oSortIcon","getAggregation","oFilterIcon","5KZc","jQuery","ListBase","ListItemBase","library","Device","ListKeyboardMode","ListGrowingDirection","BackgroundDesign","PopinLayout","Table","metadata","properties","backgroundDesign","type","group","defaultValue","Translucent","fixedLayout","showOverlay","alternateRowColors","popinLayout","Block","aggregations","columns","multiple","singularName","designTime","prototype","sNavItemClass","init","_iItemNeedsColumn","call","onBeforeRendering","_ensureColumnsMedia","_notifyColumns","getColumns","forEach","oColumn","_bShouldAddMedia","_addMedia","onAfterRendering","updateSelectAllCheckbox","_renderOverlay","$this","$","$overlay","find","bShowOverlay","getShowOverlay","length","css","append","remove","setShowOverlay","bShow","setProperty","exit","_selectAllCheckBox","destroy","destroyItems","removeAllItems","removeSelections","selectAll","bSort","aColumns","sort","c1","c2","getOrder","onAfterPageLoaded","getAlternateRowColors","removeClass","_getAlternateRowColorsClass","shouldRenderItems","bHasVisibleColumns","some","log","warning","onItemTypeColumnChange","oItem","bNeedsTypeColumn","_setTypeColumnVisibility","onItemSelectedChange","bSelect","delayedCall","getTableDomRef","getDomRef","getItemsContainerDomRef","setNavigationItems","oItemNavigation","$Header","$Footer","$Rows","children","aItemDomRefs","add","get","setItemDomRefs","getFocusedIndex","getGrowing","getGrowingDirection","Upwards","setFocusedIndex","checkGrowingFromScratch","hasPopin","getMergeDuplicates","onColumnResize","_mutex","col","isPopin","setDisplayViaMedia","_dirty","_getMediaContainerWidth","window","innerWidth","clean","rerender","setTableHeaderVisibility","bColVisible","$headRow","bHeaderVisible","hasClass","aVisibleColumns","$firstVisibleCol","eq","width","each","style","getAttribute","_colCount","m","ListBaseRenderer","ModeOrder","getMode","attr","getColCount","getFixedLayout","_forceStyleChange","className","_headerHidden","browser","msie","oTableStyle","listStyleType","setTimeout","bVisible","toggleClass","sAction","vParam1","vParam2","_getSelectAllCheckbox","id","activeHandling","addStyleClass","setParent","attachSelect","getSelected","setTabIndex","aItems","getItems","iSelectedItemCount","getSelectedItems","iSelectableItemCount","filter","isSelectable","setSelected","enhanceAccessibilityState","oElement","mAriaProps","oBundle","getLibraryResourceBundle","label","_hasPopin","isHeaderRowEvent","oEvent","target","closest","isFooterRowEvent","getAccessibilityType","_setHeaderAnnouncement","sAnnouncement","isAllSelectableSelected","i","oHeader","getHeader","getAccessibilityText","updateInvisibleText","_setFooterAnnouncement","oFooter","getFooter","onsapspace","isMarked","fireSelect","preventDefault","setMarked","onsaptabnext","getKeyboardMode","Edit","$Row","oLastTabbableDomRef","forwardTab","onsaptabprevious","sTargetId","focusPrevious","onfocusin","oTarget","_bThemeChanged","onThemeChanged","isGrouped","setObject","5iCT","Control","RenderManager","NavContainer","autoFocus","height","visible","defaultTransitionName","defaultAggregation","pages","associations","initialPage","events","navigate","allowPreventDefault","parameters","from","fromId","to","toId","firstTime","isTo","isBack","isBackToTop","isBackToPage","direction","afterNavigate","bUseAnimations","getAnimation","fnGetDelay","iDelay","fnIsPageParentActive","oPage","oParent","getParent","isActive","_pageStack","_aQueue","_mVisitedPages","_mFocusObject","_iTransitionsCompleted","_bNeverRendered","_bNavigating","pageToRenderFirst","pageId","oNavInfo","Event","srcControl","data","_oToDataBeforeRendering","backData","_handleEvent","focusObject","_isInsideAPopup","getAutoFocus","_applyAutoFocusTo","_getActualInitialPage","getInitialPage","page","byId","error","getPages","getPage","aPages","_ensurePageStackInitialized","push","isInitial","stack","getPreviousPage","currentPageIsTopPage","insertPreviousPage","transitionName","index","pageInfo","transition","splice","sId","focusSubjectDomRef","firstFocusableDomRef","focus","_applyAutoFocus","domRefRememberedFocusSubject","sPageId","bAutoFocus","bNavigatingBackToPreviousLocation","bFocusInsideFromPage","_afterTransitionCallback","oData","oBackData","fireAfterNavigate","info","hasStyleClass","toString","_dequeueNavigation","fnNavigate","shift","_isInPageStack","_safeBackToPage","oTransitionParameters","oCurrentPage","backToPage","_isFocusInControl","document","activeElement","bFromQueue","getDefaultTransitionName","oFromPageInfo","proxy","oFromPage","oToPage","fireNavigate","closeKeyboard","invalidate","oToPageDomRef","parentNode","isPreservedContent","debug","createRenderManager","oTransition","transitions","iCompleted","that","back","_backTo","backToTop","sType","sRequestedPageId","Error","oToPageData","_findClosestPreviousPageInfo","oToPageId","pop","interimPage","join","childPos","flush","sRequestedPreviousPageId","fCallback","support","cssTransitions","bOneTransitionFinished","bTransitionEndPending","fAfterTransition","unbind","bind","webkit","$ToPage","animate","left","$FromPage","opacity","addCustomTransition","sName","fTo","fBack","forceInvalidation","oSource","bIsInPages","l","fnScanForPopup","getMetadata","isInstanceOf","removePage","removeAggregation","_onPageRemoved","aStack","oPageStackInfo","removeAllPages","removeAllAggregation","addPage","inArray","addAggregation","_fireAdaptableContentChange","insertPage","iIndex","iPreviousPageCount","insertAggregation","_getAdaptableContent","mEventRegistry","fireEvent","parent","adaptableContent","5lBc","6LTI","InputBaseRenderer","InputType","InputRenderer","addOuterClasses","getShowValueHelp","getEnabled","getEditable","getValueHelpOnly","getDescription","addOuterStyles","writeInnerAttributes","getType","Number","getRTL","getShowSuggestion","_bUseDialog","addInnerClasses","addWrapperStyles","getFieldWidth","writeDecorations","writeValueHelpIcon","_getValueHelpIcon","addPlaceholderStyles","getAriaLabelledBy","ariaLabels","getAriaDescribedBy","sAriaDescribedBy","_sAriaValueHelpLabelId","_sAriaInputDisabledLabelId","getAccessibilityState","mAccessibilityState","autocomplete","6s6H","7Xmk","7cJM","BackgroundHelper","TitleLevel","ShellRenderer","sTitleLevel","getTitleLevel","Auto","H1","getAppWidthLimited","addBackgroundColorStyles","getBackgroundColor","getBackgroundImage","renderBackgroundImageTag","getBackgroundRepeat","getBackgroundOpacity","extraHeaderClass","extraBGClass","getLogoImageHtml","getHeaderRightText","encodeHTML","getShowLogout","rb","getApp","sImage","getLogo","_getThemeImage","result","oRb","83Mu","Element","ListType","VerticalAlign","ColumnListItem","vAlign","cells","bindable","TablePopin","is","TagName","_bNeedsTypeColumn","_aClonedHeaders","_checkTypeColumn","_destroyClonedHeaders","_oPopin","setVisible","removePopin","getName","getPopin","addEventDelegate","ontouchstart","ontouchmove","ontap","ontouchend","ontouchcancel","onsapup","onsapdown","$Popin","getTabbables","getContentAnnouncement","aCells","getCells","oCell","getInitialOrder","isHidden","updateSelectedDOM","bSelected","$This","_needsTypeColumn","informList","mType","Detail","Navigation","DetailAndActive","_addClonedHeader","oClone","_activeHandlingInheritor","_toggleActiveClass","_inactiveHandlingInheritor","bSwitch","8rlm","Icon","ColumnHeader","text","sorted","sortOrder","filtered","defaultAggregations","viewSettingsPopover","_sortIcon","visibility","_filterIcon","setViewSettingsPopover","oViewSettingsPopover","setAggregation","_attachViewSettingsPopoverEvents","setSortOrder","sSortOrder","sIconUrl","setSrc","src","getSorted","setSorted","bSorted","getSortOrder","setFiltered","bFiltered","setTableAdapter","oAdapter","_oAdapter","getTableAdapter","interactive","rowAggregation","onclick","_openColumnActions","onsapselect","getViewSettingsPopover","openBy","_getPopover","setOffsetY","outerHeight","_detachViewSettingsPopoverEvents","attachSortSelected","onSortSelected","attachFilterSelected","onFilterSelected","detachSortSelected","detachFilterSelected","getFiltered","role","focusable","9z75","ValueStateSupport","ValueState","CheckBoxRenderer","oCheckBox","bEnabled","bEditable","oCbLabel","bInErrorState","getValueState","bInWarningState","Warning","bUseEntireWidth","getUseEntireWidth","enrichTooltip","getTabIndex","writeAccessibilityState","selected","checked","describedby","system","desktop","getActiveHandling","A1Do","Item","icon","additionalText","ACjf","LabelEnablement","TextAlign","LabelDesign","Label","interfaces","design","Standard","textAlign","Begin","textDirection","required","displayOnly","wrapping","labelFor","setText","sText","html","getProperty","setTooltip","oTooltip","getTooltip","setDisplayOnly","enrich","ANvT","StandardListItemRenderer","getIcon","getIconInset","getAdaptTitleSize","sInfo","getInfo","sInfoDir","getInfoTextDirection","sDescription","_getImage","getInfoState","BgZA","App","homeIcon","backgroundColor","backgroundImage","backgroundRepeat","backgroundOpacity","orientationChange","deprecated","landscape","initMobile","viewport","_debugZoomAndScroll","statusBar","hideBrowser","preventScroll","rootId","_handleOrientationChange","getHomeIcon","ref","documentElement","_sInitTimer","clearDelayedCall","$window","isLandscape","_oldIsLandscape","fireOrientationChange","setBackgroundOpacity","fOpacity","CD64","GroupHeaderListItem","ItemNavigation","InvisibleText","SwipeDirection","ListSeparators","ListMode","ListHeaderDesign","inset","headerText","headerDesign","footerText","mode","None","includeItemInSelection","showUnread","noDataText","showNoData","enableBusyIndicator","modeAnimationOn","showSeparators","All","swipeDirection","Both","growing","growingThreshold","growingTriggerText","growingScrollToLoad","growingDirection","Downwards","rememberSelections","keyboardMode","items","swipeContent","headerToolbar","infoToolbar","ariaLabelledBy","select","listItem","selectionChange","listItems","delete","swipe","growingStarted","actual","total","growingFinished","updateStarted","reason","updateFinished","itemPress","bAnnounceDetails","getInvisibleText","oInvisibleText","toStatic","_aNavSections","_aSelectedPaths","_iItemNeedsHighlight","_bRendering","_bActiveItem","_removeSwipeContent","_sLastMode","_bItemNavigationInvalidated","_oSelectedItem","_destroyGrowingDelegate","_destroyItemNavigation","refreshItems","sReason","_oGrowingDelegate","_bReceivingData","_updateStarted","refreshAggregation","updateItems","updateAggregation","_updateFinished","setBindingContext","_resetItemsBinding","_bindAggregation","oBindingInfo","addBindingListener","sEventName","fHandler","fOriginalHandler","_onBindingDataRequestedListener","_onBindingDataReceivedListener","_showBusyIndicator","_dataReceivedHandlerId","_hideBusyIndicator","bSuppressInvalidate","destroyAggregation","sAggregationName","removeItem","vItem","bReadOnly","mAggregations","sSuffix","setGrowing","bGrowing","GrowingEnablement","setGrowingThreshold","iThreshold","setEnableBusyIndicator","bEnable","getEnableBusyIndicator","setNoDataText","sNoDataText","getNoDataText","bCheckBusy","_bBusy","getSelectedItem","setSelectedItem","oListItem","bFireEvent","indexOfItem","_bSelectionMode","_fireSelectionChangeEvent","setSelectedItemById","getSelectedContexts","bAll","getBindingInfo","sModelName","model","oModel","getModel","getRememberSelections","map","sPath","getContext","getBindingContext","bDetectBinding","aChangedListItems","isSelectedBoundTwoWay","_updateSelectedPaths","getLastMode","sMode","setMode","validateProperty","sOldMode","indexOf","aSelecteds","MultiSelect","getGrowingInfo","setRememberSelections","bRemember","setSelectedContextPaths","aSelectedPaths","getSelectedContextPaths","slice","getBindingContextPath","getVisibleItems","getActiveItem","onItemDOMUpdate","bOutput","_startItemNavigation","onItemActiveChange","bActive","onItemHighlightChange","bNeedsHighlight","onBeforePageLoaded","oGrowingInfo","sChangeReason","_fireUpdateStarted","fireGrowingStarted","_fireUpdateFinished","fireGrowingFinished","addNavSection","getMaxItemsCount","oBinding","getBinding","getLength","isBound","_bUpdating","reset","_oItemNavigation","iFocusedIndex","oInfo","_sUpdateReason","charToUpperCase","fireUpdateStarted","fireUpdateFinished","getBusy","_sBusyTimer","getBusyIndicatorDelay","setBusy","onItemBindingContextSet","onItemInserted","bSelectedDelayed","onItemSelect","aListItems","bSelectAll","fireSelectionChange","onItemDelete","fireDelete","onItemPress","oSrcControl","Inactive","fireItemPress","removeEventDelegate","_getTouchBlocker","_getSwipeContainer","_$swipeContainer","class","_setSwipePosition","_isSwipeActive","_swipedItem","position","top","_renderSwipeContent","$listitem","$container","prepend","_bRerenderSwipeContent","getSwipeContent","empty","_swipeIn","$blocker","InstanceManager","addDialogInstance","blur","on","e","firstChild","contains","stopPropagation","swipeOut","_onSwipeOut","callback","off","removeDialogInstance","close","_onSwipe","_eventHandledByControl","touch","os","windows","version","li","fireSwipe","onswipeleft","exceptDirection","getSwipeDirection","onswiperight","setSwipeDirection","sDirection","getSwipedItem","setSwipeContent","toggleStyleClass","oOrigin","addItemGroup","oGroup","title","key","_bGroupHeader","removeGroupHeaders","isGroupHeader","getAccessibilityStates","sStates","mMode","isRequired","Delete","getAccessibilityDescription","sAriaLabelledBy","oAriaLabelledBy","oHeaderTBar","getHeaderToolbar","oTitle","getTitleControl","getHeaderText","getFooterText","trim","getAccessbilityPosition","iSetSize","iPosInset","getGrowingScrollToLoad","isLengthFinal","setSize","posInset","onItemFocusIn","oItemDomRef","mPosition","oAccInfo","getNavigationRoot","setAttribute","bPrepend","$FocusedItem","addAriaLabelledBy","removeAriaLabelledBy","getFocusDomRef","bIfNeeded","sKeyboardMode","mKeyboardMode","setCycling","iTabIndex","_setItemNavigationTabIndex","setTableMode","setColumns","setDisabledModifiers","sapnext","sapprevious","setPageSize","getGrowingThreshold","oNavigationRoot","setRootDomRef","aNavigationItems","getItemNavigation","iActiveTabIndex","setKeyboardMode","prop","setItemFocusable","getItemDomRefs","bForward","_bIgnoreFocusIn","_navToSection","$TargetSection","iStep","iLength","sSectionId","iSectionIndex","oSectionDomRef","domById","oItemsContainerDomRef","$CurrentSection","iRedirect","oItemDomRefs","oTargetSection","onsapshow","which","KeyCodes","F4","onsaphide","onkeydown","bCtrlA","A","metaKey","ctrlKey","onmousedown","aNavigationDomRefs","iLastFocusedIndex","$LastFocused","oRelatedControl","control","$Tabbables","$FocusElement","stopImmediatePropagation","onsapfocusleave","relatedControlId","onItemArrowUpDown","iFocusPos","$Element","getAggregationDomRef","CcuP","mTexts","ensureTexts","Success","sTooltipText","assert","getAdditionalText","vValue","sState","formatValueState","iState","DYFy","E8Q9","IconPool","Button","BindingMode","ButtonType","unread","counter","highlight","tap","detailTap","press","detailPress","bDetectEmpty","getDefaultAccessibilityInfo","enabled","editable","oChild","oDomRef","Node","NodeFilter","oTreeWalker","createTreeWalker","SHOW_TEXT","SHOW_ELEMENT","oNode","ELEMENT_NODE","classList","FILTER_SKIP","display","FILTER_REJECT","FILTER_ACCEPT","aText","nextNode","currentNode","nodeType","TEXT_NODE","nodeValue","DetailIconURI","getIconURI","DeleteIconURI","NavigationIconURI","_active","_bNeedsHighlight","_checkHighlight","oList","getList","oContext","getPath","getBindingMode","TwoWay","getListProperty","sProperty","vFallbackValue","sEvent","sMethod","informSelectedChange","aOutput","sHighlight","getHighlight","toUpperCase","getUnread","Active","updateAccessibilityState","mAccessibility","$Items","aria-setsize","aria-posinset","getDeleteControl","_oDeleteControl","Transparent","tooltip","attachPress","_bExcludeFromTabChain","getDetailControl","_oDetailControl","fireDetailTap","fireDetailPress","getNavigationControl","_oNavigationControl","useIconTooltip","noTabStop","getSingleSelectControl","_oSingleSelectControl","RadioButton","groupName","getParameter","getMultiSelectControl","_oMultiSelectControl","getModeControl","bUpdate","mListMode","oSelectionControl","getTypeControl","destroyControls","aControls","sControl","isActionable","SingleSelectMaster","_oLastFocused","setActive","isSelected","bDontNotifyParent","isIncludedIntoSelection","SingleSelectLeft","SingleSelect","hasActiveType","_activeHandling","_activeHandlingNav","clearTimeout","_timeoutIdStart","_timeoutIdEnd","ios","fireTap","firePress","oTargetTouch","targetTouches","_touchedY","clientY","_touchedX","clientX","touches","Math","abs","Desktop","onsapenter","_switchFocus","onsapdelete","_iLastFocusPosOfItem","mKeyCodes","F7","F2","hasListeners","FIFg","isTable","o","FNClass","count","upperCase","titleTextDirection","shouldClearLastValue","clearLastValue","FYwE","Shell","logo","showLogout","headerRightText","appWidthLimited","titleLevel","app","logout","attachThemeChanged","$hdr","$ref","_sapui5_heightFixed","fireLogout","setTitle","sTitle","setHeaderRightText","setAppWidthLimited","bLimit","setHomeIcon","oIcons","setIcons","GPUP","DisplayListItemRenderer","getLabel","isValue","getValue","sValueTextDir","getValueTextDirection","GnRY","IVex","JTcp","sValueState","getTextDirection","sTextAlign","getTextAlign","bAccessibility","addControlWidth","addPaddingClass","addCursorClass","addValueStateClasses","writeOuterAttributes","prependInnerContent","bShowLabelAsPlaceholder","addPlaceholderClasses","_getPlaceholder","openInputTag","writeInnerId","getMaxLength","writeInnerValue","mozilla","addValueStateInnerClasses","addInnerStyles","writeInnerContent","closeInputTag","renderAriaLabelledBy","renderAriaDescribedBy","getLabelledByAnnouncement","getDescribedByAnnouncement","sRole","invalid","labelledby","value","LFub","AppRenderer","Lldq","PageRenderer","bShowFooter","getShowFooter","oSubHeader","bLightHeader","_isLightHeader","oLandmarkInfo","getLandmarkInfo","getShowHeader","_getAnyHeader","getShowSubHeader","getSubHeader","getBackgroundDesign","getContentOnlyBusy","getFloatingFooter","_formatLandmarkInfo","sHeaderTag","_getHeaderTag","renderBarControl","context","styleClass","sSubHeaderTag","_getSubHeaderTag","getEnableScrolling","aContent","getContent","sFooterTag","_getFooterTag","oBarControl","oOptions","_applyContextClassFor","sParentName","sChildName","test","MY9s","Title","level","titleStyle","Initial","oRef","bPatchDom","_getTitle","innerHTML","core","_onTitleChanged","vTitle","oOldTitle","__sapui5_title_originvalidate","__sapui5_title_origexit","setAssociation","oNewTitle","OZLB","CustomStyleClassSupport","SegmentedButtonItem","oButton","aCustomStyleClasses","mCustomStyleClassMap","getCustomData","getLayoutData","SegmentedButton","sValue","setIcon","setEnabled","bValue","setTextDirection","setWidth","Osx1","BaseObject","Popup","ValueStateMessage","constructor","_oControl","_oPopup","open","oPopup","getPopup","oMessageDomRef","createDom","mDock","Dock","$Control","getDomRefForValueStateMessage","setContent","maxWidth","offsetWidth","getOpenDuration","BeginTop","BeginBottom","phone","CLOSE_ON_SCROLL","$DomRef","offset","addAriaDescribedBy","removeAriaDescribedBy","getValueStateMessageId","iOpenMessagePopupDuration","createPopup","sID","createElement","attachClosed","getValueStateText","sClass","oRB","oAccDomRef","appendChild","createTextNode","oTextDomRef","PYoY","Pg/5","NumberFormat","ChangeReason","ManagedObjectMetadata","bUseExtendedChangeDetection","addDelegate","iRenderedItemsLength","_iRenderedDataItems","_iLimit","_bLoading","_sGroupingPath","_bDataRequested","_oContainerDomRef","_iTriggerTimer","_aChunk","_oRM","_oTrigger","_oScrollDelegate","setGrowingList","removeDelegate","_getTrigger","oScrollDelegate","getScrollDelegate","onScrollToLoad","_updateTriggerDelayed","setTriggerText","shouldReset","mChangeReason","Sort","Filter","Context","_oScrollPosition","getScrollLeft","getScrollHeight","requestNewPage","hasProperty","_bParentEnableBusyIndicator","_onBeforePageLoaded","_onAfterPageLoaded","sTriggerID","sTriggerText","getGrowingTriggerText","CustomListItem","busyIndicatorDelay","content","tabindex","aria-labelledby","_getListItemInfo","getFloatInstance","format","_getGroupingPath","aSorters","oSorter","fnGroup","_getDomIndex","vIndex","_getHasScrollbars","getMaxScrollTop","destroyListItems","addListItem","binding","createListItem","oLastItem","oGroupInfo","getGroup","_fnAppendGroupItem","appendGroupItem","oGroupHeader","groupHeaderFactory","applyPendingGroupItem","factory","uid","updateItemsBindingContext","aContexts","c","applyChunk","vInsert","reverse","addListItems","rebuildListItems","bHasFocus","insertListItem","deleteListItem","getContexts","dataRequested","diff","vInsertIndex","aDiff","bFromScratch","oDiff","iLastInsertIndex","iDiffIndex","bLoading","cancelAnimationFrame","requestAnimationFrame","_updateTrigger","oTrigger","iItemsLength","iBindingLength","bLengthFinal","bHasScrollToLoad","oScrollPosition","scrollTo","Q3pR","EnabledPropagator","CheckBox","name","useEntireWidth","valueState","_label","ariaDescribedBy","addActiveState","insertFontFaceStyle","_oLabel","_iTabIndex","removeAttribute","oLabel","_getLabel","bHasText","sWidth","_setWidth","setUseEntireWidth","setTextAlign","sAlign","blackberry","originalEvent","_sapui_handledByControl","hasOwnProperty","$oCheckBox","outerWidth","getFormDoNotAdjustWidth","QlcA","RL+X","List","Solid","_isColumnsIncompatible","proto","Object","keys","mProperties","setBackgroundDesign","getCompatibilityVersion","compareTo","RNqf","PopinDisplay","ColumnListItemRenderer","renderPopin","renderHighlight","renderModeContent","getVAlign","cls","bRenderCell","setIndex","getStyleClass","sFuncWithParam","getMergeFunctionName","aFuncWithParam","split","sFuncParam","sFuncName","lastColumnValue","getLastValue","cellValue","setLastValue","getCssAlign","applyAriaLabelledBy","applyAlignTo","removeAssociation","addAssociation","writeElementData","sPopinLayout","getPopinLayout","edge","sStyleClass","sPopinDisplay","getPopinDisplay","WithoutHeader","sColumnHeaderTitle","clone","addDependent","Riks","TableRenderer","renderColumns","hiddens","hasFooter","iModeOrder","idPrefix","cellTag","groupTag","isHeaderHidden","every","hasOneHeader","createBlankCell","bAriaHidden","order","setInitialOrder","align","clsPrefix","_hasFooter","renderContainerAttributes","renderListStartAttributes","renderListHeadAttributes","renderListEndAttributes","renderNoData","addFocusableClasses","RnsF","TFyG","Locale","LocaleData","getShortenedFormat","fValue","oLocaleData","oShortFormat","iKey","sKey","sStyle","iPrecision","precision","pow","rounding","sCldrFormat","getDecimalFormat","formatString","match","rNumPlaceHolder","valueSubString","decimalSeparatorPosition","decimals","magnitude","getNumberFromShortened","sNumber","iFactor","aPluralCategories","getPluralCategories","fnGetFactor","sPlural","replace","sValueSubString","sUnit","number","factor","iMaxFractionDigits","sRoundingMode","NaN","RoundingMode","HALF_AWAY_FROM_ZERO","parseInt","mRoundingFunction","_shiftDecimalPoint","quote","sRegex","getDecimals","iIntegerDigits","floor","LN10","max","oFormatOptions","mNumberType","INTEGER","FLOAT","CURRENCY","PERCENT","mRoundingMode","FLOOR","CEILING","TOWARDS_ZERO","AWAY_FROM_ZERO","HALF_FLOOR","HALF_CEILING","HALF_TOWARDS_ZERO","ceil","nValue","round","oDefaultIntegerFormat","minIntegerDigits","maxIntegerDigits","minFractionDigits","maxFractionDigits","groupingEnabled","groupingSize","groupingSeparator","decimalSeparator","plusSign","minusSign","isInteger","showMeasure","parseAsString","roundingMode","emptyString","showScale","oDefaultFloatFormat","oDefaultPercentFormat","percentSign","oDefaultCurrencyFormat","currencyCode","currencyContext","getInstance","oLocale","oFormat","createInstance","oLocaleFormatOptions","getLocaleFormatOptions","getIntegerInstance","getCurrencyInstance","sContext","getPercentInstance","oPatternOptions","create","getFormatSettings","getFormatLocale","oOriginalFormatOptions","pattern","parseNumberPattern","vOption","iType","sNumberPattern","getPercentPattern","getCurrencyPattern","getDecimalPattern","getNumberSymbol","sFormatString","iMinIntegerDigits","iMinFractionDigits","bGroupingEnabled","iGroupSize","iBaseGroupSize","iSeparatorPos","mSection","Integer","Fraction","iSection","substring","groupingBaseSize","oValue","sMeasure","Array","isArray","aPatternParts","nShortRefNumber","sPluralCategory","sIntegerPart","sFractionPart","sGroupedIntegerPart","sResult","sPattern","iPosition","bNegative","iDotPos","oOrigOptions","isNaN","shortLimit","shortRefNumber","shortDecimals","min","iDigits","getCurrencyDigits","convertToDecimal","substr","padLeft","padRight","getPluralCategory","getCurrencyFormat","getCurrencySymbol","_composeCurrencyResult","negative","getOriginInfo","String","originInfo","source","locale","sFormattedNumber","sMinusSign","sNumberChar","iInsertPos","mRegex","[:digit:]","[:^S:]","iMeasureStart","sPosition","oSpacingSetting","getCurrencySpacing","sCurrencyChar","charAt","rCurrencyChar","currencyMatch","rNumberChar","surroundingMatch","insertBetween","parse","oRegExp","bPercent","sRegExpCurrency","sRegExpCurrencyMeasure","aParsed","sCurrencyMeasure","oShort","vEmptyParseValue","sPlusMinusSigns","sGroupingSeparator","sDecimalSeparator","sRegExpFloat","sRegExpInt","oGroupingRegExp","RegExp","oDecimalRegExp","sPercentPattern","sPercentSign","vResult","exec","getCurrencyCodeBySymbol","parseFloat","sBase","iDecimalLength","iFractionLength","iExponent","iPos","aResult","getScale","sScale","aExpParts","iAfterMovePos","sInt","sDecimal","iDecimalPos","UOOL","ListRenderer","oRenderer","VC4D","refreshDataState","oDataState","getChanges","messages","aMessages","getMessages","aLabels","getReferencingLabels","sLabelId","oMessage","setAdditionalText","getMessageManager","getMessageModel","checkUpdate","setValueState","setValueStateText","message","VWRi","VrC2","CustomListItemRenderer","cLength","VwGf","LabelRenderer","r","sLabelText","labelForRendering","getLabelForRendering","htmlTagToRender","bDisplayOnly","isDisplayOnly","getWrapping","getDesign","Bold","writeLabelForAttribute","Toolbar","WEwg","WL0V","X6ta","YrK0","Bar","Dialog","InputBase","Popover","StandardListItem","DisplayListItem","ListItem","ToolbarSpacer","ResizeHandler","PlacementType","InputTextFormatMode","Input","Text","maxLength","dateFormat","showValueHelp","showSuggestion","valueHelpOnly","filterSuggests","maxSuggestionWidth","startSuggestion","showTableSuggestionValueHelp","fieldWidth","valueLiveUpdate","selectedKey","textFormatMode","Value","textFormatter","suggestionRowValidator","enableSuggestionsHighlighting","suggestionItems","suggestionColumns","suggestionRows","_valueHelpIcon","selectedItem","selectedRow","liveChange","escPressed","previousValue","valueHelpRequest","fromSuggestions","suggest","suggestValue","suggestionItemSelected","submit","_wordStartsWithValue","startsWithIgnoreCase","_DEFAULTFILTER","_DEFAULTFILTER_TABULAR","oColumnListItem","_DEFAULTRESULT_TABULAR","_fnFilter","_bFullScreen","_iSetCount","_oRb","_sAriaPopupLabelId","_deregisterEvents","cancelPendingSuggest","_iRefreshListTimeout","_oSuggestionPopup","_oList","_oSuggestionTable","_oButtonToolbar","_oShowMoreButton","_resizePopup","bForceResize","_shouldResizePopup","getMaxSuggestionWidth","setContentWidth","isOpen","sSelectedKey","getSelectedKey","setSelectedKey","getShowTableSuggestionValueHelp","_addShowMoreButton","_removeShowMoreButton","_sPopupResizeHandler","register","_onclick","_getDisplayText","fTextFormatter","getTextFormatter","getKey","getTextFormatMode","Key","ValueKey","KeyValue","_onValueUpdated","newValue","_bSelectingItem","_sSelectedValue","_hasTabularSuggestions","fireSuggestionItemSelected","setSelectionItem","bInteractionChange","setValue","sNewValue","_oPopupInput","_doSelect","_getInputValue","setDOMValue","onChange","_iPopupListSelectedIndex","MultiInput","_isMultiLineMode","_closeSuggestionPopup","getSuggestionItemByKey","getSuggestionItems","setSelectionRow","fSuggestionRowValidator","getSuggestionRowValidator","_fnRowResultFilter","setSelectedRow","sURI","valueHelpIcon","createControlByURI","evt","fireValueHelpRequest","_fireValueHelpRequestForValueHelpOnly","setFilterFunction","fnFilter","setRowResultFunction","closeSuggestions","setShowValueHelp","bShowValueHelp","setValueHelpOnly","bValueHelpOnly","iStart","iEnd","_$input","$Ref","selectText","val","_scrollToItem","oPopupRect","oItemRect","iTop","iBottom","oListItemDom","getBoundingClientRect","bottom","_scrollX","_scrollY","_isSuggestionItemSelectable","_isIncrementalType","sTypeOfInput","_onsaparrowkey","sDir","iItems","bFirst","iSelectedIndex","iOldIndex","iStopIndex","_sSelectedSuggViaKeyboard","onsappageup","onsappagedown","onsaphome","onsapend","onsapescape","lastValue","_sBeforeSuggest","_lastValue","oSelectedItem","_oItem","_fireSuggestionItemSelectedEvent","fireSubmit","containsOrEquals","_bPopupHasFocus","getDOMValue","oFocusedControl","deregister","updateSuggestionItems","_bSuspendInvalidate","_bShouldRefreshListItems","_refreshItemsDelayed","_iSuggestDelay","_triggerSuggest","getStartSuggestion","_sPrevSuggValue","_bBindingUpdated","fireSuggest","createSuggestionPopup","oInput","oMessageBundle","fireLiveChange","beginButton","stretch","contentHeight","customHeader","contentMiddle","horizontalScrolling","initialFocus","attachBeforeOpen","setPlaceholder","getPlaceholder","setMaxLength","attachBeforeClose","_onDialogClose","attachAfterClose","_showIndicator","attachAfterOpen","refreshListItems","showArrow","showHeader","placement","Vertical","overwritePopover","addContent","createSuggestionPopupContent","bTabular","_getSuggestionsTable","_highlightListText","oRenderTarget","destroySuggestionPopup","removeAllContent","oPopover","setAnimations","iRealDuration","fnOpened","fnClosed","bShowSuggestion","aTabularRows","getSuggestionRows","sTypedChars","bFilter","getFilterSuggests","aHitItems","oListItemDelegate","_sapui_cancelAutoClose","removeAttr","bListItem","setLabel","setType","sAriaText","addItem","_sCloseTimer","_sOpenTimer","setShowSuggestion","_lazyInitializeSuggestionPopup","setShowTableSuggestionValueHelp","_getShowMoreButton","_getButtonToolbar","oShowMoreButton","setEndButton","oButtonToolbar","setFooter","oninput","getValueLiveUpdate","addSuggestionItem","insertSuggestionItem","removeSuggestionItem","res","removeAllSuggestionItems","destroySuggestionItems","addSuggestionRow","insertSuggestionRow","removeSuggestionRow","removeAllSuggestionRows","destroySuggestionRows","bindAggregation","args","_callMethodInManagedObject","concat","unbindAggregation","openValueStateMessage","_createHighlightedText","subString","innerText","lowerText","newText","getEnableSuggestionsHighlighting","labels","_highlightTableText","closeValueStateMessage","onfocusout","_bIsBeingDestroyed","oSelectedListItem","sFunctionName","oSuggestionsTable","aArgs","validateAggregation","oObject","bMultiple","oDefaultForCreation","indexOfAggregation","getBindingPath","bindingInfo","oInputClone","getSuggestionColumns","addSuggestionColumn","oRow","ZSOb","ZcXo","sap.app","sap.ui5","dependencies","libs","sap.ui.core","sap.m","rootView","viewName","models","i18n","settings","bundleName","","uri","accj","ScrollEnablement","ContextMenuSupport","AccessibleLandmarkRole","PageBackgroundDesign","Page","showNavButton","showSubHeader","navButtonText","navButtonTooltip","enableScrolling","navButtonType","Back","showFooter","contentOnlyBusy","floatingFooter","footer","subHeader","headerContent","landmarkInfo","_internalHeader","navButtonTap","navButtonPress","FOOTER_ANIMATION_DURATION","_hasScrolling","_oScroller","scrollContainerId","horizontal","vertical","_headerTitle","setLevel","_adjustFooterWidth","_navBtn","_appIcon","sBgDesign","sBgDesignOld","bWasNull","_updateHeaderContent","_ensureNavButton","sBackText","getNavButtonTooltip","sNavButtonType","getNavButtonType","fireNavButtonPress","fireNavButtonTap","android","Up","setShowNavButton","bShowNavBtn","getShowNavButton","setShowFooter","$footer","last","useAnimation","setNavButtonType","setNavButtonText","setNavButtonTooltip","sIconSrc","_contentHasScroll","scrollbarWidth","$section","scrollHeight","innerHeight","sContentPosition","iContentIndex","oInternalHeader","_getInternalHeader","getContentLeft","removeContentLeft","indexOfContentLeft","insertContentLeft","getContentMiddle","removeContentMiddle","indexOfContentMiddle","insertContentMiddle","getContentRight","removeContentRight","indexOfContentRight","insertContentRight","oCustomHeader","getCustomHeader","sPartName","sLabel","getHeaderRole","getSubHeaderRole","getFooterRole","y","time","scrollToElement","iTime","setContentOnlyBusy","bContentOnly","getHeaderContent","indexOfHeaderContent","insertHeaderContent","addHeaderContent","addContentRight","removeHeaderContent","removeAllHeaderContent","removeAllContentRight","destroyHeaderContent","destroyContentRight","setCustomHeader","cNzD","cm02","dg/n","djde","valueTextDirection","dpi6","groI","SegmentedButtonRenderer","oRM","sButtonWidth","sButtonTextDirection","aButtons","getButtons","sSelectedButton","getSelectedButton","_bInOverflow","_addAllIconsClass","oImage","sButtonText","oButtonIcon","sIconAriaLabel","Image","_overwriteImageOnload","_getIconAriaLabel","j","writeInvisiblePlaceholderData","hsfa","iJpc","publicMethods","buttons","_select","selectedButton","button","item","_aWidths","removeButton","sButton","setSelectedButton","_getVisibleButtons","_bCustomButtonWidth","_sResizeListenerId","_selectDefaultButton","oParentDom","_handleContainerResize","_setItemNavigation","_getRenderedButtonWidths","_updateWidth","_clearAutoWidthAppliedToControl","iButtonsLength","_getButtonWidth","iPercent","iPixels","iButtons","iNoWidths","iSumPercents","iSumPixels","sControlWidth","iButtonsCount","iMaxWidth","iButtonWidthPercent","iParentWidth","_focusSelectedButton","createButton","sTextDirection","addButton","processButton","_buttonPressed","attachEvent","_syncSelect","_forwardChangeEvent","fnOriginalSetEnabled","insertButton","sSelectedButtonId","oRemovedButton","detachEvent","removeAllButtons","insertItem","oItemPressed","oButtonPressed","getSource","vButton","oSelectedButton","sSelectedButtonBefore","oItemInstanceOfSegBtnItem","selectedButtonId","_lazyLoadSelectForm","oSelect","Select","attachChange","_selectChangeHandler","sNewKey","sButtonId","iSelectedKey","_toSelectMode","_toNormalMode","onload","oIcon","oIconInfo","getIconInfo","getSrc","iSelectedButtonIndex","b","ifZV","ix2f","llbd","lupY","p7Q0","defineProperty","_UIComponent","_UIComponent2","_manifest","_manifest2","manifest","q8q5","iconInset","iconDensityAware","activeIcon","infoState","adaptTitleSize","infoTextDirection","_oImage","sIcon","sOldIcon","isIconURI","setDensityAware","getIconDensityAware","densityAware","sImgStyle","sActiveIcon","getActiveIcon","sInfoState","qTcm","_typeof","Symbol","iterator","EventProvider","bNotInTabChain","bCycling","bTableMode","iPageSize","_bMouseDownHappened","oDisabledModifiers","sapend","saphome","Events","BeforeFocus","AfterFocus","BorderReached","FocusAgain","FocusLeave","getDisabledModifiers","hasDisabledModifier","aDisabledKeys","getRootDomRef","$Item","setNestedItemsTabindex","setItemsTabindex","removeData","_bItemTabIndex","bTableList","oConfiguration","setSelectedIndex","iColumns","bNoColumnChange","setHomeEndColumnMode","bStayInRow","bCtrlEnabled","_bStayInRow","_bCtrlEnabled","focusItem","event","bISetFocus","_sFocusEvent","iCol","keyCode","ARROW_RIGHT","ARROW_LEFT","oFocusItem","getFocusedDomRef","oParentDomRef","bFocusableParent","$CheckDom","onsapnext","bFirstTime","bBorderReached","iRowCount","iRow","ARROW_DOWN","onsapnextmodifiers","onsapprevious","ARROW_UP","iRows","onsappreviousmodifiers","onsaphomemodifiers","onsapendmodifiers","setTabIndex0","onkeyup","qW8B","ToolbarDesign","getInset","sHeaderText","setDesign","oInfoTBar","getInfoToolbar","Info","bShowNoData","getShowNoData","bRenderItems","bUpwardGrowing","renderGrowing","renderDummyArea","getShowSeparators","sAreaId","oGrowingDelegate","r+Rv","rMbf","MessageMixin","placeholder","valueStateText","showValueStateMessage","change","input","_setLabelVisibility","_getInputElementTagName","_sInputTagElementName","tagName","bRenderingPhase","bFocusoutDueRendering","_bIgnoreNextInputEventNonASCII","_oValueStateMessage","_bCheckDomValue","_sDomValue","_bIgnoreNextInput","shouldValueStateMessageBeOpened","preventChangeOnFocusLeave","getChangeEventParams","mParameters","fireChangeEvent","oParams","oChangeEvent","fireChange","onValueRevertedByEscape","sPreviousValue","updateDomValue","BACKSPACE","oncut","iSelectionStart","iSelectionEnd","getSelectedText","sPropertyName","getFocusInfo","oFocusInfo","oFocusDomRef","cursorPos","selectionStart","selectionEnd","applyFocusInfo","bindToInputEvent","fnCallback","_oInputEventDelegate","getLabels","aLabelIDs","sLabelID","oLabelEnablement","updateValueStateClasses","sOldValueState","$Input","mValueState","getShowValueStateMessage","getIdForLabel","vTooltip","_refreshTooltipBaseDelegate","oDescribedByDomRef","getRenderer","sDescribedbyId","sAriaDescribedby","removeChild","sDescribedByDomRefId","textContent","sRequired","getRequired","s5vy","mAriaAnnouncements","renderInvisible","openItemTag","closeItemTag","isModeMatched","iOrder","renderMode","oModeControl","decorateMode","sLastListMode","iCounter","renderCounterContent","sAriaLabel","oTypeControl","renderTabIndex","renderTooltip","getAriaAnnouncement","sBundleText","aDescribedBy","renderContentFormer","renderContentLatter","tsD2","TitleRenderer","oAssoTitle","sLevel","getLevel","bAutoLevel","sTag","getTitleStyle","vDSJ","vhzV","registerPreloadedModules","url","modules","sap/m/Shell.js","sap/m/App.js","sap/m/Page.js","sap/m/Toolbar.js","sap/m/SearchField.js","sap/m/Input.js","sap/m/List.js","sap/m/Label.js","sap/m/CustomListItem.js","sap/m/Bar.js","sap/m/SegmentedButton.js","sap/m/SegmentedButtonItem.js","sap/m/Button.js","parser","DOMParser","xml","parseFromString","xWKI","ybGW","Controller","JSONModel","FilterOperator","onInit","aSearchFilters","aTabFilters","addTodo","getView","aTodos","completed","clearCompleted","updateItemsLeftCount","iItemsLeft","oTodo","onSearch","sQuery","Contains","_applyListFilters","onFilter","EQ"],"mappings":"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","file":"app.be6e4994e955340465d9.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ \"+Gcz\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"s5vy\"), __webpack_require__(\"ax/N\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListItemBaseRenderer, Renderer, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t/**\n  * GroupHeaderListItem renderer.\n  * @namespace\n  */\n\tvar GroupHeaderListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\tGroupHeaderListItemRenderer.renderType = function (rm, oLI) {\n\t\tvar oTable = oLI.getTable();\n\n\t\t// for table render navigation column always\n\t\toTable && rm.write('<td class=\"sapMListTblNavCol\">');\n\t\tListItemBaseRenderer.renderType.apply(this, arguments);\n\t\toTable && rm.write('</td>');\n\t};\n\n\t// GroupHeaderListItem does not respect counter property of the LIB\n\tGroupHeaderListItemRenderer.renderCounter = function (rm, oLI) {};\n\n\t/**\n  * Renders the attributes for the given list item, using the provided\n  * {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager}\n  *          rm the RenderManager that can be used for writing to the\n  *          Render-Output-Buffer\n  * @param {sap.ui.core.Control}\n  *          oLI an object representation of the list item that should be\n  *          rendered\n  */\n\tGroupHeaderListItemRenderer.renderLIAttributes = function (rm, oLI) {\n\t\trm.addClass(\"sapMGHLI\");\n\t\tif (oLI.getUpperCase()) {\n\t\t\trm.addClass(\"sapMGHLIUpperCase\");\n\t\t}\n\t};\n\n\t/**\n  * Renders the List item content\n  *\n  * @param {sap.ui.core.RenderManager}\n  *          rm the RenderManager that can be used for writing to the\n  *          Render-Output-Buffer\n  * @param {sap.ui.core.Control}\n  *          oLI an object representation of the list item that should be\n  *          rendered\n  */\n\tGroupHeaderListItemRenderer.renderLIContentWrapper = function (rm, oLI) {\n\t\tvar oTable = oLI.getTable();\n\n\t\tif (oTable) {\n\t\t\trm.write('<td class=\"sapMGHLICell\"');\n\t\t\trm.writeAttribute(\"colspan\", oTable.getColSpan());\n\t\t\trm.write(\">\");\n\t\t}\n\n\t\tListItemBaseRenderer.renderLIContentWrapper.apply(this, arguments);\n\n\t\tif (oTable) {\n\t\t\trm.write(\"</td>\");\n\t\t}\n\t};\n\n\tGroupHeaderListItemRenderer.renderLIContent = function (rm, oLI) {\n\t\tvar sTextDir = oLI.getTitleTextDirection();\n\t\trm.write(\"<span class='sapMGHLITitle'\");\n\n\t\tif (sTextDir != TextDirection.Inherit) {\n\t\t\trm.writeAttribute(\"dir\", sTextDir.toLowerCase());\n\t\t}\n\n\t\trm.write(\">\");\n\t\trm.writeEscaped(oLI.getTitle());\n\t\trm.write(\"</span>\");\n\n\t\tvar iCount = oLI.getCount() || oLI.getCounter();\n\t\tif (iCount) {\n\t\t\trm.write(\"<span class='sapMGHLICounter'>\");\n\t\t\trm.writeEscaped(\" (\" + iCount + \")\");\n\t\t\trm.write(\"</span>\");\n\t\t}\n\t};\n\n\tGroupHeaderListItemRenderer.addLegacyOutlineClass = function (rm, oLI) {\n\t\tif (!oLI.getTable()) {\n\t\t\tListItemBaseRenderer.addLegacyOutlineClass.apply(this, arguments);\n\t\t}\n\t};\n\n\tGroupHeaderListItemRenderer.getAriaRole = function (oLI) {\n\t\tif (oLI.getTable()) {\n\t\t\treturn \"row\";\n\t\t}\n\n\t\treturn ListItemBaseRenderer.getAriaRole.apply(this, arguments);\n\t};\n\n\treturn GroupHeaderListItemRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"+q+U\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"0XQ1\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"20Fv\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [], __WEBPACK_UI5_DEFINE_RESULT__ = function () {\n\t\"use strict\";\n\n\t/**\n  * NavContainer renderer.\n  * @namespace\n  */\n\n\tvar NavContainerRenderer = {};\n\n\t/**\n  * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager} oRenderManager the RenderManager that can be used for writing to the Render-Output-Buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tNavContainerRenderer.render = function (rm, oControl) {\n\n\t\toControl._bRenderingInProgress = true;\n\n\t\t// return immediately if control is invisible\n\t\tif (!oControl.getVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\trm.write(\"<div\");\n\t\trm.writeControlData(oControl);\n\n\t\trm.addClass(\"sapMNav\");\n\t\tif (oControl.getWidth()) {\n\t\t\trm.addStyle(\"width\", oControl.getWidth());\n\t\t}\n\t\tvar sHeight = oControl.getHeight();\n\t\tif (sHeight && sHeight != \"100%\") {\n\t\t\trm.addStyle(\"height\", sHeight);\n\t\t}\n\n\t\tif (this.renderAttributes) {\n\t\t\tthis.renderAttributes(rm, oControl); // may be used by inheriting renderers, but DO NOT write class or style attributes! Instead, call addClass/addStyle.\n\t\t}\n\n\t\trm.writeClasses();\n\t\trm.writeStyles();\n\n\t\tvar sTooltip = oControl.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\t\trm.write(\">\"); // div element\n\n\t\tif (this.renderBeforeContent) {\n\t\t\tthis.renderBeforeContent(rm, oControl); // may be used by inheriting renderers\n\t\t}\n\n\t\tvar oContent = oControl.getCurrentPage();\n\t\tif (oContent) {\n\t\t\toContent.removeStyleClass(\"sapMNavItemHidden\"); // In case the current page was hidden (the previous current page got removed)\n\t\t\trm.renderControl(oContent);\n\t\t}\n\n\t\trm.write(\"</div>\");\n\n\t\toControl._bRenderingInProgress = false;\n\t};\n\n\treturn NavContainerRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"2NKA\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"2O6T\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(\"DKX7\");\n\n__webpack_require__(\"WTpn\");\n\n__webpack_require__(\"VNGM\");\n\n__webpack_require__(\"BRbz\");\n\n__webpack_require__(\"BZb2\");\n\n__webpack_require__(\"EZWm\");\n\n__webpack_require__(\"wTGv\");\n\n__webpack_require__(\"cNzD\");\n\n__webpack_require__(\"DYFy\");\n\n__webpack_require__(\"ix2f\");\n\n__webpack_require__(\"nPt9\");\n\n__webpack_require__(\"llbd\");\n\n__webpack_require__(\"3Use\");\n\n__webpack_require__(\"RnsF\");\n\nvar _ComponentContainer = __webpack_require__(\"PIH1\");\n\nvar _ComponentContainer2 = _interopRequireDefault(_ComponentContainer);\n\nvar _Component = __webpack_require__(\"p7Q0\");\n\nvar _Component2 = _interopRequireDefault(_Component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Load component, controllers & views\n\n\n// Load libraries\n// Load UI5 Core\nsap.ui.getCore().boot();\n\nnew _ComponentContainer2.default({\n\tcomponent: new _Component2.default()\n}).placeAt(\"root\");\n\n/***/ }),\n\n/***/ \"3Use\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"#This is the resource bundle for the SAPUI5 sap.m library\\n#\\n\\n#XACT: ARIA ColumnHeader control description\\nCOLUMNHEADER_ACCESS_COLUMN_ACTIONS=Access column actions\\n\\n#XACT: ARIA ColumnHeader filtered state announcement\\nCOLUMNHEADER_FILTERED=Filtered\\n\\n#XACT: ARIA ColumnHeader sorted state announcement\\nCOLUMNHEADER_SORTED=Sorted\\n\\n#XACT: ARIA ColumnHeader sort ascending state announcement\\nCOLUMNHEADER_SORTED_ASCENDING=Ascending\\n\\n#XACT: ARIA ColumnHeader sort descending state announcement\\nCOLUMNHEADER_SORTED_DESCENDING=Descending\\n\\n#XACT: ARIA keyboard announcement for the combo box arrow\\nCOMBOBOX_BUTTON=Arrow Down\\n\\n#XACT: ARIA announcement for Combo Box available options\\nCOMBOBOX_AVAILABLE_OPTIONS=Available Options\\n\\n#XBUT: Button text for ok button in the combo box (mobile version)\\nCOMBOBOX_CLOSE_BUTTON=OK\\n\\n#XBUT: Default title text for picker in the combo box (mobile version)\\nCOMBOBOX_PICKER_TITLE=Select\\n\\n#XBUT: Button text for cancel button in the select (mobile version)\\nSELECT_CANCEL_BUTTON=Cancel\\n\\n#XBLI: List text for no data lists\\nLIST_NO_DATA=No data\\n\\n#XACT: ARIA announcement for the controls which do not provide any accessibility info\\nCONTROL_EMPTY=Empty\\n\\n#XACT: ARIA announcement for the disabled controls\\nCONTROL_DISABLED=Disabled\\n\\n#XACT: ARIA announcement for the read-only controls\\nCONTROL_READONLY=Read Only\\n\\n#XACT: ARIA announcement for the list which allows single selections\\nLIST_SELECTABLE=Contains Selectable Items\\n\\n#XACT: ARIA announcement for the list which allows multiple selections\\nLIST_MULTISELECTABLE=Contains Multi-Selectable Items\\n\\n#XACT: ARIA announcement for the list which has deletable items\\nLIST_DELETABLE=Contains Deletable Items\\n\\n#XACT: ARIA announcement for the list which is grouped\\nLIST_GROUPED=Grouped\\n\\n#XACT: ARIA announcement for the list when all items are selected\\nLIST_ALL_SELECTED=All Selected\\n\\n#XACT: ARIA announcement for a required list (e.g. inside a form)\\nLIST_REQUIRED=Required\\n\\n#XACT: ARIA announcement for the selected list item\\nLIST_ITEM_SELECTED=Selected\\n\\n#XACT: ARIA keyboard announcement for the unread state of the list items\\nLIST_ITEM_UNREAD=Unread\\n\\n#XACT: ARIA announcement for the navigable list items\\nLIST_ITEM_NAVIGATION=Has Details\\n\\n#XACT: ARIA announcement for the list item details with edit option\\nLIST_ITEM_DETAIL=Is Editable\\n\\n#XACT: ARIA announcement for the active clickable list items\\nLIST_ITEM_ACTIVE=Is Active\\n\\n#XACT: ARIA announcement for the group header list items\\nLIST_ITEM_GROUP_HEADER=Group Header\\n\\n#XACT: ARIA announcement for the position of the list items in an entire list\\nLIST_ITEM_POSITION={0} of {1}\\n\\n#XACT: ARIA announcement for the position of the list item\\nLIST_ITEM_INDEX=Item {0}\\n\\n#XACT: ARIA announcement for the counter property of the list item\\nLIST_ITEM_COUNTER=Counter {0}\\n\\n#XACT: ARIA announcement for the information state of the list item\\nLIST_ITEM_STATE_INFORMATION=Information\\n\\n#XACT: ARIA announcement for the error state of the list item\\nLIST_ITEM_STATE_ERROR=Error\\n\\n#XACT: ARIA announcement for the warning state of the list item\\nLIST_ITEM_STATE_WARNING=Warning\\n\\n#XACT: ARIA announcement for the success state of the list item\\nLIST_ITEM_STATE_SUCCESS=Success\\n\\n#XTOL: tooltip for the delete icon of the list item\\nLIST_ITEM_DELETE=Delete\\n\\n#XTOL: tooltip for the edit icon of the list item\\nLIST_ITEM_EDIT=Edit\\n\\n#XBUT: Button text for back button on page\\nPAGE_NAVBUTTON_TEXT=Back\\n\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\nSWITCH_ON=On\\n\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\nSWITCH_OFF=Off\\n\\n#XACT: ARIA keyboard announcement for the accept state in the Switch control\\nSWITCH_ARIA_ACCEPT=Accept\\n\\n#XACT: ARIA keyboard announcement for the reject state in the Switch control\\nSWITCH_ARIA_REJECT=Reject\\n\\n#XBUT: Button text for cancel button in the action sheet\\nACTIONSHEET_CANCELBUTTON_TEXT=Cancel\\n\\n#XACT: ARIA announcement for index of a button\\nACTIONSHEET_BUTTON_INDEX={0} of {1}\\n\\n#XACT: ARIA announcement for Action Sheet available actions\\nACTIONSHEET_AVAILABLE_ACTIONS=Available Actions\\n\\n#XBUT: Button text for cancel button in the busy dialog\\nBUSYDIALOG_CANCELBUTTON_TEXT=Cancel\\n\\n#XBUT: Text for growing list - pull button to load more data\\nLOAD_MORE_DATA=More\\n\\n#XBUT: Date Selection text for Date&Time Picker of MobiScroll\\nMOBISCROLL_SET=OK\\n\\n#XBUT: Cancel/Close button of MobiScroll Date&Time Picker\\nMOBISCROLL_CANCEL=Cancel\\n\\n#XBUT: MobiScroll Date&Time Picker Month Header\\nMOBISCROLL_MONTH=Month\\n\\n#XBUT: MobiScroll Date&Time Picker Day Header\\nMOBISCROLL_DAY=Day\\n\\n#XBUT: MobiScroll Date&Time Picker Year Header\\nMOBISCROLL_YEAR=Year\\n\\n#XBUT: MobiScroll Date&Time Picker Hours Header\\nMOBISCROLL_HOURS=Hours\\n\\n#XBUT: MobiScroll Date&Time Picker Minutes Header\\nMOBISCROLL_MINUTES=Minutes\\n\\n#XBUT: MobiScroll Date&Time Picker Seconds Header\\nMOBISCROLL_SECONDS=Seconds\\n\\n#XBUT: Show Now button of MobiScroll Date&Time Picker\\nMOBISCROLL_NOW=Now\\n\\n#XBUT: The navigation button text in master area in SplitContainer\\nSPLITCONTAINER_NAVBUTTON_TEXT=Navigation\\n\\n#XTOL: Tooltip for navigation button\\nSPLITCONTAINER_NAVBUTTON_DEFAULT_TOOLTIP=Show Object List\\n\\n#XTOL: Tooltip for navigation button\\nSPLITCONTAINER_NAVBUTTON_TOOLTIP=Show {0}\\n\\n#XBUT: MessageBox predefined text for OK action\\nMSGBOX_OK=OK\\n\\n#XBUT: MessageBox predefined text for CANCEL action\\nMSGBOX_CANCEL=Cancel\\n\\n#XBUT: MessageBox predefined text for YES action\\nMSGBOX_YES=Yes\\n\\n#XBUT: MessageBox predefined text for No action\\nMSGBOX_NO=No\\n\\n#XBUT: MessageBox predefined text for ABORT action\\nMSGBOX_ABORT=Abort\\n\\n#XBUT: MessageBox predefined text for RETRY action\\nMSGBOX_RETRY=Retry\\n\\n#XBUT: MessageBox predefined text for IGNORE action\\nMSGBOX_IGNORE=Ignore\\n\\n#XBUT: MessageBox predefined text for CLOSE action\\nMSGBOX_CLOSE=Close\\n\\n#XBUT: MessageBox predefined text for DELETE action\\nMSGBOX_DELETE=Delete\\n\\n#XTIT: MessageBox predefined text for title of alert dialog\\nMSGBOX_TITLE_ALERT=Alert\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_CONFIRM=Confirmation\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_ERROR=Error\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_INFO=Information\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_WARNING=Warning\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_SUCCESS=Success\\n\\n#XLNK: MessageBox textLink\\nMSGBOX_LINK_TITLE=Show Details\\n\\n#YINS,30: Pull down to refresh text in the hidden area of a scrolled area\\nPULL2REFRESH_PULLDOWN=Pull Down to Refresh\\n\\n#YINS,30: Release dragged list to start update request\\nPULL2REFRESH_RELEASE=Release to Refresh\\n\\n#YMSG,25: Refresh request is in process, short text, displayed on all platforms\\nPULL2REFRESH_LOADING=Loading...\\n\\n#YMSG,32: Refresh request is in process, longer text, displayed smaller and only on certain platforms\\nPULL2REFRESH_LOADING_LONG=Please wait, data is loading\\n\\n#XBUT: Button to trigger refresh of the displayed data\\nPULL2REFRESH_REFRESH=Refresh\\n\\n#XBUT: Text displayed on the logout button in the top right corner of the Shell\\nSHELL_LOGOUT=Logout\\n\\n#XBUT: Text for OK button in the personalization dialog\\nPERSODIALOG_OK=OK\\n\\n#XBUT: Text for Cancel button in the personalization dialog\\nPERSODIALOG_CANCEL=Cancel\\n\\n#XTOL: Tooltip for Reset Personalization toolbar button\\nPERSODIALOG_UNDO=Reset personalization\\n\\n#XTOL: Tooltip for Perso Dialog's 'Move Up' button (displays an 'up' arrow)\\nPERSODIALOG_UP=Move column up\\n\\n#XTOL: Tooltip for Perso Dialog's 'Move Down' button (displays a 'down' arrow)\\nPERSODIALOG_DOWN=Move column down\\n\\n#XTIT: Title text of personalization dialog for columns\\nPERSODIALOG_COLUMNS_TITLE=Columns\\n\\n#XBUT: Text of personalization dialog for 'Select All' checkbox\\nPERSODIALOG_SELECT_ALL=All\\n\\n#XTIT: Text of personalization dialog for its list to indicate no search hits\\nPERSODIALOG_NO_DATA=No columns found\\n\\n#XTIT: Predefined text for the view settings dialog title\\nVIEWSETTINGS_TITLE=View\\n\\n#XTIT: Predefined text for the view settings dialog title when in sort mode\\nVIEWSETTINGS_TITLE_SORT=Sort By\\n\\n#XTIT: Predefined text for the view settings dialog title when in group mode\\nVIEWSETTINGS_TITLE_GROUP=Group By\\n\\n#XTIT: Predefined text for the view settings dialog title when in filter mode\\nVIEWSETTINGS_TITLE_FILTER=Filter By\\n\\n#XTIT: Predefined text for the view settings dialog title when in filter detail mode (an item name is appended to this string)\\nVIEWSETTINGS_TITLE_FILTERBY=Filter By\\\\:\\n\\n#YMSG: Start text for the text representation of the filter state\\nVIEWSETTINGS_FILTERTEXT=Filtered by\\\\:\\n\\n#XBUT: Button to confirm the view settings dialog\\nVIEWSETTINGS_ACCEPT=OK\\n\\n#XBUT: Button to cancel the view settings dialog\\nVIEWSETTINGS_CANCEL=Cancel\\n\\n#XBLI: List item text in the view settings dialog that represents a \\\"none of the above\\\" or \\\"none\\\" selection in a single selection list\\nVIEWSETTINGS_NONE_ITEM=None\\n\\n#XBLI: List item text in the view settings for sorting items in ascending order\\nVIEWSETTINGS_ASCENDING_ITEM=Ascending\\n\\n#XBLI: List item text in the view settings for sorting items in descending order\\nVIEWSETTINGS_DESCENDING_ITEM=Descending\\n\\n#XTOL: Tooltip for the clear filter button\\nVIEWSETTINGS_CLEAR_FILTER_TOOLTIP=Clear All Filters\\n\\n#XTIT: Predefined text for the view settings dialog aria label for the sort list\\nVIEWSETTINGS_SORT_DIRECTION=Sort Direction\\n\\n#XTIT: Predefined text for the view settings dialog aria label for the group list\\nVIEWSETTINGS_GROUP_DIRECTION=Group Direction\\n\\n#XLST: Label for the select all checkbox used to select all facet filter items\\nFACETFILTER_CHECKBOX_ALL=All\\n\\n#XLST: All Items in the list with the name of the list as a parameter: ex. Suppliers (All)\\nFACETFILTER_ALL_SELECTED={0} (All)\\n\\n#XFLD: Search field prompt\\nFACETFILTER_SEARCH=Search\\n\\n#XBUT: Either a single filter value or the number of selected values, displayed on facet filter button: ex. Suppliers (Dell) or Suppliers (6)\\nFACETFILTER_ITEM_SELECTION={0} ({1})\\n\\n#XACT: ARIA announcement for facet filter itself\\nFACETFILTER_ARIA_FACET_FILTER=Facet Filter\\n\\n#XTIT: Light flow facet filter dialog and facet add dialog title\\nFACETFILTER_TITLE=Filter\\n\\n#XBUT: Button to confirm facet filter dialogs\\nFACETFILTER_ACCEPT=OK\\n\\n#XSEL: Infobar filter summary: ex. Filtered by Suppliers (Supplier1, Supplier2)\\nFACETFILTER_INFOBAR_FILTERED_BY=Filtered by {0} ({1})\\n\\n#XSEL: Infobar filter summary when no filters selected\\nFACETFILTER_INFOBAR_NO_FILTERS=No filters selected\\n\\n#XSEL: Infobar filter add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\nFACETFILTER_INFOBAR_AND=and\\n\\n#XSEL: Infobar filter after add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\nFACETFILTER_INFOBAR_AFTER_AND={0} ({1})\\n\\n#XSEL: Alternate infobar filter summary\\nFACETFILTER_INFOBAR_FILTERS_APPLIED=Several filters applied\\n\\n#YMSG: Filter bar msg shown when there are more filters available that cannot be displayed because there is not enough room: ex. 2 More...\\nFACETFILTER_MORE_COUNT={0} more...\\n\\n#YMSG: Message displayed in filter dialog when there are many more filters available but not shown: ex. 76 more available\\nFACETFILTER_FILTERS_HUGE={0} more available\\n\\n#XLNK: Link to allow searching additional filter values from the server\\nFACETFILTER_SERVER_SEARCH=Search Further on Server\\n\\n#XBUT: Button to remove a filter from the filter bar\\nFACETFILTER_REMOVE_FILTER=Remove Filter\\n\\n#XACT: ARIA announcement for the position of the list items in an entire list\\nFACETFILTERLIST_ARIA_POSITION={0} of {1}\\n\\n#YMSG: Message displayed near the list of selection items in the SelectDialg and TableSelectDialog controls. It will be filled with the number of selected items\\nTABLESELECTDIALOG_SELECTEDITEMS=Items selected\\\\: {0}\\n\\n#YMSG: Default placeholder for the input field of a feed\\nFEEDINPUT_PLACEHOLDER=Post something here\\n\\n#XTOL: Tooltip for submit button of a feed input\\nFEEDINPUT_SUBMIT=Submit\\n\\n#XBUT: A link that can be clicked to display more/all items\\nINPUT_SUGGESTIONS_SHOW_ALL=Show All Items\\n\\n#XACT: ARIA announcement for the Input suggestion result if one hit\\nINPUT_SUGGESTIONS_ONE_HIT=1 result available\\n\\n#XACT: ARIA announcement for the Input suggestion result if more than one hit ({0} is the number of hits)\\nINPUT_SUGGESTIONS_MORE_HITS={0} results are available\\n\\n#XACT: ARIA announcement for the Input suggestion result if no hit\\nINPUT_SUGGESTIONS_NO_HIT=No results\\n\\n#XACT: ARIA announcement for the value help\\nINPUT_VALUEHELP=Value help available\\n\\n#XACT: ARIA announcement disabled input (e.g. for value help only)\\nINPUT_DISABLED=Text input disabled\\n\\n#XACT: ARIA announcement for suggestions popup\\nINPUT_AVALIABLE_VALUES=Available Values\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Error\\\"\\nINPUTBASE_VALUE_STATE_ERROR=Value State Error\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Warning\\\"\\nINPUTBASE_VALUE_STATE_WARNING=Value State Warning\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Success\\\"\\nINPUTBASE_VALUE_STATE_SUCCESS=Value State Success\\n\\n#XBUT,10: Tooltip for button to remove facet list\\nFACETFILTER_REMOVE=Remove Facet List\\n\\n#XBUT: ARIA announcement for removable facet\\nFACETFILTER_ARIA_REMOVE=Removable Facet\\\\: Press DELETE to Remove\\n\\n#XBUT: Tooltip for button to add facet filter list\\nFACETFILTER_ADDFACET=Add Filter\\n\\n#XBUT: Tooltip for button to reset filter\\nFACETFILTER_RESET=Reset Filter\\n\\n#XBUT: Tooltip for left scrolling arrow\\nFACETFILTER_PREVIOUS=Previous\\n\\n#XBUT: Tooltip for right scrolling arrow\\nFACETFILTER_NEXT=Next\\n\\n#XLNK: Link to allow the user to see complete feed post\\nTEXT_SHOW_MORE=MORE\\n\\n#XLNK: This link allows the user to hide the complete feed post and display only the first lines\\nTEXT_SHOW_LESS=LESS\\n\\n#XFLD: Label text for number of attachments in the UploadCollection control\\nUPLOADCOLLECTION_ATTACHMENTS=Attachments ({0})\\n\\n#XMSG: Message text for deleting a file in the UploadCollection control\\nUPLOADCOLLECTION_DELETE_TEXT=Are you sure you want to delete ''{0}''?\\n\\n#XMSG: Message text for deleting a file in the UploadCollection control without filename\\nUPLOADCOLLECTION_DELETE_WITHOUT_FILENAME_TEXT=Are you sure you want to delete the file?\\n\\n#XMSG: Message title for deleting a file in the UploadCollection control\\nUPLOADCOLLECTION_DELETE_TITLE=Delete File\\n\\n#XMSG: Message text for a popup to terminate a file uploading in the UploadCollection control\\nUPLOADCOLLECTION_TERMINATE_TEXT=The upload for the following files will be terminated\\\\:\\n\\n#XMSG: Message title for a popup to terminate a file uploading in the UploadCollection control\\nUPLOADCOLLECTION_TERMINATE_TITLE=Terminate upload\\n\\n#XMSG: Message text file name already exists in the UploadCollection control\\nUPLOADCOLLECTION_EXISTS=File name already exists.\\n\\n#XMSG: Message text informing that a file name must be entered during edit file name in the UploadCollection control\\nUPLOADCOLLECTION_TYPE_FILENAME=Please enter a file name.\\n\\n#XMSG: Message text for uploading status to the UploadCollection control\\nUPLOADCOLLECTION_UPLOADING=Uploading\\\\: {0} %\\n\\n#XMSG: Message title for the Upload Failed message box\\nUPLOADCOLLECTION_FAILED=Upload failed\\n\\n#XMSG: Message text informing that it is not allowed to upload the selected file(s) (MIME type or file extension not allowed)\\nUPLOADCOLLECTION_MISMATCH=File type is not allowed.\\n\\n#XMSG: Message text informing that upload is completed\\nUPLOADCOLLECTION_UPLOAD_COMPLETED=Upload completed. Please wait for the server to finish processing.\\n\\n#XMSG: Message text informing that only one file can be dropped if uploading multiple files is not allowed\\nUPLOADCOLLECTION_MULTIPLE_FALSE=Please use single drag & drop here.\\n\\n#XBUT: Button text for cancel button in the upload collection\\nUPLOADCOLLECTION_CANCELBUTTON_TEXT=Cancel\\n\\n#XBUT: Text for OK button in the upload collection in case of Delete Dialog\\nUPLOADCOLLECTION_OKBUTTON_TEXT=OK\\n\\n#XBUT: Text for Rename button in the upload collection in case of renaming a file\\nUPLOADCOLLECTION_RENAMEBUTTON_TEXT=Rename\\n\\n#XBUT: Text for DELETE button in the upload collection\\nUPLOADCOLLECTION_DELETEBUTTON_TEXT=Delete\\n\\n#XBUT: Text for TERMINATE button in the upload collection\\nUPLOADCOLLECTION_TERMINATEBUTTON_TEXT=Terminate\\n\\n#XBUT: Text for RENAME button in the upload collection\\nUPLOADCOLLECTION_EDITBUTTON_TEXT=Rename\\n\\n#XBUT: Text for Add button in the upload collection\\nUPLOADCOLLECTION_ADD=Add\\n\\n#XBUT: Text for Upload button in the upload collection\\nUPLOADCOLLECTION_UPLOAD=Upload\\n\\n#XMSG: Message text for no data text in the upload collection\\nUPLOADCOLLECTION_NO_DATA_TEXT=No files found.\\n\\n#XMSG: Message text for no data description in the upload collection\\nUPLOADCOLLECTION_NO_DATA_DESCRIPTION=Drop files to upload, or use the \\\"+\\\" button.\\n\\n#XMSG: Message text indicating where to drag\\nUPLOADCOLLECTION_DRAG_FILE_INDICATOR=Drag files here\\n\\n#XMSG: Message text indicating where to drop file and upload\\nUPLOADCOLLECTION_DROP_FILE_INDICATOR=Drop files to upload\\n\\n#XTIT: Predefined text for title in the personalization dialog - Settings for the view ('view' here is a noun).\\nP13NDIALOG_VIEW_SETTINGS=View Settings\\n#XTIT: dialog title if the dialog contains only filter panel\\nP13NDIALOG_TITLE_FILTER=Define Filters\\n#XTIT: dialog title if the dialog contains only sort panel\\nP13NDIALOG_TITLE_SORT=Define Sorting\\n#XTIT: dialog title if the dialog contains only group panel\\nP13NDIALOG_TITLE_GROUP=Define Groups\\n#XTIT: dialog title if the dialog contains only columns panel\\nP13NDIALOG_TITLE_COLUMNS=Define Column Properties\\n#XTIT: dialog title if the dialog contains only panel for dimensions and measures\\nP13NDIALOG_TITLE_DIMEASURE=Define Chart Properties\\n#XBUT: Text for OK button in the personalization dialog\\nP13NDIALOG_OK=OK\\n#XBUT: Text for Cancel button in the personalization dialog\\nP13NDIALOG_CANCEL=Cancel\\n#XBUT: Text for Reset button in the personalization dialog\\nP13NDIALOG_RESET=Restore\\n#XTIT: Text for Fix button in ValidationDialog\\nP13NDIALOG_VALIDATION_FIX=Fix\\n#XTIT: personalization dialog ValidationDialog predefined title for warning\\nP13NDIALOG_VALIDATION_TITLE=Warning\\n#XTIT: personalization dialog ValidationDialog predefined title for error\\nP13NDIALOG_VALIDATION_TITLE_ERROR=Error\\n#XTIT: personalization dialog ValidationDialog predefined message\\nP13NDIALOG_VALIDATION_MESSAGE=Some filter values are missing or incorrect\\n#XTIT: personalization dialog ValidationDialog predefined message for columns panel\\nP13NDIALOG_VISIBLE_ITEMS_THRESHOLD_MESSAGE=Selecting a large number of columns can slow down the performance\\n#XTIT: personalization dialog ValidationDialog predefined message for P13nDimMeasure\\nP13NDIALOG_VALIDATION_CHARTTYPE=The dimensions and measures you have selected cannot be used with this chart type\\n#XTIT: personalization dialog ValidationDialog predefined question an the end\\nP13NDIALOG_VALIDATION_MESSAGE_QUESTION=Do you want to correct your entries?\\n\\n#XTIT: on some personalization panels \\\"(none)\\\" as 'column key' means that no criteria was defined\\nP13NDIALOG_SELECTION_NONE=(none)\\n\\n#XTIT: Filterpanel predefined title for Include filter\\nFILTERPANEL_INCLUDES=Include\\n#XTIT: Filterpanel predefined title for Exclude filter\\nFILTERPANEL_EXCLUDES=Exclude\\n#XTIT: Text for title 'Filter' in the personalization dialog\\nFILTERPANEL_TITLE=Filter\\n\\n#XTIT: Text for title 'Sort' in the personalization dialog\\nSORTPANEL_TITLE=Sort\\n\\n#XTIT: Text for title 'Group' in the personalization dialog\\nGROUPPANEL_TITLE=Group\\n\\n#XFLD: Label text for combobox control\\nCONDITIONPANEL_FIELD_LABEL=Field\\\\:\\n#XFLD: Label text for select control\\nCONDITIONPANEL_OPERATOR_LABEL=Operator\\\\:\\n\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONBT=between\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONEQ=equal to\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONContains=contains\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGT=greater than\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGE=greater than or equal to\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONLT=less than\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONLE=less than or equal to\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONInitial=initial\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONStartsWith=starts with\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONEndsWith=ends with\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONAscending=Ascending\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONDescending=Descending\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGroupAscending=Ascending\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGroupDescending=Descending\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONTotal=Total\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONAverage=Average\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONMinimum=Minimum\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONMaximum=Maximum\\n#XTIT: ConditionPanel Empty\\nCONDITIONPANEL_OPTIONEmpty=empty\\n#XTIT: ConditionPanel NotEmpty\\nCONDITIONPANEL_OPTIONNotEmpty=not empty\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_BT=between\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_EQ=equal to\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_GT=after\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_GE=on or after\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_LT=before\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_LE=before or on\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_BT=between\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_EQ=equal to\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_GT=greater than\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_GE=greater than or equal to\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_LT=less than\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_LE=less than or equal to\\n\\n\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELFROM=from\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELTO=to\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELVALUE=Value\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELGROUPING=Show Field as Column\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_TOOLTIP=Add New Line\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_TOOLTIP=Remove line\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_FILTER_TOOLTIP=Add Filter\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_FILTER_TOOLTIP=Remove Filter\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_SORT_TOOLTIP=Add Sort Criterion\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_SORT_TOOLTIP=Remove Sort Criterion\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_GROUP_TOOLTIP=Add Grouping Criterion\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_GROUP_TOOLTIP=Remove Grouping Criterion\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_CONDITION_TOOLTIP=Add Condition\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_CONDITION_TOOLTIP=Remove Condition\\n#XBUT: ConditionPanel predefined text for remove all button\\nCONDITIONPANEL_REMOVE_ALL=Remove All\\n#XTIT: ConditionPanel predefined field warning hint\\nCONDITIONPANEL_FIELDMESSAGE=Enter valid value\\n\\n#XTIT: Text for title 'Chart' in the personalization dialog\\nCHARTPANEL_TITLE=Chart\\n\\n#XTIT: Text for title 'Columns' in the personalization dialog\\nCOLUMSPANEL_TITLE=Columns\\n#XBUT: ColumnsPanel Show All button\\nCOLUMNSPANEL_SHOW_ALL=Show All\\n#XBUT: ColumnsPanel Show Selected button\\nCOLUMNSPANEL_SHOW_SELECTED=Show Selected\\n#XLST: ColumnsPanel Select All label\\nCOLUMNSPANEL_SELECT_ALL=Select All\\n#XLST: ColumnsPanel Select All label\\nCOLUMNSPANEL_SELECT_ALL_WITH_COUNTER=Select all ({0}/{1})\\n#XTOL: Tooltip for MOVE: ToStart button\\nCOLUMNSPANEL_MOVE_TO_TOP=Move to Top\\n#XTOL: Tooltip for MOVE: Up button\\nCOLUMNSPANEL_MOVE_UP=Move Up\\n#XTOL: Tooltip for MOVE: Down button\\nCOLUMNSPANEL_MOVE_DOWN=Move Down\\n#XTOL: Tooltip for MOVE: ToEnd button\\nCOLUMNSPANEL_MOVE_TO_BOTTOM=Move to Bottom\\n\\n#XLST: ColumnsPanel Chart Type caption\\nCOLUMNSPANEL_COLUMN_TYPE=Type\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_TYPE_DIMENSION=Dimension\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_TYPE_MEASURE=Measure\\n#XLST: ColumnsPanel Chart Role caption\\nCOLUMNSPANEL_COLUMN_ROLE=Role\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_CATEGORY=Category\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_SERIES=Series\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_AXIS1=Axis 1\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_AXIS2=Axis 2\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_CHARTTYPE=Chart Type\\n\\n\\n#XFLD: Subtle link description label\\nLINK_SUBTLE=Subtle\\n#XFLD: Emphasized link description label\\nLINK_EMPHASIZED=Emphasized\\n\\n#XACT: ARIA announcement for the search field F5 keyboard shortcut\\nSEARCHFIELD_ARIA_F5=Press F5 to refresh\\n\\n#XACT: ARIA announcement for the F4 value help keyboard shortcut\\nVALUEHELP_ARIA_F4=Press F4 to open a value help dialog.\\n\\n#XTXT: Bar's ARIA description when it is a footer\\nBAR_ARIA_DESCRIPTION_FOOTER=Footer\\n#XTXT: Bar's ARIA description when it is a header\\nBAR_ARIA_DESCRIPTION_HEADER=Header\\n#XTXT: Bar's ARIA description when it is a subheader\\nBAR_ARIA_DESCRIPTION_SUBHEADER=Subheader\\n\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Error\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_ERROR=Value State Error\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Warning\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_WARNING=Value State Warning\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Success\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_SUCCESS=Value State Success\\n\\n#XACT: ARIA text for tab separator icons\\nICONTABBAR_NEXTSTEP=Next Step\\n#XACT: ARIA text for positive icon color\\nICONTABBAR_ICONCOLOR_POSITIVE=Positive\\n#XACT: ARIA text for critical icon color\\nICONTABBAR_ICONCOLOR_CRITICAL=Critical\\n#XACT: ARIA text for negative icon color\\nICONTABBAR_ICONCOLOR_NEGATIVE=Negative\\n\\n#XACT: ARIA text of current selected value vs. max. possible value of the RatingIndicator control\\nRATING_VALUEARIATEXT={0} of {1}\\n#XACT: ARIA description of the RatingIndicator control\\nRATING_ARIA_NAME=Rating\\n\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s favorite property\\nARIA_FAVORITE_MARK_VALUE=Favorite\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s flag property\\nARIA_FLAG_MARK_VALUE=Flag\\n\\n#XACT: ARIA description for ObjectHeader icon infront of the title when it's active\\nOH_ARIA_ICON=Icon\\n\\n#XACT: ARIA description for Shell logo\\nSHELL_ARIA_LOGO=Logo\\n\\n#XTXT: MessagePage text\\nMESSAGE_PAGE_TEXT=No matching items found.\\n#XTXT: MessagePage description\\nMESSAGE_PAGE_DESCRIPTION=Check the filter settings\\n\\n#XFLD: Token number indicator which is used to show more tokens in MultiInput when the MultiInput it is in multi-line display mode\\nMULTIINPUT_SHOW_MORE_TOKENS={0} More\\n#XACT: ARIA announcement for multiinput containing label\\nMULTIINPUT_ARIA_CONTAIN_TOKEN=May contain tokens\\n#XACT: ARIA announcement for multiinput containing one token\\nMULTIINPUT_ARIA_CONTAIN_ONE_TOKEN=Contains 1 token\\n#XACT: ARIA announcement for multiinput containing several tokens\\nMULTIINPUT_ARIA_CONTAIN_SEVERAL_TOKENS=Contains {0} tokens\\n\\n#XACT: ARIA announcement for tokenizer label\\nTOKENIZER_ARIA_LABEL=Tokenizer\\n\\n#XACT: ARIA announcement for token label\\nTOKEN_ARIA_LABEL=Token\\n#XACT: ARIA announcement for token deletable\\nTOKEN_ARIA_DELETABLE=Deletable\\n\\n#XACT: ARIA announcement for the ObjectListItem unread mark\\nOBJECTLISTITEM_ARIA_UNREAD_VALUE=Unread\\n#XACT: ARIA announcement for the ObjectListItem locked mark\\nOBJECTLISTITEM_ARIA_LOCKED_MARK_VALUE=Locked\\n\\n#XBUT: MessagePopover predefined text for CLOSE action\\nMESSAGEPOPOVER_CLOSE=Close\\n#XBUT: MessagePopover predefined text for All Button\\nMESSAGEPOPOVER_ALL=All\\n#XACT: ARIA announcement for the MessagePopover back buttons tooltip\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON_TOOLTIP=Back to Messages\\n#XACT: ARIA announcement for the MessagePopover back buttons\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON=Message Details\\n#XACT: ARIA announcement for the MessagePopover heading\\nMESSAGEPOPOVER_ARIA_HEADING=Messages\\n\\n#XACT: ARIA announcement for the accept button\\nBUTTON_ARIA_TYPE_ACCEPT=Positive Action\\n#XACT: ARIA announcement for the reject button\\nBUTTON_ARIA_TYPE_REJECT=Negative Action\\n#XACT: ARIA announcement for the emphasized button\\nBUTTON_ARIA_TYPE_EMPHASIZED=Emphasized\\n\\n#XACT: ARIA text for position markers\\nCAROUSEL_POSITION=Item {0} of {1} displayed\\n\\n#XTXT: Text between numbers in the numeric page indicator\\nCAROUSEL_PAGE_INDICATOR_TEXT={0} of {1}\\n\\n#XTXT: colon separator\\nCOLON=\\\\:\\n\\n#XBUT: sap.m.semantic.SemanticControl Edit button text\\nSEMANTIC_CONTROL_EDIT=Edit\\n#XBUT: sap.m.semantic.SemanticControl Save button text\\nSEMANTIC_CONTROL_SAVE=Save\\n#XBUT: sap.m.semantic.SemanticControl Delete button text\\nSEMANTIC_CONTROL_DELETE=Delete\\n#XBUT: sap.m.semantic.SemanticControl Cancel button text\\nSEMANTIC_CONTROL_CANCEL=Cancel\\n#XBUT: sap.m.semantic.SemanticControl Approve button text\\nSEMANTIC_CONTROL_APPROVE=Approve\\n#XBUT: sap.m.semantic.SemanticControl Reject button text\\nSEMANTIC_CONTROL_REJECT=Reject\\n#XBUT: sap.m.semantic.SemanticControl Forward button text\\nSEMANTIC_CONTROL_FORWARD=Forward\\n#XBUT: sap.m.semantic.SemanticControl Open in button text\\nSEMANTIC_CONTROL_OPEN_IN=Open in...\\n#XBUT: sap.m.semantic.SemanticControl Sort button text\\nSEMANTIC_CONTROL_SORT=Sort\\n#XBUT: sap.m.semantic.SemanticControl Filter button text\\nSEMANTIC_CONTROL_FILTER=Filter\\n#XBUT: sap.m.semantic.SemanticControl Group button text\\nSEMANTIC_CONTROL_GROUP=Group\\n#XBUT: sap.m.semantic.SemanticControl Flag button text\\nSEMANTIC_CONTROL_FLAG=Flag\\n#XBUT: sap.m.semantic.SemanticControl Favorite button text\\nSEMANTIC_CONTROL_FAVORITE=Favorite\\n#XBUT: sap.m.semantic.SemanticControl Add button text\\nSEMANTIC_CONTROL_ADD=Add\\n#XBUT: sap.m.semantic.SemanticControl Send Email button text\\nSEMANTIC_CONTROL_SEND_EMAIL=Send E-Mail\\n#XBUT: sap.m.semantic.SemanticControl Discuss in SAP Jam button text\\nSEMANTIC_CONTROL_DISCUSS_IN_JAM=Discuss in SAP Jam\\n#XBUT: sap.m.semantic.SemanticControl Share in SAP Jam button text\\nSEMANTIC_CONTROL_SHARE_IN_JAM=Share on SAP Jam\\n#XBUT: sap.m.semantic.SemanticControl Send Message button text\\nSEMANTIC_CONTROL_SEND_MESSAGE=Send Message\\n#XBUT: sap.m.semantic.SemanticControl Save as Tile button text\\nSEMANTIC_CONTROL_SAVE_AS_TILE=Save as Tile\\n#XBUT: sap.m.semantic.SemanticControl Print button text\\nSEMANTIC_CONTROL_PRINT=Print\\n#XBUT: sap.m.semantic.SemanticControl Multi select button text\\nSEMANTIC_CONTROL_MULTI_SELECT=Multiple Selection\\n#XBUT: sap.m.semantic.SemanticControl Multi select cancel button text\\nSEMANTIC_CONTROL_MULTI_SELECT_CANCEL=Cancel Multiple Selection\\n#XBUT: sap.m.semantic.SemanticControl Message indicator button text\\nSEMANTIC_CONTROL_MESSAGES_INDICATOR=Messages\\n#XBUT: sap.m.semantic.SemanticControl \\\"Action\\\" Share button text\\nSEMANTIC_CONTROL_ACTION_SHARE=Share\\n#XTXT: sap.m.semantic.DetailPage title\\nSEMANTIC_DETAIL_PAGE_TITLE=Details\\n#XTXT: sap.m.semantic.MasterPage title\\nSEMANTIC_MASTER_PAGE_TITLE=Master\\n\\n#XFLD: sap.m.DraftIndicator Saving Draft indicator text\\nDRAFT_INDICATOR_SAVING_DRAFT=Saving draft...\\n#XFLD: sap.m.DraftIndicator Draft saved indicator text\\nDRAFT_INDICATOR_DRAFT_SAVED=Draft saved\\n\\n#XBUT: Wizard predefined text for Cancel button\\nWIZARD_CANCEL=Cancel\\n#XBUT: Wizard predefined text for Next button\\nWIZARD_NEXT=Next\\n#XBUT: Wizard predefined text for Finish button\\nWIZARD_FINISH=Review\\n\\n#XACT: Aria information for the Date Picker\\nDATEPICKER_DATE_TYPE=Date\\n\\n#XACT: WizardProgressNavigator selected step\\nWIZARD_PROG_NAV_SELECTED=Selected\\n#XACT: WizardProgressNavigator processed step\\nWIZARD_PROG_NAV_PROCESSED=Processed\\n#XACT: WizardProgressNavigator predefined text for step\\nWIZARD_PROG_NAV_STEP_TITLE=Step\\n#XBUT: Wizard predefined text for Step button\\nWIZARD_STEP=Step\\n#XACT: Aria label for the wizard\\nWIZARD_LABEL=Wizard\\n\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectHeader, showing that the item is flagged\\nTOOLTIP_OH_FLAG_MARK_VALUE=Flagged\\n\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectHeader, showing that the item is favorite\\nTOOLTIP_OH_FAVORITE_MARK_VALUE=Favorite\\n\\n#XTOL: Tooltip for the select title arrow inside sap.m.ObjectHeader\\nOH_SELECT_ARROW_TOOLTIP=Related Options\\n\\n#XTXT: Text value for marker type Flag\\nOM_FLAG=Flagged\\n\\n#XTXT: Text value for marker type Favorite\\nOM_FAVORITE=Favorite\\n\\n#XTXT: Text value for marker type Draft\\nOM_DRAFT=Draft\\n\\n#XTXT: Text value for marker type Locked\\nOM_LOCKED=Locked\\n\\n#XTXT: Text value for marker type LockedBy that shows who has locked the object, e.g. Locked by {User name}\\nOM_LOCKED_BY=Locked by {0}\\n\\n#XTXT: Text value for marker type Locked by another user\\nOM_LOCKED_BY_ANOTHER_USER=Locked by another user\\n\\n#XTXT: Text value for marker type Unsaved Changes\\nOM_UNSAVED=Unsaved Changes\\n\\n#XTXT: Text value for marker type UnsavedBy Changes that shows who has unsaved changes, e.g. Unsaved Changes by {User name}\\nOM_UNSAVED_BY=Unsaved Changes by {0}\\n\\n#XTXT: Text value for marker type Unsaved by another user\\nOM_UNSAVED_BY_ANOTHER_USER=Unsaved changes by another user\\n\\n#XTOL: Tooltip for \\\"Send SMS\\\" in QuickView\\nQUICKVIEW_SEND_SMS=Send SMS\\n\\n#XTXT: Text for character left\\nTEXTAREA_CHARACTER_LEFT={0} Character Left\\n\\n#XTXT: Text for characters left\\nTEXTAREA_CHARACTERS_LEFT={0} Characters Left\\n\\n#XTXT: Text for character exceeded\\nTEXTAREA_CHARACTER_EXCEEDED={0} Character Exceeded\\n\\n#XTXT: Text for characters exceeded\\nTEXTAREA_CHARACTERS_EXCEEDED={0} Characters Exceeded\\n\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectListItem, showing that the item is flagged\\nTOOLTIP_OLI_FLAG_MARK_VALUE=Flagged\\n\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectListItem, showing that the item is favorite\\nTOOLTIP_OLI_FAVORITE_MARK_VALUE=Favorite\\n\\n#XTOL: Tooltip for the locked icon inside sap.m.ObjectListItem, showing that the item is locked\\nTOOLTIP_OLI_LOCK_MARK_VALUE=Locked\\n\\n#XBUT: Time Selection button text of Time Picker control\\nTIMEPICKER_SET=OK\\n\\n#XBUT: Cancel/Close button text of Time Picker control\\nTIMEPICKER_CANCEL=Cancel\\n\\n#YACT: ARIA tag of Time Picker control\\nTIMEPICKER_SCREENREADER_TAG=Time Picker\\n\\n#YACT: ARIA tag of Time Picker control with format as placeholder\\nTIMEPICKER_WITH_PH_SCREENREADER_TAG=Time Picker in format {0}\\n\\n#XFLD: Label of the hours value slider inside a Time Picker control\\nTIMEPICKER_LBL_HOURS=Hours\\n\\n#XFLD: Label of the minutes value slider inside a Time Picker control\\nTIMEPICKER_LBL_MINUTES=Minutes\\n\\n#XFLD: Label of the seconds value slider inside a Time Picker control\\nTIMEPICKER_LBL_SECONDS=Seconds\\n\\n#XFLD: Label of the am/pm value slider inside a Time Picker control\\nTIMEPICKER_LBL_AMPM=AM/PM\\n\\n#XACT: ARIA label for Breadcrumbs\\nBREADCRUMB_LABEL=Breadcrumb Trail\\n\\n#XTOL: Tooltip text for Breadcrumbs select\\nBREADCRUMB_SELECT_TOOLTIP=More\\n\\n#XACT: Unread status of Notification List Item\\nNOTIFICATION_LIST_ITEM_UNREAD=Notification unread.\\n\\n#XACT: Read status of Notification List Item\\nNOTIFICATION_LIST_ITEM_READ=Notification read.\\n\\n#XACT: ARIA text for datetime and priority\\nNOTIFICATION_LIST_ITEM_DATETIME_PRIORITY=Due in {0}, {1} Priority.\\n\\n#XFLD: text that will be displayed when tile failed to load\\nINFOTILE_CANNOT_LOAD_TILE=Cannot load tile\\n\\n#XFLD: text that will be read while tile is loading\\nINFOTILE_LOADING=Loading\\n\\n#XTXT: text for critical color\\nSEMANTIC_COLOR_CRITICAL=Warning\\n\\n#XTXT: text for good color\\nSEMANTIC_COLOR_GOOD=Good\\n\\n#XTXT: text for neutral color\\nSEMANTIC_COLOR_NEUTRAL=Neutral\\n\\n#XTXT: text for error color\\nSEMANTIC_COLOR_ERROR=Critical\\n\\n#XTOL:\\nNUMERICCONTENT_DEVIATION_UP=Ascending\\n\\n#XTOL:\\nNUMERICCONTENT_DEVIATION_DOWN=Descending\\n\\n#YACT: ARIA tag of MaskInput control\\nMASKINPUT_SCREENREADER_TAG=Masked\\n\\n#YACT: ARIA description of MaskInput control\\nMASKINPUT_SCREENREADER_DESCRIPTION=When focused, the masked input field is formatted and prefilled. The {0} symbol is reserved for a placeholder. The value that has to be entered in this field is in the following format {1} where every symbol corresponds to a rule. A rule is a set of characters that are allowed for their particular position. Symbols that do not have a rule are immutable characters and are part of the value formatting.\\n\\n#XACT: ARIA scroll back button for tabstrip\\nTABSTRIP_SCROLL_BACK=Scroll Back\\n\\n#XACT: ARIA scroll forward button for tabstrip\\nTABSTRIP_SCROLL_FORWARD=Scroll Forward\\n\\n#XACT: ARIA static text for modified tabstrip item\\nTABSTRIP_ITEM_MODIFIED=Unsaved\\n\\n#XACT: ARIA static text for not-modified tabstrip item\\nTABSTRIP_ITEM_NOT_MODIFIED=Saved\\n\\n#XACT: ARIA static text for closable tabstrip item\\nTABSTRIP_ITEM_CLOSABLE=Closable\\n#XFLD: Footer text for TileContent\\nTILECONTENT_FOOTER_TEXT={0}, {1}\\n\\n#XBUT: Button text for collapsing the Notification List Group\\nNOTIFICATION_LIST_GROUP_COLLAPSE=Collapse Group\\n\\n#XBUT: Button text for expanding the Notification List Group\\nNOTIFICATION_LIST_GROUP_EXPAND=Expand Group\\n\\n#XACT: ARIA add new tab button for tabstrip\\nTABCONTAINER_ADD_NEW_TAB=Add New Tab\\n\\n#XACT: ARIA dropdown button for tabstrip\\nTABSTRIP_OPENED_TABS=Opened Tabs\\n\\n#XBUT: Button text for expanding a Notification List Item\\nNOTIFICATION_LIST_ITEM_SHOW_MORE=Show More\\n\\n#XBUT: Button text for collapsing a Notification List Item\\nNOTIFICATION_LIST_ITEM_SHOW_LESS=Show Less\\n\\n#XBUT: Date button of DateTimePicker on small screens\\nDATETIMEPICKER_DATE=Date\\n\\n#XBUT: Time button of DateTimePicker on small screens\\nDATETIMEPICKER_TIME=Time\\n\\n#XACT: Aria information for the Date Time Picker\\nDATETIMEPICKER_TYPE=Date and Time\\n\\n#XACT: PlanningCalendar accessibility description\\nPLANNINGCALENDAR=Planning calendar\\n\\n#XACT: PlanningCalendar view selector accessibility description\\nPLANNINGCALENDAR_VIEW=View calendar by\\n\\n#XFLD: Name of the \\\"Hours\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_HOURS=Hours\\n\\n#XFLD: Name of the \\\"Days\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_DAYS=Days\\n\\n#XFLD: Name of the \\\"Months\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_MONTHS=Months\\n\\n#XFLD: Name of the \\\"Week\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_WEEK=1 Week\\n\\n#XFLD: Name of the \\\"OneMonth\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_ONE_MONTH=1 Month\\n\\n#XBUT: Today button of PlanningCalendar control\\nPLANNINGCALENDAR_TODAY=Today\\n\\n#XFLD: Text for all day event\\nPLANNINGCALENDAR_ALLDAY=All Day\\n\\n#XFLD: Text for event with no starting time\\nPLANNINGCALENDAR_UNTIL=until {0}\\n\\n#XFLD: Text for a placeholder row when there are no appointments\\nPLANNINGCALENDAR_ROW_NO_APPOINTMENTS=No Entries\\n\\n#XTOL: Tool tip for nextButton of the PagingButton\\nPAGINGBUTTON_NEXT=Next Page\\n\\n#XTOL: Tool tip for nextButton of the PagingButton\\nPAGINGBUTTON_PREVIOUS=Previous Page\\n\\n#XBUT: Text and number of selected items for toolbar button of SelectionDetails\\nSELECTIONDETAILS_BUTTON_TEXT_WITH_NUMBER=Details ({0})\\n\\n#XBUT: Text for toolbar button of SelectionDetails\\nSELECTIONDETAILS_BUTTON_TEXT=Details\\n\\n#############\\n#Translatable Control Types and States for ACC\\n#############\\n\\n#XACT: type of an UI control is an input field\\nACC_CTR_TYPE_INPUT=Input\\n\\n#XACT: type of an UI control is a input field (which allows setting multiple values)\\nACC_CTR_TYPE_MULTIINPUT=Multi Input\\n\\n#XACT: type of an UI control is a date input field\\nACC_CTR_TYPE_DATEINPUT=Date Input\\n\\n#XACT: type of an UI control is a time input field\\nACC_CTR_TYPE_TIMEINPUT=Time input\\n\\n#XACT: type of an UI control is a date and time input field\\nACC_CTR_TYPE_DATETIMEINPUT=Date/time input\\n\\n#XACT: type of an UI control is a rating indicator\\nACC_CTR_TYPE_RATING=Rating\\n\\n#XACT: type of an UI control is a button\\nACC_CTR_TYPE_BUTTON=Button\\n\\n#XACT: type of an UI control is a link\\nACC_CTR_TYPE_LINK=Link\\n\\n#XACT: type of an UI control is an image\\nACC_CTR_TYPE_IMAGE=Image\\n\\n#XACT: type of an UI control is a checkbox\\nACC_CTR_TYPE_CHECKBOX=Checkbox\\n\\n#XACT: type of of an UI control is a progess indicator\\nACC_CTR_TYPE_PROGRESS=Progress\\n\\n#XACT: type of an UI control is a combobox\\nACC_CTR_TYPE_COMBO=Combo Box\\n\\n#XACT: type of of an UI control is a combobox (which allows multi selection)\\nACC_CTR_TYPE_MULTICOMBO=Multi Combo Box\\n\\n#XACT: type of of an UI control is a list\\nACC_CTR_TYPE_LIST=List Box\\n\\n#XACT: type of of an UI control is a list item\\nACC_CTR_TYPE_OPTION=List Item\\n\\n#XACT: type of of an UI control is a tree\\nACC_CTR_TYPE_TREE=Tree\\n\\n#XACT: type of of an UI control is a tree item\\nACC_CTR_TYPE_TREEITEM=Tree Item\\n\\n#XACT: type of of an UI control is a table\\nACC_CTR_TYPE_TABLE=Table\\n\\n#XACT: type of of an UI control is a table row\\nACC_CTR_TYPE_ROW=Row\\n\\n#XACT: ARIA announcement for the header row of the table\\nACC_CTR_TYPE_HEADER_ROW=Header Row\\n\\n#XACT: ARIA announcement for the footer row of the table\\nACC_CTR_TYPE_FOOTER_ROW=Footer Row\\n\\n#XACT: \\\"pressed\\\" state of e.g. a togglebutton which should be announced by screenreaders\\nACC_CTR_STATE_PRESSED=Pressed\\n\\n#XACT: \\\"checked\\\" state of e.g. a checkbox which should be announced by screenreaders\\nACC_CTR_STATE_CHECKED=Checked\\n\\n#XACT: state (current and max. value) of a rating indicator which should be announced by screenreaders\\nACC_CTR_STATE_RATING={0} out of {1}\\n\\n#XACT: progress state of a progress indicator which should be announced by screenreaders\\nACC_CTR_STATE_PROGRESS={0} %\\n\\n#############\\n\\n#XACT: Aria information for the Split Button\\nSPLIT_BUTTON_DESCRIPTION=Split Button\\n\\n#XACT: Aria hint for the keyboard handling support of the Split Button\\nSPLIT_BUTTON_KEYBOARD_HINT=Press Enter to trigger action and Arrow Down to open menu\\n\\n#XTOL: Tooltip text for back button inside a Menu Page\\nMENU_PAGE_BACK_BUTTON=Back to\\n\\n#XBUT: Menu predefined text for CLOSE action\\nMENU_CLOSE=Cancel\\n\\n#XBUT: Button text for closing a Notification List Base control\\nNOTIFICATION_LIST_BASE_CLOSE=Close\\n\\n\\n#XBUT: No grouping item in ViewSettingsPopover\\nNO_GROUPING=No Grouping\\n\\n#XBUT: No filtering item in ViewSettingsPopover\\nREMOVE_FILTER=Remove Filter\\n\\n#XBUT: ARIA-LabelledBy for ViewSettingsPopover\\nARIA_LABELLED_BY_POPOVER=Column View Settings\\n\\n#XBUT: Show selected only for ViewSettingsPopover\\nSHOW_SELECTED_ONLY=Show Selected Only\\n\\n#XBUT: No sorting item in ViewSettingsPopover\\nNO_SORTING=No Sorting\\n\\n#YACT: ARIA information about multiple content within the SlideTile\\nSLIDETILE_MULTIPLE_CONTENT=Element with multiple content\\n\\n#YACT: ARIA information about toggle sliding within the SlideTile\\nSLIDETILE_TOGGLE_SLIDING=To toggle sliding, press space bar\\n\\n#YACT: ARIA information how to activate the SlideTile\\nSLIDETILE_ACTIVATE=To activate, press enter\\n\\n#YACT: ARIA information how to scroll back in the SlideTile\\nSLIDETILE_SCROLL_BACK=To scroll back, press B\\n\\n#YACT: ARIA information how to to scroll forward in the SlideTile\\nSLIDETILE_SCROLL_FORWARD=To scroll forward, press F\\n\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\nSLIDER_HANDLE=Slider Handle\\n\\n#XACT: ARIA announcement for the range in RangeSlider\\nRANGE_SLIDER_RANGE_ANNOUNCEMENT=From {0} to {1}\\n\\n#XACT: ARIA ARIA-LabelledBy for the left handle and tooltip in RangeSlider\\nRANGE_SLIDER_LEFT_HANDLE=Left Handle\\n\\n#XACT: ARIA ARIA-LabelledBy for the right handle and tooltip in RangeSlider\\nRANGE_SLIDER_RIGHT_HANDLE=Right Handle\\n\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\nRANGE_SLIDER_RANGE_HANDLE=Range\\n\\n#XBUT: Button text for close button in the LightBox\\nLIGHTBOX_CLOSE_BUTTON=Close\\n\\n#XTOL: Tooltip on the button to allow to scroll back\\nHEADERCONTAINER_BUTTON_PREV_SECTION=Previous\\n\\n#XTOL: Tooltip on the button to allow to scroll forward\\nHEADERCONTAINER_BUTTON_NEXT_SECTION=Next\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout.\\nLIGHTBOX_IMAGE_TIMED_OUT=Image could not be loaded\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\nLIGHTBOX_IMAGE_TIMED_OUT_DETAILS=This image is too big to load right now. Please try again later.\\n\\n#XTXT: Error message for LightBox image not loaded.\\nLIGHTBOX_IMAGE_ERROR=An error has occurred.\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\nLIGHTBOX_IMAGE_ERROR_DETAILS=We could not find the image at the specified location, or the server is not responding.\\n\\n#XACT: ARIA announcement for enlarged image\\nLIGHTBOX_ARIA_ENLARGED=Enlarged image of {0}\\n\\n#XACT: ARIA keyboard announcement for the DEL key for removing a tile\\nTILE_REMOVE_BY_DEL_KEY=Press delete key to remove the item.\\n\\n#XACT: ARIA text for GenericTile in actions scope\\nGENERICTILE_ACTIONS_ARIA_TEXT=Removable tile\\n\\n#XTOL: Tooltip for REMOVE button in the GenericTile\\nGENERICTILE_REMOVEBUTTON_TEXT=Remove\\n\\n#XTXT: Reached maximum number of notifications in NotificationListGroup title\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_TITLE=There are {0} more notifications\\n\\n#XTXT: Reached maximum number of notifications in NotificationListGroup\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_BODY=You need to close or take action on the listed notifications to display more.\\n\\n#XTOL: Tooltip of the button for increasing for example the quantity of a product inside shopping-cart application\\nSTEP_INPUT_INCREASE_BTN=Increase\\n\\n#XTOL: Tooltip of the button for decreasing for example the quantity of a product inside shopping-cart application\\nSTEP_INPUT_DECREASE_BTN=Decrease\\n\\n#XMIT: Radio button control name caption\\nRADIOBUTTON_NAME=Radio Button\\n\\n#XTIT: Radio button control name plural caption\\nRADIOBUTTON_NAME_PLURAL=Radio Buttons\\n\\n#XMIT: Text control name caption\\nTEXT_NAME=Text\\n\\n#XTIT: Text control name plural caption\\nTEXT_NAME_PLURAL=Texts\\n\\n#XMIT: Date picker control name caption\\nDATEPICKER_NAME=Date Picker\\n\\n#XACT: ARIA role for the control Object Identifier\\nOI_ARIA_ROLE=Object Identifier\\n\\n#XTIT: Date picker control name plural caption\\nDATEPICKER_NAME_PLURAL=Date Pickers\\n\\n#XMIT: Check Box control name caption\\nCHECKBOX_NAME=Checkbox\\n\\n#XTIT: Check Box control name plural caption\\nCHECKBOX_NAME_PLURAL=Checkboxes\\n\\n#XMIT: Rating Indicator control name caption\\nRATINGINDICATOR_NAME=Rating Indicator\\n\\n#XTIT: Rating Indicator control name plural caption\\nRATINGINDICATOR_NAME_PLURAL=Rating Indicators\\n\\n#XMIT: Page control name caption\\nPAGE_NAME=Page\\n\\n#XTIT: Page control name plural caption\\nPAGE_NAME_PLURAL=Pages\\n\\n#XMIT: Label control name caption\\nLABEL_NAME=Label\\n\\n#XTIT: Label control name plural caption\\nLABEL_NAME_PLURAL=Labels\\n\\n#XMIT: Link control name caption\\nLINK_NAME=Link\\n\\n#XTIT: Link control name plural caption\\nLINK_NAME_PLURAL=Links\\n\\n#XMIT: Scroll container control name caption\\nSCROLL_CONTAINER_CONTROL_NAME=Container\\n\\n#XTIT: Scroll container control name plural caption\\nSCROLL_CONTAINER_CONTROL_NAME_PLURAL=Containers\\n\\n#XMIT: Panel control name caption\\nPANEL_NAME=Panel\\n\\n#XTIT: Panel control name plural caption\\nPANEL_NAME_PLURAL=Panels\\n\\n#XMIT: ListItemBase control name caption\\nLIST_ITEM_BASE_NAME=List Item\\n\\n#XTIT: ListItemBase control name plural caption\\nLIST_ITEM_BASE_NAME_PLURAL=List Items\\n\\n#XACT:Author of Notification List Item\\nNOTIFICATION_LIST_ITEM_CREATED_BY=Created By\\n\\n#XACT: Unread status of Notification List Item\\nNOTIFICATION_LIST_GROUP_UNREAD=Notification group unread.\\n\\n#XACT: Read status of Notification List Item\\nNOTIFICATION_LIST_GROUP_READ=Notification group read.\\n\\n#XMIT: Image control name caption\\nIMAGE_NAME=Image\\n\\n#XTIT: Image control name plural caption\\nIMAGE_NAME_PLURAL=Images\\n\\n#XMIT: InputBase control name caption\\nINPUT_BASE_NAME=Input\\n\\n#XTIT: InputBase control name plural caption\\nINPUT_BASE_NAME_PLURAL=Inputs\\n\\n#XMIT: Title control name caption\\nTITLE_NAME=Title\\n\\n#XTIT: Title control name plural caption\\nTITLE_NAME_PLURAL=Titles\\n\\n#XMIT: Slider control name caption\\nSLIDER_NAME=Slider\\n\\n#XTIT: Slider control name plural caption\\nSLIDER_NAME_PLURAL=Sliders\\n\\n#XMIT: ListBase control name caption\\nLIST_BASE_NAME=List\\n\\n#XTIT: ListBase control name plural caption\\nLIST_BASE_NAME_PLURAL=Lists\\n\\n#XMIT: Responsive Table control name caption\\nTABLE_NAME=Table\\n\\n#XTIT: Table control name plural caption\\nTABLE_NAME_PLURAL=Tables\\n\\n#XACT: Aria label for Table select all CheckBox\\nTABLE_CHECKBOX_SELECT_ALL=Select all rows\\n\\n#XTIT: Column control name caption\\nCOLUMN_NAME=Column\\n\\n#XTIT: Column control name plural caption\\nCOLUMN_NAME_PLURAL=Columns\\n\\n#XMIT: FlexBox control name caption\\nFLEXBOX_CONTROL_NAME=Container\\n\\n#XTIT: FlexBox control name plural caption\\nFLEXBOX_CONTROL_NAME_PLURAL=Containers\\n\\n#XBUT: Pdf viewer's popup close button\\nPDF_VIEWER_POPUP_CLOSE_BUTTON=Close\\n\\n#XTXT: Pdf viewer's download link\\nPDF_VIEWER_DOWNLOAD_TEXT=Download\\n\\n#XTXT: Text in error placeholder of pdf viewer\\nPDF_VIEWER_PLACEHOLDER_ERROR_TEXT=The PDF file could not be loaded.\\n\\n#XACT: PDF viewer's accessibility label\\nPDF_VIEWER_ACCESSIBILITY_LABEL=PDF Viewer\\n\\n#XTIT: PDF viewer's message box header for source validation error\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_HEADER=Source Validation Error\\n\\n#XMSG: PDF viewer's message box text for source validation error\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_TEXT=Could not validate the source of the file. Show the file anyway?\\n\\n#XBUT: MultiEditField prefilled Item keep\\nMULTI_EDIT_KEEP_TEXT=Keep Existing Values\\n\\n#XBUT: MultiEditField prefilled Item blank\\nMULTI_EDIT_BLANK_TEXT=Leave Blank\\n\\n#XBUT: MultiEditField prefilled Item new\\nMULTI_EDIT_NEW_TEXT=Use Value Help \\n\\n#XTXT: Text representing the Select's picker title text\\nSELECT_PICKER_TITLE_TEXT=Select\\n\"\n\n/***/ }),\n\n/***/ \"428w\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*\n * !UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [], __WEBPACK_UI5_DEFINE_RESULT__ = function () {\n\t\"use strict\";\n\n\t/**\n  * ColumnHeader renderer.\n  * @namespace\n  */\n\n\tvar ColumnHeaderRenderer = {};\n\n\tColumnHeaderRenderer.render = function (oRm, oControl) {\n\t\tvar sControlId = oControl.getId();\n\t\tvar bInteractive = oControl._isInteractive();\n\t\t// container\n\t\toRm.write(\"<div\");\n\t\toRm.writeControlData(oControl);\n\t\tif (bInteractive) {\n\t\t\t// add control in tab chain only if it is interactive\n\t\t\toRm.writeAttribute(\"tabindex\", 0);\n\t\t\toRm.writeAttribute(\"role\", \"button\");\n\t\t\toRm.addClass(\"sapMColumnHeaderFocusable\");\n\t\t\toRm.writeAttributeEscaped(\"aria-labelledby\", sControlId + \"-info\");\n\t\t\toRm.addClass(\"sapMColumnHeaderActive\");\n\t\t}\n\t\toRm.addClass(\"sapMColumnHeader\");\n\t\toRm.writeClasses();\n\t\toRm.write(\">\");\n\n\t\t// render title for control\n\t\tthis.renderText(oRm, oControl);\n\n\t\t// render icons for control\n\t\tthis.renderIcons(oRm, oControl);\n\n\t\t// no special screen reader support for Grid Table\n\t\tif (bInteractive && sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\t// hidden span\n\t\t\toRm.write(\"<span\");\n\t\t\toRm.writeAttributeEscaped(\"id\", sControlId + \"-info\");\n\t\t\toRm.addClass(\"sapUiInvisibleText\");\n\t\t\toRm.writeClasses();\n\t\t\toRm.writeAttributeEscaped(\"aria-hidden\", \"true\");\n\t\t\toRm.write(\">\");\n\t\t\toRm.writeEscaped(oControl.getAccessibilityInfo().description);\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\n\t\t// container end\n\t\toRm.write(\"</div>\");\n\t};\n\n\t// render title\n\tColumnHeaderRenderer.renderText = function (oRm, oControl) {\n\t\t// title container\n\t\toRm.write(\"<div\");\n\t\toRm.addClass(\"sapMColumnHeaderText\");\n\t\toRm.writeClasses();\n\t\toRm.write(\">\");\n\t\toRm.writeEscaped(oControl.getText());\n\n\t\t// title container end\n\t\toRm.write(\"</div>\");\n\t};\n\n\t// render icons\n\tColumnHeaderRenderer.renderIcons = function (oRm, oControl) {\n\t\t// container for control icon(s)\n\t\toRm.write(\"<div\");\n\t\toRm.addClass(\"sapMColumnHeaderIcons\");\n\t\toRm.writeClasses();\n\t\toRm.write(\">\");\n\n\t\tthis.renderSortIcon(oRm, oControl);\n\t\tthis.renderFilterIcon(oRm, oControl);\n\n\t\t// icons container end\n\t\toRm.write(\"</div>\");\n\t};\n\n\tColumnHeaderRenderer.renderSortIcon = function (oRm, oControl) {\n\t\tvar oSortIcon = oControl.getAggregation(\"_sortIcon\");\n\n\t\tif (!oSortIcon) {\n\t\t\treturn;\n\t\t}\n\n\t\toRm.renderControl(oSortIcon);\n\t};\n\n\tColumnHeaderRenderer.renderFilterIcon = function (oRm, oControl) {\n\t\tvar oFilterIcon = oControl.getAggregation(\"_filterIcon\");\n\n\t\tif (!oFilterIcon) {\n\t\t\treturn;\n\t\t}\n\n\t\toRm.renderControl(oFilterIcon);\n\t};\n\n\treturn ColumnHeaderRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"5KZc\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"QlcA\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Table.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"CD64\"), __webpack_require__(\"E8Q9\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"BRbz\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, ListBase, ListItemBase, library, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListKeyboardMode\n\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\t// shortcut for sap.m.ListGrowingDirection\n\tvar ListGrowingDirection = library.ListGrowingDirection;\n\n\t// shortcut for sap.m.BackgroundDesign\n\tvar BackgroundDesign = library.BackgroundDesign;\n\n\t// shortcut for sap.m.PopinLayout\n\tvar PopinLayout = library.PopinLayout;\n\n\t/**\n  * Constructor for a new Table.\n  *\n  * @param {string} [sId] Id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * <code>sap.m.Table</code> control provides a set of sophisticated and convenience functions for responsive table design.\n  * To render the <code>sap.m.Table</code> properly, the order of the <code>columns</code> aggregation should match with the order of the items <code>cells</code> aggregation. Also <code>sap.m.Table</code> requires at least one visible <code>sap.m.Column</code> in <code>columns</code> aggregation.\n  * For mobile devices, the recommended limit of table rows is 100 (based on 4 columns) to assure proper performance. To improve initial rendering on large tables, use the <code>growing</code> feature.\n  *\n  * See section \"{@link topic:5eb6f63e0cc547d0bdc934d3652fdc9b Creating Tables}\" and \"{@link topic:38855e06486f4910bfa6f4485f7c2bac Configuring Responsive Behavior of a Table}\"\n  * in the documentation for an introduction to <code>sap.m.Table</code> control.\n  *\n  *\n  * @extends sap.m.ListBase\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @since 1.16\n  * @alias sap.m.Table\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar Table = ListBase.extend(\"sap.m.Table\", /** @lends sap.m.Table.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Sets the background style of the table. Depending on the theme, you can change the state of the background from <code>Solid</code> to <code>Translucent</code> or to <code>Transparent</code>.\n     */\n\t\t\t\tbackgroundDesign: { type: \"sap.m.BackgroundDesign\", group: \"Appearance\", defaultValue: BackgroundDesign.Translucent },\n\n\t\t\t\t/**\n     * Defines the algorithm to be used to layout the table cells, rows, and columns.\n     * By default, a table is rendered with fixed layout algorithm. This means the horizontal layout only depends on the table's width and the width of the columns, not the contents of the cells. Cells in subsequent rows do not affect column widths. This allows a browser to layout the table faster than the auto table layout since the browser can begin to display the table once the first row has been analyzed.\n     *\n     * When this property is set to <code>false</code>, <code>sap.m.Table</code> is rendered with auto layout algorithm. This means, the width of the table and its cells depends on the contents of the cells. The column width is set by the widest unbreakable content inside the cells. This can make the rendering slow, since the browser needs to read through all the content in the table before determining the final layout.\n     * <b>Note:</b> Since <code>sap.m.Table</code> does not have its own scrollbars, setting <code>fixedLayout</code> to false can force the table to overflow, which may cause visual problems. It is suggested to use this property when a table has a few columns in wide screens or within the horizontal scroll container (e.g <code>sap.m.Dialog</code>) to handle overflow.\n     * In auto layout mode the <code>width</code> property of <code>sap.m.Column</code> is taken into account as a minimum width.\n     * @since 1.22\n     */\n\t\t\t\tfixedLayout: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * Setting this property to <code>true</code> will show an overlay on top of the table content and prevents the user interaction with it.\n     * @since 1.22.1\n     */\n\t\t\t\tshowOverlay: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Enables alternating table row colors.\n     * <b>Note:</b> This property can only be used with the Belize and Belize Deep themes.\n     * Alternate row coloring is not available for the High Contrast Black/White themes.\n     * @since 1.52\n     */\n\t\t\t\talternateRowColors: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines the layout in which the table pop-in rows are rendered.\n     * <b>Note:</b> The <code>demandPopin</code> and <code>minScreenWidth</code> properties of the <code>Column</code> control must be configured appropriately.\n     * @since 1.52\n     */\n\t\t\t\tpopinLayout: { type: \"sap.m.PopinLayout\", group: \"Appearance\", defaultValue: PopinLayout.Block }\n\t\t\t},\n\t\t\taggregations: {\n\n\t\t\t\t/**\n     * Defines the columns of the table.\n     */\n\t\t\t\tcolumns: { type: \"sap.m.Column\", multiple: true, singularName: \"column\" }\n\t\t\t},\n\t\t\tdesignTime: true\n\t\t} });\n\n\t// class name for the navigation items\n\tTable.prototype.sNavItemClass = \"sapMListTblRow\";\n\n\tTable.prototype.init = function () {\n\t\tthis._iItemNeedsColumn = 0;\n\t\tListBase.prototype.init.call(this);\n\t};\n\n\tTable.prototype.onBeforeRendering = function () {\n\t\tListBase.prototype.onBeforeRendering.call(this);\n\t\tthis._ensureColumnsMedia();\n\t\tthis._notifyColumns(\"ItemsRemoved\");\n\t};\n\n\tTable.prototype._ensureColumnsMedia = function () {\n\t\tthis.getColumns().forEach(function (oColumn) {\n\t\t\tif (oColumn._bShouldAddMedia) {\n\t\t\t\toColumn._addMedia();\n\t\t\t}\n\t\t});\n\t};\n\n\tTable.prototype.onAfterRendering = function () {\n\t\tListBase.prototype.onAfterRendering.call(this);\n\t\tthis.updateSelectAllCheckbox();\n\t\tthis._renderOverlay();\n\t};\n\n\tTable.prototype._renderOverlay = function () {\n\t\tvar $this = this.$(),\n\t\t    $overlay = $this.find(\".sapMTableOverlay\"),\n\t\t    bShowOverlay = this.getShowOverlay();\n\t\tif (bShowOverlay && $overlay.length === 0) {\n\t\t\t$overlay = jQuery(\"<div>\").addClass(\"sapUiOverlay sapMTableOverlay\").css(\"z-index\", \"1\");\n\t\t\t$this.append($overlay);\n\t\t} else if (!bShowOverlay) {\n\t\t\t$overlay.remove();\n\t\t}\n\t};\n\n\tTable.prototype.setShowOverlay = function (bShow) {\n\t\tthis.setProperty(\"showOverlay\", bShow, true);\n\t\tthis._renderOverlay();\n\t\treturn this;\n\t};\n\n\tTable.prototype.exit = function () {\n\t\tListBase.prototype.exit.call(this);\n\t\tif (this._selectAllCheckBox) {\n\t\t\tthis._selectAllCheckBox.destroy();\n\t\t\tthis._selectAllCheckBox = null;\n\t\t}\n\t};\n\n\tTable.prototype.destroyItems = function () {\n\t\tthis._notifyColumns(\"ItemsRemoved\");\n\t\treturn ListBase.prototype.destroyItems.apply(this, arguments);\n\t};\n\n\tTable.prototype.removeAllItems = function () {\n\t\tthis._notifyColumns(\"ItemsRemoved\");\n\t\treturn ListBase.prototype.removeAllItems.apply(this, arguments);\n\t};\n\n\tTable.prototype.removeSelections = function () {\n\t\tListBase.prototype.removeSelections.apply(this, arguments);\n\t\tthis.updateSelectAllCheckbox();\n\t\treturn this;\n\t};\n\n\tTable.prototype.selectAll = function () {\n\t\tListBase.prototype.selectAll.apply(this, arguments);\n\t\tthis.updateSelectAllCheckbox();\n\t\treturn this;\n\t};\n\n\t/**\n  * Getter for aggregation columns.\n  *\n  * @param {Boolean} [bSort] set true to get the columns in an order that respects personalization settings\n  * @returns {sap.m.Column[]} columns of the Table\n  * @public\n  */\n\tTable.prototype.getColumns = function (bSort) {\n\t\tvar aColumns = this.getAggregation(\"columns\", []);\n\t\tif (bSort) {\n\t\t\taColumns.sort(function (c1, c2) {\n\t\t\t\treturn c1.getOrder() - c2.getOrder();\n\t\t\t});\n\t\t}\n\t\treturn aColumns;\n\t};\n\n\t/*\n  * This hook method is called if growing feature is enabled and after new page loaded\n  * @overwrite\n  */\n\tTable.prototype.onAfterPageLoaded = function () {\n\t\tthis.updateSelectAllCheckbox();\n\t\tif (this.getAlternateRowColors()) {\n\t\t\tvar $tblBody = this.$(\"tblBody\").removeClass();\n\t\t\t$tblBody.addClass(this._getAlternateRowColorsClass());\n\t\t}\n\t\tListBase.prototype.onAfterPageLoaded.apply(this, arguments);\n\t};\n\n\t/*\n  * This hook method is called from renderer to determine whether items should render or not\n  * @overwrite\n  */\n\tTable.prototype.shouldRenderItems = function () {\n\t\tvar bHasVisibleColumns = this.getColumns().some(function (oColumn) {\n\t\t\treturn oColumn.getVisible();\n\t\t});\n\n\t\tif (!bHasVisibleColumns) {\n\t\t\tjQuery.sap.log.warning(\"No visible columns found in \" + this);\n\t\t}\n\n\t\treturn bHasVisibleColumns;\n\t};\n\n\t// this gets called when item type column requirement is changed\n\tTable.prototype.onItemTypeColumnChange = function (oItem, bNeedsTypeColumn) {\n\t\tthis._iItemNeedsColumn += bNeedsTypeColumn ? 1 : -1;\n\n\t\t// update type column visibility\n\t\tif (this._iItemNeedsColumn == 1 && bNeedsTypeColumn) {\n\t\t\tthis._setTypeColumnVisibility(true);\n\t\t} else if (this._iItemNeedsColumn == 0) {\n\t\t\tthis._setTypeColumnVisibility(false);\n\t\t}\n\t};\n\n\t// this gets called when selected property of the item is changed\n\tTable.prototype.onItemSelectedChange = function (oItem, bSelect) {\n\t\tListBase.prototype.onItemSelectedChange.apply(this, arguments);\n\t\tjQuery.sap.delayedCall(0, this, function () {\n\t\t\tthis.updateSelectAllCheckbox();\n\t\t});\n\t};\n\n\t/*\n  * Returns the <table> DOM reference\n  * @protected\n  */\n\tTable.prototype.getTableDomRef = function () {\n\t\treturn this.getDomRef(\"listUl\");\n\t};\n\n\t/*\n  * Returns items container DOM reference\n  * @overwrite\n  */\n\tTable.prototype.getItemsContainerDomRef = function () {\n\t\treturn this.getDomRef(\"tblBody\");\n\t};\n\n\t/*\n  * Sets DOM References for keyboard navigation\n  * @overwrite\n  */\n\tTable.prototype.setNavigationItems = function (oItemNavigation) {\n\t\tvar $Header = this.$(\"tblHeader\");\n\t\tvar $Footer = this.$(\"tblFooter\");\n\t\tvar $Rows = this.$(\"tblBody\").children(\".sapMLIB\");\n\n\t\tvar aItemDomRefs = $Header.add($Rows).add($Footer).get();\n\t\toItemNavigation.setItemDomRefs(aItemDomRefs);\n\n\t\t// header and footer are in the item navigation but\n\t\t// initial focus should be at the first item row\n\t\tif (oItemNavigation.getFocusedIndex() == -1) {\n\t\t\tif (this.getGrowing() && this.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\toItemNavigation.setFocusedIndex(aItemDomRefs.length - 1);\n\t\t\t} else {\n\t\t\t\toItemNavigation.setFocusedIndex($Header[0] ? 1 : 0);\n\t\t\t}\n\t\t}\n\t};\n\n\t/*\n  * Determines for growing feature to handle all data from scratch\n  * if column merging and growing feature are active at the same time\n  * it is complicated to remerge or demerge columns when we\n  * insert or delete items from the table with growing diff logic\n  *\n  * @protected\n  */\n\tTable.prototype.checkGrowingFromScratch = function () {\n\t\t// no merging for popin case\n\t\tif (this.hasPopin()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check visibility and merge feature of columns\n\t\treturn this.getColumns().some(function (oColumn) {\n\t\t\treturn oColumn.getVisible() && oColumn.getMergeDuplicates();\n\t\t});\n\t};\n\n\t/*\n  * This method is called asynchronously if resize event comes from column\n  * @protected\n  */\n\tTable.prototype.onColumnResize = function (oColumn) {\n\t\t// if list did not have pop-in and will not have pop-in\n\t\t// then we do not need re-render, we can just change display of column\n\t\tif (!this.hasPopin() && !this._mutex) {\n\t\t\tvar hasPopin = this.getColumns().some(function (col) {\n\t\t\t\treturn col.isPopin();\n\t\t\t});\n\n\t\t\tif (!hasPopin) {\n\t\t\t\toColumn.setDisplayViaMedia(this.getTableDomRef());\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._dirty = this._getMediaContainerWidth() || window.innerWidth;\n\t\tif (!this._mutex) {\n\t\t\tvar clean = this._getMediaContainerWidth() || window.innerWidth;\n\t\t\tthis._mutex = true;\n\t\t\tthis.rerender();\n\n\t\t\t// do not re-render if resize event comes so frequently\n\t\t\tjQuery.sap.delayedCall(200, this, function () {\n\t\t\t\t// but check if any event come during the wait-time\n\t\t\t\tif (this._dirty != clean) {\n\t\t\t\t\tthis._dirty = 0;\n\t\t\t\t\tthis.rerender();\n\t\t\t\t}\n\t\t\t\tthis._mutex = false;\n\t\t\t});\n\t\t}\n\t};\n\n\t/*\n  * This method is called from Column control when column visibility is changed via CSS media query\n  *\n  * @param {boolean} bColVisible whether column is now visible or not\n  * @protected\n  */\n\tTable.prototype.setTableHeaderVisibility = function (bColVisible) {\n\t\tif (!this.getDomRef()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// find first visible column\n\t\tvar $headRow = this.$(\"tblHeader\"),\n\t\t    bHeaderVisible = !$headRow.hasClass(\"sapMListTblHeaderNone\"),\n\t\t    aVisibleColumns = $headRow.find(\".sapMListTblCell:visible\"),\n\t\t    $firstVisibleCol = aVisibleColumns.eq(0);\n\n\t\t// check if only one column is visible\n\t\tif (aVisibleColumns.length == 1) {\n\t\t\t$firstVisibleCol.width(\"\"); // cover the space\n\t\t} else {\n\t\t\t// set original width of columns\n\t\t\taVisibleColumns.each(function () {\n\t\t\t\tthis.style.width = this.getAttribute(\"data-sap-width\") || \"\";\n\t\t\t});\n\t\t}\n\n\t\t// update the visible column count and colspan\n\t\t// highlight and navigation columns are getting rendered always\n\t\tthis._colCount = aVisibleColumns.length + 2 + !!sap.m.ListBaseRenderer.ModeOrder[this.getMode()];\n\t\tthis.$(\"tblBody\").find(\".sapMGHLICell\").attr(\"colspan\", this.getColSpan());\n\t\tthis.$(\"nodata-text\").attr(\"colspan\", this.getColCount());\n\n\t\t// force IE to repaint in fixed layout mode\n\t\tif (this.getFixedLayout()) {\n\t\t\tthis._forceStyleChange();\n\t\t}\n\n\t\t// remove or show column header row(thead) according to column visibility value\n\t\tif (!bColVisible && bHeaderVisible) {\n\t\t\t$headRow[0].className = \"sapMListTblRow sapMListTblHeader\";\n\t\t\tthis._headerHidden = false;\n\t\t} else if (bColVisible && !bHeaderVisible && !aVisibleColumns.length) {\n\t\t\t$headRow[0].className = \"sapMListTblHeaderNone\";\n\t\t\tthis._headerHidden = true;\n\t\t}\n\t};\n\n\t// force IE to repaint\n\tTable.prototype._forceStyleChange = function () {\n\t\tif (Device.browser.msie) {\n\t\t\tvar oTableStyle = this.getTableDomRef().style;\n\t\t\toTableStyle.listStyleType = \"circle\";\n\t\t\twindow.setTimeout(function () {\n\t\t\t\toTableStyle.listStyleType = \"none\";\n\t\t\t}, 0);\n\t\t}\n\t};\n\n\t// updates the type column visibility and sets the aria flag\n\tTable.prototype._setTypeColumnVisibility = function (bVisible) {\n\t\tjQuery(this.getTableDomRef()).toggleClass(\"sapMListTblHasNav\", bVisible);\n\t};\n\n\t// notify all columns with given action and param\n\tTable.prototype._notifyColumns = function (sAction, vParam1, vParam2) {\n\t\tthis.getColumns().forEach(function (oColumn) {\n\t\t\toColumn[\"on\" + sAction](vParam1, vParam2);\n\t\t});\n\t};\n\n\t/**\n  * This method takes care of the select all checkbox for table lists. It\n  * will automatically be created on demand and returned when needed\n  *\n  * @private\n  * @return {sap.m.CheckBox} reference to the internal select all checkbox\n  */\n\tTable.prototype._getSelectAllCheckbox = function () {\n\t\treturn this._selectAllCheckBox || (this._selectAllCheckBox = new (__webpack_require__(\"Q3pR\"))({\n\t\t\tid: this.getId(\"sa\"),\n\t\t\tactiveHandling: false\n\t\t}).addStyleClass('sapMLIBSelectM').setParent(this, null, true).attachSelect(function () {\n\t\t\tif (this._selectAllCheckBox.getSelected()) {\n\t\t\t\tthis.selectAll(true);\n\t\t\t} else {\n\t\t\t\tthis.removeSelections(false, true);\n\t\t\t}\n\t\t}, this).setTabIndex(-1));\n\t};\n\n\t/*\n  * Internal public function to update the selectAll checkbox\n  * according to the current selection on the list items.\n  *\n  * @protected\n  */\n\tTable.prototype.updateSelectAllCheckbox = function () {\n\t\t// checks if the list is in multi select mode and has selectAll checkbox\n\t\tif (this._selectAllCheckBox && this.getMode() === \"MultiSelect\") {\n\t\t\tvar aItems = this.getItems(),\n\t\t\t    iSelectedItemCount = this.getSelectedItems().length,\n\t\t\t    iSelectableItemCount = aItems.filter(function (oItem) {\n\t\t\t\treturn oItem.isSelectable();\n\t\t\t}).length;\n\n\t\t\t// set state of the checkbox by comparing item length and selected item length\n\t\t\tthis._selectAllCheckBox.setSelected(aItems.length > 0 && iSelectedItemCount == iSelectableItemCount);\n\t\t}\n\t};\n\n\t/**\n  * This method is a hook for the RenderManager that gets called\n  * during the rendering of child Controls. It allows to add,\n  * remove and update existing accessibility attributes (ARIA) of\n  * those controls.\n  *\n  * @param {sap.ui.core.Control} oElement - The Control that gets rendered by the RenderManager\n  * @param {Object} mAriaProps - The mapping of \"aria-\" prefixed attributes\n  * @protected\n  */\n\tTable.prototype.enhanceAccessibilityState = function (oElement, mAriaProps) {\n\t\tif (oElement == this._selectAllCheckBox) {\n\t\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\t\tmAriaProps.label = oBundle.getText(\"TABLE_CHECKBOX_SELECT_ALL\");\n\t\t}\n\t};\n\n\t/*\n  * Returns colspan for all columns except navigation\n  * Because we render navigation always even it is empty\n  * @protected\n  */\n\tTable.prototype.getColSpan = function () {\n\t\treturn (this._colCount || 1) - 1;\n\t};\n\n\t/*\n  * Returns the number of total columns\n  * @protected\n  */\n\tTable.prototype.getColCount = function () {\n\t\treturn this._colCount || 0;\n\t};\n\n\t/*\n  * Returns whether or not the table is in pop-in mode\n  * @protected\n  */\n\tTable.prototype.hasPopin = function () {\n\t\treturn !!this._hasPopin;\n\t};\n\n\t/*\n  * Returns whether given event is initialized within header row or not\n  * @protected\n  */\n\tTable.prototype.isHeaderRowEvent = function (oEvent) {\n\t\tvar $Header = this.$(\"tblHeader\");\n\t\treturn !!jQuery(oEvent.target).closest($Header, this.getTableDomRef()).length;\n\t};\n\n\t/*\n  * Returns whether give event is initialized within footer row or not\n  * @protected\n  */\n\tTable.prototype.isFooterRowEvent = function (oEvent) {\n\t\tvar $Footer = this.$(\"tblFooter\");\n\t\treturn !!jQuery(oEvent.target).closest($Footer, this.getTableDomRef()).length;\n\t};\n\n\t// returns accessibility role\n\tTable.prototype.getAccessibilityType = function () {\n\t\treturn sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"ACC_CTR_TYPE_TABLE\");\n\t};\n\n\tTable.prototype._setHeaderAnnouncement = function () {\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\"),\n\t\t    sAnnouncement = oBundle.getText(\"ACC_CTR_TYPE_HEADER_ROW\") + \" \";\n\n\t\tif (this.isAllSelectableSelected()) {\n\t\t\tsAnnouncement += oBundle.getText(\"LIST_ALL_SELECTED\");\n\t\t}\n\n\t\tthis.getColumns(true).forEach(function (oColumn, i) {\n\t\t\t// only set the header announcement for visible columns\n\t\t\tif (!oColumn.getVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oHeader = oColumn.getHeader();\n\t\t\tif (oHeader && oHeader.getVisible()) {\n\t\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oHeader) + \" \";\n\t\t\t}\n\t\t});\n\n\t\tthis.updateInvisibleText(sAnnouncement);\n\t};\n\n\tTable.prototype._setFooterAnnouncement = function () {\n\t\tvar sAnnouncement = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"ACC_CTR_TYPE_FOOTER_ROW\") + \" \";\n\t\tthis.getColumns(true).forEach(function (oColumn, i) {\n\t\t\t// only set the footer announcement for visible columns\n\t\t\tif (!oColumn.getVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oFooter = oColumn.getFooter();\n\t\t\tif (oFooter && oFooter.getVisible()) {\n\t\t\t\t// announce header as well\n\t\t\t\tvar oHeader = oColumn.getHeader();\n\t\t\t\tif (oHeader && oHeader.getVisible()) {\n\t\t\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oHeader) + \" \";\n\t\t\t\t}\n\n\t\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oFooter) + \" \";\n\t\t\t}\n\t\t});\n\n\t\tthis.updateInvisibleText(sAnnouncement);\n\t};\n\n\t// keyboard handling\n\tTable.prototype.onsapspace = function (oEvent) {\n\t\tif (oEvent.isMarked()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// toggle select all header checkbox and fire its event\n\t\tif (this._selectAllCheckBox && oEvent.target === this.getDomRef(\"tblHeader\")) {\n\t\t\tthis._selectAllCheckBox.setSelected(!this._selectAllCheckBox.getSelected()).fireSelect();\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// Handle tab key\n\tTable.prototype.onsaptabnext = function (oEvent) {\n\t\tif (oEvent.isMarked() || this.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $Row = jQuery();\n\t\tif (oEvent.target.id == this.getId(\"nodata\")) {\n\t\t\t$Row = this.$(\"nodata\");\n\t\t} else if (this.isHeaderRowEvent(oEvent)) {\n\t\t\t$Row = this.$(\"tblHeader\");\n\t\t} else if (this.isFooterRowEvent(oEvent)) {\n\t\t\t$Row = this.$(\"tblFooter\");\n\t\t}\n\n\t\tvar oLastTabbableDomRef = $Row.find(\":sapTabbable\").get(-1) || $Row[0];\n\t\tif (oEvent.target === oLastTabbableDomRef) {\n\t\t\tthis.forwardTab(true);\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// Handle shift-tab key\n\tTable.prototype.onsaptabprevious = function (oEvent) {\n\t\tif (oEvent.isMarked() || this.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sTargetId = oEvent.target.id;\n\t\tif (sTargetId == this.getId(\"nodata\") || sTargetId == this.getId(\"tblHeader\") || sTargetId == this.getId(\"tblFooter\")) {\n\t\t\tthis.forwardTab(false);\n\t\t} else if (sTargetId == this.getId(\"trigger\")) {\n\t\t\tthis.focusPrevious();\n\t\t\toEvent.preventDefault();\n\t\t}\n\t};\n\n\tTable.prototype.onfocusin = function (oEvent) {\n\t\tvar oTarget = oEvent.target;\n\t\tif (oTarget.id === this.getId(\"tblHeader\")) {\n\t\t\tthis._setHeaderAnnouncement();\n\t\t} else if (oTarget.id === this.getId(\"tblFooter\")) {\n\t\t\tthis._setFooterAnnouncement();\n\t\t}\n\n\t\tif (this._bThemeChanged) {\n\t\t\t// force IE to repaint if theme changed\n\t\t\tthis._bThemeChanged = false;\n\t\t\tthis._forceStyleChange();\n\t\t}\n\n\t\tListBase.prototype.onfocusin.call(this, oEvent);\n\t};\n\n\t// event listener for theme changed\n\tTable.prototype.onThemeChanged = function () {\n\t\tthis._bThemeChanged = true;\n\t};\n\n\t// returns the class that should be added to tbody element\n\tTable.prototype._getAlternateRowColorsClass = function () {\n\t\tif (this.isGrouped()) {\n\t\t\treturn \"sapMListTblAlternateRowColorsGrouped\";\n\t\t}\n\n\t\tif (this.hasPopin()) {\n\t\t\treturn \"sapMListTblAlternateRowColorsPopin\";\n\t\t}\n\n\t\treturn \"sapMListTblAlternateRowColors\";\n\t};\n\n\treturn Table;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.TableRenderer\", __webpack_require__(\"Riks\"));\n\n/***/ }),\n\n/***/ \"5iCT\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"ifZV\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.NavContainer.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"20/6\"), __webpack_require__(\"Mays\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"y0pd\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, library, Control, RenderManager, Device) {\n\t\"use strict\";\n\n\t/**\n  * Constructor for a new NavContainer.\n  *\n  * @param {string} [sId] id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] initial settings for the new control\n  *\n  * @class\n  * The NavContainer control handles hierarchic navigation between Pages or other fullscreen controls.\n  *\n  * All children of this control will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}\n  * @extends sap.ui.core.Control\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.NavContainer\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\n\tvar NavContainer = Control.extend(\"sap.m.NavContainer\", /** @lends sap.m.NavContainer.prototype */{\n\t\tmetadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Determines whether the initial focus is set automatically on first rendering and after navigating to a new page.\n     * This is useful when on touch devices the keyboard pops out due to the focus being automatically set on an input field.\n     * If necessary the \"afterShow\" event can be used to focus another element.\n     *\n     * <b>Note:</b>  The following scenarios are possible, depending on where the focus\n     * was before navigation to a new page:\n     * <ul><li>If <code>autoFocus</code> is set to <code>true</code> and the focus was\n     * inside the current page, the focus will be moved automatically on the new page.</li>\n     * <li>If <code>autoFocus</code> is set to <code>false</code> and the focus was inside\n     * the current page, the focus will disappear.\n     * <li>If the focus was outside the current page, after the navigation it will remain\n     * unchanged regardless of what is set to the <code>autoFocus</code> property.</li></ul>\n     *\n     * @since 1.30\n     */\n\t\t\t\tautoFocus: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * The height of the NavContainer. Can be changed when the NavContainer should not cover the whole available area.\n     */\n\t\t\t\theight: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: '100%' },\n\n\t\t\t\t/**\n     * The width of the NavContainer. Can be changed when the NavContainer should not cover the whole available area.\n     */\n\t\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: '100%' },\n\n\t\t\t\t/**\n     * Whether the NavContainer is visible.\n     */\n\t\t\t\tvisible: { type: \"boolean\", group: \"Appearance\", defaultValue: true },\n\n\t\t\t\t/**\n     * The type of the transition/animation to apply when \"to()\" is called without defining a transition type to use. The default is \"slide\". Other options are: \"fade\", \"flip\" and \"show\" - and the names of any registered custom transitions.\n     * @since 1.7.1\n     */\n\t\t\t\tdefaultTransitionName: { type: \"string\", group: \"Appearance\", defaultValue: \"slide\" }\n\t\t\t},\n\t\t\tdefaultAggregation: \"pages\",\n\t\t\taggregations: {\n\n\t\t\t\t/**\n     * The content entities between which this NavContainer navigates. These can be of type sap.m.Page, sap.ui.core.View, sap.m.Carousel or any other control with fullscreen/page semantics.\n     *\n     * These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}\n     */\n\t\t\t\tpages: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"page\" }\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n     * This association can be used to define which page is displayed initially. If the given page does not exist or no page is given, the first page which has been added is considered as initial page.\n     * This value should be set initially and not set/modified while the application is running.\n     *\n     * This could be used not only for the initial display, but also if the user wants to navigate \"up to top\", so this page serves as a sort of \"home/root page\".\n     */\n\t\t\t\tinitialPage: { type: \"sap.ui.core.Control\", multiple: false }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * The event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet.\n     * This event can be aborted by the application with preventDefault(), which means that there will be no navigation.\n     * @since 1.7.1\n     */\n\t\t\t\tnavigate: {\n\t\t\t\t\tallowPreventDefault: true,\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The page which was shown before the current navigation.\n       */\n\t\t\t\t\t\tfrom: { type: \"sap.ui.core.Control\" },\n\n\t\t\t\t\t\t/**\n       * The ID of the page which was shown before the current navigation.\n       */\n\t\t\t\t\t\tfromId: { type: \"string\" },\n\n\t\t\t\t\t\t/**\n       * The page which will be shown after the current navigation.\n       */\n\t\t\t\t\t\tto: { type: \"sap.ui.core.Control\" },\n\n\t\t\t\t\t\t/**\n       * The ID of the page which will be shown after the current navigation.\n       */\n\t\t\t\t\t\ttoId: { type: \"string\" },\n\n\t\t\t\t\t\t/**\n       * Whether the \"to\" page (more precisely: a control with the ID of the page which is currently navigated to) has not been shown/navigated to before.\n       */\n\t\t\t\t\t\tfirstTime: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * Whether this is a forward navigation, triggered by \"to()\".\n       */\n\t\t\t\t\t\tisTo: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * Whether this is a back navigation, triggered by \"back()\".\n       */\n\t\t\t\t\t\tisBack: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * Whether this is a navigation to the root page, triggered by \"backToTop()\".\n       */\n\t\t\t\t\t\tisBackToTop: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * Whether this was a navigation to a specific page, triggered by \"backToPage()\".\n       * @since 1.7.2\n       */\n\t\t\t\t\t\tisBackToPage: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * How the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".\n       */\n\t\t\t\t\t\tdirection: { type: \"string\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * The event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event.\n     * @since 1.7.1\n     */\n\t\t\t\tafterNavigate: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The page which had been shown before navigation.\n       */\n\t\t\t\t\t\tfrom: { type: \"sap.ui.core.Control\" },\n\n\t\t\t\t\t\t/**\n       * The ID of the page which had been shown before navigation.\n       */\n\t\t\t\t\t\tfromId: { type: \"string\" },\n\n\t\t\t\t\t\t/**\n       * The page which is now shown after navigation.\n       */\n\t\t\t\t\t\tto: { type: \"sap.ui.core.Control\" },\n\n\t\t\t\t\t\t/**\n       * The ID of the page which is now shown after navigation.\n       */\n\t\t\t\t\t\ttoId: { type: \"string\" },\n\n\t\t\t\t\t\t/**\n       * Whether the \"to\" page (more precisely: a control with the ID of the page which has been navigated to) had not been shown/navigated to before.\n       */\n\t\t\t\t\t\tfirstTime: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * Whether was a forward navigation, triggered by \"to()\".\n       */\n\t\t\t\t\t\tisTo: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * Whether this was a back navigation, triggered by \"back()\".\n       */\n\t\t\t\t\t\tisBack: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * Whether this was a navigation to the root page, triggered by \"backToTop()\".\n       */\n\t\t\t\t\t\tisBackToTop: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * Whether this was a navigation to a specific page, triggered by \"backToPage()\".\n       * @since 1.7.2\n       */\n\t\t\t\t\t\tisBackToPage: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * How the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".\n       */\n\t\t\t\t\t\tdirection: { type: \"string\" }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tvar bUseAnimations = sap.ui.getCore().getConfiguration().getAnimation(),\n\t    fnGetDelay = function fnGetDelay(iDelay) {\n\t\treturn bUseAnimations ? iDelay : 0;\n\t};\n\n\tvar fnIsPageParentActive = function fnIsPageParentActive(oPage) {\n\t\tvar oParent = oPage && oPage.getParent();\n\t\treturn oParent && oParent.isActive();\n\t};\n\n\tNavContainer.prototype.init = function () {\n\t\tthis._pageStack = [];\n\t\tthis._aQueue = [];\n\t\tthis._mVisitedPages = {};\n\t\tthis._mFocusObject = {};\n\t\tthis._iTransitionsCompleted = 0; // to track proper callback at the end of transitions\n\t\tthis._bNeverRendered = true;\n\t\tthis._bNavigating = false;\n\t\tthis._bRenderingInProgress = false;\n\t};\n\n\tNavContainer.prototype.exit = function () {\n\t\tthis._mFocusObject = null; // allow partial garbage collection when app code leaks the NavContainer (based on a real scenario)\n\t};\n\n\tNavContainer.prototype.onBeforeRendering = function () {\n\t\tvar pageToRenderFirst = this.getCurrentPage();\n\t\t// for the very first rendering\n\t\tif (this._bNeverRendered && pageToRenderFirst) {\n\t\t\t// will be set to false after rendering\n\n\t\t\t// special handling for the page which is the first one which is rendered in this NavContainer\n\t\t\tvar pageId = pageToRenderFirst.getId();\n\n\t\t\tif (!this._mVisitedPages[pageId]) {\n\t\t\t\t// events could already be fired by initial \"to()\" call\n\t\t\t\tthis._mVisitedPages[pageId] = true;\n\n\t\t\t\tvar oNavInfo = {\n\t\t\t\t\tfrom: null,\n\t\t\t\t\tfromId: null,\n\t\t\t\t\tto: pageToRenderFirst,\n\t\t\t\t\ttoId: pageId,\n\t\t\t\t\tfirstTime: true,\n\t\t\t\t\tisTo: false,\n\t\t\t\t\tisBack: false,\n\t\t\t\t\tisBackToPage: false,\n\t\t\t\t\tisBackToTop: false,\n\t\t\t\t\tdirection: \"initial\"\n\t\t\t\t};\n\n\t\t\t\tvar oEvent = jQuery.Event(\"BeforeFirstShow\", oNavInfo);\n\t\t\t\toEvent.srcControl = this;\n\t\t\t\toEvent.data = this._oToDataBeforeRendering || {};\n\t\t\t\toEvent.backData = {};\n\t\t\t\tpageToRenderFirst._handleEvent(oEvent);\n\n\t\t\t\toEvent = jQuery.Event(\"BeforeShow\", oNavInfo);\n\t\t\t\toEvent.srcControl = this;\n\t\t\t\toEvent.data = this._oToDataBeforeRendering || {};\n\t\t\t\toEvent.backData = {};\n\t\t\t\tpageToRenderFirst._handleEvent(oEvent);\n\t\t\t}\n\t\t}\n\t};\n\n\tNavContainer.prototype.onAfterRendering = function () {\n\t\tvar pageToRenderFirst = this.getCurrentPage(),\n\t\t    focusObject,\n\t\t    oNavInfo,\n\t\t    pageId,\n\t\t    oEvent;\n\n\t\t// for the very first rendering\n\t\tif (this._bNeverRendered && pageToRenderFirst) {\n\t\t\tthis._bNeverRendered = false;\n\t\t\tdelete this._bNeverRendered;\n\n\t\t\t// special handling for the page which is the first one which is rendered in this NavContainer\n\t\t\tpageId = pageToRenderFirst.getId();\n\n\t\t\t// set focus to first focusable object\n\t\t\t// when NavContainer is inside a popup, the focus is managed by the popup and shouldn't be set here\n\t\t\tif (!this._isInsideAPopup() && this.getAutoFocus()) {\n\t\t\t\tfocusObject = NavContainer._applyAutoFocusTo(pageId);\n\t\t\t\tif (focusObject) {\n\t\t\t\t\tthis._mFocusObject[pageId] = focusObject;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toNavInfo = {\n\t\t\t\tfrom: null,\n\t\t\t\tfromId: null,\n\t\t\t\tto: pageToRenderFirst,\n\t\t\t\ttoId: pageId,\n\t\t\t\tfirstTime: true,\n\t\t\t\tisTo: false,\n\t\t\t\tisBack: false,\n\t\t\t\tisBackToTop: false,\n\t\t\t\tisBackToPage: false,\n\t\t\t\tdirection: \"initial\"\n\t\t\t};\n\n\t\t\toEvent = jQuery.Event(\"AfterShow\", oNavInfo);\n\t\t\toEvent.srcControl = this;\n\t\t\toEvent.data = this._oToDataBeforeRendering || {};\n\t\t\toEvent.backData = {};\n\t\t\tpageToRenderFirst._handleEvent(oEvent);\n\t\t}\n\t};\n\n\t/**\n  * Returns the page that should act as initial page - either the one designated as such, or, if it does not exist,\n  * the first page (index 0 in the aggregation). Returns null if no page is aggregated.\n  *\n  * @private\n  */\n\tNavContainer.prototype._getActualInitialPage = function () {\n\t\tvar pageId = this.getInitialPage();\n\t\tif (pageId) {\n\t\t\tvar page = sap.ui.getCore().byId(pageId);\n\t\t\tif (page) {\n\t\t\t\treturn page;\n\t\t\t} else {\n\t\t\t\tjQuery.sap.log.error(\"NavContainer: control with ID '\" + pageId + \"' was set as 'initialPage' but was not found as a DIRECT child of this NavContainer (number of current children: \" + this.getPages().length + \").\");\n\t\t\t}\n\t\t}\n\t\tvar pages = this.getPages();\n\t\treturn pages.length > 0 ? pages[0] : null;\n\t};\n\n\t//*** API methods ***\n\n\n\t/**\n  * Returns the control with the given ID from the \"pages\" aggregation (if available).\n  *\n  * @param {string} sId\n  *         The ID of the aggregated control to find.\n  * @type sap.ui.core.Control\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.getPage = function (pageId) {\n\t\tvar aPages = this.getPages();\n\t\tfor (var i = 0; i < aPages.length; i++) {\n\t\t\tif (aPages[i] && aPages[i].getId() == pageId) {\n\t\t\t\treturn aPages[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tNavContainer.prototype._ensurePageStackInitialized = function (data) {\n\t\tif (this._pageStack.length === 0) {\n\t\t\tvar page = this._getActualInitialPage(); // TODO: with bookmarking / deep linking this is the initial, but not the \"home\"/root page\n\t\t\tif (page) {\n\t\t\t\tthis._pageStack.push({ id: page.getId(), isInitial: true, data: data || {} });\n\t\t\t}\n\t\t}\n\t\treturn this._pageStack;\n\t};\n\n\t/**\n  * Returns the currently displayed page-level control. Note: it is not necessarily an instance of sap.m.Page, but it could also be an sap.ui.core.View, sap.m.Carousel, or whatever is aggregated.\n  *\n  * Returns undefined if no page has been added yet.\n  *\n  * @type sap.ui.core.Control\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.getCurrentPage = function () {\n\t\tvar stack = this._ensurePageStackInitialized();\n\n\t\tif (stack.length >= 1) {\n\t\t\treturn this.getPage(stack[stack.length - 1].id);\n\t\t} else {\n\t\t\tjQuery.sap.log.warning(this + \": page stack is empty but should have been initialized - application failed to provide a page to display\");\n\t\t\treturn undefined;\n\t\t}\n\t};\n\n\t/**\n  * Returns the previous page (the page from which the user drilled down to the current page with \"to()\").\n  * Note: this is not the page which the user has seen before, but the page which is the target of the next \"back()\" navigation.\n  * If there is no previous page, \"undefined\" is returned.\n  *\n  * @type sap.ui.core.Control\n  * @public\n  * @since 1.7.1\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.getPreviousPage = function () {\n\t\tvar stack = this._ensurePageStackInitialized();\n\n\t\tif (stack.length > 1) {\n\t\t\treturn this.getPage(stack[stack.length - 2].id);\n\t\t} else if (stack.length == 1) {\n\t\t\t// the current one is the only page on the stack\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tjQuery.sap.log.warning(this + \": page stack is empty but should have been initialized - application failed to provide a page to display\");\n\t\t}\n\t};\n\n\t/**\n  * Returns whether the current page is the top/initial page.\n  *\n  * Note: going to the initial page again with a row of \"to\" navigations causes the initial page to be displayed again, but logically one is not at the top level, so this method returns \"false\" in this case.\n  *\n  * @type boolean\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.currentPageIsTopPage = function () {\n\t\tvar stack = this._ensurePageStackInitialized();\n\t\treturn stack.length === 1;\n\t};\n\n\t/**\n  * Inserts the page/control with the specified ID into the navigation history stack of the NavContainer.\n  *\n  * This can be used for deep-linking when the user directly reached a drilldown detail page using a bookmark and then wants to navigate up in the drilldown hierarchy. Normally such a back navigation would not be possible because there is no previous page in the NavContainer's history stack.\n  *\n  * @param {string} sPageId\n  *         The ID of the control/page/screen which is inserted into the history stack. The respective control must be aggregated by the NavContainer, otherwise this will cause an error.\n  * @param {string} [sTransitionName]\n  *         The type of the transition/animation which would have been used to navigate from the (inserted) previous page to the current page. When navigating back, the inverse animation will be applied.\n  *         This parameter can be omitted; then the default is \"slide\" (horizontal movement from the right).\n  * @param {object} [oData]\n  *         This optional object can carry any payload data which would have been given to the inserted previous page if the user would have done a normal forward navigation to it.\n  * @type sap.m.NavContainer\n  * @public\n  * @since 1.16.1\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.insertPreviousPage = function (pageId, transitionName, data) {\n\t\tvar stack = this._ensurePageStackInitialized();\n\t\tif (this._pageStack.length > 0) {\n\t\t\tvar index = stack.length - 1;\n\t\t\tvar pageInfo = { id: pageId, transition: transitionName, data: data };\n\t\t\tif (index === 0) {\n\t\t\t\tpageInfo.isInitial = true;\n\t\t\t\tdelete stack[stack.length - 1].isInitial;\n\t\t\t}\n\t\t\tstack.splice(index, 0, pageInfo);\n\t\t} else {\n\t\t\tjQuery.sap.log.warning(this + \": insertPreviousPage called with empty page stack; ignoring\");\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tNavContainer._applyAutoFocusTo = function (sId) {\n\t\tvar focusSubjectDomRef = jQuery.sap.byId(sId).firstFocusableDomRef();\n\t\tif (focusSubjectDomRef) {\n\t\t\tjQuery.sap.focus(focusSubjectDomRef);\n\t\t}\n\n\t\treturn focusSubjectDomRef;\n\t};\n\n\tNavContainer.prototype._applyAutoFocus = function (oNavInfo) {\n\t\tvar sPageId = oNavInfo.toId,\n\t\t    domRefRememberedFocusSubject,\n\t\t    bAutoFocus = this.getAutoFocus(),\n\t\t    bNavigatingBackToPreviousLocation = oNavInfo.isBack || oNavInfo.isBackToPage || oNavInfo.isBackToTop;\n\n\t\t// BCP: 1780071998 - If focus is not inside the From page we don't do any focus manipulation\n\t\tif (!oNavInfo.bFocusInsideFromPage) {\n\t\t\treturn;\n\t\t}\n\n\t\t// check navigation type (backward or forward)\n\t\tif (bNavigatingBackToPreviousLocation) {\n\t\t\t// set focus to the remembered focus object if available\n\t\t\t// if no focus was set set focus to first focusable object in \"to page\"\n\t\t\tdomRefRememberedFocusSubject = this._mFocusObject != null ? this._mFocusObject[sPageId] : null;\n\t\t\tif (domRefRememberedFocusSubject) {\n\t\t\t\tjQuery.sap.focus(domRefRememberedFocusSubject);\n\t\t\t} else if (bAutoFocus) {\n\t\t\t\tNavContainer._applyAutoFocusTo(sPageId);\n\t\t\t}\n\t\t} else if (oNavInfo.isTo && bAutoFocus) {\n\t\t\t// set focus to first focusable object in \"to page\"\n\t\t\tNavContainer._applyAutoFocusTo(sPageId);\n\t\t}\n\t};\n\n\tNavContainer.prototype._afterTransitionCallback = function (oNavInfo, oData, oBackData) {\n\t\tvar oEvent = jQuery.Event(\"AfterShow\", oNavInfo);\n\t\toEvent.data = oData || {};\n\t\toEvent.backData = oBackData || {};\n\t\toEvent.srcControl = this; // store the element on the event (aligned with jQuery syntax)\n\t\toNavInfo.to._handleEvent(oEvent);\n\n\t\toEvent = jQuery.Event(\"AfterHide\", oNavInfo);\n\t\toEvent.srcControl = this; // store the element on the event (aligned with jQuery syntax)\n\t\toNavInfo.from._handleEvent(oEvent);\n\n\t\tthis._iTransitionsCompleted++;\n\t\tthis._bNavigating = false;\n\t\tthis._applyAutoFocus(oNavInfo);\n\t\tthis.fireAfterNavigate(oNavInfo);\n\t\t// TODO: destroy HTML? Remember to destroy ALL HTML of several pages when backToTop has been called\n\n\t\tjQuery.sap.log.info(this + \": _afterTransitionCallback called, to: \" + oNavInfo.toId);\n\n\t\tif (oNavInfo.to.hasStyleClass(\"sapMNavItemHidden\")) {\n\t\t\tjQuery.sap.log.warning(this.toString() + \": target page '\" + oNavInfo.toId + \"' still has CSS class 'sapMNavItemHidden' after transition. This should not be the case, please check the preceding log statements.\");\n\t\t\toNavInfo.to.removeStyleClass(\"sapMNavItemHidden\");\n\t\t}\n\n\t\tthis._dequeueNavigation();\n\t};\n\n\tNavContainer.prototype._dequeueNavigation = function () {\n\t\tvar fnNavigate = this._aQueue.shift();\n\n\t\tif (typeof fnNavigate === \"function\") {\n\t\t\tfnNavigate();\n\t\t}\n\t};\n\n\t/**\n  * Checks whether a page is in the history stack or not\n  * @param pageId\n  * @returns {boolean}\n  * @private\n  */\n\tNavContainer.prototype._isInPageStack = function (pageId) {\n\t\treturn this._pageStack.some(function (oPage) {\n\t\t\treturn oPage.id === pageId;\n\t\t});\n\t};\n\n\t/**\n  * Navigates back to a page, if the page is in the history stack. Otherwise, navigates to it.\n  *\n  * This method can be used to navigate to previously visited pages which are however not in the stack any more.\n  * Such a situation can be observed when navigating back to a page several levels back.\n  * @param pageId\n  * @param transitionName\n  * @param data\n  * @param oTransitionParameters\n  * @private\n  */\n\tNavContainer.prototype._safeBackToPage = function (pageId, transitionName, data, oTransitionParameters) {\n\t\tvar oCurrentPage;\n\n\t\tif (!this.getPage(pageId)) {\n\t\t\treturn this;\n\t\t}\n\n\t\toCurrentPage = this.getCurrentPage();\n\t\tif (oCurrentPage && oCurrentPage.getId() === pageId) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this._isInPageStack(pageId)) {\n\t\t\treturn this.backToPage(pageId, data, oTransitionParameters);\n\t\t} else {\n\t\t\treturn this.to(pageId, transitionName, data, oTransitionParameters);\n\t\t}\n\t};\n\n\t/**\n  * Check if the current focused element is a HTML child element of the control passed.\n  * @param {sap.ui.core.Control} oControl instance of control\n  * @returns {boolean} If the focus is in one of the control's child HTML elements\n  * @private\n  */\n\tNavContainer.prototype._isFocusInControl = function (oControl) {\n\t\treturn jQuery(document.activeElement).closest(oControl.$()).length > 0;\n\t};\n\n\t/**\n  * Navigates to the next page (with drill-down semantic) with the given (or default) animation. This creates a new history item inside the NavContainer and allows going back.\n  *\n  * Note that any modifications to the target page (like setting its title, or anything else that could cause a re-rendering) should be done BEFORE calling to(), in order to avoid unwanted side effects, e.g. related to the page animation.\n  *\n  * Available transitions currently include \"slide\" (default), \"fade\", \"flip\", and \"show\". None of these is currently making use of any given transitionParameters.\n  *\n  * Calling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given data object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property.\n  *\n  * @param {string} sPageId\n  *         The screen to which drilldown should happen. The ID or the control itself can be given.\n  * @param {string} [sTransitionName]\n  *         The type of the transition/animation to apply. This parameter can be omitted; then the default is \"slide\" (horizontal movement from the right).\n  *         Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n  *\n  *         None of the standard transitions is currently making use of any given transition parameters.\n  * @param {object} [oData]\n  *         Since version 1.7.1. This optional object can carry any payload data which should be made available to the target page. The \"beforeShow\" event on the target page will contain this data object as \"data\" property.\n  *\n  *         Use case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n  *\n  *         When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.\n  * @param {object} [oTransitionParameters]\n  *         Since version 1.7.1. This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.\n  *\n  *         For a proper parameter order, the \"data\" parameter must be given when the \"transitionParameters\" parameter is used. (it can be given as \"null\")\n  *\n  *         NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n  *         The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.\n  * @type sap.m.NavContainer\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.to = function (pageId, transitionName, data, oTransitionParameters, bFromQueue) {\n\t\tif (pageId instanceof Control) {\n\t\t\tpageId = pageId.getId();\n\t\t}\n\n\t\t// fix parameters\n\t\tif (typeof transitionName !== \"string\") {\n\t\t\t// transitionName is omitted, shift parameters\n\t\t\toTransitionParameters = data;\n\t\t\tdata = transitionName;\n\t\t}\n\t\ttransitionName = transitionName || this.getDefaultTransitionName();\n\t\toTransitionParameters = oTransitionParameters || {};\n\t\tdata = data || {};\n\t\tvar oFromPageInfo = { id: pageId, transition: transitionName, data: data };\n\n\t\t// make sure the initial page is on the stack\n\t\tthis._ensurePageStackInitialized(data);\n\n\t\t//add to the queue before checking the current page, because this might change\n\t\tif (this._bNavigating) {\n\t\t\tjQuery.sap.log.info(this.toString() + \": Cannot navigate to page \" + pageId + \" because another navigation is already in progress. - navigation will be executed after the previous one\");\n\n\t\t\tthis._aQueue.push(jQuery.proxy(function () {\n\t\t\t\tthis.to(pageId, transitionName, data, oTransitionParameters, true);\n\t\t\t}, this));\n\n\t\t\treturn this;\n\t\t}\n\n\t\t// If to is called before rendering, remember the data so we can pass it to the events as soon as the navContainer gets rendered\n\t\tif (this._bNeverRendered) {\n\t\t\tthis._oToDataBeforeRendering = data;\n\t\t}\n\n\t\tvar oFromPage = this.getCurrentPage();\n\t\tif (oFromPage && oFromPage.getId() === pageId) {\n\t\t\t// cannot navigate to the page that is already current\n\t\t\tjQuery.sap.log.warning(this.toString() + \": Cannot navigate to page \" + pageId + \" because this is the current page.\");\n\t\t\tif (bFromQueue) {\n\t\t\t\tthis._dequeueNavigation();\n\t\t\t}\n\n\t\t\t// In an application when the first page is loaded its transition is not set and we set it here.\n\t\t\tif (this._pageStack.length === 1) {\n\t\t\t\tthis._pageStack[0].transition = oFromPageInfo.transition;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvar oToPage = this.getPage(pageId);\n\n\t\tif (oToPage) {\n\t\t\tif (!oFromPage) {\n\t\t\t\tjQuery.sap.log.warning(\"Navigation triggered to page with ID '\" + pageId + \"', but the current page is not known/aggregated by \" + this);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar oNavInfo = {\n\t\t\t\tfrom: oFromPage,\n\t\t\t\tfromId: oFromPage.getId(),\n\t\t\t\tto: oToPage,\n\t\t\t\ttoId: pageId,\n\t\t\t\tfirstTime: !this._mVisitedPages[pageId],\n\t\t\t\tisTo: true,\n\t\t\t\tisBack: false,\n\t\t\t\tisBackToTop: false,\n\t\t\t\tisBackToPage: false,\n\t\t\t\tdirection: \"to\",\n\t\t\t\tbFocusInsideFromPage: this._isFocusInControl(oFromPage)\n\t\t\t};\n\n\t\t\tif (oNavInfo.bFocusInsideFromPage) {\n\t\t\t\t// remember the focused object in \"from page\"\n\t\t\t\tthis._mFocusObject[oFromPage.getId()] = document.activeElement;\n\t\t\t}\n\n\t\t\tvar bContinue = this.fireNavigate(oNavInfo);\n\t\t\tif (bContinue) {\n\t\t\t\t// ok, let's do the navigation\n\n\t\t\t\tlibrary.closeKeyboard();\n\n\t\t\t\t// TODO: let one of the pages also cancel navigation?\n\t\t\t\tvar oEvent = jQuery.Event(\"BeforeHide\", oNavInfo);\n\t\t\t\toEvent.srcControl = this; // store the element on the event (aligned with jQuery syntax)\n\t\t\t\t// no data needed for hiding\n\t\t\t\toFromPage._handleEvent(oEvent);\n\n\t\t\t\tif (!this._mVisitedPages[pageId]) {\n\t\t\t\t\t// if this page has not been shown before\n\t\t\t\t\toEvent = jQuery.Event(\"BeforeFirstShow\", oNavInfo);\n\t\t\t\t\toEvent.srcControl = this;\n\t\t\t\t\toEvent.data = data || {};\n\t\t\t\t\toEvent.backData = {};\n\t\t\t\t\toToPage._handleEvent(oEvent);\n\t\t\t\t}\n\n\t\t\t\toEvent = jQuery.Event(\"BeforeShow\", oNavInfo);\n\t\t\t\toEvent.srcControl = this;\n\t\t\t\toEvent.data = data || {};\n\t\t\t\toEvent.backData = {};\n\t\t\t\toToPage._handleEvent(oEvent);\n\n\t\t\t\tthis._pageStack.push(oFromPageInfo); // this actually causes/is the navigation\n\t\t\t\tjQuery.sap.log.info(this.toString() + \": navigating to page '\" + pageId + \"': \" + oToPage.toString());\n\t\t\t\tthis._mVisitedPages[pageId] = true;\n\n\t\t\t\tif (!this.getDomRef()) {\n\t\t\t\t\t// the wanted animation has been recorded, but when the NavContainer is not rendered, we cannot animate, so just return\n\t\t\t\t\tjQuery.sap.log.info(\"'Hidden' 'to' navigation in not-rendered NavContainer \" + this.toString());\n\n\t\t\t\t\t// BCP: 1680140633 - Firefox issue\n\t\t\t\t\tif (this._bRenderingInProgress) {\n\t\t\t\t\t\tjQuery.sap.delayedCall(0, this, this.invalidate);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\t// render the page that should get visible\n\t\t\t\tvar oToPageDomRef;\n\n\t\t\t\tif (!(oToPageDomRef = oToPage.getDomRef()) || oToPageDomRef.parentNode != this.getDomRef() || RenderManager.isPreservedContent(oToPageDomRef)) {\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemRendering\");\n\t\t\t\t\tjQuery.sap.log.debug(\"Rendering 'to' page '\" + oToPage.toString() + \"' for 'to' navigation\");\n\t\t\t\t\tvar rm = sap.ui.getCore().createRenderManager();\n\t\t\t\t\trm.render(oToPage, this.getDomRef());\n\t\t\t\t\trm.destroy();\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemRendering\");\n\t\t\t\t}\n\n\t\t\t\tvar oTransition = NavContainer.transitions[transitionName] || NavContainer.transitions[\"slide\"];\n\n\t\t\t\t// Track proper invocation of the callback  TODO: only do this during development?\n\t\t\t\tvar iCompleted = this._iTransitionsCompleted;\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\tif (that && that._iTransitionsCompleted < iCompleted + 1) {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Transition '\" + transitionName + \"' 'to' was triggered five seconds ago, but has not yet invoked the end-of-transition callback.\");\n\t\t\t\t\t}\n\t\t\t\t}, fnGetDelay(5000));\n\n\t\t\t\tthis._bNavigating = true;\n\t\t\t\toTransition.to.call(this, oFromPage, oToPage, jQuery.proxy(function () {\n\t\t\t\t\tthis._afterTransitionCallback(oNavInfo, data);\n\t\t\t\t}, this), oTransitionParameters); // trigger the transition\n\t\t\t} else {\n\t\t\t\tjQuery.sap.log.info(\"Navigation to page with ID '\" + pageId + \"' has been aborted by the application\");\n\t\t\t}\n\t\t} else {\n\t\t\tjQuery.sap.log.warning(\"Navigation triggered to page with ID '\" + pageId + \"', but this page is not known/aggregated by \" + this);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n  * Navigates back one level. If already on the initial page and there is no place to go back, nothing happens.\n  *\n  * Calling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given backData object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property. The original \"data\" object from the \"to\" navigation is also available in these event objects.\n  *\n  * @param {object} [oBackData]\n  *         Since version 1.7.1. This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n  *\n  *         In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n  *         For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n  *\n  *         When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.\n  * @param {object} [oTransitionParameters]\n  *         Since version 1.7.1. This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n  *         The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n  *\n  *         In order to use the \"transitionParameters\" property, the \"data\" property must be used (at least \"null\" must be given) for a proper parameter order.\n  *\n  *         NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n  * @type sap.m.NavContainer\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.back = function (backData, oTransitionParameters) {\n\t\tthis._backTo(\"back\", backData, oTransitionParameters);\n\t\treturn this;\n\t};\n\n\t/**\n  * Navigates back to the nearest previous page in the NavContainer history with the given ID. If there is no such page among the previous pages, nothing happens.\n  * The transition effect which had been used to get to the current page is inverted and used for this navigation.\n  *\n  * Calling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given backData object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property. The original \"data\" object from the \"to\" navigation is also available in these event objects.\n  *\n  * @param {string} sPageId\n  *         The ID of the screen to which back navigation should happen. The ID or the control itself can be given. The nearest such page among the previous pages in the history stack will be used.\n  * @param {object} [oBackData]\n  *         This optional object can carry any payload data which should be made available to the target page of the \"backToPage\" navigation. The event on the target page will contain this data object as \"backData\" property.\n  *\n  *         When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.\n  * @param {object} [oTransitionParameters]\n  *         This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n  *         The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n  *\n  *         In order to use the \"transitionParameters\" property, the \"data\" property must be used (at least \"null\" must be given) for a proper parameter order.\n  *\n  *         NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n  * @type sap.m.NavContainer\n  * @public\n  * @since 1.7.2\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.backToPage = function (pageId, backData, oTransitionParameters) {\n\t\tthis._backTo(\"backToPage\", backData, oTransitionParameters, pageId);\n\t\treturn this;\n\t};\n\n\t/**\n  * Navigates back to the initial/top level (this is the element aggregated as \"initialPage\", or the first added element). If already on the initial page, nothing happens.\n  * The transition effect which had been used to get to the current page is inverted and used for this navigation.\n  *\n  * Calling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given backData object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property.\n  *\n  * @param {object} [oBackData]\n  *         This optional object can carry any payload data which should be made available to the target page of the \"backToTop\" navigation. The event on the target page will contain this data object as \"backData\" property.\n  *\n  *         When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.\n  * @param {object} [oTransitionParameters]\n  *         This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n  *         The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n  *\n  *         In order to use the \"transitionParameters\" property, the \"data\" property must be used (at least \"null\" must be given) for a proper parameter order.\n  *\n  *         NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n  * @type sap.m.NavContainer\n  * @public\n  * @since 1.7.1\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.backToTop = function (backData, oTransitionParameters) {\n\t\tthis._backTo(\"backToTop\", backData, oTransitionParameters);\n\t\treturn this;\n\t};\n\n\tNavContainer.prototype._backTo = function (sType, backData, oTransitionParameters, sRequestedPageId) {\n\t\tif (this._bNavigating) {\n\t\t\tjQuery.sap.log.warning(this.toString() + \": Cannot navigate back because another navigation is already in progress. - navigation will be executed after the previous one\");\n\n\t\t\tthis._aQueue.push(jQuery.proxy(function () {\n\t\t\t\tthis._backTo(sType, backData, oTransitionParameters, sRequestedPageId);\n\t\t\t}, this));\n\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this._pageStack.length <= 1) {\n\t\t\t// there is no place to go back\n\n\t\t\t// but then the assumption is that the only page on the stack is the initial one and has not been navigated to. Check this:\n\t\t\tif (this._pageStack.length === 1 && !this._pageStack[0].isInitial) {\n\t\t\t\tthrow new Error(\"Initial page not found on the stack. How did this happen?\");\n\t\t\t}\n\t\t\treturn this;\n\t\t} else {\n\t\t\t// normal back navigation\n\n\t\t\tif (sRequestedPageId instanceof Control) {\n\t\t\t\tsRequestedPageId = sRequestedPageId.getId();\n\t\t\t}\n\n\t\t\tvar oFromPageInfo = this._pageStack[this._pageStack.length - 1];\n\t\t\tvar transition = oFromPageInfo.transition;\n\t\t\tvar oFromPage = this.getPage(oFromPageInfo.id);\n\t\t\tvar oToPage;\n\t\t\tvar oToPageData;\n\n\t\t\tif (sType === \"backToTop\") {\n\t\t\t\toToPage = this._getActualInitialPage();\n\t\t\t\toToPageData = null;\n\t\t\t} else if (sType === \"backToPage\") {\n\t\t\t\tvar info = this._findClosestPreviousPageInfo(sRequestedPageId);\n\t\t\t\tif (!info) {\n\t\t\t\t\tjQuery.sap.log.error(this.toString() + \": Cannot navigate backToPage('\" + sRequestedPageId + \"') because target page was not found among the previous pages.\");\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\toToPage = sap.ui.getCore().byId(info.id);\n\t\t\t\tif (!oToPage) {\n\t\t\t\t\tjQuery.sap.log.error(this.toString() + \": Cannot navigate backToPage('\" + sRequestedPageId + \"') because target page does not exist anymore.\");\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\toToPageData = info.data;\n\t\t\t} else {\n\t\t\t\t// normal \"back\"\n\t\t\t\toToPage = this.getPreviousPage();\n\t\t\t\toToPageData = this._pageStack[this._pageStack.length - 2].data;\n\t\t\t}\n\n\t\t\tif (!oToPage) {\n\t\t\t\tjQuery.sap.log.error(\"NavContainer back navigation: target page is not defined or not aggregated by this NavContainer. Aborting navigation.\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oToPageId = oToPage.getId();\n\t\t\tbackData = backData || {};\n\t\t\toTransitionParameters = oTransitionParameters || {};\n\n\t\t\tvar oNavInfo = {\n\t\t\t\tfrom: oFromPage,\n\t\t\t\tfromId: oFromPage.getId(),\n\t\t\t\tto: oToPage,\n\t\t\t\ttoId: oToPageId,\n\t\t\t\tfirstTime: !this._mVisitedPages[oToPageId],\n\t\t\t\tisTo: false,\n\t\t\t\tisBack: sType === \"back\",\n\t\t\t\tisBackToPage: sType === \"backToPage\",\n\t\t\t\tisBackToTop: sType === \"backToTop\",\n\t\t\t\tdirection: sType,\n\t\t\t\tbFocusInsideFromPage: this._isFocusInControl(oFromPage)\n\t\t\t};\n\t\t\tvar bContinue = this.fireNavigate(oNavInfo);\n\t\t\tif (bContinue) {\n\t\t\t\t// ok, let's do the navigation\n\n\t\t\t\tlibrary.closeKeyboard();\n\n\t\t\t\tvar oEvent = jQuery.Event(\"BeforeHide\", oNavInfo);\n\t\t\t\toEvent.srcControl = this; // store the element on the event (aligned with jQuery syntax)\n\t\t\t\t// no data needed for hiding\n\t\t\t\toFromPage._handleEvent(oEvent);\n\n\t\t\t\tif (!this._mVisitedPages[oToPageId]) {\n\t\t\t\t\t// if this page has not been shown before\n\t\t\t\t\toEvent = jQuery.Event(\"BeforeFirstShow\", oNavInfo);\n\t\t\t\t\toEvent.srcControl = this;\n\t\t\t\t\toEvent.backData = backData || {};\n\t\t\t\t\t// the old data from the forward navigation should not exist because there was never a forward navigation\n\t\t\t\t\toEvent.data = {};\n\t\t\t\t\toToPage._handleEvent(oEvent);\n\t\t\t\t}\n\n\t\t\t\toEvent = jQuery.Event(\"BeforeShow\", oNavInfo);\n\t\t\t\toEvent.srcControl = this;\n\t\t\t\toEvent.backData = backData || {};\n\t\t\t\toEvent.data = oToPageData || {}; // the old data from the forward navigation\n\t\t\t\toToPage._handleEvent(oEvent);\n\n\t\t\t\tthis._pageStack.pop(); // this actually causes/is the navigation\n\t\t\t\tjQuery.sap.log.info(this.toString() + \": navigating back to page \" + oToPage.toString());\n\t\t\t\tthis._mVisitedPages[oToPageId] = true;\n\n\t\t\t\tif (sType === \"backToTop\") {\n\t\t\t\t\t// if we should navigate to top, just clean up the whole stack\n\t\t\t\t\tthis._pageStack = [];\n\t\t\t\t\tjQuery.sap.log.info(this.toString() + \": navigating back to top\");\n\t\t\t\t\tthis.getCurrentPage(); // this properly restores the initial page on the stack\n\t\t\t\t} else if (sType === \"backToPage\") {\n\t\t\t\t\tvar aPages = [],\n\t\t\t\t\t    interimPage;\n\t\t\t\t\twhile (this._pageStack[this._pageStack.length - 1].id !== sRequestedPageId) {\n\t\t\t\t\t\t// by now it is guaranteed that we will find it\n\t\t\t\t\t\tinterimPage = this._pageStack.pop();\n\t\t\t\t\t\taPages.push(interimPage.id);\n\t\t\t\t\t}\n\t\t\t\t\tjQuery.sap.log.info(this.toString() + \": navigating back to specific page \" + oToPage.toString() + \" across the pages: \" + aPages.join(\", \"));\n\t\t\t\t}\n\n\t\t\t\tif (!this.getDomRef()) {\n\t\t\t\t\t// the wanted animation has been recorded, but when the NavContainer is not rendered, we cannot animate, so just return\n\t\t\t\t\tjQuery.sap.log.info(\"'Hidden' back navigation in not-rendered NavContainer \" + this.toString());\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\tvar oTransition = NavContainer.transitions[transition] || NavContainer.transitions[\"slide\"];\n\n\t\t\t\t// Track proper invocation of the callback  TODO: only do this during development?\n\t\t\t\tvar iCompleted = this._iTransitionsCompleted;\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\tif (that && that._iTransitionsCompleted < iCompleted + 1) {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Transition '\" + transition + \"' 'back' was triggered five seconds ago, but has not yet invoked the end-of-transition callback.\");\n\t\t\t\t\t}\n\t\t\t\t}, fnGetDelay(5000));\n\n\t\t\t\tthis._bNavigating = true;\n\n\t\t\t\t// make sure the to-page is rendered\n\t\t\t\tvar oToPageDomRef;\n\t\t\t\tif (!(oToPageDomRef = oToPage.getDomRef()) || oToPageDomRef.parentNode != this.getDomRef() || RenderManager.isPreservedContent(oToPageDomRef)) {\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemRendering\");\n\t\t\t\t\tjQuery.sap.log.debug(\"Rendering 'to' page '\" + oToPage.toString() + \"' for back navigation\");\n\t\t\t\t\tvar rm = sap.ui.getCore().createRenderManager();\n\t\t\t\t\tvar childPos = this.$().children().index(oFromPage.getDomRef());\n\t\t\t\t\trm.renderControl(oToPage);\n\t\t\t\t\trm.flush(this.getDomRef(), false, childPos);\n\t\t\t\t\trm.destroy();\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemRendering\");\n\t\t\t\t}\n\n\t\t\t\t//if the from page and to page are identical, the transition is skipped.\n\t\t\t\tif (oFromPage.getId() === oToPage.getId()) {\n\t\t\t\t\tjQuery.sap.log.info(\"Transition is skipped when navigating back to the same page instance\" + oToPage.toString());\n\t\t\t\t\tthis._afterTransitionCallback(oNavInfo, oToPageData, backData);\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\t// trigger the transition\n\t\t\t\toTransition.back.call(this, oFromPage, oToPage, jQuery.proxy(function () {\n\t\t\t\t\tthis._afterTransitionCallback(oNavInfo, oToPageData, backData);\n\t\t\t\t}, this), oTransitionParameters); // trigger the transition\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\tNavContainer.prototype._findClosestPreviousPageInfo = function (sRequestedPreviousPageId) {\n\t\tfor (var i = this._pageStack.length - 2; i >= 0; i--) {\n\t\t\tvar info = this._pageStack[i];\n\t\t\tif (info.id === sRequestedPreviousPageId) {\n\t\t\t\treturn info;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tNavContainer.transitions = NavContainer.transitions || {}; // make sure the object exists\n\n\n\t//*** SHOW Transition ***\n\n\tNavContainer.transitions[\"show\"] = {\n\t\tto: function to(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class which has been added by the NavContainer before the transition was called\n\t\t\toFromPage && oFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\tfCallback();\n\t\t},\n\n\t\tback: function back(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\");\n\t\t\toFromPage && oFromPage.addStyleClass(\"sapMNavItemHidden\"); // instantly hide the previous page\n\t\t\tfCallback();\n\t\t}\n\t};\n\n\t//*** SLIDE Transition ***\n\n\tif (jQuery.support.cssTransitions) {\n\t\tNavContainer.transitions[\"slide\"] = {\n\n\t\t\tto: function to(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\toFromPage.addStyleClass(\"sapMNavItemCenter\");\n\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t// iPhone seems to need a zero timeout here, otherwise the to page is black (and may suddenly become visible when the DOM is touched)\n\n\t\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemRight\"); // the page to navigate to should be placed just right of the visible area\n\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\n\t\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\t\tfAfterTransition = function fAfterTransition() {\n\t\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemSliding\").removeStyleClass(\"sapMNavItemCenter\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemSliding\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemLeft\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\t\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemSliding\").addStyleClass(\"sapMNavItemCenter\").removeStyleClass(\"sapMNavItemRight\");\n\t\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemSliding\").removeStyleClass(\"sapMNavItemCenter\").addStyleClass(\"sapMNavItemLeft\");\n\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\t// in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, fnGetDelay(400));\n\t\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few\n\t\t\t\t}, 0); // iPhone seems to need a zero timeout here, otherwise the to page is black (and may suddenly become visible when the DOM is touched)\n\t\t\t},\n\n\t\t\tback: function back(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toToPage.addStyleClass(\"sapMNavItemLeft\"); // the page to navigate back to should be placed just left of the visible area\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\t\t\t\toFromPage.addStyleClass(\"sapMNavItemCenter\");\n\n\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tfAfterTransition = function fAfterTransition() {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemSliding\").removeStyleClass(\"sapMNavItemCenter\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemSliding\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemRight\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t// workaround for bug in current webkit versions: in slided-in elements the z-order may be wrong and will be corrected once a re-layout is enforced\n\t\t\t\t\t// see http://code.google.com/p/chromium/issues/detail?id=246965  - still an issue in iOS 6.1.3 as of 03/2015\n\t\t\t\t\tif (Device.browser.webkit) {\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\toToPage.$().css(\"box-shadow\", \"0em 1px 0em rgba(128, 128, 1280, 0.1)\"); // add box-shadow\n\t\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\t\toToPage.$().css(\"box-shadow\", \"\"); // remove it again\n\t\t\t\t\t\t\t}, fnGetDelay(50));\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemSliding\").addStyleClass(\"sapMNavItemCenter\").removeStyleClass(\"sapMNavItemLeft\"); // transition from left position to normal/center position starts now\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemSliding\").removeStyleClass(\"sapMNavItemCenter\").addStyleClass(\"sapMNavItemRight\"); // transition from normal position to right position starts now\n\n\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t// in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(400));\n\t\t\t\t}, fnGetDelay(100)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few\n\t\t\t}\n\t\t};\n\t} else {\n\t\t// no CSS transitions, IE9 support\n\t\tNavContainer.transitions[\"slide\"] = {\n\t\t\tto: function to(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar $ToPage = oToPage.$();\n\t\t\t\t$ToPage.css(\"left\", \"100%\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class which has been added by the NavContainer before the transition was called\n\n\t\t\t\t$ToPage.animate({ left: \"0%\" }, fnGetDelay(300));\n\t\t\t\tvar $FromPage = oFromPage.$();\n\t\t\t\t$FromPage.animate({ left: \"-100%\" }, fnGetDelay(300), function () {\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\t$FromPage.css(\"left\", \"0\");\n\t\t\t\t\tfCallback();\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tback: function back(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar $ToPage = oToPage.$();\n\t\t\t\t$ToPage.css(\"left\", \"-100%\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\");\n\n\t\t\t\t$ToPage.animate({ left: \"0%\" }, fnGetDelay(300));\n\t\t\t\tvar $FromPage = oFromPage.$();\n\t\t\t\t$FromPage.animate({ left: \"100%\" }, fnGetDelay(300), function () {\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\t$FromPage.css(\"left\", \"0\");\n\t\t\t\t\tfCallback();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\t//*** FADE Transition ***\n\n\tif (jQuery.support.cssTransitions) {\n\t\tNavContainer.transitions[\"fade\"] = {\n\n\t\t\tto: function to(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toToPage.addStyleClass(\"sapMNavItemTransparent\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\");\n\n\t\t\t\t// iPhone needs some time for rendering, there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t// the code to be executed after the new page has completed fading in\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tfAfterTransition = function fAfterTransition() {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\t// clean up the style classes\n\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemFading\").removeStyleClass(\"sapMNavItemOpaque\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\tfCallback();\n\t\t\t\t\t};\n\n\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemFading\").removeStyleClass(\"sapMNavItemTransparent\").addStyleClass(\"sapMNavItemOpaque\");\n\n\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t// in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tfAfterTransition.apply(oToPage.$());\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(600));\n\t\t\t\t}, fnGetDelay(10));\n\t\t\t},\n\n\t\t\tback: function back(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toFromPage.addStyleClass(\"sapMNavItemOpaque\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\");\n\n\t\t\t\t// iPhone needs some time for rendering, there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t// the code to be executed after the new page has completed fading in\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tfAfterTransition = function fAfterTransition() {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\t// clean up the style classes\n\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemFading\").addStyleClass(\"sapMNavItemHidden\"); // TODO: destroy HTML?\n\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemTransparent\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\tfCallback();\n\t\t\t\t\t};\n\n\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemFading\").removeStyleClass(\"sapMNavItemOpaque\");\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemTransparent\");\n\n\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t// in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tfAfterTransition.apply(oToPage.$());\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(600));\n\t\t\t\t}, fnGetDelay(10));\n\t\t\t}\n\t\t};\n\t} else {\n\t\t// no CSS transitions, IE9 support\n\t\tNavContainer.transitions[\"fade\"] = {\n\t\t\tto: function to(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar $ToPage = oToPage.$();\n\t\t\t\t$ToPage.css(\"opacity\", \"0\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class which has been added by the NavContainer before the transition was called\n\n\t\t\t\t$ToPage.animate({ opacity: \"1\" }, fnGetDelay(500), function () {\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\tfCallback();\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tback: function back(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar $FromPage = oFromPage.$();\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class which has been added by the NavContainer before the transition was called\n\n\t\t\t\t$FromPage.animate({ opacity: \"0\" }, fnGetDelay(500), function () {\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\t$FromPage.css(\"opacity\", \"1\");\n\t\t\t\t\tfCallback();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\t//*** FLIP Transition ***\n\n\tif (jQuery.support.cssTransitions) {\n\t\tNavContainer.transitions[\"flip\"] = {\n\n\t\t\tto: function to(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t// iPhone seems to need a zero timeout here, otherwise the to page is black (and may suddenly become visible when the DOM is touched)\n\n\t\t\t\t\tthat.$().addClass(\"sapMNavFlip\");\n\n\t\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemFlipNext\"); // the page to navigate to should be placed just right of the visible area\n\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\t\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\t\tfAfterTransition = function fAfterTransition() {\n\t\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemFlipping\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemFlipping\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemFlipPrevious\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthat.$().removeClass(\"sapMNavFlip\");\n\n\t\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\t\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemFlipping\").removeStyleClass(\"sapMNavItemFlipNext\");\n\t\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemFlipping\").addStyleClass(\"sapMNavItemFlipPrevious\");\n\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\t// in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, fnGetDelay(600));\n\t\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few#\n\t\t\t\t}, 0);\n\t\t\t},\n\n\t\t\tback: function back(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar that = this;\n\n\t\t\t\tthat.$().addClass(\"sapMNavFlip\");\n\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toToPage.addStyleClass(\"sapMNavItemFlipPrevious\"); // the page to navigate back to should be placed just left of the visible area\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tfAfterTransition = function fAfterTransition() {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemFlipping\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemFlipping\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemFlipNext\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthat.$().removeClass(\"sapMNavFlip\");\n\n\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemFlipping\").removeStyleClass(\"sapMNavItemFlipPrevious\"); // transition from left position to normal/center position starts now\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemFlipping\").addStyleClass(\"sapMNavItemFlipNext\"); // transition from normal position to right position starts now\n\n\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t// in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(600));\n\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few\n\t\t\t}\n\t\t};\n\t} else {\n\t\t// no CSS transitions, IE9 support\n\t\tNavContainer.transitions[\"flip\"] = NavContainer.transitions[\"slide\"];\n\t}\n\n\t//*** DOOR Transition ***\n\n\tif (jQuery.support.cssTransitions) {\n\t\tNavContainer.transitions[\"door\"] = {\n\n\t\t\tto: function to(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t// iPhone seems to need a zero timeout here, otherwise the to page is black (and may suddenly become visible when the DOM is touched)\n\n\t\t\t\t\tthat.$().addClass(\"sapMNavDoor\");\n\n\t\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemDoorInNext\"); // the page to navigate to should be placed just right of the visible area\n\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\t\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\t\tfAfterTransition = function fAfterTransition() {\n\t\t\t\t\t\t\tjQuery(this).unbind(\"webkitAnimationEnd animationend\");\n\t\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemDooring\").removeStyleClass(\"sapMNavItemDoorInNext\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemDooring\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemDoorInPrevious\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthat.$().removeClass(\"sapMNavDoor\");\n\n\t\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\toFromPage.$().bind(\"webkitAnimationEnd animationend\", fAfterTransition);\n\t\t\t\t\t\toToPage.$().bind(\"webkitAnimationEnd animationend\", fAfterTransition);\n\n\t\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemDooring\");\n\t\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemDooring\").addStyleClass(\"sapMNavItemDoorInPrevious\");\n\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\t// in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, fnGetDelay(1000));\n\t\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few#\n\t\t\t\t}, 0);\n\t\t\t},\n\n\t\t\tback: function back(oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar that = this;\n\n\t\t\t\tthat.$().addClass(\"sapMNavDoor\");\n\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toToPage.addStyleClass(\"sapMNavItemDoorOutNext\"); // the page to navigate back to should be placed just left of the visible area\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tfAfterTransition = function fAfterTransition() {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitAnimationEnd animationend\");\n\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// the second transition now also finished =>  clean up the style classes\n\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemDooring\").removeStyleClass(\"sapMNavItemDoorOutNext\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemDooring\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemDoorOutPrevious\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthat.$().removeClass(\"sapMNavDoor\");\n\n\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\toFromPage.$().bind(\"webkitAnimationEnd animationend\", fAfterTransition);\n\t\t\t\t\toToPage.$().bind(\"webkitAnimationEnd animationend\", fAfterTransition);\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemDooring\"); // transition from left position to normal/center position starts now\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemDooring\").addStyleClass(\"sapMNavItemDoorOutPrevious\"); // transition from normal position to right position starts now\n\n\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t// in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(1000));\n\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few\n\t\t\t}\n\t\t};\n\t} else {\n\t\t// no CSS transitions, IE9 support\n\t\tNavContainer.transitions[\"door\"] = NavContainer.transitions[\"slide\"];\n\t}\n\n\t/**\n  * Adds a custom transition to the NavContainer type (not to a particular instance!). The transition is identified by a \"name\". Make sure to only use names that will not collide with transitions which may be added to the NavContainer later. A suggestion is to use the prefix \"c_\" or \"_\" for your custom transitions to ensure this.\n  *\n  * \"to\" and \"back\" are the transition functions for the forward and backward navigation.\n  * Both will be called with the following parameters:\n  * - oFromPage: the Control which is currently being displayed by the NavContainer\n  * - oToPage: the Control which should be displayed by the NavContainer after the transition\n  * - fCallback: a function which MUST be called when the transition has completed\n  * - oTransitionParameters: a data object that can be given by application code when triggering the transition by calling to() or back(); this object could give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration\n  *\n  * The contract for \"to\" and \"back\" is that they may do an animation of their choice, but it should not take \"too long\". At the beginning of the transition the target page \"oToPage\" does have the CSS class \"sapMNavItemHidden\" which initially hides the target page (visibility:hidden). The transition can do any preparation (e.g. move that page out of the screen or make it transparent) and then should remove this CSS class.\n  * After the animation the target page \"oToPage\" should cover the entire screen and the source page \"oFromPage\" should not be visible anymore. This page should then have the CSS class \"sapMNavItemHidden\".\n  * For adding/removing this or other CSS classes, the transition can use the addStyleClass/removeStyleClass method:\n  * oFromPage.addStyleClass(\"sapMNavItemHidden\");\n  * When the transition is complete, it MUST call the given fCallback method to inform the NavContainer that navigation has finished!\n  *\n  * Hint: if the target page of your transition stays black on iPhone, try wrapping the animation start into a\n  * setTimeout(..., 0)\n  * block (delayed, but without waiting).\n  *\n  * This method can be called on any NavContainer instance or statically on the sap.m.NavContainer type. However, the transition will always be registered for the type (and ALL instances), not for the single instance on which this method was invoked.\n  *\n  * Returns the sap.m.NavContainer type if called statically, or \"this\" (to allow method chaining) if called on a particular NavContainer instance.\n  *\n  * @param {string} sName\n  *         The name of the transition. This name can be used by the application to choose this transition when navigating \"to()\" or \"back()\": the \"transitionName\" parameter of \"NavContainer.to()\" corresponds to this name, the back() navigation will automatically use the same transition.\n  *\n  *         Make sure to only use names that will not collide with transitions which may be added to the NavContainer later. A suggestion is to use the prefix \"c_\" or \"_\" for your custom transitions to ensure this.\n  * @param {object} oTo\n  *         The function which will be called by the NavContainer when the application navigates \"to()\", using this animation's name. The NavContainer instance is the \"this\" context within the animation function.\n  *\n  *         See the documentation of NavContainer.addCustomTransitions for more details about this function.\n  * @param {object} oBack\n  *         The function which will be called by the NavContainer when the application navigates \"back()\" from a page where it had navigated to using this animation's name. The NavContainer instance is the \"this\" context within the animation function.\n  *\n  *         See the documentation of NavContainer.addCustomTransitions for more details about this function.\n  * @type sap.m.NavContainer\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tNavContainer.prototype.addCustomTransition = function (sName, fTo, fBack) {\n\t\tif (NavContainer.transitions[sName]) {\n\t\t\tjQuery.sap.log.warning(\"Transition with name \" + sName + \" already exists in \" + this + \". It is now being replaced by custom transition.\");\n\t\t}\n\n\t\tNavContainer.transitions[sName] = { to: fTo, back: fBack };\n\t\treturn this;\n\t};\n\tNavContainer.addCustomTransition = NavContainer.prototype.addCustomTransition;\n\n\t// ----------------- code for tracking and avoiding invalidation --------------------------\n\n\t/**\n  * Forces invalidation and rerendering (.invalidate() is disabled)\n  * @private\n  */\n\tNavContainer.prototype.forceInvalidation = NavContainer.prototype.invalidate;\n\n\tNavContainer.prototype.invalidate = function (oSource) {\n\n\t\t/*eslint-disable no-empty */\n\t\tif (oSource == this) {\n\t\t\t/*eslint-enable no-empty */\n\t\t\t// does not happen because the source is only given when propagating to a parent\n\n\t\t} else if (!oSource) {\n\t\t\t// direct invalidation of the NavContainer; this means a property has been modified\n\t\t\tthis.forceInvalidation(); // let invalidation occur\n\t\t} else if (oSource instanceof Control) {\n\t\t\t// an aggregated control is invalidated\n\t\t\tvar bIsInPages = false,\n\t\t\t    aPages = this.getPages(),\n\t\t\t    l = aPages.length;\n\n\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\tif (aPages[i] === oSource) {\n\t\t\t\t\tbIsInPages = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((!bIsInPages || oSource === this.getCurrentPage()) && !this._isInsideAPopup()) {\n\t\t\t\tthis.forceInvalidation();\n\t\t\t} // else : the invalidation source is a non-current page, so do not rerender anything\n\t\t} else {\n\t\t\t// TODO: which cases are ending up here?\n\t\t\tthis.forceInvalidation();\n\t\t}\n\t};\n\n\tNavContainer.prototype._isInsideAPopup = function () {\n\t\tvar _fnScanForPopup;\n\n\t\t_fnScanForPopup = function fnScanForPopup(oControl) {\n\t\t\tif (!oControl) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (oControl.getMetadata().isInstanceOf(\"sap.ui.core.PopupInterface\")) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn _fnScanForPopup(oControl.getParent());\n\t\t};\n\n\t\treturn _fnScanForPopup(this);\n\t};\n\n\tNavContainer.prototype.removePage = function (oPage) {\n\t\t// when removing a page that's not the currently displayed page, there's no need to invalidate the NavContainer\n\t\toPage = this.removeAggregation(\"pages\", oPage, oPage !== this.getCurrentPage());\n\n\t\tthis._onPageRemoved(oPage);\n\n\t\treturn oPage;\n\t};\n\n\tNavContainer.prototype._onPageRemoved = function (oPage) {\n\t\tif (!oPage) {\n\t\t\treturn;\n\t\t}\n\n\t\t// remove the dom because if you remove the hidden class, the page will get visible until the rerendering of the navContainer - causes a flickering\n\t\toPage.$().remove();\n\n\t\t// remove the style classes that might be added by the navContainer\n\t\toPage.removeStyleClass(\"sapMNavItemHidden\");\n\t\toPage.removeStyleClass(\"sapMNavItem\");\n\n\t\tvar aStack = this._ensurePageStackInitialized();\n\t\t// Remove all occurences from the stack\n\t\tthis._pageStack = aStack.filter(function (oPageStackInfo) {\n\t\t\treturn oPage.getId() !== oPageStackInfo.id;\n\t\t});\n\t};\n\n\tNavContainer.prototype.removeAllPages = function () {\n\t\tvar aPages = this.getPages();\n\t\tif (!aPages) {\n\t\t\treturn [];\n\t\t}\n\n\t\tfor (var i = 0; i < aPages.length; i++) {\n\t\t\tthis._onPageRemoved(aPages[i]);\n\t\t}\n\n\t\treturn this.removeAllAggregation(\"pages\");\n\t};\n\n\tNavContainer.prototype.addPage = function (oPage) {\n\t\tvar aPages = this.getPages();\n\t\t// Routing often adds an already existing page. ManagedObject would remove and re-add it because the order is affected,\n\t\t// but here the order does not matter, so just ignore the call in this case.\n\t\tif (jQuery.inArray(oPage, aPages) > -1) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.addAggregation(\"pages\", oPage, true);\n\n\t\t// sapMNavItem must be added after addAggregation is called because addAggregation can lead\n\t\t// to a removePage-call where the class is removed again.\n\t\toPage.addStyleClass(\"sapMNavItem\");\n\t\tvar iPreviousPageCount = aPages.length;\n\n\t\tif (iPreviousPageCount === 0 && /* get the NEW pages count */this.getPages().length === 1 && this.getDomRef()) {\n\t\t\t// the added page is the first and only page and has been newly added\n\t\t\tthis._ensurePageStackInitialized();\n\t\t\tthis.rerender();\n\t\t\tthis._fireAdaptableContentChange(oPage);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tNavContainer.prototype.insertPage = function (oPage, iIndex) {\n\t\tvar iPreviousPageCount = this.getPages().length;\n\n\t\tthis.insertAggregation(\"pages\", oPage, iIndex, true);\n\n\t\t// sapMNavItem must be added after addAggregation is called because addAggregation can lead\n\t\t// to a removePage-call where the class is removed again.\n\t\toPage.addStyleClass(\"sapMNavItem\");\n\n\t\tif (iPreviousPageCount === 0 && this.getPages().length === 1 && this.getDomRef()) {\n\t\t\t// the added page is the first and only page and has been newly added\n\t\t\tthis._ensurePageStackInitialized();\n\t\t\tthis.rerender();\n\t\t\tthis._fireAdaptableContentChange(oPage);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Fiori 2.0 Adaptation\n  */\n\tNavContainer.prototype._getAdaptableContent = function () {\n\t\treturn this.getCurrentPage();\n\t};\n\n\tNavContainer.prototype._fireAdaptableContentChange = function (oPage) {\n\t\tif (oPage && this.mEventRegistry[\"_adaptableContentChange\"]) {\n\t\t\t//workaround for accessing the first page displayed in the navContainer, since \"navigate\" event is not thrown for it\n\t\t\tthis.fireEvent(\"_adaptableContentChange\", {\n\t\t\t\t\"parent\": this,\n\t\t\t\t\"adaptableContent\": oPage\n\t\t\t});\n\t\t}\n\t};\n\n\t// documentation of the pseudo events (beforeShow, afterShow, beforeHide etc.)\n\n\t/**\n  * sap.m.NavContainerChild is an artificial interface with the only purpose to bear the documentation of\n  * pseudo events triggered by sap.m.NavContainer on its child controls when navigation occurs and child controls are displayed/hidden.\n  *\n  * Interested parties outside the child control can listen to one or more of these events by registering a Delegate:\n  * <pre>\n  * page1.addEventDelegate({\n  *    onBeforeShow: function(evt) {\n  *       // page1 is about to be shown; act accordingly - if required you can read event information from the evt object\n  *    },\n  *    onAfterHide: function(evt) {\n  *       // ...\n  *    }\n  * });\n  * </pre>\n  *\n  * @name sap.m.NavContainerChild\n  * @interface\n  * @public\n  */\n\n\t/**\n  * This event is fired before the NavContainer shows this child control for the first time.\n  * @event\n  * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n  * @param {object} oEvent.data the data object which has been passed with the \"to\" navigation, or an empty object\n  * @param {object} oEvent.backData the data object which has been passed with the back navigation, or an empty object\n  * @name sap.m.NavContainerChild.prototype.BeforeFirstShow\n  * @public\n  */\n\n\t/**\n  * This event is fired every time before the NavContainer shows this child control. In case of animated transitions this\n  * event is fired before the transition starts.\n  * @event\n  * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n  * @param {object} oEvent.data the data object which has been passed with the \"to\" navigation, or an empty object\n  * @param {object} oEvent.backData the data object which has been passed with the back navigation, or an empty object\n  * @name sap.m.NavContainerChild.prototype.BeforeShow\n  * @public\n  */\n\n\t/**\n  * This event is fired every time when the NavContainer has made this child control visible. In case of animated transitions this\n  * event is fired after the transition finishes. This control is now being displayed and not animated anymore.\n  * @event\n  * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n  * @param {object} oEvent.data the data object which has been passed with the \"to\" navigation, or an empty object\n  * @param {object} oEvent.backData the data object which has been passed with the back navigation, or an empty object\n  * @name sap.m.NavContainerChild.prototype.AfterShow\n  * @public\n  */\n\n\t/**\n  * This event is fired every time before the NavContainer hides this child control. In case of animated transitions this\n  * event is fired before the transition starts.\n  * @event\n  * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n  * @name sap.m.NavContainerChild.prototype.BeforeHide\n  * @public\n  */\n\n\t/**\n  * This event is fired every time when the NavContainer has made this child control invisible. In case of animated transitions this\n  * event is fired after the transition finishes. This control is now no longer being displayed and not animated anymore.\n  * @event\n  * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n  * @name sap.m.NavContainerChild.prototype.AfterHide\n  * @public\n  */\n\n\treturn NavContainer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.NavContainerRenderer\", __webpack_require__(\"20Fv\"));\n\n/***/ }),\n\n/***/ \"5lBc\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"TITLE=todos\\nINPUT_PLACEHOLDER=What needs to be done?\\nITEM_LEFT=item left\\nITEMS_LEFT=items left\\nCLEAR_COMPLETED=Clear completed\\n\"\n\n/***/ }),\n\n/***/ \"6LTI\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"ax/N\"), __webpack_require__(\"JTcp\"), __webpack_require__(\"nPt9\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (Renderer, InputBaseRenderer, library) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.InputType\n\n\tvar InputType = library.InputType;\n\n\t/**\n  * Input renderer.\n  * @namespace\n  *\n  * InputRenderer extends the InputBaseRenderer\n  */\n\tvar InputRenderer = Renderer.extend(InputBaseRenderer);\n\n\t/**\n  * Adds control specific class\n  *\n  * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tInputRenderer.addOuterClasses = function (oRm, oControl) {\n\t\toRm.addClass(\"sapMInput\");\n\t\tif (oControl.getShowValueHelp() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\toRm.addClass(\"sapMInputVH\");\n\t\t\tif (oControl.getValueHelpOnly()) {\n\t\t\t\toRm.addClass(\"sapMInputVHO\");\n\t\t\t}\n\t\t}\n\t\tif (oControl.getDescription()) {\n\t\t\toRm.addClass(\"sapMInputDescription\");\n\t\t}\n\t};\n\n\t/**\n  * Add extra styles for input container\n  *\n  * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tInputRenderer.addOuterStyles = function (oRm, oControl) {};\n\n\t/**\n  * add extra attributes to Input\n  *\n  * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tInputRenderer.writeInnerAttributes = function (oRm, oControl) {\n\t\toRm.writeAttribute(\"type\", oControl.getType().toLowerCase());\n\t\tif (oControl.getType() == InputType.Number && sap.ui.getCore().getConfiguration().getRTL()) {\n\t\t\toRm.writeAttribute(\"dir\", \"ltr\");\n\t\t\toRm.addStyle(\"text-align\", \"right\");\n\t\t}\n\n\t\tif (oControl.getShowSuggestion()) {\n\t\t\toRm.writeAttribute(\"autocomplete\", \"off\");\n\t\t}\n\n\t\tif (!oControl.getEnabled() && oControl.getType() == \"Password\" || oControl.getShowSuggestion() && oControl._bUseDialog || oControl.getValueHelpOnly() && oControl.getEnabled() && oControl.getEditable() && oControl.getShowValueHelp()) {\n\t\t\t// required for JAWS reader on password fields on desktop and in other cases:\n\t\t\toRm.writeAttribute(\"readonly\", \"readonly\");\n\t\t}\n\t};\n\n\t/**\n  * Adds inner css classes to the input field\n  *\n  * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tInputRenderer.addInnerClasses = function (oRm, oControl) {};\n\n\t/**\n  * Add inner styles to the input field\n  *\n  * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tInputRenderer.addWrapperStyles = function (oRm, oControl) {\n\n\t\tif (oControl.getDescription()) {\n\t\t\toRm.addStyle(\"width\", oControl.getFieldWidth() || \"50%\");\n\t\t}\n\t};\n\n\t/**\n  * Write the decorations of the input.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputRenderer.writeDecorations = function (oRm, oControl) {\n\n\t\tvar id = oControl.getId(),\n\t\t    description = oControl.getDescription();\n\n\t\tif (!description) {\n\t\t\tthis.writeValueHelpIcon(oRm, oControl);\n\t\t} else {\n\t\t\toRm.write(\"<span id=\\\"\" + oControl.getId() + \"-Descr\\\">\");\n\t\t\tthis.writeValueHelpIcon(oRm, oControl);\n\t\t\toRm.write('<span class=\"sapMInputDescriptionText\">');\n\t\t\toRm.writeEscaped(description);\n\t\t\toRm.write(\"</span></span>\");\n\t\t}\n\n\t\tif (sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\tif (oControl.getShowSuggestion() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\t\toRm.write(\"<span id=\\\"\" + id + \"-SuggDescr\\\" class=\\\"sapUiPseudoInvisibleText\\\" role=\\\"status\\\" aria-live=\\\"polite\\\"></span>\");\n\t\t\t}\n\t\t}\n\t};\n\n\tInputRenderer.writeValueHelpIcon = function (oRm, oControl) {\n\n\t\tif (oControl.getShowValueHelp() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\t// Set tabindex to -1 to prevent the focus from going to the underlying list row,\n\t\t\t// in case when the input is placed inside of a list/table.\n\t\t\toRm.write('<div class=\"sapMInputValHelp\" tabindex=\"-1\">');\n\t\t\toRm.renderControl(oControl._getValueHelpIcon());\n\t\t\toRm.write(\"</div>\");\n\t\t}\n\t};\n\n\t/**\n  * Add inner styles to the placeholder\n  *\n  * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tInputRenderer.addPlaceholderStyles = function (oRm, oControl) {\n\n\t\tif (oControl.getDescription()) {\n\t\t\toRm.addStyle(\"width\", oControl.getFieldWidth() || \"50%\");\n\t\t}\n\t};\n\n\tInputRenderer.getAriaLabelledBy = function (oControl) {\n\t\tvar ariaLabels = InputBaseRenderer.getAriaLabelledBy.call(this, oControl) || \"\";\n\t\tif (oControl.getDescription()) {\n\t\t\tariaLabels = ariaLabels + \" \" + oControl.getId() + \"-Descr\";\n\t\t}\n\t\treturn ariaLabels;\n\t};\n\n\tInputRenderer.getAriaDescribedBy = function (oControl) {\n\n\t\tvar sAriaDescribedBy = InputBaseRenderer.getAriaDescribedBy.apply(this, arguments);\n\n\t\tif (oControl.getShowValueHelp() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\tif (sAriaDescribedBy) {\n\t\t\t\tsAriaDescribedBy = sAriaDescribedBy + \" \" + oControl._sAriaValueHelpLabelId;\n\t\t\t} else {\n\t\t\t\tsAriaDescribedBy = oControl._sAriaValueHelpLabelId;\n\t\t\t}\n\t\t\tif (oControl.getValueHelpOnly()) {\n\t\t\t\tsAriaDescribedBy = sAriaDescribedBy + \" \" + oControl._sAriaInputDisabledLabelId;\n\t\t\t}\n\t\t}\n\n\t\tif (oControl.getShowSuggestion() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\tif (sAriaDescribedBy) {\n\t\t\t\tsAriaDescribedBy = sAriaDescribedBy + \" \" + oControl.getId() + \"-SuggDescr\";\n\t\t\t} else {\n\t\t\t\tsAriaDescribedBy = oControl.getId() + \"-SuggDescr\";\n\t\t\t}\n\t\t}\n\n\t\treturn sAriaDescribedBy;\n\t};\n\n\t/**\n  * Returns aria accessibility role for the control.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control\n  * @returns {String}\n  */\n\tInputRenderer.getAriaRole = function (oControl) {\n\t\treturn \"\";\n\t};\n\n\tInputRenderer.getAccessibilityState = function (oControl) {\n\n\t\tvar mAccessibilityState = InputBaseRenderer.getAccessibilityState.apply(this, arguments);\n\n\t\tif (oControl.getShowSuggestion() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\tmAccessibilityState.autocomplete = \"list\";\n\t\t}\n\n\t\treturn mAccessibilityState;\n\t};\n\n\treturn InputRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"6s6H\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"7Xmk\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"7cJM\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"wTGv\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"BRbz\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, coreLibrary, library, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.BackgroundHelper\n\n\tvar BackgroundHelper = library.BackgroundHelper;\n\n\t// shortcut for sap.ui.core.TitleLevel\n\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\t/**\n  * Shell renderer.\n  * @namespace\n  */\n\tvar ShellRenderer = {};\n\n\t/**\n  * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered\n  */\n\tShellRenderer.render = function (rm, oControl) {\n\t\tvar sTitleLevel = oControl.getTitleLevel() === TitleLevel.Auto ? TitleLevel.H1 : oControl.getTitleLevel();\n\n\t\trm.write(\"<div\");\n\t\trm.writeControlData(oControl);\n\t\trm.addClass(\"sapMShell\");\n\n\t\tif (oControl.getAppWidthLimited()) {\n\t\t\trm.addClass(\"sapMShellAppWidthLimited\");\n\t\t}\n\n\t\tBackgroundHelper.addBackgroundColorStyles(rm, oControl.getBackgroundColor(), oControl.getBackgroundImage(), \"sapMShellGlobalOuterBackground\");\n\n\t\trm.writeClasses();\n\t\trm.writeStyles();\n\n\t\tvar sTooltip = oControl.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\trm.write(\">\");\n\n\t\t/* The background in \"SAP_Belize_Deep\" must be dark. The contrast class is set to the element wihout any children to avoid unnecessary propagation. */\n\t\tBackgroundHelper.renderBackgroundImageTag(rm, oControl, [\"sapContrastPlus\", \"sapMShellBG\", \"sapUiGlobalBackgroundImageForce\"], oControl.getBackgroundImage(), oControl.getBackgroundRepeat(), oControl.getBackgroundOpacity());\n\n\t\trm.write(\"<div class='sapMShellBrandingBar'></div>\");\n\n\t\trm.write(\"<div class='sapMShellCentralBox'>\");\n\n\t\t// header\n\t\tvar extraHeaderClass = \"\",\n\t\t    extraBGClass = \"\";\n\t\tif (!oControl.getBackgroundImage()) {\n\t\t\textraHeaderClass = \"sapMShellBackgroundColorOnlyIfDefault\";\n\t\t\textraBGClass = \"sapUiGlobalBackgroundImageOnlyIfDefault\";\n\t\t}\n\t\trm.write(\"<header class='sapMShellHeader \" + extraHeaderClass + \"' id='\" + oControl.getId() + \"-hdr'>\");\n\t\trm.write(\"<div class='\" + extraBGClass + \"'></div>\");\n\t\t// logo\n\t\trm.write(ShellRenderer.getLogoImageHtml(oControl));\n\n\t\t// header title\n\t\tif (oControl.getTitle()) {\n\t\t\trm.write(\"<\" + sTitleLevel);\n\t\t\trm.write(\" id='\" + oControl.getId() + \"-hdrTxt' class='sapMShellHeaderText'>\");\n\t\t\trm.writeEscaped(oControl.getTitle());\n\t\t\trm.write(\"</\" + sTitleLevel + \">\");\n\t\t}\n\n\t\t// header right area\n\t\trm.write(\"<span class='sapMShellHeaderRight'>\");\n\n\t\t// headerRightText\n\t\trm.write(\"<span id='\" + oControl.getId() + \"-hdrRightTxt' \");\n\t\tif (!oControl.getHeaderRightText()) {\n\t\t\trm.writeAttribute(\"style\", \"display:none;\");\n\t\t}\n\t\trm.write(\"class='sapMShellHeaderRightText'>\" + jQuery.sap.encodeHTML(oControl.getHeaderRightText()) + \"</span>\");\n\n\t\t// logout button\n\t\tif (oControl.getShowLogout()) {\n\t\t\tvar rb = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\t\trm.write(\"<a id='\" + oControl.getId() + \"-logout' tabindex='0' role='button' class='sapMShellHeaderLogout'>\" + rb.getText(\"SHELL_LOGOUT\") + \"</a>\");\n\t\t}\n\n\t\trm.write(\"</span></header>\");\n\n\t\t// content\n\t\trm.write(\"<div class='sapMShellContent sapMShellGlobalInnerBackground' id='\" + oControl.getId() + \"-content' data-sap-ui-root-content='true'>\");\n\t\trm.renderControl(oControl.getApp());\n\t\trm.write(\"</div></div></div>\");\n\t};\n\n\tShellRenderer.getLogoImageHtml = function (oControl) {\n\t\tvar sImage = oControl.getLogo(); // configured logo\n\t\tif (!sImage) {\n\t\t\t__webpack_require__(\"Fnq6\");\n\t\t\tsImage = (__webpack_require__(\"Fnq6\"))._getThemeImage(); // theme logo\n\t\t}\n\n\t\tvar result = \"\";\n\t\tif (sImage) {\n\t\t\tvar oRb = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\t\tresult = \"<div class='sapMShellLogo'>\";\n\t\t\tif (Device.browser.msie) {\n\t\t\t\tresult += \"<span class='sapMShellLogoImgAligner'></span>\";\n\t\t\t}\n\t\t\tresult += \"<img id='\" + oControl.getId() + \"-logo' class='sapMShellLogoImg' src='\";\n\t\t\tresult += jQuery.sap.encodeHTML(sImage);\n\t\t\tresult += \"' alt='\";\n\t\t\tresult += oRb.getText(\"SHELL_ARIA_LOGO\");\n\t\t\tresult += \"' /></div>\";\n\t\t}\n\t\treturn result;\n\t};\n\n\treturn ShellRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"83Mu\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"VWRi\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.ColumnListItem.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"LJgu\"), __webpack_require__(\"E8Q9\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, Element, ListItemBase, library, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListType\n\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.ui.core.VerticalAlign\n\tvar VerticalAlign = coreLibrary.VerticalAlign;\n\n\t/**\n  * Constructor for a new ColumnListItem.\n  *\n  * @param {string} [sId] Id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * <code>sap.m.ColumnListItem</code> can be used with the <code>cells</code> aggregation to create rows for the <code>sap.m.Table</code> control.\n  * The <code>columns</code> aggregation of the <code>sap.m.Table</code> should match with the cells aggregation.\n  *\n  * <b>Note:</b> This control should only be used within the <code>sap.m.Table</code> control.\n  * The inherited <code>counter</code> property of <code>sap.m.ListItemBase</code> is not supported.\n  *\n  * @extends sap.m.ListItemBase\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @since 1.12\n  * @alias sap.m.ColumnListItem\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar ColumnListItem = ListItemBase.extend(\"sap.m.ColumnListItem\", /** @lends sap.m.ColumnListItem.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Sets the vertical alignment of all the cells within the table row (including selection and navigation).\n     * <b>Note:</b> <code>vAlign</code> property of <code>sap.m.Column</code> overrides the property for cell vertical alignment if both are set.\n     * @since 1.20\n     */\n\t\t\t\tvAlign: { type: \"sap.ui.core.VerticalAlign\", group: \"Appearance\", defaultValue: VerticalAlign.Inherit }\n\t\t\t},\n\t\t\tdefaultAggregation: \"cells\",\n\t\t\taggregations: {\n\n\t\t\t\t/**\n     * Every <code>control</code> inside the <code>cells</code> aggregation defines one cell of the row.\n     * <b>Note:</b> The order of the <code>cells</code> aggregation must match the order of the <code>columns</code> aggregation of <code>sap.m.Table</code>.\n     */\n\t\t\t\tcells: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"cell\", bindable: \"bindable\" }\n\t\t\t}\n\t\t} });\n\n\t/**\n  * TablePopin element that handles own events.\n  */\n\tvar TablePopin = Element.extend(\"sap.m.TablePopin\", {\n\t\tonfocusin: function onfocusin(oEvent) {\n\t\t\t// focus to the main row if there is nothing to focus in the popin\n\t\t\tif (oEvent.srcControl === this || !jQuery(oEvent.target).is(\":sapFocusable\")) {\n\t\t\t\tthis.getParent().focus();\n\t\t\t}\n\t\t}\n\t});\n\n\t// defines tag name\n\tColumnListItem.prototype.TagName = \"tr\";\n\n\tColumnListItem.prototype.init = function () {\n\t\tListItemBase.prototype.init.call(this);\n\t\tthis._bNeedsTypeColumn = false;\n\t\tthis._aClonedHeaders = [];\n\t};\n\n\tColumnListItem.prototype.onAfterRendering = function () {\n\t\tListItemBase.prototype.onAfterRendering.call(this);\n\t\tthis._checkTypeColumn();\n\t};\n\n\tColumnListItem.prototype.exit = function () {\n\t\tListItemBase.prototype.exit.call(this);\n\t\tthis._checkTypeColumn(false);\n\t\tthis._destroyClonedHeaders();\n\n\t\tif (this._oPopin) {\n\t\t\tthis._oPopin.destroy(true);\n\t\t\tthis._oPopin = null;\n\t\t}\n\t};\n\n\t// remove pop-in from DOM when setVisible false is called\n\tColumnListItem.prototype.setVisible = function (bVisible) {\n\t\tListItemBase.prototype.setVisible.call(this, bVisible);\n\t\tif (!bVisible && this.hasPopin()) {\n\t\t\tthis.removePopin();\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t// returns responsible table control for the item\n\tColumnListItem.prototype.getTable = function () {\n\t\tvar oParent = this.getParent();\n\t\tif (oParent instanceof sap.m.Table) {\n\t\t\treturn oParent;\n\t\t}\n\n\t\t// support old list with columns aggregation\n\t\tif (oParent && oParent.getMetadata().getName() == \"sap.m.Table\") {\n\t\t\treturn oParent;\n\t\t}\n\t};\n\n\t/**\n  * Returns the pop-in element.\n  *\n  * @protected\n  * @since 1.30.9\n  */\n\tColumnListItem.prototype.getPopin = function () {\n\t\tif (!this._oPopin) {\n\t\t\tthis._oPopin = new TablePopin({\n\t\t\t\tid: this.getId() + \"-sub\"\n\t\t\t}).addEventDelegate({\n\t\t\t\t// handle the events of pop-in\n\t\t\t\tontouchstart: this.ontouchstart,\n\t\t\t\tontouchmove: this.ontouchmove,\n\t\t\t\tontap: this.ontap,\n\t\t\t\tontouchend: this.ontouchend,\n\t\t\t\tontouchcancel: this.ontouchcancel,\n\t\t\t\tonsaptabnext: this.onsaptabnext,\n\t\t\t\tonsaptabprevious: this.onsaptabprevious,\n\t\t\t\tonsapup: this.onsapup,\n\t\t\t\tonsapdown: this.onsapdown\n\t\t\t}, this).setParent(this, null, true);\n\t\t}\n\n\t\treturn this._oPopin;\n\t};\n\n\t/**\n  * Returns pop-in DOMRef as a jQuery Object\n  *\n  * @protected\n  * @since 1.26\n  */\n\tColumnListItem.prototype.$Popin = function () {\n\t\treturn this.$(\"sub\");\n\t};\n\n\t/**\n  * Determines whether control has pop-in or not.\n  * @protected\n  */\n\tColumnListItem.prototype.hasPopin = function () {\n\t\treturn !!(this._oPopin && this.getTable().hasPopin());\n\t};\n\n\t/**\n  * Pemove pop-in from DOM\n  * @protected\n  */\n\tColumnListItem.prototype.removePopin = function () {\n\t\tthis._oPopin && this.$Popin().remove();\n\t};\n\n\t/**\n  * Returns the tabbable DOM elements as a jQuery collection\n  * When popin is available this separated dom should also be included\n  *\n  * @returns {jQuery} jQuery object\n  * @protected\n  * @since 1.26\n  */\n\tColumnListItem.prototype.getTabbables = function () {\n\t\treturn this.$().add(this.$Popin()).find(\":sapTabbable\");\n\t};\n\n\tColumnListItem.prototype.getAccessibilityType = function (oBundle) {\n\t\treturn oBundle.getText(\"ACC_CTR_TYPE_ROW\");\n\t};\n\n\tColumnListItem.prototype.getContentAnnouncement = function (oBundle) {\n\t\tvar oTable = this.getTable();\n\t\tif (!oTable) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sAnnouncement = \"\",\n\t\t    aCells = this.getCells(),\n\t\t    aColumns = oTable.getColumns(true);\n\n\t\taColumns.forEach(function (oColumn) {\n\t\t\tvar oCell = aCells[oColumn.getInitialOrder()];\n\t\t\tif (!oCell || !oColumn.getVisible() || oColumn.isHidden() && !oColumn.isPopin()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oHeader = oColumn.getHeader();\n\t\t\tif (oHeader && oHeader.getVisible()) {\n\t\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oHeader) + \" \";\n\t\t\t}\n\n\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oCell, true) + \" \";\n\t\t});\n\n\t\treturn sAnnouncement;\n\t};\n\n\t// update the aria-selected for the cells\n\tColumnListItem.prototype.updateSelectedDOM = function (bSelected, $This) {\n\t\tListItemBase.prototype.updateSelectedDOM.apply(this, arguments);\n\n\t\t// update popin as well\n\t\tif (this.hasPopin()) {\n\t\t\tthis.$Popin().attr(\"aria-selected\", bSelected);\n\t\t}\n\t};\n\n\t// informs the table when item's type column requirement is changed\n\tColumnListItem.prototype._checkTypeColumn = function (bNeedsTypeColumn) {\n\t\tif (bNeedsTypeColumn == undefined) {\n\t\t\tbNeedsTypeColumn = this._needsTypeColumn();\n\t\t}\n\n\t\tif (this._bNeedsTypeColumn != bNeedsTypeColumn) {\n\t\t\tthis._bNeedsTypeColumn = bNeedsTypeColumn;\n\t\t\tthis.informList(\"TypeColumnChange\", bNeedsTypeColumn);\n\t\t}\n\t};\n\n\t// determines whether type column for this item is necessary or not\n\tColumnListItem.prototype._needsTypeColumn = function () {\n\t\tvar sType = this.getType(),\n\t\t    mType = ListType;\n\n\t\treturn this.getVisible() && (sType == mType.Detail || sType == mType.Navigation || sType == mType.DetailAndActive);\n\t};\n\n\t// Adds cloned header to the local collection\n\tColumnListItem.prototype._addClonedHeader = function (oHeader) {\n\t\treturn this._aClonedHeaders.push(oHeader);\n\t};\n\n\t// Destroys cloned headers that are generated for popin\n\tColumnListItem.prototype._destroyClonedHeaders = function () {\n\t\tif (this._aClonedHeaders.length) {\n\t\t\tthis._aClonedHeaders.forEach(function (oClone) {\n\t\t\t\toClone.destroy(\"KeepDom\");\n\t\t\t});\n\t\t\tthis._aClonedHeaders = [];\n\t\t}\n\t};\n\n\t// active feedback for pop-in\n\tColumnListItem.prototype._activeHandlingInheritor = function () {\n\t\tthis._toggleActiveClass(true);\n\t};\n\n\t// inactive feedback for pop-in\n\tColumnListItem.prototype._inactiveHandlingInheritor = function () {\n\t\tthis._toggleActiveClass(false);\n\t};\n\n\t// toggles the active class of the pop-in.\n\tColumnListItem.prototype._toggleActiveClass = function (bSwitch) {\n\t\tif (this.hasPopin()) {\n\t\t\tthis.$Popin().toggleClass(\"sapMLIBActive\", bSwitch);\n\t\t}\n\t};\n\n\treturn ColumnListItem;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.ColumnListItemRenderer\", __webpack_require__(\"RNqf\"));\n\n/***/ }),\n\n/***/ \"8rlm\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"r+Rv\");\n/*\n * ! UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"20/6\"), __webpack_require__(\"YPoY\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (Control, Icon) {\n\t\"use strict\";\n\n\t/**\n  * Constructor for the control.\n  * @param {string} [sId] id for the new control.\n  * @param {string} [mSettings] initial settings for the new control.\n  *\n  * @class\n  * The <code>ColumnHeader</code> control provides the capabilities to perform sorting, filter and grouping on a table column.\n  * @extends sap.ui.core.Control\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @since 1.52\n  * @private\n  * @alias sap.m.ColumnHeader\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\n\tvar ColumnHeader = Control.extend(\"sap.m.ColumnHeader\", /** @lends sap.m.ColumnHeader.prototype */\n\t{\n\t\tlibrary: \"sap.m\",\n\t\tmetadata: {\n\t\t\tproperties: {\n\t\t\t\t/**\n     * Defines title for the <code>ColumnHeader</code> control.\n     */\n\t\t\t\ttext: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdefaultValue: null\n\t\t\t\t},\n\n\t\t\t\t/**\n     * This property can be used to predefine sorting\n     */\n\t\t\t\tsorted: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdefaultValue: false\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Defines the sort order (Ascending/Descending).\n     */\n\t\t\t\tsortOrder: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdefaultValue: null\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Defines whether filters are applied.\n     */\n\t\t\t\tfiltered: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdefaultValue: false\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefaultAggregations: \"viewSettingsPopover\",\n\t\t\taggregations: {\n\t\t\t\t/**\n     * <code>ViewSettingsPopover</code> control to be displayed with the <code>ColumnHeader</code> control.\n     */\n\t\t\t\tviewSettingsPopover: {\n\t\t\t\t\ttype: \"sap.m.ViewSettingsPopover\",\n\t\t\t\t\tmultiple: false\n\t\t\t\t},\n\n\t\t\t\t_sortIcon: {\n\t\t\t\t\ttype: \"sap.ui.core.Icon\",\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tvisibility: \"hidden\"\n\t\t\t\t},\n\n\t\t\t\t_filterIcon: {\n\t\t\t\t\ttype: \"sap.ui.core.Icon\",\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tvisibility: \"hidden\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n  * Sets the <code>ViewSettingsAggregation</code> aggregation for the <code>ColumnHeader</code> control.\n  * @private\n  */\n\tColumnHeader.prototype.setViewSettingsPopover = function (oViewSettingsPopover) {\n\t\t// the property should be made Public when the control is made public\n\t\tthis.setAggregation(\"viewSettingsPopover\", oViewSettingsPopover, true);\n\t\tthis._attachViewSettingsPopoverEvents();\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the sort order as well as sets the required sort icon.\n  */\n\tColumnHeader.prototype.setSortOrder = function (sSortOrder) {\n\t\t// the property should be made Public when the control is made public\n\t\tthis.setProperty(\"sortOrder\", sSortOrder);\n\n\t\tvar sIconUrl = sSortOrder === \"Ascending\" ? \"sap-icon://sort-ascending\" : \"sap-icon://sort-descending\";\n\t\tvar oSortIcon = this.getAggregation(\"_sortIcon\");\n\t\tif (!oSortIcon) {\n\t\t\tthis.setAggregation(\"_sortIcon\", new Icon({\n\t\t\t\tsrc: sIconUrl,\n\t\t\t\tvisible: this.getSorted()\n\t\t\t}));\n\t\t} else {\n\t\t\toSortIcon.setSrc(sIconUrl);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Defines if sorting is applied and sets the sort icon on the <code>ColumnHeader</code> control.\n  */\n\tColumnHeader.prototype.setSorted = function (bSorted) {\n\t\tthis.setProperty(\"sorted\", bSorted);\n\t\tvar oSortIcon = this.getAggregation(\"_sortIcon\");\n\n\t\tif (!bSorted && !oSortIcon) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (bSorted) {\n\t\t\tif (!oSortIcon) {\n\t\t\t\tthis.setAggregation(\"_sortIcon\", new Icon({\n\t\t\t\t\tsrc: this.getSortOrder() === \"Ascending\" ? \"sap-icon://sort-ascending\" : \"sap-icon://sort-descending\"\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\toSortIcon.setVisible(true);\n\t\t\t}\n\t\t} else {\n\t\t\toSortIcon.setVisible(false);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Defines if filtering is applied and sets the filter icon on the <code>ColumnHeader</code> control.\n  */\n\tColumnHeader.prototype.setFiltered = function (bFiltered) {\n\t\t// the property should be made Public when the control is made public\n\t\tthis.setProperty(\"filtered\", bFiltered);\n\t\tvar oFilterIcon = this.getAggregation(\"_filterIcon\");\n\n\t\tif (!bFiltered && !oFilterIcon) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (bFiltered) {\n\t\t\tif (!oFilterIcon) {\n\t\t\t\tthis.setAggregation(\"_filterIcon\", new Icon({\n\t\t\t\t\tsrc: \"sap-icon://filter\"\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\toFilterIcon.setVisible(true);\n\t\t\t}\n\t\t} else {\n\t\t\toFilterIcon.setVisible(false);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the adapter for the <code>ColumnHeader</code> control.\n  * @param {object} oAdapter table adapter.\n  * @private\n  */\n\tColumnHeader.prototype.setTableAdapter = function (oAdapter) {\n\t\tthis._oAdapter = oAdapter;\n\t};\n\n\t/**\n  * Get the column adapter based on the adapter type.\n  * Currently defaulted to ResponsiveTableAdapter.\n  *\n  * @returns {oAdapter} adapter to be used.\n  * @private\n  */\n\tColumnHeader.prototype.getTableAdapter = function () {\n\t\treturn this._oAdapter || {\n\t\t\tinteractive: true,\n\t\t\trowAggregation: \"items\"\n\t\t};\n\t};\n\n\t/**\n  * Click event for opening the <code>ViewSettingsPopover<code> control.\n  * @param {object} oEvent Triggers the opening of the <code>ViewSettingsPopover<code> control.\n  * @private\n  */\n\tColumnHeader.prototype.onclick = function (oEvent) {\n\t\tif (this._isInteractive()) {\n\t\t\tthis._openColumnActions();\n\t\t}\n\t};\n\n\tColumnHeader.prototype.onsapselect = ColumnHeader.prototype.onclick;\n\n\t/**\n  * Handler for opening the ViewSettingsPopover.\n  * @private\n  */\n\tColumnHeader.prototype._openColumnActions = function () {\n\t\tvar oViewSettingsPopover = this.getViewSettingsPopover();\n\t\tif (oViewSettingsPopover != null) {\n\t\t\tvar $this = this.$();\n\t\t\toViewSettingsPopover.openBy(this);\n\t\t\t// overwrite the popover position to open over the Column\n\t\t\toViewSettingsPopover._getPopover(this).setOffsetY(-$this.outerHeight());\n\t\t}\n\t};\n\n\t/**\n  * This function is used to attach events of the <code>ViewSettingsPopover</code> control.\n  * @private\n  */\n\tColumnHeader.prototype._attachViewSettingsPopoverEvents = function () {\n\t\tvar oViewSettingsPopover = this.getViewSettingsPopover();\n\t\tif (oViewSettingsPopover) {\n\t\t\tthis._detachViewSettingsPopoverEvents(oViewSettingsPopover);\n\t\t\toViewSettingsPopover.attachSortSelected(this.onSortSelected, this);\n\t\t\toViewSettingsPopover.attachFilterSelected(this.onFilterSelected, this);\n\t\t}\n\t};\n\n\t/**\n  * This function is used to detach events of the <code>ViewSettingsPopover</code> control.\n  * @param {object} oViewSettingsPopover ViewSettingsPopover.\n  * @private\n  */\n\tColumnHeader.prototype._detachViewSettingsPopoverEvents = function (oViewSettingsPopover) {\n\t\toViewSettingsPopover.detachSortSelected(this.onSortSelected, this);\n\t\toViewSettingsPopover.detachFilterSelected(this.onFilterSelected, this);\n\t};\n\n\t/**\n  * Sort functionality.\n  * @private\n  */\n\tColumnHeader.prototype.onSortSelected = function () {\n\t\t// TBD: viewSettingsPopover do not provide parameters for getting the sort order\n\t\t// should be discussed with viewSettingsPopover colleagues.\n\t\tif (!this.getSorted()) {\n\t\t\tthis.setSorted(true);\n\t\t}\n\n\t\tif (this.getSortOrder() === \"\" || this.getSortOrder() === \"Descending\") {\n\t\t\tthis.setSortOrder(\"Ascending\");\n\t\t} else {\n\t\t\tthis.setSortOrder(\"Descending\");\n\t\t}\n\t};\n\n\t/**\n  * Filter functionality.\n  * @private\n  */\n\tColumnHeader.prototype.onFilterSelected = function () {\n\t\t// TBD: ViewSettingsPopover does not provide event for clearing the Filters\n\t\t// this is also needed so that the application can react on it and clear the filtering on the table\n\t\t// should be discussed with ViewSettingsPopover colleagues\n\t\tthis.setFiltered(true);\n\t};\n\n\tColumnHeader.prototype.getAccessibilityInfo = function () {\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\"),\n\t\t    sAnnouncement = this.getText() + \" \";\n\n\t\tif (this._isInteractive()) {\n\t\t\tif (this.getSortOrder()) {\n\t\t\t\tsAnnouncement += oBundle.getText(\"COLUMNHEADER_SORTED\") + \" \";\n\t\t\t\tsAnnouncement += (this.getSortOrder() === \"Ascending\" ? oBundle.getText(\"COLUMNHEADER_SORTED_ASCENDING\") : oBundle.getText(\"COLUMNHEADER_SORTED_DESCENDING\")) + \" \";\n\t\t\t}\n\n\t\t\tif (this.getFiltered()) {\n\t\t\t\tsAnnouncement += oBundle.getText(\"COLUMNHEADER_FILTERED\") + \" \";\n\t\t\t}\n\n\t\t\tsAnnouncement += oBundle.getText(\"COLUMNHEADER_ACCESS_COLUMN_ACTIONS\");\n\n\t\t\treturn {\n\t\t\t\trole: \"button\",\n\t\t\t\tfocusable: true,\n\t\t\t\tdescription: sAnnouncement\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tfocusable: false,\n\t\t\tdescription: sAnnouncement\n\t\t};\n\t};\n\n\tColumnHeader.prototype._isInteractive = function () {\n\t\treturn this.getTableAdapter().interactive && !!this.getViewSettingsPopover();\n\t};\n\n\tColumnHeader.prototype.exit = function () {\n\t\tthis._oAdapter = null;\n\t};\n\n\treturn ColumnHeader;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.ColumnHeaderRenderer\", __webpack_require__(\"428w\"));\n\n/***/ }),\n\n/***/ \"9z75\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"wTGv\"), __webpack_require__(\"CcuP\"), __webpack_require__(\"BRbz\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (coreLibrary, ValueStateSupport, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.ValueState\n\n\tvar ValueState = coreLibrary.ValueState;\n\n\t/**\n  * CheckBox renderer.\n  * @namespace\n  */\n\tvar CheckBoxRenderer = {};\n\n\t/**\n  * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the Render-Output-Buffer\n  * @param {sap.ui.core.Control} oCheckBox An object representation of the control that should be rendered\n  */\n\tCheckBoxRenderer.render = function (oRm, oCheckBox) {\n\t\t// get control properties\n\t\tvar sId = oCheckBox.getId(),\n\t\t    bEnabled = oCheckBox.getEnabled(),\n\t\t    bEditable = oCheckBox.getEditable(),\n\t\t    oCbLabel = oCheckBox.getAggregation(\"_label\"),\n\t\t    bInErrorState = ValueState.Error === oCheckBox.getValueState(),\n\t\t    bInWarningState = ValueState.Warning === oCheckBox.getValueState(),\n\t\t    bUseEntireWidth = oCheckBox.getUseEntireWidth();\n\n\t\t// CheckBox wrapper\n\t\toRm.write(\"<div\");\n\t\toRm.addClass(\"sapMCb\");\n\n\t\tif (!bEditable) {\n\t\t\toRm.addClass(\"sapMCbRo\");\n\t\t}\n\n\t\tif (!bEnabled) {\n\t\t\toRm.addClass(\"sapMCbBgDis\");\n\t\t}\n\n\t\tif (bInErrorState) {\n\t\t\toRm.addClass(\"sapMCbErr\");\n\t\t} else if (bInWarningState) {\n\t\t\toRm.addClass(\"sapMCbWarn\");\n\t\t}\n\n\t\tif (oCheckBox.getText()) {\n\t\t\toRm.addClass(\"sapMCbHasLabel\");\n\t\t}\n\n\t\toRm.writeControlData(oCheckBox);\n\t\toRm.writeClasses();\n\n\t\tif (bUseEntireWidth) {\n\t\t\toRm.addStyle(\"width\", oCheckBox.getWidth());\n\t\t\toRm.writeStyles();\n\t\t}\n\n\t\tvar sTooltip = ValueStateSupport.enrichTooltip(oCheckBox, oCheckBox.getTooltip_AsString());\n\t\tif (sTooltip) {\n\t\t\toRm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\tif (bEnabled) {\n\t\t\toRm.writeAttribute(\"tabindex\", oCheckBox.getTabIndex());\n\t\t}\n\n\t\t//ARIA attributes\n\t\toRm.writeAccessibilityState(oCheckBox, {\n\t\t\trole: \"checkbox\",\n\t\t\tselected: null,\n\t\t\tchecked: oCheckBox.getSelected(),\n\t\t\tdescribedby: sTooltip ? sId + \"-Descr\" : undefined\n\t\t});\n\n\t\toRm.write(\">\"); // DIV element\n\n\t\t// write the HTML into the render manager\n\t\toRm.write(\"<div id='\");\n\t\toRm.write(oCheckBox.getId() + \"-CbBg'\");\n\n\t\t// CheckBox style class\n\t\toRm.addClass(\"sapMCbBg\");\n\n\t\tif (bEnabled && bEditable && Device.system.desktop) {\n\t\t\toRm.addClass(\"sapMCbHoverable\");\n\t\t}\n\n\t\tif (!oCheckBox.getActiveHandling()) {\n\t\t\toRm.addClass(\"sapMCbActiveStateOff\");\n\t\t}\n\n\t\toRm.addClass(\"sapMCbMark\"); // TODO: sapMCbMark is redundant, remove it and simplify CSS\n\n\t\tif (oCheckBox.getSelected()) {\n\t\t\toRm.addClass(\"sapMCbMarkChecked\");\n\t\t}\n\t\toRm.writeClasses();\n\n\t\toRm.write(\">\"); // DIV element\n\n\t\toRm.write(\"<input type='CheckBox' id='\");\n\t\toRm.write(oCheckBox.getId() + \"-CB'\");\n\n\t\tif (oCheckBox.getSelected()) {\n\t\t\toRm.writeAttribute(\"checked\", \"checked\");\n\t\t}\n\n\t\tif (oCheckBox.getName()) {\n\t\t\toRm.writeAttributeEscaped('name', oCheckBox.getName());\n\t\t}\n\n\t\tif (!bEnabled) {\n\t\t\toRm.write(\" disabled=\\\"disabled\\\"\");\n\t\t}\n\n\t\tif (!bEditable) {\n\t\t\toRm.write(\" readonly=\\\"readonly\\\"\");\n\t\t}\n\n\t\toRm.write(\" /></div>\");\n\t\toRm.renderControl(oCbLabel);\n\n\t\tif (sTooltip && sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\t// for ARIA, the tooltip must be in a separate SPAN and assigned via aria-describedby.\n\t\t\t// otherwise, JAWS does not read it.\n\t\t\toRm.write(\"<span id=\\\"\" + sId + \"-Descr\\\" class=\\\"sapUiHidden\\\">\");\n\t\t\toRm.writeEscaped(sTooltip);\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\n\t\toRm.write(\"</div>\");\n\t};\n\n\treturn CheckBoxRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"A1Do\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.ui.core.ListItem.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"dg/h\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (Item, library) {\n\t\"use strict\";\n\n\t/**\n  * Constructor for a new ListItem.\n  *\n  * @param {string} [sId] id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] initial settings for the new control\n  *\n  * @class\n  * An item that is used in lists or list-similar controls such as DropdownBox, for example.\n  * The element foresees the usage of additional texts displayed in a second column.\n  * @extends sap.ui.core.Item\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @public\n  * @alias sap.ui.core.ListItem\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\n\tvar ListItem = Item.extend(\"sap.ui.core.ListItem\", /** @lends sap.ui.core.ListItem.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.ui.core\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * The icon belonging to this list item instance.\n     * This can be a URI to an image or an icon font URI.\n     */\n\t\t\t\ticon: { type: \"string\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Some additional text of type string, optionally to be displayed along with this item.\n     */\n\t\t\t\tadditionalText: { type: \"string\", group: \"Data\", defaultValue: null }\n\t\t\t}\n\t\t} });\n\n\treturn ListItem;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"ACjf\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"2NKA\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Label\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"20/6\"), __webpack_require__(\"LFMt\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, library, Control, LabelEnablement, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.ui.core.TextAlign\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.m.LabelDesign\n\tvar LabelDesign = library.LabelDesign;\n\n\t/**\n  * Constructor for a new Label.\n  *\n  * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * Provides a textual label for other controls.\n  * Label appearance can be influenced by properties such as <code>textAlign</code>, <code>design</code>,\n  * <code>displayOnly</code> and <code>wrapping</code>.\n  * As of version 1.50 the default value of the <code>wrapping</code> property is set to <code>false</code>\n  *\n  * Labels for required fields are marked with an asterisk.\n  * <h3>Overview</h3>\n  * Labels are used as titles for single controls or groups of controls.\n  * <h3>Usage</h3>\n  * <h4>When to use</h4>\n  * <ul>\n  * <li>It's recommended to use the <code>Label</code> in Form controls.</li>\n  * <li>Use title case for labels.</li>\n  * </ul>\n  * <h4>When not to use</h4>\n  * <ul>\n  * <li> It is not recommended to use labels in Bold.</li>\n  * </ul>\n  * @extends sap.ui.core.Control\n  * @implements sap.ui.core.Label, sap.ui.core.IShrinkable\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.Label\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar Label = Control.extend(\"sap.m.Label\", /** @lends sap.m.Label.prototype */{ metadata: {\n\n\t\t\tinterfaces: [\"sap.ui.core.Label\", \"sap.ui.core.IShrinkable\"],\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Sets the design of a Label to either Standard or Bold.\n     */\n\t\t\t\tdesign: { type: \"sap.m.LabelDesign\", group: \"Appearance\", defaultValue: LabelDesign.Standard },\n\n\t\t\t\t/**\n     * Determines the Label text to be displayed.\n     */\n\t\t\t\ttext: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n     */\n\t\t\t\ttextAlign: { type: \"sap.ui.core.TextAlign\", group: \"Appearance\", defaultValue: TextAlign.Begin },\n\n\t\t\t\t/**\n     * Options for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n     */\n\t\t\t\ttextDirection: { type: \"sap.ui.core.TextDirection\", group: \"Appearance\", defaultValue: TextDirection.Inherit },\n\n\t\t\t\t/**\n     * Determines the width of the label.\n     */\n\t\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: '' },\n\n\t\t\t\t/**\n     * Indicates that user input is required for input control labeled by the sap.m.Label.\n     * When the property is set to true and associated input field is empty an asterisk character is added to the label text.\n     */\n\t\t\t\trequired: { type: \"boolean\", group: \"Misc\", defaultValue: false },\n\n\t\t\t\t/**\n     * Determines if the label is in displayOnly mode. Controls in this mode are neither interactive, nor editable, nor focusable, and not in the tab chain.\n     *\n     * <b>Note:</b> This property should be used only in Form controls in preview mode.\n     *\n     * @since 1.50.0\n     */\n\t\t\t\tdisplayOnly: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Determines the wrapping of the text within the <code>Label</code>.\n     * If set to true the <code>Label</code> will wrap, when set to false the <code>Label</code> will be truncated and replaced with ellipsis which is the default behavior.\n     *\n     * @since 1.50\n     */\n\t\t\t\twrapping: { type: \"boolean\", group: \"Appearance\", defaultValue: false }\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n     * Association to the labeled control.\n     * By default the label set the for attribute to the ID of the labeled control. This can be changed by implementing the function getIdForLabel on the labelled control.\n     */\n\t\t\t\tlabelFor: { type: \"sap.ui.core.Control\", multiple: false }\n\t\t\t},\n\t\t\tdesignTime: true\n\t\t} });\n\n\tLabel.prototype.setText = function (sText) {\n\n\t\tvar sValue = this.getText();\n\n\t\tif (sValue !== sText) {\n\n\t\t\tthis.setProperty(\"text\", sText, true);\n\n\t\t\tthis.$(\"bdi\").html(jQuery.sap.encodeHTML(this.getProperty(\"text\")));\n\n\t\t\tif (sText) {\n\t\t\t\tthis.$().removeClass(\"sapMLabelNoText\");\n\t\t\t} else {\n\t\t\t\tthis.$().addClass(\"sapMLabelNoText\");\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\tLabel.prototype.setTooltip = function (oTooltip) {\n\t\tvar oValue = this.getTooltip();\n\t\tif (oValue !== oTooltip) {\n\t\t\tthis.setAggregation(\"tooltip\", oTooltip, true);\n\t\t\tthis.$().attr(\"title\", this.getTooltip());\n\t\t}\n\t\treturn this;\n\t};\n\n\tLabel.prototype.setDisplayOnly = function (displayOnly) {\n\t\tif (typeof displayOnly !== \"boolean\") {\n\t\t\tjQuery.sap.log.error(\"DisplayOnly property should be boolean. The new value will not be set\");\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.$().toggleClass(\"sapMLabelDisplayOnly\", displayOnly);\n\n\t\treturn Control.prototype.setProperty.call(this, \"displayOnly\", displayOnly);\n\t};\n\n\t/**\n  * @see sap.ui.core.Control#getAccessibilityInfo Provides the current accessibility state of the control.\n  * @protected\n  */\n\tLabel.prototype.getAccessibilityInfo = function () {\n\t\treturn { description: this.getText() };\n\t};\n\n\t// enrich Label functionality\n\tLabelEnablement.enrich(Label.prototype);\n\n\treturn Label;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.LabelRenderer\", __webpack_require__(\"VwGf\"));\n\n/***/ }),\n\n/***/ \"ANvT\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"s5vy\"), __webpack_require__(\"ax/N\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListItemBaseRenderer, Renderer, library, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\t/**\n  * StandardListItem renderer.\n  * @namespace\n  */\n\tvar StandardListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\t/**\n  * Renders the HTML for the given control, using the provided\n  * {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager}\n  *          oRenderManager the RenderManager that can be used for writing to the\n  *          Render-Output-Buffer\n  * @param {sap.ui.core.Control}\n  *          oControl an object representation of the control that should be\n  *          rendered\n  */\n\tStandardListItemRenderer.renderLIAttributes = function (rm, oLI) {\n\t\trm.addClass(\"sapMSLI\");\n\t\tif (oLI.getIcon()) {\n\t\t\trm.addClass(\"sapMSLIIcon\");\n\t\t}\n\t\tif (!oLI.getIconInset()) {\n\t\t\trm.addClass(\"sapMSLIIconThumb\");\n\t\t}\n\t\tif ((oLI.getDescription() || !oLI.getAdaptTitleSize()) && oLI.getIcon() && oLI.getIconInset()) {\n\t\t\trm.addClass(\"sapMSLIDescIcon\");\n\t\t}\n\t\tif ((oLI.getDescription() || !oLI.getAdaptTitleSize()) && !oLI.getIcon()) {\n\t\t\trm.addClass(\"sapMSLIDescNoIcon\");\n\t\t}\n\t\tif (!oLI.getDescription() && oLI.getIcon()) {\n\t\t\trm.addClass(\"sapMSLINoDescIcon\");\n\t\t}\n\t\tif (oLI.getType() == ListType.Detail || oLI.getType() == ListType.DetailAndActive) {\n\t\t\trm.addClass(\"sapMSLIDetail\");\n\t\t}\n\t};\n\n\tStandardListItemRenderer.renderLIContent = function (rm, oLI) {\n\n\t\tvar sInfo = oLI.getInfo(),\n\t\t    sInfoDir = oLI.getInfoTextDirection(),\n\t\t    sTextDir = oLI.getTitleTextDirection(),\n\t\t    sDescription = oLI.getTitle() && (oLI.getDescription() || !oLI.getAdaptTitleSize());\n\n\t\t// render image\n\t\tif (oLI.getIcon()) {\n\t\t\trm.renderControl(oLI._getImage());\n\t\t}\n\n\t\tif (sDescription) {\n\t\t\trm.write('<div class=\"sapMSLIDiv\">');\n\t\t}\n\n\t\trm.write(\"<div\");\n\t\tif (!sDescription) {\n\t\t\trm.addClass(\"sapMSLIDiv\");\n\t\t}\n\t\trm.addClass(\"sapMSLITitleDiv\");\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\t// List item text (also written when no title for keeping the space)\n\t\trm.write(\"<div\");\n\t\trm.addClass(sDescription ? \"sapMSLITitle\" : \"sapMSLITitleOnly\");\n\t\trm.writeClasses();\n\t\tif (sTextDir !== TextDirection.Inherit) {\n\t\t\trm.writeAttribute(\"dir\", sTextDir.toLowerCase());\n\t\t}\n\t\trm.write(\">\");\n\t\trm.writeEscaped(oLI.getTitle());\n\t\trm.write(\"</div>\");\n\n\t\t//info div top when @sapUiInfoTop: true;\n\t\tif (sInfo && !sDescription) {\n\t\t\trm.write(\"<div\");\n\t\t\trm.writeAttribute(\"id\", oLI.getId() + \"-info\");\n\t\t\trm.addClass(\"sapMSLIInfo\");\n\t\t\trm.addClass(\"sapMSLIInfo\" + oLI.getInfoState());\n\t\t\trm.writeClasses();\n\t\t\tif (sInfoDir !== TextDirection.Inherit) {\n\t\t\t\trm.writeAttribute(\"dir\", sInfoDir.toLowerCase());\n\t\t\t}\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(sInfo);\n\t\t\trm.write(\"</div>\");\n\t\t}\n\n\t\trm.write(\"</div>\");\n\n\t\trm.write('<div class=\"sapMSLIDescriptionDiv\">');\n\n\t\t// List item text\n\t\tif (sDescription) {\n\t\t\trm.write('<div class=\"sapMSLIDescription\">');\n\t\t\tif (oLI.getDescription()) {\n\t\t\t\trm.writeEscaped(oLI.getDescription());\n\t\t\t} else {\n\t\t\t\trm.write(\"&nbsp;\");\n\t\t\t}\n\t\t\trm.write(\"</div>\");\n\t\t}\n\n\t\tif (sInfo && sDescription) {\n\t\t\trm.write(\"<div\");\n\t\t\trm.writeAttribute(\"id\", oLI.getId() + \"-info\");\n\t\t\trm.addClass(\"sapMSLIInfo\");\n\t\t\trm.addClass(\"sapMSLIInfo\" + oLI.getInfoState());\n\t\t\trm.writeClasses();\n\t\t\tif (sInfoDir !== TextDirection.Inherit) {\n\t\t\t\trm.writeAttribute(\"dir\", sInfoDir.toLowerCase());\n\t\t\t}\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(sInfo);\n\t\t\trm.write(\"</div>\");\n\t\t}\n\n\t\trm.write(\"</div>\");\n\n\t\tif (sDescription) {\n\t\t\trm.write(\"</div>\");\n\t\t}\n\t};\n\n\treturn StandardListItemRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"BgZA\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"IVex\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.App.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"5iCT\"), __webpack_require__(\"nPt9\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, NavContainer, library) {\n\t\"use strict\";\n\n\t/**\n  * Constructor for a new <code>App</code>.\n  *\n  * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * The root element of a UI5 mobile app.\n  *\n  * <h3>Overview</h3>\n  *\n  * The <code>App</code> inherits from {@link sap.m.NavContainer} and thus provides its navigation capabilities.\n  * It adds certain header tags to the HTML page which are considered useful for mobile apps.\n  *\n  * <h3>Usage</h3>\n  *\n  * You can configure the home icon of the <code>App</code>. For more information,\n  * see the <code>homeIcon</code> property.\n  *\n  * There are options for setting the background color and a background image with the use of the\n  * <code>backgroundColor</code> and <code>backgroundImage</code> properties.\n  *\n  * @extends sap.m.NavContainer\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.App\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\n\tvar App = NavContainer.extend(\"sap.m.App\", /** @lends sap.m.App.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * The icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\n     *\n     * Note that only the first attempt to set the homeIcon will be executed, subsequent settings are ignored.\n     *\n     * This icon must be in PNG format. The property can either hold the URL of one single icon which is used for all devices (and possibly scaled, which looks not perfect), or an object holding icon URLs for the different required sizes.\n     *\n     * A desktop icon (used for bookmarks and overriding the favicon) can also be configured. This requires an object to be given and the \"icon\" property of this object then defines the desktop bookmark icon. For this icon, PNG is not supported by Internet Explorer. The ICO format is supported by all browsers. ICO is also preferred for this desktop icon setting because the file can contain different images for different resolutions.\n     *\n     * One example is:\n     *\n     * app.setHomeIcon({\n     * 'phone':'phone-icon.png',\n     * 'phone@2':'phone-retina.png',\n     * 'tablet':'tablet-icon.png',\n     * 'tablet@2':'tablet-retina.png',\n     * 'icon':'desktop.ico'\n     * });\n     *\n     * The respective image sizes are 57/114 px for the phone and 72/144 px for the tablet.\n     * If an object is given but one of the sizes is not given, the largest given icon will be used for this size.\n     *\n     * On Android these icons may or may not be used by the device. Apparently chances can be improved by adding glare effect and rounded corners, setting the file name so it ends with \"-precomposed.png\" and setting the \"homeIconPrecomposed\" property to \"true\".\n     */\n\t\t\t\thomeIcon: { type: \"any\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Background color of the App. If set, this color will override the default background defined by the theme. So this should only be set when really required.\n     * Any configured background image will be placed above this colored background. But any theme adaptation in the Theme Designer will override this setting.\n     * Use the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled.\n     * @since 1.11.2\n     */\n\t\t\t\tbackgroundColor: { type: \"string\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Background image of the App. If set, this image will override the default background defined by the theme. So this should only be set when really required.\n     * This background image will be placed above any color set for the background. But any theme adaptation in the Theme Designer will override this image setting.\n     * Use the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled.\n     * @since 1.11.2\n     */\n\t\t\t\tbackgroundImage: { type: \"sap.ui.core.URI\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Whether the background image (if configured) should be proportionally stretched to cover the whole App (false) or whether it should be tiled (true).\n     * @since 1.11.2\n     */\n\t\t\t\tbackgroundRepeat: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Opacity of the background image. The opacity can be set between 0 (fully transparent) and 1 fully opaque).\n     * This can be used to make the application content better readable by making the background image partly transparent.\n     * @since 1.11.2\n     */\n\t\t\t\tbackgroundOpacity: { type: \"float\", group: \"Appearance\", defaultValue: 1 }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * Fired when the orientation (portrait/landscape) of the device is changed.\n     * @deprecated Since version 1.20.0.\n     * use sap.ui.Device.orientation.attachHandler(...)\n     */\n\t\t\t\torientationChange: { deprecated: true,\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * Whether the device is in landscape orientation.\n       */\n\t\t\t\t\t\tlandscape: { type: \"boolean\" }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} });\n\n\tApp.prototype.init = function () {\n\t\tNavContainer.prototype.init.apply(this, arguments);\n\n\t\tthis.addStyleClass(\"sapMApp\");\n\t\tjQuery.sap.initMobile({\n\t\t\tviewport: !this._debugZoomAndScroll,\n\t\t\tstatusBar: \"default\",\n\t\t\thideBrowser: true,\n\t\t\tpreventScroll: !this._debugZoomAndScroll,\n\t\t\trootId: this.getId()\n\t\t});\n\t\tjQuery(window).bind(\"resize\", jQuery.proxy(this._handleOrientationChange, this));\n\t};\n\n\tApp.prototype.onBeforeRendering = function () {\n\t\tif (NavContainer.prototype.onBeforeRendering) {\n\t\t\tNavContainer.prototype.onBeforeRendering.apply(this, arguments);\n\t\t}\n\t\tjQuery.sap.initMobile({\n\t\t\thomeIcon: this.getHomeIcon()\n\t\t});\n\t};\n\n\tApp.prototype.onAfterRendering = function () {\n\t\tif (NavContainer.prototype.onAfterRendering) {\n\t\t\tNavContainer.prototype.onAfterRendering.apply(this, arguments);\n\t\t}\n\t\tvar ref = this.getDomRef().parentNode;\n\t\t// set all parent elements to 100% height this *should* be done by the application in CSS, but people tend to forget it...\n\t\twhile (ref && ref !== document.documentElement) {\n\t\t\tvar $ref = jQuery(ref);\n\t\t\tif ($ref.attr(\"data-sap-ui-root-content\")) {\n\t\t\t\t// Shell as parent does this already\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!ref.style.height) {\n\t\t\t\tref.style.height = \"100%\";\n\t\t\t}\n\t\t\tref = ref.parentNode;\n\t\t}\n\t};\n\n\t/**\n  * Termination of the App control\n  * @private\n  */\n\tApp.prototype.exit = function () {\n\t\tjQuery(window).unbind(\"resize\", this._handleOrientationChange);\n\n\t\tif (this._sInitTimer) {\n\t\t\tjQuery.sap.clearDelayedCall(this._sInitTimer);\n\t\t}\n\t};\n\n\tApp.prototype._handleOrientationChange = function () {\n\t\tvar $window = jQuery(window);\n\t\tvar isLandscape = $window.width() > $window.height();\n\t\tif (this._oldIsLandscape !== isLandscape) {\n\t\t\tthis.fireOrientationChange({ landscape: isLandscape });\n\t\t\tthis._oldIsLandscape = isLandscape;\n\t\t}\n\t};\n\n\t// TODO: later, introduce tabs as a kind of separation between histories\n\n\n\t// API methods\n\n\tApp.prototype.setBackgroundOpacity = function (fOpacity) {\n\t\tif (fOpacity > 1 || fOpacity < 0) {\n\t\t\tjQuery.sap.log.warning(\"Invalid value \" + fOpacity + \" for App.setBackgroundOpacity() ignored. Valid values are: floats between 0 and 1.\");\n\t\t\treturn this;\n\t\t}\n\t\tthis.$(\"BG\").css(\"opacity\", fOpacity);\n\t\treturn this.setProperty(\"backgroundOpacity\", fOpacity, true); // no rerendering - live opacity change looks cooler\n\t};\n\n\treturn App;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.AppRenderer\", __webpack_require__(\"LFub\"));\n\n/***/ }),\n\n/***/ \"CD64\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"7Xmk\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.ListBase.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"FIFg\"), __webpack_require__(\"E8Q9\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"20/6\"), __webpack_require__(\"qTcm\"), __webpack_require__(\"Uj8/\"), __webpack_require__(\"LFMt\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"8WGD\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, GroupHeaderListItem, ListItemBase, library, Control, ItemNavigation, InvisibleText, LabelEnablement, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListType\n\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.m.ListKeyboardMode\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\t// shortcut for sap.m.ListGrowingDirection\n\tvar ListGrowingDirection = library.ListGrowingDirection;\n\n\t// shortcut for sap.m.SwipeDirection\n\tvar SwipeDirection = library.SwipeDirection;\n\n\t// shortcut for sap.m.ListSeparators\n\tvar ListSeparators = library.ListSeparators;\n\n\t// shortcut for sap.m.ListMode\n\tvar ListMode = library.ListMode;\n\n\t// shortcut for sap.m.ListHeaderDesign\n\tvar ListHeaderDesign = library.ListHeaderDesign;\n\n\t/**\n  * Constructor for a new ListBase.\n  *\n  * @param {string} [sId] Id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * The <code>sap.m.ListBase</code> control provides a base functionality of the <code>sap.m.List</code> and <code>sap.m.Table</code> controls. Selection, deletion, unread states and inset style are also maintained in <code>sap.m.ListBase</code>.\n  *\n  * See section \"{@link topic:295e44b2d0144318bcb7bdd56bfa5189 List, List Item, and Table}\"\n  * in the documentation for an introduction to subclasses of <code>sap.m.ListBase</code> control.\n  *\n  * <b>Note:</b> The ListBase including all contained items may be completely re-rendered when the data of a bound model is changed. Due to the limited hardware resources of mobile devices this can lead to longer delays for lists that contain many items. As such the usage of a list is not recommended for these use cases.\n  * @extends sap.ui.core.Control\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @since 1.16\n  * @alias sap.m.ListBase\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar ListBase = Control.extend(\"sap.m.ListBase\", /** @lends sap.m.ListBase.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Defines the indentation of the container. Setting it to <code>true</code> indents the list.\n     */\n\t\t\t\tinset: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines the header text that appears in the control.\n     * <b>Note:</b> If <code>headerToolbar</code> aggregation is set, then this property is ignored.\n     */\n\t\t\t\theaderText: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the header style of the control. Possible values are <code>Standard</code> and <code>Plain</code>.\n     * @since 1.14\n     * @deprecated Since version 1.16. No longer has any functionality.\n     */\n\t\t\t\theaderDesign: { type: \"sap.m.ListHeaderDesign\", group: \"Appearance\", defaultValue: ListHeaderDesign.Standard, deprecated: true },\n\n\t\t\t\t/**\n     * Defines the footer text that appears in the control.\n     */\n\t\t\t\tfooterText: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the mode of the control (e.g. <code>None</code>, <code>SingleSelect</code>, <code>MultiSelect</code>, <code>Delete</code>).\n     */\n\t\t\t\tmode: { type: \"sap.m.ListMode\", group: \"Behavior\", defaultValue: ListMode.None },\n\n\t\t\t\t/**\n     * Sets the width of the control.\n     */\n\t\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: '100%' },\n\n\t\t\t\t/**\n     * Defines whether the items are selectable by clicking on the item itself (<code>true</code>) rather than having to set the selection control first.\n     * <b>Note:</b> The <code>SingleSelectMaster</code> mode also provides this functionality by default.\n     */\n\t\t\t\tincludeItemInSelection: { type: \"boolean\", group: \"Behavior\", defaultValue: false },\n\n\t\t\t\t/**\n     * Activates the unread indicator for all items, if set to <code>true</code>.\n     */\n\t\t\t\tshowUnread: { type: \"boolean\", group: \"Misc\", defaultValue: false },\n\n\t\t\t\t/**\n     * This text is displayed when the control contains no items.\n     */\n\t\t\t\tnoDataText: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines whether or not the text specified in the <code>noDataText</code> property is displayed.\n     */\n\t\t\t\tshowNoData: { type: \"boolean\", group: \"Misc\", defaultValue: true },\n\n\t\t\t\t/**\n     * When this property is set to <code>true</code>, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\n     * By default, the busy indicator will be shown after one second. This behavior can be customized by setting the <code>busyIndicatorDelay</code> property.\n     * @since 1.20.2\n     */\n\t\t\t\tenableBusyIndicator: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * Defines if animations will be shown while switching between modes.\n     */\n\t\t\t\tmodeAnimationOn: { type: \"boolean\", group: \"Misc\", defaultValue: true },\n\n\t\t\t\t/**\n     * Defines which item separator style will be used.\n     */\n\t\t\t\tshowSeparators: { type: \"sap.m.ListSeparators\", group: \"Appearance\", defaultValue: ListSeparators.All },\n\n\t\t\t\t/**\n     * Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the <code>swipeContent</code> aggregation.\n     */\n\t\t\t\tswipeDirection: { type: \"sap.m.SwipeDirection\", group: \"Misc\", defaultValue: SwipeDirection.Both },\n\n\t\t\t\t/**\n     * If set to <code>true</code>, enables the growing feature of the control to load more items by requesting from the model.\n     * <b>Note:</b>: This feature only works when an <code>items</code> aggregation is bound. Growing must not be used together with two-way binding.\n     * @since 1.16.0\n     */\n\t\t\t\tgrowing: { type: \"boolean\", group: \"Behavior\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines the number of items to be requested from the model for each grow.\n     * This property can only be used if the <code>growing</code> property is set to <code>true</code>.\n     * @since 1.16.0\n     */\n\t\t\t\tgrowingThreshold: { type: \"int\", group: \"Misc\", defaultValue: 20 },\n\n\t\t\t\t/**\n     * Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\n     * This property can only be used if the <code>growing</code> property is set to <code>true</code>.\n     * @since 1.16.0\n     */\n\t\t\t\tgrowingTriggerText: { type: \"string\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * If set to true, the user can scroll down/up to load more items. Otherwise a growing button is displayed at the bottom/top of the control.\n     * <b>Note:</b> This property can only be used if the <code>growing</code> property is set to <code>true</code> and only if there is one instance of <code>sap.m.List</code> or <code>sap.m.Table</code> inside the scrollable scroll container (e.g <code>sap.m.Page</code>).\n     * @since 1.16.0\n     */\n\t\t\t\tgrowingScrollToLoad: { type: \"boolean\", group: \"Behavior\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines the direction of the growing feature.\n     * If set to <code>Downwards</code> the user has to scroll down to load more items or the growing button is displayed at the bottom.\n     * If set to <code>Upwards</code> the user has to scroll up to load more items or the growing button is displayed at the top.\n     * @since 1.40.0\n     */\n\t\t\t\tgrowingDirection: { type: \"sap.m.ListGrowingDirection\", group: \"Behavior\", defaultValue: ListGrowingDirection.Downwards },\n\n\t\t\t\t/**\n     * If set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\n     * <b>Note:</b> This feature works only if two-way data binding for the <code>selected</code> property of the item is not used. It also needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the <code>JSONModel</code> is changed.\n     * @since 1.16.6\n     */\n\t\t\t\trememberSelections: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * Defines keyboard handling behavior of the control.\n     * @since 1.38.0\n     */\n\t\t\t\tkeyboardMode: { type: \"sap.m.ListKeyboardMode\", group: \"Behavior\", defaultValue: ListKeyboardMode.Navigation }\n\t\t\t},\n\t\t\tdefaultAggregation: \"items\",\n\t\t\taggregations: {\n\n\t\t\t\t/**\n     * Defines the items contained within this control.\n     */\n\t\t\t\titems: { type: \"sap.m.ListItemBase\", multiple: true, singularName: \"item\", bindable: \"bindable\" },\n\n\t\t\t\t/**\n     * User can swipe to bring in this control on the right hand side of an item.\n     * <b>Note:</b> For non-touch devices, this functionality is ignored.\n     */\n\t\t\t\tswipeContent: { type: \"sap.ui.core.Control\", multiple: false },\n\n\t\t\t\t/**\n     * The header area can be used as a toolbar to add extra controls for user interactions.\n     * <b>Note:</b> When set, this overwrites the <code>headerText</code> property.\n     * @since 1.16\n     */\n\t\t\t\theaderToolbar: { type: \"sap.m.Toolbar\", multiple: false },\n\n\t\t\t\t/**\n     * A toolbar that is placed below the header to show extra information to the user.\n     * @since 1.16\n     */\n\t\t\t\tinfoToolbar: { type: \"sap.m.Toolbar\", multiple: false }\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n     * Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).\n     * @since 1.28.0\n     */\n\t\t\t\tariaLabelledBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaLabelledBy\" }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * Fires when selection is changed via user interaction. In <code>MultiSelect</code> mode, this event is also fired on deselection.\n     * @deprecated Since version 1.16.\n     * Use the <code>selectionChange</code> event instead.\n     */\n\t\t\t\tselect: { deprecated: true,\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The item which fired the select event.\n       */\n\t\t\t\t\t\tlistItem: { type: \"sap.m.ListItemBase\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Fires when selection is changed via user interaction inside the control.\n     * @since 1.16\n     */\n\t\t\t\tselectionChange: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The item whose selection has changed. In <code>MultiSelect</code> mode, only the up-most selected item is returned. This parameter can be used for single-selection modes.\n       */\n\t\t\t\t\t\tlistItem: { type: \"sap.m.ListItemBase\" },\n\n\t\t\t\t\t\t/**\n       * Array of items whose selection has changed. This parameter can be used for <code>MultiSelect</code> mode.\n       */\n\t\t\t\t\t\tlistItems: { type: \"sap.m.ListItemBase[]\" },\n\n\t\t\t\t\t\t/**\n       * Indicates whether the <code>listItem</code> parameter is selected or not.\n       */\n\t\t\t\t\t\tselected: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * Indicates whether the select all action is triggered or not.\n       */\n\t\t\t\t\t\tselectAll: { type: \"boolean\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Fires when delete icon is pressed by user.\n     */\n\t\t\t\t\"delete\": {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The item which fired the delete event.\n       */\n\t\t\t\t\t\tlistItem: { type: \"sap.m.ListItemBase\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Fires after user's swipe action and before the <code>swipeContent</code> is shown. On the <code>swipe</code> event handler, <code>swipeContent</code> can be changed according to the swiped item.\n     * Calling the <code>preventDefault</code> method of the event cancels the swipe action.\n     */\n\t\t\t\tswipe: { allowPreventDefault: true,\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The item which fired the swipe.\n       */\n\t\t\t\t\t\tlistItem: { type: \"sap.m.ListItemBase\" },\n\n\t\t\t\t\t\t/**\n       * Aggregated <code>swipeContent</code> control that is shown on the right hand side of the item.\n       */\n\t\t\t\t\t\tswipeContent: { type: \"sap.ui.core.Control\" },\n\n\t\t\t\t\t\t/**\n       * Holds which control caused the swipe event within the item.\n       */\n\t\t\t\t\t\tsrcControl: { type: \"sap.ui.core.Control\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Fires before the new growing chunk is requested from the model.\n     * @since 1.16\n     * @deprecated Since version 1.16.3.\n     * Instead, use <code>updateStarted</code> event with listening <code>changeReason</code>.\n     */\n\t\t\t\tgrowingStarted: { deprecated: true,\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * Actual number of items.\n       */\n\t\t\t\t\t\tactual: { type: \"int\" },\n\n\t\t\t\t\t\t/**\n       * Total number of items.\n       */\n\t\t\t\t\t\ttotal: { type: \"int\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Fires after the new growing chunk has been fetched from the model and processed by the control.\n     * @since 1.16\n     * @deprecated Since version 1.16.3.\n     * Instead, use \"updateFinished\" event.\n     */\n\t\t\t\tgrowingFinished: { deprecated: true,\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * Actual number of items.\n       */\n\t\t\t\t\t\tactual: { type: \"int\" },\n\n\t\t\t\t\t\t/**\n       * Total number of items.\n       */\n\t\t\t\t\t\ttotal: { type: \"int\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Fires before <code>items</code> binding is updated (e.g. sorting, filtering)\n     *\n     * <b>Note:</b> Event handler should not invalidate the control.\n     * @since 1.16.3\n     */\n\t\t\t\tupdateStarted: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The reason of the update, e.g. Binding, Filter, Sort, Growing, Change, Refresh, Context.\n       */\n\t\t\t\t\t\treason: { type: \"string\" },\n\n\t\t\t\t\t\t/**\n       * Actual number of items.\n       */\n\t\t\t\t\t\tactual: { type: \"int\" },\n\n\t\t\t\t\t\t/**\n       * The total count of bound items. This can be used if the <code>growing</code> property is set to <code>true</code>.\n       */\n\t\t\t\t\t\ttotal: { type: \"int\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Fires after <code>items</code> binding is updated and processed by the control.\n     * @since 1.16.3\n     */\n\t\t\t\tupdateFinished: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The reason of the update, e.g. Binding, Filter, Sort, Growing, Change, Refresh, Context.\n       */\n\t\t\t\t\t\treason: { type: \"string\" },\n\n\t\t\t\t\t\t/**\n       * Actual number of items.\n       */\n\t\t\t\t\t\tactual: { type: \"int\" },\n\n\t\t\t\t\t\t/**\n       * The total count of bound items. This can be used if the <code>growing</code> property is set to <code>true</code>.\n       */\n\t\t\t\t\t\ttotal: { type: \"int\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Fires when an item is pressed unless the item's <code>type</code> property is <code>Inactive</code>.\n     * @since 1.20\n     */\n\t\t\t\titemPress: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The item which fired the pressed event.\n       */\n\t\t\t\t\t\tlistItem: { type: \"sap.m.ListItemBase\" },\n\n\t\t\t\t\t\t/**\n       * The control which caused the press event within the container.\n       */\n\t\t\t\t\t\tsrcControl: { type: \"sap.ui.core.Control\" }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdesignTime: true\n\n\t\t} });\n\n\t// announce accessibility details at the initial focus\n\tListBase.prototype.bAnnounceDetails = true;\n\n\tListBase.getInvisibleText = function () {\n\t\treturn this.oInvisibleText || (this.oInvisibleText = new InvisibleText().toStatic());\n\t};\n\n\t// class name for the navigation items\n\tListBase.prototype.sNavItemClass = \"sapMLIB\";\n\n\tListBase.prototype.init = function () {\n\t\tthis._aNavSections = [];\n\t\tthis._aSelectedPaths = [];\n\t\tthis._iItemNeedsHighlight = 0;\n\t\tthis.data(\"sap-ui-fastnavgroup\", \"true\", true); // Define group for F6 handling\n\t};\n\n\tListBase.prototype.onBeforeRendering = function () {\n\t\tthis._bRendering = true;\n\t\tthis._bActiveItem = false;\n\t\tthis._aNavSections = [];\n\t\tthis._removeSwipeContent();\n\t};\n\n\tListBase.prototype.onAfterRendering = function () {\n\t\tthis._bRendering = false;\n\t\tthis._sLastMode = this.getMode();\n\n\t\t// invalidate item navigation for desktop\n\t\tif (Device.system.desktop) {\n\t\t\tthis._bItemNavigationInvalidated = true;\n\t\t}\n\t};\n\n\tListBase.prototype.exit = function () {\n\t\tthis._oSelectedItem = null;\n\t\tthis._aNavSections = [];\n\t\tthis._aSelectedPaths = [];\n\t\tthis._destroyGrowingDelegate();\n\t\tthis._destroyItemNavigation();\n\t};\n\n\t// this gets called only with oData Model when first load or filter/sort\n\tListBase.prototype.refreshItems = function (sReason) {\n\t\tif (this._oGrowingDelegate) {\n\t\t\t// inform growing delegate to handle\n\t\t\tthis._oGrowingDelegate.refreshItems(sReason);\n\t\t} else {\n\t\t\t// if data multiple time requested during the ongoing request\n\t\t\t// UI5 cancels the previous requests then we should fire updateStarted once\n\t\t\tif (!this._bReceivingData) {\n\t\t\t\t// handle update started event\n\t\t\t\tthis._updateStarted(sReason);\n\t\t\t\tthis._bReceivingData = true;\n\t\t\t}\n\n\t\t\t// for flat list get all data\n\t\t\tthis.refreshAggregation(\"items\");\n\t\t}\n\t};\n\n\t// this gets called via JSON and OData model when binding is updated\n\t// if there is no data this should get called anyway\n\t// TODO: if there is a network error this will not get called\n\t// but we need to turn back to initial state\n\tListBase.prototype.updateItems = function (sReason) {\n\t\tif (this._oGrowingDelegate) {\n\t\t\t// inform growing delegate to handle\n\t\t\tthis._oGrowingDelegate.updateItems(sReason);\n\t\t} else {\n\t\t\tif (this._bReceivingData) {\n\t\t\t\t// if we are receiving the data this should be oDataModel\n\t\t\t\t// updateStarted is already handled before on refreshItems\n\t\t\t\t// here items binding is updated because data is came from server\n\t\t\t\t// so we can convert the flag for the next request\n\t\t\t\tthis._bReceivingData = false;\n\t\t\t} else {\n\t\t\t\t// if data is not requested this should be JSON Model\n\t\t\t\t// data is already in memory and will not be requested\n\t\t\t\t// so we do not need to change the flag\n\t\t\t\t// this._bReceivingData should be always false\n\t\t\t\tthis._updateStarted(sReason);\n\t\t\t}\n\n\t\t\t// for flat list update items aggregation\n\t\t\tthis.updateAggregation(\"items\");\n\n\t\t\t// items binding are updated\n\t\t\tthis._updateFinished();\n\t\t}\n\t};\n\n\tListBase.prototype.setBindingContext = function () {\n\t\tthis._resetItemsBinding();\n\t\treturn Control.prototype.setBindingContext.apply(this, arguments);\n\t};\n\n\tListBase.prototype._bindAggregation = function (sName, oBindingInfo) {\n\t\tfunction addBindingListener(oBindingInfo, sEventName, fHandler) {\n\t\t\toBindingInfo.events = oBindingInfo.events || {};\n\n\t\t\tif (!oBindingInfo.events[sEventName]) {\n\t\t\t\toBindingInfo.events[sEventName] = fHandler;\n\t\t\t} else {\n\t\t\t\t// Wrap the event handler of the other party to add our handler.\n\t\t\t\tvar fOriginalHandler = oBindingInfo.events[sEventName];\n\t\t\t\toBindingInfo.events[sEventName] = function () {\n\t\t\t\t\tfOriginalHandler.apply(this, arguments);\n\t\t\t\t\tfHandler.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (sName === \"items\") {\n\t\t\tthis._resetItemsBinding();\n\t\t\taddBindingListener(oBindingInfo, \"dataRequested\", this._onBindingDataRequestedListener.bind(this));\n\t\t\taddBindingListener(oBindingInfo, \"dataReceived\", this._onBindingDataReceivedListener.bind(this));\n\t\t}\n\n\t\tControl.prototype._bindAggregation.call(this, sName, oBindingInfo);\n\t};\n\n\tListBase.prototype._onBindingDataRequestedListener = function (oEvent) {\n\t\tthis._showBusyIndicator();\n\n\t\tif (this._dataReceivedHandlerId != null) {\n\t\t\tjQuery.sap.clearDelayedCall(this._dataReceivedHandlerId);\n\t\t\tdelete this._dataReceivedHandlerId;\n\t\t}\n\t};\n\n\tListBase.prototype._onBindingDataReceivedListener = function (oEvent) {\n\t\tif (this._dataReceivedHandlerId != null) {\n\t\t\tjQuery.sap.clearDelayedCall(this._dataReceivedHandlerId);\n\t\t\tdelete this._dataReceivedHandlerId;\n\t\t}\n\n\t\t// The list will be set to busy when a request is sent, and set to not busy when a response is received.\n\t\t// Under certain conditions it can happen that there are multiple requests in the request queue of the binding, which will be processed\n\t\t// sequentially. In this case the busy indicator will be shown and hidden multiple times (flickering) until all requests have been\n\t\t// processed. With this timer we avoid the flickering, as the list will only be set to not busy after all requests have been processed.\n\t\tthis._dataReceivedHandlerId = jQuery.sap.delayedCall(0, this, function () {\n\t\t\tthis._hideBusyIndicator();\n\t\t\tdelete this._dataReceivedHandlerId;\n\t\t});\n\t};\n\n\tListBase.prototype.destroyItems = function (bSuppressInvalidate) {\n\t\t// check whether we have items to destroy or not\n\t\tif (!this.getItems(true).length) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// clean up the selection\n\t\tthis._oSelectedItem = null;\n\n\t\t// suppress the synchronous DOM removal of the aggregation destroy\n\t\tthis.destroyAggregation(\"items\", \"KeepDom\");\n\n\t\t// invalidate to update the DOM on the next tick of the RenderManager\n\t\tif (!bSuppressInvalidate) {\n\t\t\tthis.invalidate();\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tListBase.prototype.removeAllItems = function (sAggregationName) {\n\t\tthis._oSelectedItem = null;\n\t\treturn this.removeAllAggregation(\"items\");\n\t};\n\n\tListBase.prototype.removeItem = function (vItem) {\n\t\tvar oItem = this.removeAggregation(\"items\", vItem);\n\t\tif (oItem && oItem === this._oSelectedItem) {\n\t\t\tthis._oSelectedItem = null;\n\t\t}\n\t\treturn oItem;\n\t};\n\n\tListBase.prototype.getItems = function (bReadOnly) {\n\t\tif (bReadOnly) {\n\t\t\treturn this.mAggregations[\"items\"] || [];\n\t\t}\n\n\t\treturn this.getAggregation(\"items\", []);\n\t};\n\n\tListBase.prototype.getId = function (sSuffix) {\n\t\tvar sId = this.sId;\n\t\treturn sSuffix ? sId + \"-\" + sSuffix : sId;\n\t};\n\n\tListBase.prototype.setGrowing = function (bGrowing) {\n\t\tbGrowing = !!bGrowing;\n\t\tif (this.getGrowing() != bGrowing) {\n\t\t\tthis.setProperty(\"growing\", bGrowing, !bGrowing);\n\t\t\tif (bGrowing) {\n\t\t\t\t__webpack_require__(\"Pg/5\");\n\t\t\t\tthis._oGrowingDelegate = new sap.m.GrowingEnablement(this);\n\t\t\t} else if (this._oGrowingDelegate) {\n\t\t\t\tthis._oGrowingDelegate.destroy();\n\t\t\t\tthis._oGrowingDelegate = null;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\tListBase.prototype.setGrowingThreshold = function (iThreshold) {\n\t\treturn this.setProperty(\"growingThreshold\", iThreshold, true);\n\t};\n\n\tListBase.prototype.setEnableBusyIndicator = function (bEnable) {\n\t\tthis.setProperty(\"enableBusyIndicator\", bEnable, true);\n\t\tif (!this.getEnableBusyIndicator()) {\n\t\t\tthis._hideBusyIndicator();\n\t\t}\n\t\treturn this;\n\t};\n\n\tListBase.prototype.setNoDataText = function (sNoDataText) {\n\t\tthis.setProperty(\"noDataText\", sNoDataText, true);\n\t\tthis.$(\"nodata-text\").text(this.getNoDataText());\n\t\treturn this;\n\t};\n\n\tListBase.prototype.getNoDataText = function (bCheckBusy) {\n\t\t// check busy state\n\t\tif (bCheckBusy && this._bBusy) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\t// return no data text from resource bundle when there is no custom\n\t\tvar sNoDataText = this.getProperty(\"noDataText\");\n\t\tsNoDataText = sNoDataText || sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LIST_NO_DATA\");\n\t\treturn sNoDataText;\n\t};\n\n\t/**\n  * Returns selected list item. When no item is selected, \"null\" is returned. When \"multi-selection\" is enabled and multiple items are selected, only the up-most selected item is returned.\n  *\n  * @type sap.m.ListItemBase\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.getSelectedItem = function () {\n\t\tvar aItems = this.getItems(true);\n\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\tif (aItems[i].getSelected()) {\n\t\t\t\treturn aItems[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\t/**\n  * Selects or deselects the given list item.\n  *\n  * @param {sap.m.ListItemBase} oListItem\n  *         The list item whose selection to be changed. This parameter is mandatory.\n  * @param {boolean} bSelect\n  *         Sets selected status of the list item. Default value is true.\n  * @type sap.m.ListBase\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.setSelectedItem = function (oListItem, bSelect, bFireEvent) {\n\t\tif (this.indexOfItem(oListItem) < 0) {\n\t\t\tjQuery.sap.log.warning(\"setSelectedItem is called without valid ListItem parameter on \" + this);\n\t\t\treturn;\n\t\t}\n\t\tif (this._bSelectionMode) {\n\t\t\toListItem.setSelected(bSelect === undefined ? true : !!bSelect);\n\t\t\tbFireEvent && this._fireSelectionChangeEvent([oListItem]);\n\t\t}\n\t};\n\n\t/**\n  * Returns an array containing the selected list items. If no items are selected, an empty array is returned.\n  *\n  * @type sap.m.ListItemBase[]\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.getSelectedItems = function () {\n\t\treturn this.getItems(true).filter(function (oItem) {\n\t\t\treturn oItem.getSelected();\n\t\t});\n\t};\n\n\t/**\n  * Sets a list item to be selected by id. In single mode the method removes the previous selection.\n  *\n  * @param {string} sId\n  *         The id of the list item whose selection to be changed.\n  * @param {boolean} bSelect\n  *         Sets selected status of the list item. Default value is true.\n  * @type sap.m.ListBase\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.setSelectedItemById = function (sId, bSelect) {\n\t\tvar oListItem = sap.ui.getCore().byId(sId);\n\t\treturn this.setSelectedItem(oListItem, bSelect);\n\t};\n\n\t/**\n  * Returns the binding contexts of the selected items.\n  * Note: This method returns an empty array if no databinding is used.\n  *\n  * @param {boolean} bAll\n  *         Set true to include even invisible selected items(e.g. the selections from the previous filters).\n  *         Note: In single selection modes, only the last selected item's binding context is returned in array.\n  * @type object[]\n  * @public\n  * @since 1.18.6\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.getSelectedContexts = function (bAll) {\n\t\tvar oBindingInfo = this.getBindingInfo(\"items\"),\n\t\t    sModelName = (oBindingInfo || {}).model,\n\t\t    oModel = this.getModel(sModelName);\n\n\t\t// only deal with binding case\n\t\tif (!oBindingInfo || !oModel) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// return binding contexts from all selection paths\n\t\tif (bAll && this.getRememberSelections()) {\n\t\t\treturn this._aSelectedPaths.map(function (sPath) {\n\t\t\t\treturn oModel.getContext(sPath);\n\t\t\t});\n\t\t}\n\n\t\t// return binding context of current selected items\n\t\treturn this.getSelectedItems().map(function (oItem) {\n\t\t\treturn oItem.getBindingContext(sModelName);\n\t\t});\n\t};\n\n\t/**\n  * Removes visible selections of the current selection mode.\n  *\n  * @param {boolean} bAll\n  *         Since version 1.16.3. This control keeps old selections after filter or sorting. Set this parameter \"true\" to remove all selections.\n  * @type sap.m.ListBase\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.removeSelections = function (bAll, bFireEvent, bDetectBinding) {\n\t\tvar aChangedListItems = [];\n\t\tthis._oSelectedItem = null;\n\t\tbAll && (this._aSelectedPaths = []);\n\t\tthis.getItems(true).forEach(function (oItem) {\n\t\t\tif (!oItem.getSelected()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if the selected property is two-way bound then we do not need to update the selection\n\t\t\tif (bDetectBinding && oItem.isSelectedBoundTwoWay()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toItem.setSelected(false, true);\n\t\t\taChangedListItems.push(oItem);\n\t\t\t!bAll && this._updateSelectedPaths(oItem);\n\t\t}, this);\n\n\t\tif (bFireEvent && aChangedListItems.length) {\n\t\t\tthis._fireSelectionChangeEvent(aChangedListItems);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n  * Select all items in \"MultiSelection\" mode.\n  *\n  * @type sap.m.ListBase\n  * @public\n  * @since 1.16\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.selectAll = function (bFireEvent) {\n\t\tif (this.getMode() != \"MultiSelect\") {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar aChangedListItems = [];\n\t\tthis.getItems(true).forEach(function (oItem) {\n\t\t\tif (!oItem.getSelected()) {\n\t\t\t\toItem.setSelected(true, true);\n\t\t\t\taChangedListItems.push(oItem);\n\t\t\t\tthis._updateSelectedPaths(oItem);\n\t\t\t}\n\t\t}, this);\n\n\t\tif (bFireEvent && aChangedListItems.length) {\n\t\t\tthis._fireSelectionChangeEvent(aChangedListItems, bFireEvent);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Returns the last list mode, the mode that is rendered\n  * This can be used to detect mode changes during rendering\n  *\n  * @protected\n  */\n\tListBase.prototype.getLastMode = function (sMode) {\n\t\treturn this._sLastMode;\n\t};\n\n\tListBase.prototype.setMode = function (sMode) {\n\t\tsMode = this.validateProperty(\"mode\", sMode);\n\t\tvar sOldMode = this.getMode();\n\t\tif (sOldMode == sMode) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// determine the selection mode\n\t\tthis._bSelectionMode = sMode.indexOf(\"Select\") > -1;\n\n\t\t// remove selections if mode is not a selection mode\n\t\tif (!this._bSelectionMode) {\n\t\t\tthis.removeSelections(true);\n\t\t} else {\n\t\t\t// update selection status of items\n\t\t\tvar aSelecteds = this.getSelectedItems();\n\t\t\tif (aSelecteds.length > 1) {\n\t\t\t\t// remove selection if there are more than one item is selected\n\t\t\t\tthis.removeSelections(true);\n\t\t\t} else if (sOldMode === ListMode.MultiSelect) {\n\t\t\t\t// if old mode is multi select then we need to remember selected item\n\t\t\t\t// in case of new item selection right after setMode call\n\t\t\t\tthis._oSelectedItem = aSelecteds[0];\n\t\t\t}\n\t\t}\n\n\t\t// update property with invalidate\n\t\treturn this.setProperty(\"mode\", sMode);\n\t};\n\n\t/**\n  * Returns growing information as object with \"actual\" and \"total\" keys.\n  * Note: This function returns \"null\" if \"growing\" feature is disabled.\n  *\n  * @type object\n  * @public\n  * @since 1.16\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.getGrowingInfo = function () {\n\t\treturn this._oGrowingDelegate ? this._oGrowingDelegate.getInfo() : null;\n\t};\n\n\tListBase.prototype.setRememberSelections = function (bRemember) {\n\t\tthis.setProperty(\"rememberSelections\", bRemember, true);\n\t\t!this.getRememberSelections() && (this._aSelectedPaths = []);\n\t\treturn this;\n\t};\n\n\t/*\n  * Sets internal remembered selected context paths.\n  * This method can be called to reset remembered selection\n  * and does not change selection of the items until binding update.\n  *\n  * @param {String[]} aSelectedPaths valid binding context path array\n  * @since 1.26\n  * @protected\n  */\n\tListBase.prototype.setSelectedContextPaths = function (aSelectedPaths) {\n\t\tthis._aSelectedPaths = aSelectedPaths || [];\n\t};\n\n\t/*\n  * Returns internal remembered selected context paths as a copy if rememberSelections is set to true,\n  * else returns the binding context path for the current selected items.\n  *\n  * @return {String[]} selected items binding context path\n  * @since 1.26\n  * @protected\n  */\n\tListBase.prototype.getSelectedContextPaths = function (bAll) {\n\t\t// return this selectedPaths if rememberSelections is true\n\t\tif (!bAll || bAll && this.getRememberSelections()) {\n\t\t\treturn this._aSelectedPaths.slice(0);\n\t\t}\n\n\t\t// return the binding context path of current selected items\n\t\treturn this.getSelectedItems().map(function (oItem) {\n\t\t\treturn oItem.getBindingContextPath();\n\t\t});\n\t};\n\n\t/* Determines whether all selectable items are selected or not\n  * @protected\n  */\n\tListBase.prototype.isAllSelectableSelected = function () {\n\t\tif (this.getMode() != ListMode.MultiSelect) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar aItems = this.getItems(true),\n\t\t    iSelectedItemCount = this.getSelectedItems().length,\n\t\t    iSelectableItemCount = aItems.filter(function (oItem) {\n\t\t\treturn oItem.isSelectable();\n\t\t}).length;\n\n\t\treturn aItems.length > 0 && iSelectedItemCount == iSelectableItemCount;\n\t};\n\n\t/*\n  * Returns only visible items\n  * @protected\n  */\n\tListBase.prototype.getVisibleItems = function () {\n\t\treturn this.getItems(true).filter(function (oItem) {\n\t\t\treturn oItem.getVisible();\n\t\t});\n\t};\n\n\t// return whether list has active item or not\n\tListBase.prototype.getActiveItem = function () {\n\t\treturn this._bActiveItem;\n\t};\n\n\t// this gets called when items DOM is changed\n\tListBase.prototype.onItemDOMUpdate = function (oListItem) {\n\t\tif (!this._bRendering && this.bOutput) {\n\t\t\tthis._startItemNavigation(true);\n\t\t}\n\t};\n\n\t// this gets called when items active state is changed\n\tListBase.prototype.onItemActiveChange = function (oListItem, bActive) {\n\t\tthis._bActiveItem = bActive;\n\t};\n\n\t// this gets called when item type column requirement is changed\n\tListBase.prototype.onItemHighlightChange = function (oItem, bNeedsHighlight) {\n\t\tthis._iItemNeedsHighlight += bNeedsHighlight ? 1 : -1;\n\n\t\t// update highlight visibility\n\t\tif (this._iItemNeedsHighlight == 1 && bNeedsHighlight) {\n\t\t\tthis.$(\"listUl\").addClass(\"sapMListHighlight\");\n\t\t} else if (this._iItemNeedsHighlight == 0) {\n\t\t\tthis.$(\"listUl\").removeClass(\"sapMListHighlight\");\n\t\t}\n\t};\n\n\t// this gets called when selected property of the ListItem is changed\n\tListBase.prototype.onItemSelectedChange = function (oListItem, bSelected) {\n\n\t\tif (this.getMode() == ListMode.MultiSelect) {\n\t\t\tthis._updateSelectedPaths(oListItem, bSelected);\n\t\t\treturn;\n\t\t}\n\n\t\tif (bSelected) {\n\t\t\tthis._aSelectedPaths = [];\n\t\t\tthis._oSelectedItem && this._oSelectedItem.setSelected(false, true);\n\t\t\tthis._oSelectedItem = oListItem;\n\t\t} else if (this._oSelectedItem === oListItem) {\n\t\t\tthis._oSelectedItem = null;\n\t\t}\n\n\t\t// update selection path for the list item\n\t\tthis._updateSelectedPaths(oListItem, bSelected);\n\t};\n\n\t/*\n  * Returns items container DOM reference\n  * @protected\n  */\n\tListBase.prototype.getItemsContainerDomRef = function () {\n\t\treturn this.getDomRef(\"listUl\");\n\t};\n\n\tListBase.prototype.checkGrowingFromScratch = function () {};\n\n\t/*\n  * This hook method gets called if growing feature is enabled and before new page loaded\n  * @protected\n  */\n\tListBase.prototype.onBeforePageLoaded = function (oGrowingInfo, sChangeReason) {\n\t\tthis._fireUpdateStarted(sChangeReason, oGrowingInfo);\n\t\tthis.fireGrowingStarted(oGrowingInfo);\n\t};\n\n\t/*\n  * This hook method get called if growing feature is enabled and after new page loaded\n  * @protected\n  */\n\tListBase.prototype.onAfterPageLoaded = function (oGrowingInfo, sChangeReason) {\n\t\tthis._fireUpdateFinished(oGrowingInfo);\n\t\tthis.fireGrowingFinished(oGrowingInfo);\n\t};\n\n\t/*\n  * Adds navigation section that we can be navigate with alt + down/up\n  * @protected\n  */\n\tListBase.prototype.addNavSection = function (sId) {\n\t\tthis._aNavSections.push(sId);\n\t\treturn sId;\n\t};\n\n\t/*\n  * Returns the max items count.\n  * If aggregation items is bound the count will be the length of the binding\n  * otherwise the length of the list items aggregation will be returned\n  * @protected\n  */\n\tListBase.prototype.getMaxItemsCount = function () {\n\t\tvar oBinding = this.getBinding(\"items\");\n\t\tif (oBinding && oBinding.getLength) {\n\t\t\treturn oBinding.getLength() || 0;\n\t\t}\n\t\treturn this.getItems(true).length;\n\t};\n\n\t/*\n  * This hook method is called from renderer to determine whether items should render or not\n  * @protected\n  */\n\tListBase.prototype.shouldRenderItems = function () {\n\t\treturn true;\n\t};\n\n\t// when new items binding we should turn back to initial state\n\tListBase.prototype._resetItemsBinding = function () {\n\t\tif (this.isBound(\"items\")) {\n\t\t\tthis._bUpdating = false;\n\t\t\tthis._bReceivingData = false;\n\t\t\tthis.removeSelections(true, false, true);\n\t\t\tthis._oGrowingDelegate && this._oGrowingDelegate.reset();\n\t\t\tthis._hideBusyIndicator();\n\n\t\t\t/* reset focused position */\n\t\t\tif (this._oItemNavigation) {\n\t\t\t\tthis._oItemNavigation.iFocusedIndex = -1;\n\t\t\t}\n\t\t}\n\t};\n\n\t// called before update started via sorting/filtering/growing etc.\n\tListBase.prototype._updateStarted = function (sReason) {\n\t\t// if data receiving/update is not started or ongoing\n\t\tif (!this._bReceivingData && !this._bUpdating) {\n\t\t\tthis._bUpdating = true;\n\t\t\tthis._fireUpdateStarted(sReason);\n\t\t}\n\t};\n\n\t// fire updateStarted event with update reason and actual/total info\n\tListBase.prototype._fireUpdateStarted = function (sReason, oInfo) {\n\t\tthis._sUpdateReason = jQuery.sap.charToUpperCase(sReason || \"Refresh\");\n\t\tthis.fireUpdateStarted({\n\t\t\treason: this._sUpdateReason,\n\t\t\tactual: oInfo ? oInfo.actual : this.getItems(true).length,\n\t\t\ttotal: oInfo ? oInfo.total : this.getMaxItemsCount()\n\t\t});\n\t};\n\n\t// called on after rendering to finalize item update finished\n\tListBase.prototype._updateFinished = function () {\n\t\t// check if data receiving/update is finished\n\t\tif (!this._bReceivingData && this._bUpdating) {\n\t\t\tthis._fireUpdateFinished();\n\t\t\tthis._bUpdating = false;\n\t\t}\n\t};\n\n\t// fire updateFinished event delayed to make sure rendering phase is done\n\tListBase.prototype._fireUpdateFinished = function (oInfo) {\n\t\tthis._hideBusyIndicator();\n\t\tjQuery.sap.delayedCall(0, this, function () {\n\t\t\tthis._bItemNavigationInvalidated = true;\n\t\t\tthis.fireUpdateFinished({\n\t\t\t\treason: this._sUpdateReason,\n\t\t\t\tactual: oInfo ? oInfo.actual : this.getItems(true).length,\n\t\t\t\ttotal: oInfo ? oInfo.total : this.getMaxItemsCount()\n\t\t\t});\n\t\t});\n\t};\n\n\tListBase.prototype._showBusyIndicator = function () {\n\t\tif (this.getEnableBusyIndicator() && !this.getBusy() && !this._bBusy) {\n\t\t\t// set the busy state\n\t\t\tthis._bBusy = true;\n\n\t\t\t// TODO: would be great to have an event when busy indicator visually seen\n\t\t\tthis._sBusyTimer = jQuery.sap.delayedCall(this.getBusyIndicatorDelay(), this, function () {\n\t\t\t\t// clean no data text\n\t\t\t\tthis.$(\"nodata-text\").text(\"\");\n\t\t\t});\n\n\t\t\t// set busy property\n\t\t\tthis.setBusy(true, \"listUl\");\n\t\t}\n\t};\n\n\tListBase.prototype._hideBusyIndicator = function () {\n\t\tif (this._bBusy) {\n\t\t\t// revert busy state\n\t\t\tthis._bBusy = false;\n\t\t\tthis.setBusy(false, \"listUl\");\n\t\t\tjQuery.sap.clearDelayedCall(this._sBusyTimer);\n\n\t\t\t// revert no data texts when necessary\n\t\t\tif (!this.getItems(true).length) {\n\t\t\t\tthis.$(\"nodata-text\").text(this.getNoDataText());\n\t\t\t}\n\t\t}\n\t};\n\n\tListBase.prototype.onItemBindingContextSet = function (oItem) {\n\t\t// determine whether selection remember is necessary or not\n\t\tif (!this._bSelectionMode || !this.getRememberSelections() || !this.isBound(\"items\")) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if selected property two-way bound then we do not need to update the selection\n\t\tif (oItem.isSelectedBoundTwoWay()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// update the item selection\n\t\tvar sPath = oItem.getBindingContextPath();\n\t\tif (sPath) {\n\t\t\tvar bSelected = this._aSelectedPaths.indexOf(sPath) > -1;\n\t\t\toItem.setSelected(bSelected);\n\t\t}\n\t};\n\n\tListBase.prototype.onItemInserted = function (oItem, bSelectedDelayed) {\n\t\tif (bSelectedDelayed) {\n\t\t\t// item was already selected before inserted to the list\n\t\t\tthis.onItemSelectedChange(oItem, true);\n\t\t}\n\n\t\tif (!this._bSelectionMode || !this._aSelectedPaths.length || !this.getRememberSelections() || !this.isBound(\"items\") || oItem.isSelectedBoundTwoWay() || oItem.getSelected()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// retain item selection\n\t\tvar sPath = oItem.getBindingContextPath();\n\t\tif (sPath && this._aSelectedPaths.indexOf(sPath) > -1) {\n\t\t\toItem.setSelected(true);\n\t\t}\n\t};\n\n\t// this gets called from item when selection is changed via checkbox/radiobutton/press event\n\tListBase.prototype.onItemSelect = function (oListItem, bSelected) {\n\t\tif (this.getMode() == ListMode.MultiSelect) {\n\t\t\tthis._fireSelectionChangeEvent([oListItem]);\n\t\t} else if (this._bSelectionMode && bSelected) {\n\t\t\tthis._fireSelectionChangeEvent([oListItem]);\n\t\t}\n\t};\n\n\t// Fire selectionChange event and support old select event API\n\tListBase.prototype._fireSelectionChangeEvent = function (aListItems, bSelectAll) {\n\t\tvar oListItem = aListItems && aListItems[0];\n\t\tif (!oListItem) {\n\t\t\treturn;\n\t\t}\n\n\t\t// fire event\n\t\tthis.fireSelectionChange({\n\t\t\tlistItem: oListItem,\n\t\t\tlistItems: aListItems,\n\t\t\tselected: oListItem.getSelected(),\n\t\t\tselectAll: !!bSelectAll\n\t\t});\n\n\t\t// support old API\n\t\tthis.fireSelect({\n\t\t\tlistItem: oListItem\n\t\t});\n\t};\n\n\t// this gets called from item when delete is triggered via delete button\n\tListBase.prototype.onItemDelete = function (oListItem) {\n\t\tthis.fireDelete({\n\t\t\tlistItem: oListItem\n\t\t});\n\t};\n\n\t// this gets called from item when item is pressed(enter/tap/click)\n\tListBase.prototype.onItemPress = function (oListItem, oSrcControl) {\n\n\t\t// do not fire press event for inactive type\n\t\tif (oListItem.getType() == ListType.Inactive) {\n\t\t\treturn;\n\t\t}\n\n\t\t// fire event async\n\t\tjQuery.sap.delayedCall(0, this, function () {\n\t\t\tthis.fireItemPress({\n\t\t\t\tlistItem: oListItem,\n\t\t\t\tsrcControl: oSrcControl\n\t\t\t});\n\t\t});\n\t};\n\n\t// insert or remove given item's path from selection array\n\tListBase.prototype._updateSelectedPaths = function (oItem, bSelect) {\n\t\tif (!this.getRememberSelections() || !this.isBound(\"items\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sPath = oItem.getBindingContextPath();\n\t\tif (!sPath) {\n\t\t\treturn;\n\t\t}\n\n\t\tbSelect = bSelect === undefined ? oItem.getSelected() : bSelect;\n\t\tvar iIndex = this._aSelectedPaths.indexOf(sPath);\n\t\tif (bSelect) {\n\t\t\tiIndex < 0 && this._aSelectedPaths.push(sPath);\n\t\t} else {\n\t\t\tiIndex > -1 && this._aSelectedPaths.splice(iIndex, 1);\n\t\t}\n\t};\n\n\tListBase.prototype._destroyGrowingDelegate = function () {\n\t\tif (this._oGrowingDelegate) {\n\t\t\tthis._oGrowingDelegate.destroy();\n\t\t\tthis._oGrowingDelegate = null;\n\t\t}\n\t};\n\n\tListBase.prototype._destroyItemNavigation = function () {\n\t\tif (this._oItemNavigation) {\n\t\t\tthis.removeEventDelegate(this._oItemNavigation);\n\t\t\tthis._oItemNavigation.destroy();\n\t\t\tthis._oItemNavigation = null;\n\t\t}\n\t};\n\n\t/**\n  * After swipe content is shown on the right hand side of the list item\n  * we will block the touch events and this method defines this touch blocker area.\n  * It must be always child/ren of the area because we will listen parent's touch events\n  *\n  * @private\n  */\n\tListBase.prototype._getTouchBlocker = function () {\n\t\treturn this.$().children();\n\t};\n\n\tListBase.prototype._getSwipeContainer = function () {\n\t\treturn this._$swipeContainer || (__webpack_require__(\"GALT\"), this._$swipeContainer = jQuery(\"<div>\", {\n\t\t\t\"id\": this.getId(\"swp\"),\n\t\t\t\"class\": \"sapMListSwp\"\n\t\t}));\n\t};\n\n\tListBase.prototype._setSwipePosition = function () {\n\t\tif (this._isSwipeActive) {\n\t\t\treturn this._getSwipeContainer().css(\"top\", this._swipedItem.$().position().top);\n\t\t}\n\t};\n\n\tListBase.prototype._renderSwipeContent = function () {\n\t\tvar $listitem = this._swipedItem.$(),\n\t\t    $container = this._getSwipeContainer();\n\n\t\t// add swipe container into list if it is not there\n\t\tthis.$().prepend($container.css({\n\t\t\ttop: $listitem.position().top,\n\t\t\theight: $listitem.outerHeight(true)\n\t\t}));\n\n\t\t// render swipe content into swipe container if needed\n\t\tif (this._bRerenderSwipeContent) {\n\t\t\tthis._bRerenderSwipeContent = false;\n\t\t\tvar rm = sap.ui.getCore().createRenderManager();\n\t\t\trm.render(this.getSwipeContent(), $container.empty()[0]);\n\t\t\trm.destroy();\n\t\t}\n\n\t\t// for method chaining\n\t\treturn this;\n\t};\n\n\tListBase.prototype._swipeIn = function () {\n\t\tvar that = this,\n\t\t    // scope\n\t\t$blocker = that._getTouchBlocker(),\n\t\t    $container = that._getSwipeContainer();\n\n\t\t// render swipe content\n\t\tthat._isSwipeActive = true;\n\t\tthat._renderSwipeContent();\n\n\t\t// add to instance manager\n\t\tsap.m.InstanceManager.addDialogInstance(that);\n\n\t\t// maybe keyboard is opened\n\t\twindow.document.activeElement.blur();\n\n\t\t// check orientation change and recalculate the position\n\t\tjQuery(window).on(\"resize.swp\", function () {\n\t\t\tthat._setSwipePosition();\n\t\t});\n\n\t\t// block touch events\n\t\t$blocker.css(\"pointer-events\", \"none\").on(\"touchstart.swp mousedown.swp\", function (e) {\n\t\t\tif (!$container[0].firstChild.contains(e.target)) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\t\t// UX: swipeout is not interruptible till animation is finished\n\t\t$container.bind(\"webkitAnimationEnd animationend\", function () {\n\t\t\tjQuery(this).unbind(\"webkitAnimationEnd animationend\");\n\t\t\t// disable animation and focus to container\n\t\t\t$container.css(\"opacity\", 1).focus();\n\n\t\t\t// check parents touchend for auto hide mode\n\t\t\t$blocker.parent().on(\"touchend.swp touchcancel.swp mouseup.swp\", function (e) {\n\t\t\t\t// checks if event source is coming from swipe container's first child\n\t\t\t\tif (!$container[0].firstChild.contains(e.target)) {\n\t\t\t\t\tthat.swipeOut();\n\t\t\t\t}\n\t\t\t});\n\t\t}).removeClass(\"sapMListSwpOutAnim\").addClass(\"sapMListSwpInAnim\");\n\t};\n\n\tListBase.prototype._onSwipeOut = function (callback) {\n\t\t// remove container from DOM and disable animation event\n\t\tthis._getSwipeContainer().css(\"opacity\", 0).remove();\n\n\t\t// remove windows resize listener\n\t\tjQuery(window).off(\"resize.swp\");\n\n\t\t// enable touch events again\n\t\tthis._getTouchBlocker().css(\"pointer-events\", \"auto\").off(\"touchstart.swp mousedown.swp\");\n\n\t\tif (typeof callback == \"function\") {\n\t\t\tcallback.call(this, this._swipedItem, this.getSwipeContent());\n\t\t}\n\n\t\tthis._isSwipeActive = false;\n\n\t\t// remove from instance manager\n\t\tsap.m.InstanceManager.removeDialogInstance(this);\n\t};\n\n\t/**\n  * After swipeContent is shown, user can interact with this control(e.g Tap). After interaction is done, you can/should use this method to hide swipeContent from screen.\n  * Note: If users try to tap inside of the list but outside of the swipeContent then control hides automatically.\n  *\n  * @param {any} oCallback\n  *         This callback function is called with two parameters(swipedListItem and swipedContent) after swipe-out animation is finished.\n  * @type sap.m.ListBase\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.swipeOut = function (callback) {\n\t\tif (!this._isSwipeActive) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar that = this,\n\t\t    $container = this._getSwipeContainer();\n\n\t\t// stop listening parents touchend event\n\t\tthis._getTouchBlocker().parent().off(\"touchend.swp touchend.swp touchcancel.swp mouseup.swp\");\n\n\t\t// add swipeout animation and listen this\n\t\t$container.bind(\"webkitAnimationEnd animationend\", function () {\n\t\t\tjQuery(this).unbind(\"webkitAnimationEnd animationend\");\n\t\t\tthat._onSwipeOut(callback);\n\t\t}).removeClass(\"sapMListSwpInAnim\").addClass(\"sapMListSwpOutAnim\");\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Close and hide the opened swipe content immediately\n  * @private\n  */\n\tListBase.prototype._removeSwipeContent = function () {\n\t\tif (this._isSwipeActive) {\n\t\t\tthis.swipeOut()._onSwipeOut();\n\t\t}\n\t};\n\n\t/**\n  * This method is required from sap.m.InstanceManager\n  * To remove swipe content when back button is pressed\n  */\n\tListBase.prototype.close = ListBase.prototype._removeSwipeContent;\n\n\t// called on swipe event to bring in the swipeContent control\n\tListBase.prototype._onSwipe = function (oEvent) {\n\t\tvar oContent = this.getSwipeContent(),\n\t\t    oSrcControl = oEvent.srcControl;\n\n\t\tif (oContent && oSrcControl && !this._isSwipeActive && this !== oSrcControl && !this._eventHandledByControl\n\t\t// also enable the swipe feature when runs on Windows 8 device\n\t\t&& (Device.support.touch || Device.os.windows && Device.os.version >= 8)) {\n\t\t\t// source can be anything so, check parents and find the list item\n\t\t\t/*eslint-disable no-extra-semi, curly */\n\t\t\tfor (var li = oSrcControl; li && !(li instanceof ListItemBase); li = li.oParent) {}\n\t\t\t/*eslint-enable no-extra-semi, curly */\n\t\t\tif (li instanceof ListItemBase) {\n\t\t\t\tthis._swipedItem = li;\n\n\t\t\t\t// fire event earlier to let the user change swipeContent according to list item\n\t\t\t\t// if the event not is canceled then start the animation\n\t\t\t\tthis.fireSwipe({\n\t\t\t\t\tlistItem: this._swipedItem,\n\t\t\t\t\tswipeContent: oContent,\n\t\t\t\t\tsrcControl: oSrcControl\n\t\t\t\t}, true) && this._swipeIn();\n\t\t\t}\n\t\t}\n\t};\n\n\tListBase.prototype.ontouchstart = function (oEvent) {\n\t\tthis._eventHandledByControl = oEvent.isMarked();\n\t};\n\n\tListBase.prototype.onswipeleft = function (oEvent) {\n\t\tvar exceptDirection = sap.ui.getCore().getConfiguration().getRTL() ? \"RightToLeft\" : \"LeftToRight\";\n\n\t\tif (this.getSwipeDirection() != exceptDirection) {\n\t\t\tthis._onSwipe(oEvent);\n\t\t}\n\t};\n\n\tListBase.prototype.onswiperight = function (oEvent) {\n\t\tvar exceptDirection = sap.ui.getCore().getConfiguration().getRTL() ? \"LeftToRight\" : \"RightToLeft\";\n\n\t\tif (this.getSwipeDirection() != exceptDirection) {\n\t\t\tthis._onSwipe(oEvent);\n\t\t}\n\t};\n\n\tListBase.prototype.setSwipeDirection = function (sDirection) {\n\t\treturn this.setProperty(\"swipeDirection\", sDirection, true);\n\t};\n\n\t/**\n  * Returns swiped list item. When no item is swiped, \"null\" is returned.\n  *\n  * @type sap.m.ListItemBase\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListBase.prototype.getSwipedItem = function () {\n\t\treturn this._isSwipeActive ? this._swipedItem : null;\n\t};\n\n\tListBase.prototype.setSwipeContent = function (oControl) {\n\t\tthis._bRerenderSwipeContent = true;\n\n\t\tthis.toggleStyleClass(\"sapMListSwipable\", !!oControl);\n\n\t\t// prevent list from re-rendering on setSwipeContent\n\t\treturn this.setAggregation(\"swipeContent\", oControl, !this._isSwipeActive);\n\t};\n\n\tListBase.prototype.invalidate = function (oOrigin) {\n\t\tif (oOrigin && oOrigin === this.getSwipeContent()) {\n\t\t\tthis._bRerenderSwipeContent = true;\n\t\t\tthis._isSwipeActive && this._renderSwipeContent();\n\t\t\treturn this;\n\t\t}\n\n\t\tControl.prototype.invalidate.apply(this, arguments);\n\t\treturn this;\n\t};\n\n\tListBase.prototype.addItemGroup = function (oGroup, oHeader, bSuppressInvalidate) {\n\t\toHeader = oHeader || new GroupHeaderListItem({\n\t\t\ttitle: oGroup.text || oGroup.key\n\t\t});\n\n\t\toHeader._bGroupHeader = true;\n\t\tthis.addAggregation(\"items\", oHeader, bSuppressInvalidate);\n\t\treturn oHeader;\n\t};\n\n\tListBase.prototype.removeGroupHeaders = function (bSuppressInvalidate) {\n\t\tthis.getItems(true).forEach(function (oItem) {\n\t\t\tif (oItem.isGroupHeader()) {\n\t\t\t\toItem.destroy(bSuppressInvalidate);\n\t\t\t}\n\t\t});\n\t};\n\n\tListBase.prototype.getAccessibilityType = function () {\n\t\treturn sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"ACC_CTR_TYPE_LIST\");\n\t};\n\n\tListBase.prototype.getAccessibilityStates = function () {\n\t\tif (!this.getItems(true).length) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tvar sStates = \"\",\n\t\t    mMode = ListMode,\n\t\t    sMode = this.getMode(),\n\t\t    oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\n\t\tif (LabelEnablement.isRequired(this)) {\n\t\t\tsStates += oBundle.getText(\"LIST_REQUIRED\") + \" \";\n\t\t}\n\n\t\tif (sMode == mMode.MultiSelect) {\n\t\t\tsStates += oBundle.getText(\"LIST_MULTISELECTABLE\") + \" \";\n\t\t} else if (sMode == mMode.Delete) {\n\t\t\tsStates += oBundle.getText(\"LIST_DELETABLE\") + \" \";\n\t\t} else if (sMode != mMode.None) {\n\t\t\tsStates += oBundle.getText(\"LIST_SELECTABLE\") + \" \";\n\t\t}\n\n\t\tif (this.isGrouped()) {\n\t\t\tsStates += oBundle.getText(\"LIST_GROUPED\") + \" \";\n\t\t}\n\n\t\treturn sStates;\n\t};\n\n\tListBase.prototype.getAccessibilityDescription = function () {\n\t\tvar sDescription = this.getAriaLabelledBy().map(function (sAriaLabelledBy) {\n\t\t\tvar oAriaLabelledBy = sap.ui.getCore().byId(sAriaLabelledBy);\n\t\t\treturn ListItemBase.getAccessibilityText(oAriaLabelledBy);\n\t\t}).join(\" \");\n\n\t\tvar oHeaderTBar = this.getHeaderToolbar();\n\t\tif (oHeaderTBar) {\n\t\t\tvar oTitle = oHeaderTBar.getTitleControl();\n\t\t\tif (oTitle) {\n\t\t\t\tsDescription += oTitle.getText() + \" \";\n\t\t\t}\n\t\t} else {\n\t\t\tsDescription += this.getHeaderText() + \" \";\n\t\t}\n\n\t\tsDescription += this.getAccessibilityStates() + \" \";\n\t\tsDescription += this.getFooterText();\n\n\t\treturn sDescription.trim();\n\t};\n\n\tListBase.prototype.getAccessibilityInfo = function () {\n\t\treturn {\n\t\t\tdescription: this.getAccessibilityDescription(),\n\t\t\tfocusable: true\n\t\t};\n\t};\n\n\tListBase.prototype.getAccessbilityPosition = function (oItem) {\n\t\tvar iSetSize = 0,\n\t\t    aItems = this.getVisibleItems(),\n\t\t    iPosInset = aItems.indexOf(oItem) + 1,\n\t\t    oBinding = this.getBinding(\"items\");\n\n\t\t// use binding length if list is in scroll to load growing mode\n\t\tif (this.getGrowing() && this.getGrowingScrollToLoad() && oBinding && oBinding.isLengthFinal()) {\n\t\t\tiSetSize = oBinding.getLength();\n\t\t\tif (oBinding.isGrouped()) {\n\t\t\t\tiSetSize += aItems.filter(function (oItem) {\n\t\t\t\t\treturn oItem.isGroupHeader() && oItem.getVisible();\n\t\t\t\t}).length;\n\t\t\t}\n\t\t} else {\n\t\t\tiSetSize = aItems.length;\n\t\t}\n\n\t\treturn {\n\t\t\tsetSize: iSetSize,\n\t\t\tposInset: iPosInset\n\t\t};\n\t};\n\n\t// this gets called when items are focused\n\tListBase.prototype.onItemFocusIn = function (oItem) {\n\t\tif (!sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar oItemDomRef = oItem.getDomRef(),\n\t\t    mPosition = this.getAccessbilityPosition(oItem);\n\n\t\tif (!oItem.getContentAnnouncement) {\n\t\t\t// let the screen reader announce the whole content\n\t\t\tthis.getNavigationRoot().setAttribute(\"aria-activedescendant\", oItemDomRef.id);\n\t\t\toItemDomRef.setAttribute(\"aria-posinset\", mPosition.posInset);\n\t\t\toItemDomRef.setAttribute(\"aria-setsize\", mPosition.setSize);\n\t\t} else {\n\t\t\t// prepare the announcement for the screen reader\n\t\t\tvar oAccInfo = oItem.getAccessibilityInfo(),\n\t\t\t    oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\"),\n\t\t\t    sDescription = oAccInfo.type + \" \";\n\n\t\t\tsDescription += oBundle.getText(\"LIST_ITEM_POSITION\", [mPosition.posInset, mPosition.setSize]) + \" \";\n\t\t\tsDescription += oAccInfo.description;\n\t\t\tthis.updateInvisibleText(sDescription, oItemDomRef);\n\t\t}\n\t};\n\n\tListBase.prototype.updateInvisibleText = function (sText, oItemDomRef, bPrepend) {\n\t\tvar oInvisibleText = ListBase.getInvisibleText(),\n\t\t    $FocusedItem = jQuery(oItemDomRef || document.activeElement);\n\n\t\tif (this.bAnnounceDetails) {\n\t\t\tthis.bAnnounceDetails = false;\n\t\t\tsText = this.getAccessibilityInfo().description + \" \" + sText;\n\t\t}\n\n\t\toInvisibleText.setText(sText.trim());\n\t\t$FocusedItem.addAriaLabelledBy(oInvisibleText.getId(), bPrepend);\n\t\twindow.setTimeout(function () {\n\t\t\t$FocusedItem.removeAriaLabelledBy(oInvisibleText.getId());\n\t\t}, 0);\n\t};\n\n\t/* Keyboard Handling */\n\tListBase.prototype.getNavigationRoot = function () {\n\t\treturn this.getDomRef(\"listUl\");\n\t};\n\n\tListBase.prototype.getFocusDomRef = function () {\n\t\t// let the item navigation handle focus\n\t\treturn this.getNavigationRoot();\n\t};\n\n\tListBase.prototype._startItemNavigation = function (bIfNeeded) {\n\n\t\t// item navigation only for desktop\n\t\tif (!Device.system.desktop) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sKeyboardMode = this.getKeyboardMode(),\n\t\t    mKeyboardMode = ListKeyboardMode;\n\n\t\t// ItemNavigation is not necessary if there is no item in edit mode\n\t\tif (sKeyboardMode == mKeyboardMode.Edit && !this.getItems(true).length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if focus is not on the navigation items then only invalidate the item navigation\n\t\tif (bIfNeeded && !this.getNavigationRoot().contains(document.activeElement)) {\n\t\t\tthis._bItemNavigationInvalidated = true;\n\t\t\treturn;\n\t\t}\n\n\t\t// init item navigation\n\t\tif (!this._oItemNavigation) {\n\t\t\tthis._oItemNavigation = new ItemNavigation();\n\t\t\tthis._oItemNavigation.setCycling(false);\n\t\t\tthis.addEventDelegate(this._oItemNavigation);\n\n\t\t\t// set the tab index of active items\n\t\t\tvar iTabIndex = sKeyboardMode == mKeyboardMode.Edit ? -1 : 0;\n\t\t\tthis._setItemNavigationTabIndex(iTabIndex);\n\n\t\t\t// explicitly setting table mode with one column\n\t\t\t// to disable up/down reaction on events of the cell\n\t\t\tthis._oItemNavigation.setTableMode(true, true).setColumns(1);\n\n\t\t\t// alt + up/down will be used for section navigation\n\t\t\t// notify item navigation not to handle alt key modifiers\n\t\t\tthis._oItemNavigation.setDisabledModifiers({\n\t\t\t\tsapnext: [\"alt\"],\n\t\t\t\tsapprevious: [\"alt\"]\n\t\t\t});\n\t\t}\n\n\t\t// TODO: Maybe we need a real paging algorithm here\n\t\tthis._oItemNavigation.setPageSize(this.getGrowingThreshold());\n\n\t\t// configure navigation root\n\t\tvar oNavigationRoot = this.getNavigationRoot();\n\t\tthis._oItemNavigation.setRootDomRef(oNavigationRoot);\n\n\t\t// configure navigatable items\n\t\tthis.setNavigationItems(this._oItemNavigation, oNavigationRoot);\n\n\t\t// clear invalidations\n\t\tthis._bItemNavigationInvalidated = false;\n\t};\n\n\t/*\n  * Sets DOM References for keyboard navigation\n  *\n  * @param {sap.ui.core.delegate.ItemNavigation} oItemNavigation\n  * @param {HTMLElement} [oNavigationRoot]\n  * @protected\n  * @since 1.26\n  */\n\tListBase.prototype.setNavigationItems = function (oItemNavigation, oNavigationRoot) {\n\t\tvar aNavigationItems = jQuery(oNavigationRoot).children(\".sapMLIB\").get();\n\t\toItemNavigation.setItemDomRefs(aNavigationItems);\n\t\tif (oItemNavigation.getFocusedIndex() == -1) {\n\t\t\tif (this.getGrowing() && this.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\toItemNavigation.setFocusedIndex(aNavigationItems.length - 1);\n\t\t\t} else {\n\t\t\t\toItemNavigation.setFocusedIndex(0);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Returns ItemNavigation for controls uses List\n  * @since 1.16.5\n  * @returns {sap.ui.core.delegate.ItemNavigation|undefined}\n  * @protected\n  */\n\tListBase.prototype.getItemNavigation = function () {\n\t\treturn this._oItemNavigation;\n\t};\n\n\t// sets the active elements tabindex of ItemNavigation\n\tListBase.prototype._setItemNavigationTabIndex = function (iTabIndex) {\n\t\tif (this._oItemNavigation) {\n\t\t\tthis._oItemNavigation.iActiveTabIndex = iTabIndex;\n\t\t\tthis._oItemNavigation.iTabIndex = iTabIndex;\n\t\t}\n\t};\n\n\tListBase.prototype.setKeyboardMode = function (sKeyboardMode) {\n\t\tthis.setProperty(\"keyboardMode\", sKeyboardMode, true);\n\n\t\tif (this.isActive()) {\n\t\t\tvar iTabIndex = sKeyboardMode == ListKeyboardMode.Edit ? -1 : 0;\n\t\t\tthis.$(\"nodata\").prop(\"tabIndex\", ~iTabIndex);\n\t\t\tthis.$(\"listUl\").prop(\"tabIndex\", iTabIndex);\n\t\t\tthis.$(\"after\").prop(\"tabIndex\", iTabIndex);\n\t\t\tthis._setItemNavigationTabIndex(iTabIndex);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/*\n  * Makes the given ListItem(row) focusable via ItemNavigation\n  *\n  * @since 1.26\n  * @protected\n  */\n\tListBase.prototype.setItemFocusable = function (oListItem) {\n\t\tif (!this._oItemNavigation) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar aItemDomRefs = this._oItemNavigation.getItemDomRefs();\n\t\tvar iIndex = aItemDomRefs.indexOf(oListItem.getDomRef());\n\t\tif (iIndex >= 0) {\n\t\t\tthis._oItemNavigation.setFocusedIndex(iIndex);\n\t\t}\n\t};\n\n\t/*\n  * Forward tab before or after List\n  * This function should be called before tab key is pressed\n  *\n  * @see sap.m.ListItemBase#onsaptabnext\n  * @see sap.m.ListItemBase#onsaptabprevious\n  * @since 1.26\n  * @protected\n  */\n\tListBase.prototype.forwardTab = function (bForward) {\n\t\tthis._bIgnoreFocusIn = true;\n\t\tthis.$(bForward ? \"after\" : \"before\").focus();\n\t};\n\n\t// move focus out of the table for nodata row\n\tListBase.prototype.onsaptabnext = function (oEvent) {\n\t\tif (oEvent.isMarked() || this.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (oEvent.target.id == this.getId(\"nodata\")) {\n\t\t\tthis.forwardTab(true);\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// move focus out of the table for nodata row\n\tListBase.prototype.onsaptabprevious = function (oEvent) {\n\t\tif (oEvent.isMarked() || this.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sTargetId = oEvent.target.id;\n\t\tif (sTargetId == this.getId(\"nodata\")) {\n\t\t\tthis.forwardTab(false);\n\t\t} else if (sTargetId == this.getId(\"trigger\")) {\n\t\t\tthis.focusPrevious();\n\t\t\toEvent.preventDefault();\n\t\t}\n\t};\n\n\t// navigate to previous or next section according to current focus position\n\tListBase.prototype._navToSection = function (bForward) {\n\t\tvar $TargetSection;\n\t\tvar iIndex = 0;\n\t\tvar iStep = bForward ? 1 : -1;\n\t\tvar iLength = this._aNavSections.length;\n\n\t\t// find the current section index\n\t\tthis._aNavSections.some(function (sSectionId, iSectionIndex) {\n\t\t\tvar oSectionDomRef = jQuery.sap.domById(sSectionId);\n\t\t\tif (oSectionDomRef && oSectionDomRef.contains(document.activeElement)) {\n\t\t\t\tiIndex = iSectionIndex;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\t// if current section is items container then save the current focus position\n\t\tvar oItemsContainerDomRef = this.getItemsContainerDomRef();\n\t\tvar $CurrentSection = jQuery.sap.byId(this._aNavSections[iIndex]);\n\t\tif ($CurrentSection[0] === oItemsContainerDomRef && this._oItemNavigation) {\n\t\t\t$CurrentSection.data(\"redirect\", this._oItemNavigation.getFocusedIndex());\n\t\t}\n\n\t\t// find the next focusable section\n\t\tthis._aNavSections.some(function () {\n\t\t\tiIndex = (iIndex + iStep + iLength) % iLength; // circle\n\t\t\t$TargetSection = jQuery.sap.byId(this._aNavSections[iIndex]);\n\n\t\t\t// if target is items container\n\t\t\tif ($TargetSection[0] === oItemsContainerDomRef && this._oItemNavigation) {\n\t\t\t\tvar iRedirect = $TargetSection.data(\"redirect\");\n\t\t\t\tvar oItemDomRefs = this._oItemNavigation.getItemDomRefs();\n\t\t\t\tvar oTargetSection = oItemDomRefs[iRedirect] || oItemsContainerDomRef.children[0];\n\t\t\t\t$TargetSection = jQuery(oTargetSection);\n\t\t\t}\n\n\t\t\tif ($TargetSection.is(\":focusable\")) {\n\t\t\t\t$TargetSection.focus();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, this);\n\n\t\t// return the found section\n\t\treturn $TargetSection;\n\t};\n\n\t// Handle Alt + Down\n\tListBase.prototype.onsapshow = function (oEvent) {\n\t\t// handle events that are only coming from navigation items and ignore F4\n\t\tif (oEvent.isMarked() || oEvent.which == jQuery.sap.KeyCodes.F4 || oEvent.target.id != this.getId(\"trigger\") && !jQuery(oEvent.target).hasClass(this.sNavItemClass)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// move focus to the next section\n\t\tif (this._navToSection(true)) {\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// Handle Alt + Up\n\tListBase.prototype.onsaphide = function (oEvent) {\n\t\t// handle events that are only coming from navigation items\n\t\tif (oEvent.isMarked() || oEvent.target.id != this.getId(\"trigger\") && !jQuery(oEvent.target).hasClass(this.sNavItemClass)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// move focus to the previous section\n\t\tif (this._navToSection(false)) {\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// Ctrl + A to switch select all/none\n\tListBase.prototype.onkeydown = function (oEvent) {\n\n\t\tvar bCtrlA = oEvent.which == jQuery.sap.KeyCodes.A && (oEvent.metaKey || oEvent.ctrlKey);\n\t\tif (oEvent.isMarked() || !bCtrlA || !jQuery(oEvent.target).hasClass(this.sNavItemClass)) {\n\t\t\treturn;\n\t\t}\n\n\t\toEvent.preventDefault();\n\n\t\tif (this.getMode() !== ListMode.MultiSelect) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isAllSelectableSelected()) {\n\t\t\tthis.removeSelections(false, true);\n\t\t} else {\n\t\t\tthis.selectAll(true);\n\t\t}\n\n\t\toEvent.setMarked();\n\t};\n\n\tListBase.prototype.onmousedown = function (oEvent) {\n\t\t// check whether item navigation should be reapplied from scratch\n\t\tif (this._bItemNavigationInvalidated) {\n\t\t\tthis._startItemNavigation();\n\t\t}\n\t};\n\n\t// focus to previously focused element known in item navigation\n\tListBase.prototype.focusPrevious = function () {\n\t\tif (!this._oItemNavigation) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get the last focused element from the ItemNavigation\n\t\tvar aNavigationDomRefs = this._oItemNavigation.getItemDomRefs();\n\t\tvar iLastFocusedIndex = this._oItemNavigation.getFocusedIndex();\n\t\tvar $LastFocused = jQuery(aNavigationDomRefs[iLastFocusedIndex]);\n\n\t\t// find related item control to get tabbables\n\t\tvar oRelatedControl = $LastFocused.control(0) || {};\n\t\tvar $Tabbables = oRelatedControl.getTabbables ? oRelatedControl.getTabbables() : $LastFocused.find(\":sapTabbable\");\n\n\t\t// get the last tabbable item or itself and focus\n\t\tvar $FocusElement = $Tabbables.eq(-1).add($LastFocused).eq(-1);\n\t\tthis.bAnnounceDetails = true;\n\t\t$FocusElement.focus();\n\t};\n\n\t// Handles focus to reposition the focus to correct place\n\tListBase.prototype.onfocusin = function (oEvent) {\n\n\t\t// ignore self focus\n\t\tif (this._bIgnoreFocusIn) {\n\t\t\tthis._bIgnoreFocusIn = false;\n\t\t\toEvent.stopImmediatePropagation(true);\n\t\t\treturn;\n\t\t}\n\n\t\t// check whether item navigation should be reapplied from scratch\n\t\tif (this._bItemNavigationInvalidated) {\n\t\t\tthis._startItemNavigation();\n\t\t}\n\n\t\tvar oTarget = oEvent.target;\n\t\tif (oTarget.id == this.getId(\"nodata\")) {\n\t\t\tthis.updateInvisibleText(this.getNoDataText(), oTarget);\n\t\t}\n\n\t\t// handle only for backward navigation\n\t\tif (oEvent.isMarked() || !this._oItemNavigation || this.getKeyboardMode() == ListKeyboardMode.Edit || oTarget.id != this.getId(\"after\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.focusPrevious();\n\t\toEvent.setMarked();\n\t};\n\n\tListBase.prototype.onsapfocusleave = function (oEvent) {\n\t\tif (this._oItemNavigation && !this.bAnnounceDetails && !this.getNavigationRoot().contains(jQuery.sap.domById(oEvent.relatedControlId))) {\n\t\t\tthis.bAnnounceDetails = true;\n\t\t}\n\t};\n\n\t// this gets called when items up arrow key is pressed for the edit keyboard mode\n\tListBase.prototype.onItemArrowUpDown = function (oListItem, oEvent) {\n\t\tvar aItems = this.getItems(true),\n\t\t    iIndex = aItems.indexOf(oListItem) + (oEvent.type == \"sapup\" ? -1 : 1),\n\t\t    oItem = aItems[iIndex];\n\n\t\tif (oItem && oItem.isGroupHeader()) {\n\t\t\toItem = aItems[iIndex + (oEvent.type == \"sapup\" ? -1 : 1)];\n\t\t}\n\n\t\tif (!oItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $Tabbables = oItem.getTabbables(),\n\t\t    iFocusPos = oListItem.getTabbables().index(oEvent.target),\n\t\t    $Element = $Tabbables.eq($Tabbables[iFocusPos] ? iFocusPos : -1);\n\n\t\t$Element[0] ? $Element.focus() : oItem.focus();\n\t\toEvent.preventDefault();\n\t\toEvent.setMarked();\n\t};\n\n\tListBase.prototype.getAggregationDomRef = function (sAggregationName) {\n\t\tif (sAggregationName == \"items\") {\n\t\t\treturn this.getItemsContainerDomRef();\n\t\t}\n\t};\n\n\t// return true if grouping is enabled on the binding, else false\n\tListBase.prototype.isGrouped = function () {\n\t\tvar oBinding = this.getBinding(\"items\");\n\t\treturn oBinding && oBinding.isGrouped();\n\t};\n\n\treturn ListBase;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.ListBaseRenderer\", __webpack_require__(\"qW8B\"));\n\n/***/ }),\n\n/***/ \"CcuP\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides helper class ValueStateSupport\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"LJgu\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, Element, library) {\n\t\"use strict\";\n\n\t// shortcut for enum(s)\n\n\tvar ValueState = library.ValueState;\n\n\t/**\n  * Helper functionality for value state support.\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  * @public\n  * @namespace sap.ui.core.ValueStateSupport\n  */\n\tvar ValueStateSupport = {};\n\tvar mTexts = null;\n\n\tvar ensureTexts = function ensureTexts() {\n\t\tif (!mTexts) {\n\t\t\t// initialize texts if required\n\t\t\tmTexts = {};\n\t\t\tvar rb = sap.ui.getCore().getLibraryResourceBundle(\"sap.ui.core\");\n\t\t\tmTexts[ValueState.Error] = rb.getText(\"VALUE_STATE_ERROR\");\n\t\t\tmTexts[ValueState.Warning] = rb.getText(\"VALUE_STATE_WARNING\");\n\t\t\tmTexts[ValueState.Success] = rb.getText(\"VALUE_STATE_SUCCESS\");\n\t\t}\n\t};\n\n\t/**\n  * Appends a generic success, warning or error message to the given tooltip text if the given Element\n  * has a property \"valueState\" with one of these three states.\n  *\n  * @param {sap.ui.core.Element} oElement the Element of which the tooltip needs to be modified\n  * @param {string} sTooltipText the original tooltip text (may be null)\n  * @returns {string} the given text, with appended success/warning/error text, if appropriate\n  *\n  * @public\n  * @name sap.ui.core.ValueStateSupport.enrichTooltip\n  * @function\n  */\n\tValueStateSupport.enrichTooltip = function (oElement, sTooltipText) {\n\t\tjQuery.sap.assert(oElement instanceof Element, \"oElement must be an Element\");\n\n\t\tif (!sTooltipText && oElement.getTooltip()) {\n\t\t\treturn undefined; // this means there is no tooltip text configured, but a tooltip object like a RichTooltip\n\t\t}\n\n\t\tvar sText = ValueStateSupport.getAdditionalText(oElement);\n\t\tif (sText) {\n\t\t\treturn (sTooltipText ? sTooltipText + \" - \" : \"\") + sText;\n\t\t}\n\n\t\treturn sTooltipText; // when there is no value state\n\t};\n\n\t/**\n  * Returns a generic success, warning or error message if the given Element\n  * has a property \"valueState\" with one of these three states or the given ValueState\n  * represents one of these states.\n  *\n  * @param {sap.ui.core.Element|sap.ui.core.ValueState} vValue the Element of which the valueState needs to be checked, or the ValueState explicitly\n  * @returns {string} the success/warning/error text, if appropriate; otherwise null\n  *\n  * @public\n  * @name sap.ui.core.ValueStateSupport.getAdditionalText\n  * @function\n  */\n\tValueStateSupport.getAdditionalText = function (vValue) {\n\t\tvar sState = null;\n\n\t\tif (vValue && vValue.getValueState) {\n\t\t\tsState = vValue.getValueState();\n\t\t} else if (ValueState[vValue]) {\n\t\t\tsState = vValue;\n\t\t}\n\n\t\tif (sState && sState != ValueState.None) {\n\t\t\t// only for one of the three interesting state, not for the default\n\t\t\tensureTexts();\n\t\t\treturn mTexts[sState];\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/**\n  * Returns a ValueState object based on the given integer value\n  *\n  *  0 : ValueState.None\n  *  1 : ValueState.Warning\n  *  2 : ValueState.Success\n  *  3 : ValueState.Error\n  *\n  * @param {int} iState the state as an integer\n  * @return {sap.ui.core.ValueState} the corresponding ValueState object\n  * @static\n  * @public\n  * @name sap.ui.core.ValueStateSupport.formatValueState\n  * @function\n  * @since 1.25.0\n  */\n\tValueStateSupport.formatValueState = function (iState) {\n\t\tswitch (iState) {\n\t\t\tcase 1:\n\t\t\t\treturn ValueState.Warning;\n\t\t\tcase 2:\n\t\t\t\treturn ValueState.Success;\n\t\t\tcase 3:\n\t\t\t\treturn ValueState.Error;\n\t\t\tdefault:\n\t\t\t\treturn ValueState.None;\n\t\t}\n\t};\n\n\treturn ValueStateSupport;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"DYFy\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"#This is the resource bundle for the sap.ui.core library\\n#\\n\\n#NOTR\\nSAPUI5_FRIDAY=Friday\\n#NOTR\\nSAPUI5_GM_ZSTEP=Zoom step {0}\\n\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have an error\\nVALUE_STATE_ERROR=Invalid entry\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have a warning\\nVALUE_STATE_WARNING=Warning issued\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to be in success state\\nVALUE_STATE_SUCCESS=Entry successfully validated\\n\\n#XTOL: text that could be show if BusyIndicator is active\\nBUSY_TEXT=Please wait\\n\\n#########\\n# Texts for sap.ui.core.format.DateFormat\\n#########\\n\\n#XTXT: the long pattern for formatting a date using calendar week number\\ndate.week.calendarweek.wide=Calendar Week {0}\\n#XTXT: the short pattern for formatting a date using calendar week number\\ndate.week.calendarweek.narrow=CW {0}\\n\\n#########\\n# Texts for sap.ui.core.format.FileSizeFormat\\n#########\\n\\n#YMSG,20: File Size Unit one Byte\\nFileSize.Byte={0} Byte\\n#YMSG,20: File Size Unit Bytes\\nFileSize.Bytes={0} Bytes\\n\\n#YMSG,20: File Size Unit Kilobyte (short)\\nFileSize.Kilobyte={0} KB\\n#YMSG,20: File Size Unit Megabyte (short)\\nFileSize.Megabyte={0} MB\\n#YMSG,20: File Size Unit Gigabyte (short)\\nFileSize.Gigabyte={0} GB\\n#YMSG,20: File Size Unit Terabyte (short)\\nFileSize.Terabyte={0} TB\\n#YMSG,20: File Size Unit Petabyte (short)\\nFileSize.Petabyte={0} PB\\n#YMSG,20: File Size Unit Exabyte (short)\\nFileSize.Exabyte={0} EB\\n#YMSG,20: File Size Unit Zettabyte (short)\\nFileSize.Zettabyte={0} ZB\\n#YMSG,20: File Size Unit Yottabyte (short)\\nFileSize.Yottabyte={0} YB\\n\\n#YMSG,20: File Size Unit Kibibyte (short)\\nFileSize.Kibibyte={0} KiB\\n#YMSG,20: File Size Unit Mebibyte (short)\\nFileSize.Mebibyte={0} MiB\\n#YMSG,20: File Size Unit Gibibyte (short)\\nFileSize.Gibibyte={0} GiB\\n#YMSG,20: File Size Unit Tebibyte (short)\\nFileSize.Tebibyte={0} TiB\\n#YMSG,20: File Size Unit Pebibyte (short)\\nFileSize.Pebibyte={0} PiB\\n#YMSG,20: File Size Unit Exbibyte (short)\\nFileSize.Exbibyte={0} EiB\\n#YMSG,20: File Size Unit Zebibyte (short)\\nFileSize.Zebibyte={0} ZiB\\n#YMSG,20: File Size Unit Yobibyte (short)\\nFileSize.Yobibyte={0} YiB\\n\\n#########\\n# Texts for sap.ui.model.odata.AnnotationHelper\\n#########\\n\\n#XTOL: mathematical term for a number greater than anything else\\nINFINITY=Infinity\\n#XTOL: mathematical term for a number smaller than anything else\\nMINUS_INFINITY=Minus infinity\\n#XTOL\\nNAN=Not a number\\n\\n#########\\n# Texts for sap.ui.model.odata.type.*\\n#########\\n\\n#XTOL: No\\nNO=No\\n#XTOL: Yes\\nYES=Yes\\n#YMSG: Enter \\\"{0}\\\" or \\\"{1}\\\"\\nEnterYesOrNo=Enter \\\"{0}\\\" or \\\"{1}\\\".\\n#YMSG: Enter only digits\\nEnterDigitsOnly=Enter only digits\\n#YMSG: Enter a maximum of {0} digits\\nEnterMaximumOfDigits=Enter a maximum of {0} digits.\\n#YMSG: Enter a number\\nEnterNumber=Enter a number\\n#YMSG: Enter a number with a maximum of {0} digits, including any decimal places\\nEnterNumberPrecision=Enter a number with a maximum of {0} digits, including any decimal places\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator\\nEnterNumberInteger=Enter a number with a maximum of {0} digits to the left of the decimal separator\\n#YMSG: Enter a number with a maximum of {0} decimal places\\nEnterNumberFraction=Enter a number with a maximum of {0} decimal places\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\nEnterNumberIntegerFraction=Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\n#YMSG: Enter a number with a minimum value of {0}\\nEnterNumberMin=Enter a number with a minimum value of {0}\\n#YMSG: Enter a number greater than {0}\\nEnterNumberMinExclusive=Enter a number greater than {0}\\n#YMSG: Enter a number with a maximum value of {0}\\nEnterNumberMax=Enter a number with a maximum value of {0}\\n#YMSG: Enter a number less than {0}\\nEnterNumberMaxExclusive=Enter a number less than {0}\\n#YMSG: Enter a text\\nEnterText=Enter a text\\n#YMSG: Enter a text with a maximum of {0} characters and spaces\\nEnterTextMaxLength=Enter a text with a maximum of {0} characters and spaces\\n#YMSG: Enter a number with no decimal places\\nEnterInt=Enter a number with no decimal places\\n#YMSG: Enter a valid date and a valid time in the following format\\\\: {0}\\nEnterDateTime=Enter a valid date and a valid time in the following format\\\\: {0}\\n#YMSG: Enter a valid date in the following format\\\\: {0}\\nEnterDate=Enter a valid date in the following format\\\\: {0}\\n#YMSG: Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\nEnterGuid=Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\n#YMSG: Enter a valid time in the following format\\\\: {0}\\nEnterTime=Enter a valid time in the following format\\\\: {0}\\n\\n#########\\n# Texts for sap.ui.model.type.*\\n#########\\n\\n#YMSG,100: Enter a valid boolean\\nBoolean.Invalid=Enter a valid Boolean value\\n\\n#YMSG,100: Enter a valid number\\nInteger.Invalid=Enter a valid number\\n#YMSG,100: Enter a number greater than or equal to {0}\\nInteger.Minimum=Enter a number greater than or equal to {0}\\n#YMSG,100: Enter a number lower than or equal to {0}\\nInteger.Maximum=Enter a number less than or equal to {0}\\n\\n#YMSG,100: Enter a valid number.\\nFloat.Invalid=Enter a valid number\\n#YMSG,100: Enter a number greater than or equal to {0}\\nFloat.Minimum=Enter a number greater than or equal to {0}\\n#YMSG,100: Enter a number lower than or equal to {0}\\nFloat.Maximum=Enter a number less than or equal to {0}\\n\\n#YMSG,100: Enter a valid currency amount\\nCurrency.Invalid=Enter a valid currency amount\\n#YMSG,100: Enter an amount greater than or equal to {0}\\nCurrency.Minimum=Enter an amount greater than or equal to {0}\\n#YMSG,100: Enter an amount lower than or equal to {0}\\nCurrency.Maximum=Enter an amount less than or equal to {0}\\n\\n#YMSG,100: Enter a valid file size\\nFileSize.Invalid=Enter a valid file size\\n#YMSG,100: EEnter a file size greater than or equal to {0}\\nFileSize.Minimum=Enter a file size greater than or equal to {0}\\n#YMSG,100: Enter a file size lower than or equal to {0}\\nFileSize.Maximum=Enter a file size lower than or equal to {0}\\n\\n#YMSG,100: Enter a valid date\\nDate.Invalid=Enter a date\\n#YMSG,100: Enter a date after {0}\\nDate.Minimum=Enter a date after {0}\\n#YMSG,100: Enter a date before {0}\\nDate.Maximum=Enter a date before {0}\\n\\n#YMSG,100: Enter a valid time\\nTime.Invalid=Enter a valid time\\n#YMSG,100: Enter a time after {0}\\nTime.Minimum=Enter a time after {0}\\n#YMSG,100: Enter a time before {0}\\nTime.Maximum=Enter a time before {0}\\n\\n#YMSG,100: Enter a valid date and time\\nDateTime.Invalid=Enter a valid date and time\\n#YMSG,100: Enter a date and time after {0}\\nDateTime.Minimum=Enter a date and time after {0}\\n#YMSG,100: Enter a date and time before {0}\\nDateTime.Maximum=Enter a date and time before {0}\\n\\n#YMSG,100: Enter a valid date interval\\nDateInterval.Invalid=Enter a valid date interval\\n\\n#YMSG,100: Enter a value with at least {0} characters\\nString.MinLength=Enter a value with at least {0} characters\\n#YMSG,100: Enter a value with no more than {0} characters\\nString.MaxLength=Enter a value with no more than {0} characters\\n#YMSG,100: Enter a value starting with \\\"{0}\\\"\\nString.StartsWith=Enter a value starting with \\\"{0}\\\"\\n#YMSG,100: Enter a value ending with \\\"{0}\\\"\\nString.EndsWith=Enter a value ending with \\\"{0}\\\"\\n#YMSG,100: Enter a value containing \\\"{0}\\\"\\nString.Contains=Enter a value containing \\\"{0}\\\"\\n#YMSG,100: Enter value \\\"{0}\\\"\\nString.Equals=Enter value \\\"{0}\\\"\\n#YMSG,100: Enter a value matching \\\"{0}\\\"\\nString.Search=Enter a value matching \\\"{0}\\\"\\n\\n#XACT: ARIA announcement for the MessageStrip's \\\"Error\\\" state\\nMESSAGE_STRIP_ERROR=Message Strip Error\\n#XACT: ARIA announcement for the MessageStrip's \\\"Warning\\\" state\\nMESSAGE_STRIP_WARNING=Message Strip Warning\\n#XACT: ARIA announcement for the MessageStrip's \\\"Success\\\" state\\nMESSAGE_STRIP_SUCCESS=Message Strip Success\\n#XACT: ARIA announcement for the MessageStrip's \\\"Information\\\" state\\nMESSAGE_STRIP_INFORMATION=Message Strip Information\\n#XACT: ARIA announcement for the MessageStrip's closable state\\nMESSAGE_STRIP_CLOSABLE=Closable\\n\\n#XACT: type of an UI control is an image\\nACC_CTR_TYPE_IMAGE=Image\\n#XACT: type of an UI control is a button\\nACC_CTR_TYPE_BUTTON=Button\\n\\n#XFLD: Close\\nCLOSE=Close\\n\\n#########\\n# Texts for sap-icon Font\\n#\\n# Update \\\"sap.ui.core.IconPool\\\" (mIconI18nKey)\\n# when adding a new key here\\n#########\\n\\n#XTXT\\nIcon.action-settings=Settings\\n#XTXT\\nIcon.activate=Activate\\n#XTXT\\nIcon.add=Add\\n#XTXT\\nIcon.add-contact=Add Contact\\n#XTXT\\nIcon.add-filter=Add Filter\\n#XTXT\\nIcon.add-photo=Add Photo\\n#XTXT\\nIcon.back-to-top=Back to Top\\n#XTXT\\nIcon.collapse=Collapse\\n#XTXT\\nIcon.collapse-group=Collapse Group\\n#XTXT: Crop parts of an image\\nIcon.crop=Crop\\n#XTXT: To decline an offer\\nIcon.decline=Decline\\n#XTXT\\nIcon.delete=Delete\\n#XTXT\\nIcon.display=Display\\n#XTXT\\nIcon.down=Down\\n#XTXT\\nIcon.download=Download\\n#XTXT\\nIcon.drill-down=Drill Down\\n#XTXT\\nIcon.drill-up=Drill Up\\n#XTXT\\nIcon.error=Error\\n#XTXT\\nIcon.exit-full-screen=Exit Full Screen\\n#XTXT\\nIcon.expand=Expand\\n#XTXT\\nIcon.expand-group=Expand Group\\n#XTXT: Action to filter on a group of elements\\nIcon.filter=Filter\\n#XTXT: To flag or mark an item\\nIcon.flag=Flag\\n#XTXT: To forward an item to a recipients\\nIcon.forward=Forward\\n#XTXT\\nIcon.full-screen=Enter Full Screen\\n#XTXT\\nIcon.generate-shortcut=Create Shortcut\\n#XTXT: To group items\\nIcon.group-2=Group\\n#XTXT: To hide an element from display\\nIcon.hide=Hide\\n#XTXT\\nIcon.ipad=Tablet\\n#XTXT\\nIcon.ipad-2=Tablet\\n#XTXT\\nIcon.iphone=Phone\\n#XTXT\\nIcon.iphone-2=Phone\\n#XTXT\\nIcon.laptop=Laptop\\n#XTXT\\nIcon.message-error=Error\\n#XTXT\\nIcon.message-information=Information\\n#XTXT\\nIcon.message-success=Successful\\n#XTXT\\nIcon.message-warning=Warning\\n#XTXT: To manipulate the position of an element\\nIcon.move=Move\\n#XTXT\\nIcon.multi-select=Multi Select\\n#XTXT\\nIcon.nav-back=Navigate Back\\n#XTXT\\nIcon.overflow=More\\n#XTXT\\nIcon.redo=Redo\\n#XTXT\\nIcon.refresh=Refresh\\n#XTXT\\nIcon.resize=Resize\\n#XTXT\\nIcon.resize-horizontal=Resize Horizontally\\n#XTXT\\nIcon.resize-vertical=Resize Vertically\\n#XTXT\\nIcon.response=Reply\\n#XTXT\\nIcon.save=Save\\n#XTXT\\nIcon.search=Search\\n#XTXT\\nIcon.settings=Settings\\n#XTXT: To show an element previously hidden\\nIcon.show=Show\\n#XTXT\\nIcon.sort=Sort\\n#XTXT\\nIcon.sort-ascending=Sort Ascending\\n#XTXT\\nIcon.sort-descending=Sort Descending\\n#XTXT\\nIcon.synchronize=Synchronize\\n#XTXT\\nIcon.undo=Undo\\n#XTXT\\nIcon.up=Up\\n#XTXT\\nIcon.upload=Upload\\n#XTXT\\nIcon.zoom-in=Zoom In\\n#XTXT\\nIcon.zoom-out=Zoom Out\\n\\n#########\\n# Texts for sap.ui.debug.TechnicalInfo\\n#########\\n\\n#XTIT: Title for the technical information dialog\\nTechInfo.DialogTitle=Technical Information Dialog\\n\\n#XTOL: Tooltip for info button in header\\nTechInfo.HelpButton.Tooltip=Open documentation\\n\\n#XTOL: Tooltip for version information link\\nTechInfo.VersionLink.Tooltip=Open version information in a new tab\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.CopyButton.Tooltip=Copy technical information to clipboard\\n\\n#XBUT: SAPUI5 Diagnostics button text\\nTechnInfo.DiagnosticsButton.Text=Open Diagnostics\\n\\n#XBUT: Support assistant button text\\nTechnInfo.AssistantButton.Text=Activate Support Assistant\\n\\n#XFLD: User agent field label\\nTechInfo.UserAgent.Label=User Agent\\n\\n#XFLD: Application URL label\\nTechInfo.AppUrl.Label=App URL\\n\\n#XFLD: Debug sources label\\nTechInfo.DebugSources.Label=Use Debug Sources\\n\\n#XTOL: Debug sources tooltip\\nTechInfo.DebugSources.Tooltip=Reloads the current page with unminified sources for debugging\\n\\n#XLNK: Debug sources select packages link\\nTechInfo.DebugSourcesModules.Link=Select specific modules\\n\\n#XFLD: Text for the version build time string\\nTechInfo.VersionBuildTime.Text=(built at {0})\\n\\n#YMSG: success message for copying to clipboard\\nTechInfo.CopyToClipboard.Success=Technical information copied to clipboard\\n\\n#YMSG: error message for copying to clipboard\\nTechInfo.CopyToClipboard.Error=Technical information could not be copied to clipboard\\n\\n#XTIT: Confirmation title for enabling/disabling debug sources\\nTechInfo.DebugSources.ConfirmTitle=Reload App\\n\\n#YMSG: Confirmation message for enabling/disabling debug sources\\nTechInfo.DebugSources.ConfirmMessage=Reload the app to enable or disable the debug sources\\n\\n#XTIT: Title for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.Title=Support Assistant Settings\\n\\n#XFLD: Standard bootstrap locations option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.StandardLocation=Recommended Locations\\n\\n#XFLD: Custom bootstrap location option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.CustomLocation=Custom Location\\n\\n#XFLD: Application version bootstrap location option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.AppVersionOption=Application Version ({0})\\n\\n#YMSG: Custom bootstrap location validation error message\\nTechInfo.SupportAssistantConfigPopup.URLValidationMessage=The syntax of the location address is incorrect. The correct syntax is http\\\\://<Valid custom URI>/resources/sap/ui/support.\\n\\n#YMSG: Error message when support Assistant is not found\\nTechInfo.SupportAssistantConfigPopup.SupportAssistantNotFound=Support Assistant is not available in this location\\\\:\\n\\n#YMSG: Error message when protocols did not match\\nTechInfo.SupportAssistantConfigPopup.ProtocolError=App protocol does not match the Support Assistant protocol (HTTP/HTTPS)\\n\\n#YMSG: Error message when Ajax return code is different than [200]\\nTechInfo.SupportAssistantConfigPopup.ErrorTryingToGetRecourse=Ajax return code is different than [200]\\n\\n#YMSG: Error message when file not Found [404]\\nTechInfo.SupportAssistantConfigPopup.ErrorNotFound=File not found (404)\\n\\n#YMSG: Error message when internal server error occurs\\nTechInfo.SupportAssistantConfigPopup.InternalServerError=Internal server error\\\\: {500}\\n\\n#YMSG: Error message when request timeout.\\nTechInfo.SupportAssistantConfigPopup.ErrorOnTimeout=Timeout error\\n\\n#YMSG: Error message when trying to parse JSON\\nTechInfo.SupportAssistantConfigPopup.ErrorOnJsonParse=Requested JSON parse failed\\n\\n#YMSG: Error message when uncaught Error occurs\\nTechInfo.SupportAssistantConfigPopup.UncaughtError=Uncaught error\\n\\n#YMSG: Error message when request is aborted\\nTechInfo.SupportAssistantConfigPopup.ErrorWhenAborted=Ajax request aborted\\n\\n#YMSG: Error message when default locations are not available\\nTechInfo.SupportAssistantConfigPopup.NotAvailableAtTheMoment=This location is not available at the moment.\\n\\n#XFLD: Title for enabling Support Assistant to open in new window.\\nTechInfo.SupportAssistantConfigPopup.OpenInNewWindow=Open Support Assistant in New Window\\n\\n#XFLD: Title for location section in support Assistant settings popover\\nTechInfo.SupportAssistantConfigPopup.Locations=Resource Location\\n\\n#XFLD: Title for options section in support Assistant settings popover\\nTechInfo.SupportAssistantConfigPopup.Options=Options\\n\\n#XTIT: Title for the debug modules configuration selection\\nTechInfo.DebugModulesConfigPopup.SelectionCounter=Select Debug Modules ({0} Selected)\\n\\n#YMSG: sap-ui-debug mode custom value validation error message\\nTechInfo.DebugModulesConfigPopup.ModeValidationMessage=Value for parameter sap-ui-debug is invalid\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.DebugModulesCopy.Tooltip=Copy the sap-ui-debug value to clipboard\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.DebugModulesReset.Tooltip=Reset the currently selected modules\\n\\n#YMSG: success message for copying to clipboard\\nTechInfo.DebugModulesCopyToClipboard.Success=Custom sap-ui-debug value copied to clipboard\\n\\n#YMSG: error message for copying to clipboard\\nTechInfo.DebugModulesCopyToClipboard.Error=Custom sap-ui-debug value could not be copied to clipboard\\n\\n#XTIT: Title for the debug modules configuration popup confirmation button\\nTechInfo.DebugModulesConfigPopup.Confirm=Apply\\n\"\n\n/***/ }),\n\n/***/ \"E8Q9\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"dg/n\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.ListItemBase.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"20/6\"), __webpack_require__(\"NZXE\"), __webpack_require__(\"YPoY\"), __webpack_require__(\"XYhA\"), __webpack_require__(\"r9tp\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"8WGD\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, library, Control, IconPool, Icon, Button, BindingMode, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListKeyboardMode\n\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\t// shortcut for sap.m.ListMode\n\tvar ListMode = library.ListMode;\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.m.ButtonType\n\tvar ButtonType = library.ButtonType;\n\n\t/**\n  * Constructor for a new ListItemBase.\n  *\n  * @param {string} [sId] Id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * ListItemBase contains the base features of all specific list items.\n  * @extends sap.ui.core.Control\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.ListItemBase\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar ListItemBase = Control.extend(\"sap.m.ListItemBase\", /** @lends sap.m.ListItemBase.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Defines the visual indication and behavior of the list items, e.g. <code>Active</code>, <code>Navigation</code>, <code>Detail</code>.\n     */\n\t\t\t\ttype: { type: \"sap.m.ListType\", group: \"Misc\", defaultValue: ListType.Inactive },\n\n\t\t\t\t/**\n     * Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control.\n     */\n\t\t\t\tvisible: { type: \"boolean\", group: \"Appearance\", defaultValue: true },\n\n\t\t\t\t/**\n     * Activates the unread indicator for the list item, if set to <code>true</code>.\n     * <b>Note:</b> This flag is ignored when the <code>showUnread</code> property of the parent is set to <code>false</code>.\n     */\n\t\t\t\tunread: { type: \"boolean\", group: \"Misc\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines the selected state of the list items.\n     * <b>Note:</b> Binding the <code>selected</code> property in single selection modes may cause unwanted results if you have more than one selected items in your binding.\n     */\n\t\t\t\tselected: { type: \"boolean\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines the counter value of the list items.\n     */\n\t\t\t\tcounter: { type: \"int\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the highlight state of the list items.\n     * @since 1.44.0\n     */\n\t\t\t\thighlight: { type: \"sap.ui.core.MessageType\", group: \"Appearance\", defaultValue: \"None\" }\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n     * Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).\n     * @since 1.28.0\n     */\n\t\t\t\tariaLabelledBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaLabelledBy\" }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * Fires when the user taps on the control.\n     * @deprecated Since version 1.20.0. Instead, use <code>press</code> event.\n     */\n\t\t\t\ttap: { deprecated: true },\n\n\t\t\t\t/**\n     * Fires when the user taps on the detail button of the control.\n     * @deprecated Since version 1.20.0. Instead, use <code>detailPress</code> event.\n     */\n\t\t\t\tdetailTap: { deprecated: true },\n\n\t\t\t\t/**\n     * Fires when the user clicks on the control.\n     * <b>Note:</b> This event is not fired when the parent <code>mode</code> is <code>SingleSelectMaster</code> or when the <code>includeItemInSelection</code> property is set to <code>true</code>.\n     * If there is an interactive element that handles its own <code>press</code> event then the list item's <code>press</code> event is not fired.\n     * Also see {@link sap.m.ListBase#attachItemPress}.\n     */\n\t\t\t\tpress: {},\n\n\t\t\t\t/**\n     * Fires when the user clicks on the detail button of the control.\n     */\n\t\t\t\tdetailPress: {}\n\t\t\t},\n\t\t\tdesignTime: true\n\t\t} });\n\n\tListItemBase.getAccessibilityText = function (oControl, bDetectEmpty) {\n\t\tif (!oControl || !oControl.getVisible || !oControl.getVisible()) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tvar oAccInfo;\n\t\tif (oControl.getAccessibilityInfo) {\n\t\t\toAccInfo = oControl.getAccessibilityInfo();\n\t\t}\n\t\tif (!oAccInfo || !oControl.getAccessibilityInfo) {\n\t\t\toAccInfo = this.getDefaultAccessibilityInfo(oControl.getDomRef());\n\t\t}\n\n\t\toAccInfo = jQuery.extend({\n\t\t\ttype: \"\",\n\t\t\tdescription: \"\",\n\t\t\tchildren: []\n\t\t}, oAccInfo);\n\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\"),\n\t\t    sText = oAccInfo.type + \" \" + oAccInfo.description + \" \",\n\t\t    sTooltip = oControl.getTooltip_AsString();\n\n\t\tif (oAccInfo.enabled === false) {\n\t\t\tsText += oBundle.getText(\"CONTROL_DISABLED\") + \" \";\n\t\t}\n\t\tif (oAccInfo.editable === false) {\n\t\t\tsText += oBundle.getText(\"CONTROL_READONLY\") + \" \";\n\t\t}\n\t\tif (!oAccInfo.type && sTooltip && sText.indexOf(sTooltip) == -1) {\n\t\t\tsText = sTooltip + \" \" + sText;\n\t\t}\n\n\t\toAccInfo.children.forEach(function (oChild) {\n\t\t\tsText += ListItemBase.getAccessibilityText(oChild) + \" \";\n\t\t});\n\n\t\tsText = sText.trim();\n\t\tif (bDetectEmpty && !sText) {\n\t\t\tsText = oBundle.getText(\"CONTROL_EMPTY\");\n\t\t}\n\n\t\treturn sText;\n\t};\n\n\tListItemBase.getDefaultAccessibilityInfo = function (oDomRef) {\n\t\tif (!oDomRef) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar Node = window.Node,\n\t\t    NodeFilter = window.NodeFilter,\n\t\t    oTreeWalker = document.createTreeWalker(oDomRef, NodeFilter.SHOW_TEXT + NodeFilter.SHOW_ELEMENT, function (oNode) {\n\t\t\tif (oNode.type === Node.ELEMENT_NODE) {\n\t\t\t\tif (oNode.classList.contains(\"sapUiInvisibleText\")) {\n\t\t\t\t\treturn NodeFilter.FILTER_SKIP;\n\t\t\t\t}\n\n\t\t\t\tif (oNode.getAttribute(\"aria-hidden\") == \"true\" || oNode.style.visibility == \"hidden\" || oNode.style.display == \"none\") {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\treturn NodeFilter.FILTER_SKIP;\n\t\t\t}\n\n\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t}, false);\n\n\t\tvar aText = [];\n\t\twhile (oTreeWalker.nextNode()) {\n\t\t\tvar oNode = oTreeWalker.currentNode;\n\t\t\tif (oNode.nodeType === Node.TEXT_NODE) {\n\t\t\t\tvar sText = (oNode.nodeValue || \"\").trim();\n\t\t\t\tif (sText) {\n\t\t\t\t\taText.push(sText);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdescription: aText.join(\" \")\n\t\t};\n\t};\n\n\t// icon URI configuration\n\tListItemBase.prototype.DetailIconURI = IconPool.getIconURI(\"edit\");\n\tListItemBase.prototype.DeleteIconURI = IconPool.getIconURI(\"sys-cancel\");\n\tListItemBase.prototype.NavigationIconURI = IconPool.getIconURI(\"slim-arrow-right\");\n\n\t// defines the root tag name for rendering purposes\n\tListItemBase.prototype.TagName = \"li\";\n\n\t// internal active state of the listitem\n\tListItemBase.prototype.init = function () {\n\t\tthis._active = false;\n\t\tthis._bGroupHeader = false;\n\t\tthis._bNeedsHighlight = false;\n\t};\n\n\tListItemBase.prototype.onAfterRendering = function () {\n\t\tthis.informList(\"DOMUpdate\", true);\n\t\tthis._checkHighlight();\n\t};\n\n\t/*\n  * Returns the binding context path via checking the named model of parent\n  *\n  * @protected\n  * @since 1.16.3\n  */\n\tListItemBase.prototype.getBindingContextPath = function (sModelName) {\n\t\tvar oList = this.getList();\n\t\tif (oList && !sModelName) {\n\t\t\tsModelName = (oList.getBindingInfo(\"items\") || {}).model;\n\t\t}\n\n\t\tvar oContext = this.getBindingContext(sModelName);\n\t\tif (oContext) {\n\t\t\treturn oContext.getPath();\n\t\t}\n\t};\n\n\t/*\n  * Returns whether selected property is two-way bound or not\n  * @protected\n  */\n\tListItemBase.prototype.isSelectedBoundTwoWay = function () {\n\t\tvar oBinding = this.getBinding(\"selected\");\n\t\tif (oBinding && oBinding.getBindingMode() == BindingMode.TwoWay) {\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t/*\n  * Returns the responsible list control\n  *\n  * @returns {sap.m.ListBase|undefined}\n  * @protected\n  */\n\tListItemBase.prototype.getList = function () {\n\t\tvar oParent = this.getParent();\n\t\tif (oParent instanceof sap.m.ListBase) {\n\t\t\treturn oParent;\n\t\t}\n\t};\n\n\t/*\n  * Returns the property of the responsible list container according to given parameter.\n  *\n  * @param {string} sProperty property name\n  * @param {*} [vFallbackValue] fallback value when list is not found\n  * @return {*}\n  * @protected\n  */\n\tListItemBase.prototype.getListProperty = function (sProperty, vFallbackValue) {\n\t\tvar oList = this.getList();\n\t\tif (oList) {\n\t\t\tsProperty = jQuery.sap.charToUpperCase(sProperty);\n\t\t\treturn oList[\"get\" + sProperty]();\n\t\t}\n\n\t\treturn vFallbackValue;\n\t};\n\n\t/*\n  * Informs the responsible list for item events\n  *\n  * @param {string} sEvent the name of the event\n  * @param {*} [vParam1] first additional parameter\n  * @param {*} [vParam2] second additional parameter\n  * @protected\n  */\n\tListItemBase.prototype.informList = function (sEvent, vParam1, vParam2) {\n\t\tvar oList = this.getList();\n\t\tif (oList) {\n\t\t\tvar sMethod = \"onItem\" + sEvent;\n\t\t\tif (oList[sMethod]) {\n\t\t\t\toList[sMethod](this, vParam1, vParam2);\n\t\t\t}\n\t\t}\n\t};\n\n\tListItemBase.prototype.informSelectedChange = function (bSelected) {\n\t\tvar oList = this.getList();\n\t\tif (oList) {\n\t\t\toList.onItemSelectedChange(this, bSelected);\n\t\t\tthis.bSelectedDelayed = undefined;\n\t\t} else {\n\t\t\tthis.bSelectedDelayed = bSelected;\n\t\t}\n\t};\n\n\tListItemBase.prototype.getAccessibilityType = function (oBundle) {\n\t\treturn oBundle.getText(\"ACC_CTR_TYPE_OPTION\");\n\t};\n\n\tListItemBase.prototype.getAccessibilityDescription = function (oBundle) {\n\t\tvar aOutput = [],\n\t\t    mType = ListType,\n\t\t    sType = this.getType(),\n\t\t    sHighlight = this.getHighlight(),\n\t\t    sTooltip = this.getTooltip_AsString();\n\n\t\tif (this.getSelected()) {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_SELECTED\"));\n\t\t}\n\n\t\tif (sHighlight != \"None\") {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_STATE_\" + sHighlight.toUpperCase()));\n\t\t}\n\n\t\tif (this.getUnread() && this.getListProperty(\"showUnread\")) {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_UNREAD\"));\n\t\t}\n\n\t\tif (this.getCounter()) {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_COUNTER\", this.getCounter()));\n\t\t}\n\n\t\tif (sType == mType.Navigation) {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_NAVIGATION\"));\n\t\t} else {\n\t\t\tif (sType == mType.Detail || sType == mType.DetailAndActive) {\n\t\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_DETAIL\"));\n\t\t\t}\n\t\t\tif (sType == mType.Active || sType == mType.DetailAndActive) {\n\t\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_ACTIVE\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.getContentAnnouncement) {\n\t\t\taOutput.push((this.getContentAnnouncement(oBundle) || \"\").trim());\n\t\t}\n\n\t\tif (sTooltip) {\n\t\t\taOutput.push(sTooltip);\n\t\t}\n\n\t\treturn aOutput.join(\" \");\n\t};\n\n\tListItemBase.prototype.getAccessibilityInfo = function () {\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\treturn {\n\t\t\ttype: this.getAccessibilityType(oBundle),\n\t\t\tdescription: this.getAccessibilityDescription(oBundle),\n\t\t\tfocusable: true\n\t\t};\n\t};\n\n\t/**\n  * Returns the accessibility announcement for the content\n  * Hook for the subclasses.\n  *\n  * @returns {string}\n  * @protected\n  * ListItemBase.prototype.getContentAnnouncement = function() {\n  * };\n  */\n\n\t/*\n  * Returns the mode of the current item according to list mode\n  * Subclasses can overwrite this if item should not have any mode\n  * Default empty mode is used when list mode is not yet known\n  *\n  * @returns {sap.m.ListMode|\"\"}\n  * @protected\n  */\n\tListItemBase.prototype.getMode = function () {\n\t\treturn this.getListProperty(\"mode\", \"\");\n\t};\n\n\t/*\n  * Updates the accessibility state of the control.\n  *\n  * @param {Object} [mAccessibility] a map of accessibility properties\n  * @protected\n  */\n\tListItemBase.prototype.updateAccessibilityState = function (mAccessibility) {\n\t\tvar $This = this.$();\n\t\tif (!$This.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $Items = $This.parent().children(\".sapMLIB\");\n\t\t$This.attr(jQuery.extend({\n\t\t\t\"aria-setsize\": $Items.length,\n\t\t\t\"aria-posinset\": $Items.index($This) + 1\n\t\t}, mAccessibility));\n\t};\n\n\t/**\n  * Returns the delete icon when mode is Delete\n  *\n  * @return {sap.ui.core.Icon}\n  * @private\n  */\n\tListItemBase.prototype.getDeleteControl = function () {\n\t\tif (this._oDeleteControl) {\n\t\t\treturn this._oDeleteControl;\n\t\t}\n\n\t\tthis._oDeleteControl = new Button({\n\t\t\tid: this.getId() + \"-imgDel\",\n\t\t\ticon: this.DeleteIconURI,\n\t\t\ttype: ButtonType.Transparent,\n\t\t\ttooltip: sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LIST_ITEM_DELETE\")\n\t\t}).addStyleClass(\"sapMLIBIconDel sapMLIBSelectD\").setParent(this, null, true).attachPress(function (oEvent) {\n\t\t\tthis.informList(\"Delete\");\n\t\t}, this);\n\n\t\tthis._oDeleteControl._bExcludeFromTabChain = true;\n\n\t\treturn this._oDeleteControl;\n\t};\n\n\t/**\n  * Returns the detail icon when item type is Detail|DetailAndActive\n  *\n  * @return {sap.ui.core.Icon}\n  * @private\n  */\n\tListItemBase.prototype.getDetailControl = function () {\n\t\tif (this._oDetailControl) {\n\t\t\treturn this._oDetailControl;\n\t\t}\n\n\t\tthis._oDetailControl = new Button({\n\t\t\tid: this.getId() + \"-imgDet\",\n\t\t\ticon: this.DetailIconURI,\n\t\t\ttype: ButtonType.Transparent,\n\t\t\ttooltip: sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LIST_ITEM_EDIT\")\n\t\t}).addStyleClass(\"sapMLIBType sapMLIBIconDet\").setParent(this, null, true).attachPress(function () {\n\t\t\tthis.fireDetailTap();\n\t\t\tthis.fireDetailPress();\n\t\t}, this);\n\n\t\tthis._oDetailControl._bExcludeFromTabChain = true;\n\n\t\treturn this._oDetailControl;\n\t};\n\n\t/**\n  * Returns the navigation icon when item type is Navigation\n  *\n  * @return {sap.ui.core.Icon}\n  * @private\n  */\n\tListItemBase.prototype.getNavigationControl = function () {\n\t\tif (this._oNavigationControl) {\n\t\t\treturn this._oNavigationControl;\n\t\t}\n\n\t\tthis._oNavigationControl = new Icon({\n\t\t\tid: this.getId() + \"-imgNav\",\n\t\t\tsrc: this.NavigationIconURI,\n\t\t\tuseIconTooltip: false,\n\t\t\tnoTabStop: true\n\t\t}).setParent(this, null, true).addStyleClass(\"sapMLIBType sapMLIBImgNav\");\n\n\t\treturn this._oNavigationControl;\n\t};\n\n\t/**\n  * Returns RadioButton control when mode is one of Single Selection type\n  *\n  * @return {sap.m.RadioButton}\n  * @private\n  */\n\tListItemBase.prototype.getSingleSelectControl = function () {\n\t\tif (this._oSingleSelectControl) {\n\t\t\treturn this._oSingleSelectControl;\n\t\t}\n\n\t\tthis._oSingleSelectControl = new sap.m.RadioButton({\n\t\t\tid: this.getId() + \"-selectSingle\",\n\t\t\tgroupName: this.getListProperty(\"id\") + \"_selectGroup\",\n\t\t\tactiveHandling: false,\n\t\t\tselected: this.getSelected()\n\t\t}).addStyleClass(\"sapMLIBSelectS\").setParent(this, null, true).setTabIndex(-1).attachSelect(function (oEvent) {\n\t\t\tvar bSelected = oEvent.getParameter(\"selected\");\n\t\t\tthis.setSelected(bSelected);\n\t\t\tthis.informList(\"Select\", bSelected);\n\t\t}, this);\n\n\t\treturn this._oSingleSelectControl;\n\t};\n\n\t/**\n  * Returns CheckBox control when mode is MultiSelection\n  *\n  * @return {sap.m.CheckBox}\n  * @private\n  */\n\tListItemBase.prototype.getMultiSelectControl = function () {\n\t\tif (this._oMultiSelectControl) {\n\t\t\treturn this._oMultiSelectControl;\n\t\t}\n\n\t\tthis._oMultiSelectControl = new (__webpack_require__(\"Q3pR\"))({\n\t\t\tid: this.getId() + \"-selectMulti\",\n\t\t\tactiveHandling: false,\n\t\t\tselected: this.getSelected()\n\t\t}).addStyleClass(\"sapMLIBSelectM\").setParent(this, null, true).setTabIndex(-1).attachSelect(function (oEvent) {\n\t\t\tvar bSelected = oEvent.getParameter(\"selected\");\n\t\t\tthis.setSelected(bSelected);\n\t\t\tthis.informList(\"Select\", bSelected);\n\t\t}, this);\n\n\t\treturn this._oMultiSelectControl;\n\t};\n\n\t/**\n  * Returns responsible control depends on the mode\n  *\n  * @returns {sap.ui.core.Control}\n  * @private\n  */\n\tListItemBase.prototype.getModeControl = function (bUpdate) {\n\t\tvar sMode = this.getMode(),\n\t\t    mListMode = ListMode;\n\n\t\tif (!sMode || sMode == mListMode.None) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (sMode == mListMode.Delete) {\n\t\t\treturn this.getDeleteControl();\n\t\t}\n\n\t\tvar oSelectionControl = null;\n\t\tif (sMode == mListMode.MultiSelect) {\n\t\t\toSelectionControl = this.getMultiSelectControl();\n\t\t} else {\n\t\t\toSelectionControl = this.getSingleSelectControl();\n\t\t}\n\n\t\tif (oSelectionControl && bUpdate) {\n\t\t\toSelectionControl.setSelected(this.getSelected());\n\t\t}\n\n\t\treturn oSelectionControl;\n\t};\n\n\t/**\n  * Returns item type icon\n  *\n  * @returns {sap.ui.core.Icon}\n  * @private\n  */\n\tListItemBase.prototype.getTypeControl = function () {\n\t\tvar sType = this.getType(),\n\t\t    mType = ListType;\n\n\t\tif (sType == mType.Detail || sType == mType.DetailAndActive) {\n\t\t\treturn this.getDetailControl();\n\t\t}\n\n\t\tif (sType == mType.Navigation) {\n\t\t\treturn this.getNavigationControl();\n\t\t}\n\t};\n\n\t/**\n  * Destroys generated mode/type controls\n  *\n  * @param {String[]} aControls array of control names\n  * @private\n  */\n\tListItemBase.prototype.destroyControls = function (aControls) {\n\t\taControls.forEach(function (sControl) {\n\t\t\tsControl = \"_o\" + sControl + \"Control\";\n\t\t\tif (this[sControl]) {\n\t\t\t\tthis[sControl].destroy(\"KeepDom\");\n\t\t\t\tthis[sControl] = null;\n\t\t\t}\n\t\t}, this);\n\t};\n\n\t/**\n  * Determines whether item has any action or not.\n  * @private\n  */\n\tListItemBase.prototype.isActionable = function () {\n\t\treturn this.getListProperty(\"includeItemInSelection\") || this.getMode() == ListMode.SingleSelectMaster || this.getType() != ListType.Inactive && this.getType() != ListType.Detail;\n\t};\n\n\tListItemBase.prototype.exit = function () {\n\t\tthis._oLastFocused = null;\n\t\tthis._checkHighlight(false);\n\t\tthis.setActive(false);\n\t\tthis.destroyControls([\"Delete\", \"SingleSelect\", \"MultiSelect\", \"Detail\", \"Navigation\"]);\n\t};\n\n\t/**\n  * Determines whether item is selectable or not.\n  * By default, when item should be in selectable mode\n  *\n  * Subclasses can overwrite in case of unselectable item.\n  * @returns {Boolean}\n  * @private\n  */\n\tListItemBase.prototype.isSelectable = function () {\n\t\tvar sMode = this.getMode();\n\t\treturn !(sMode == ListMode.None || sMode == ListMode.Delete);\n\t};\n\n\tListItemBase.prototype.getSelected = function () {\n\t\tif (this.isSelectable()) {\n\t\t\treturn this.getProperty(\"selected\");\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n  * Returns the state of the item selection as a boolean\n  *\n  * @public\n  * @return boolean\n  * @deprecated Since version 1.10.2.\n  * API Change makes this method unnecessary. Use getSelected method instead.\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tListItemBase.prototype.isSelected = ListItemBase.prototype.getSelected;\n\n\tListItemBase.prototype.setSelected = function (bSelected, bDontNotifyParent) {\n\t\t// do not handle when item is not selectable or in same status\n\t\tbSelected = this.validateProperty(\"selected\", bSelected);\n\t\tif (!this.isSelectable() || bSelected == this.getSelected()) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// notify parent about the selection first\n\t\tif (!bDontNotifyParent) {\n\t\t\tthis.informSelectedChange(bSelected);\n\t\t}\n\n\t\t// update the selection control status\n\t\tvar oSelectionControl = this.getModeControl();\n\t\tif (oSelectionControl) {\n\t\t\toSelectionControl.setSelected(bSelected);\n\t\t}\n\n\t\t// run the hook to update dom state\n\t\tthis.updateSelectedDOM(bSelected, this.$());\n\n\t\t// set the property and do not invalidate\n\t\tthis.setProperty(\"selected\", bSelected, true);\n\n\t\treturn this;\n\t};\n\n\t// Updates the selected state of the DOM\n\tListItemBase.prototype.updateSelectedDOM = function (bSelected, $This) {\n\t\t$This.toggleClass(\"sapMLIBSelected\", bSelected);\n\t\t$This.attr(\"aria-selected\", bSelected);\n\t};\n\n\tListItemBase.prototype.setParent = function (oParent) {\n\t\tControl.prototype.setParent.apply(this, arguments);\n\t\tif (!oParent) {\n\t\t\tthis._bGroupHeader = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.informList(\"Inserted\", this.bSelectedDelayed);\n\t\treturn this;\n\t};\n\n\tListItemBase.prototype.setBindingContext = function () {\n\t\tControl.prototype.setBindingContext.apply(this, arguments);\n\t\tthis.informList(\"BindingContextSet\");\n\t\treturn this;\n\t};\n\n\t/**\n  * Determines whether group header item or not.\n  *\n  * @return {Boolean}\n  */\n\tListItemBase.prototype.isGroupHeader = function () {\n\t\treturn this._bGroupHeader;\n\t};\n\n\t/**\n  * Determines whether item is in SingleSelectMaster mode or\n  * other selection modes when includeItemInSelection is true\n  *\n  * @return {Boolean}\n  */\n\tListItemBase.prototype.isIncludedIntoSelection = function () {\n\t\tvar sMode = this.getMode(),\n\t\t    mMode = ListMode;\n\n\t\treturn sMode == mMode.SingleSelectMaster || this.getListProperty(\"includeItemInSelection\") && (sMode == mMode.SingleSelectLeft || sMode == mMode.SingleSelect || sMode == mMode.MultiSelect);\n\t};\n\n\t// informs the list when item's highlight is changed\n\tListItemBase.prototype._checkHighlight = function (bNeedsHighlight) {\n\t\tif (bNeedsHighlight == undefined) {\n\t\t\tbNeedsHighlight = this.getVisible() && this.getHighlight() != \"None\";\n\t\t}\n\n\t\tif (this._bNeedsHighlight != bNeedsHighlight) {\n\t\t\tthis._bNeedsHighlight = bNeedsHighlight;\n\t\t\tthis.informList(\"HighlightChange\", bNeedsHighlight);\n\t\t}\n\t};\n\n\t/**\n  * Determines whether item needs icon to render type or not\n  *\n  * @return {Boolean}\n  */\n\tListItemBase.prototype.hasActiveType = function () {\n\t\tvar mType = ListType,\n\t\t    sType = this.getType();\n\n\t\treturn sType == mType.Active || sType == mType.Navigation || sType == mType.DetailAndActive;\n\t};\n\n\tListItemBase.prototype.setActive = function (bActive) {\n\t\tif (bActive == this._active) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (bActive && this.getListProperty(\"activeItem\")) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar $This = this.$();\n\t\tthis._active = bActive;\n\t\tthis._activeHandling($This);\n\n\t\tif (this.getType() == ListType.Navigation) {\n\t\t\tthis._activeHandlingNav($This);\n\t\t}\n\n\t\tif (bActive) {\n\t\t\tthis._activeHandlingInheritor($This);\n\t\t} else {\n\t\t\tthis._inactiveHandlingInheritor($This);\n\t\t}\n\n\t\tthis.informList(\"ActiveChange\", bActive);\n\t};\n\n\tListItemBase.prototype.ontap = function (oEvent) {\n\n\t\t// do not handle already handled events\n\t\tif (this._eventHandledByControl) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if includeItemInSelection all tap events will be used for the mode select and delete\n\t\t// SingleSelectMaster always behaves like includeItemInSelection is set\n\t\tif (this.isIncludedIntoSelection()) {\n\n\t\t\t// update selected property\n\t\t\tif (this.getMode() == ListMode.MultiSelect) {\n\t\t\t\tthis.setSelected(!this.getSelected());\n\t\t\t\tthis.informList(\"Select\", this.getSelected());\n\t\t\t} else if (!this.getSelected()) {\n\t\t\t\tthis.setSelected(true);\n\t\t\t\tthis.informList(\"Select\", true);\n\t\t\t}\n\t\t} else if (this.hasActiveType()) {\n\n\t\t\t// if a fast tap happens deactivate the touchstart/touchend timers and their logic\n\t\t\twindow.clearTimeout(this._timeoutIdStart);\n\t\t\twindow.clearTimeout(this._timeoutIdEnd);\n\n\t\t\t// active feedback\n\t\t\tthis.setActive(true);\n\n\t\t\t// even though the tabindex=-1, list items are not focusable on iPhone\n\t\t\tif (Device.os.ios) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\n\t\t\tjQuery.sap.delayedCall(180, this, function () {\n\t\t\t\tthis.setActive(false);\n\t\t\t});\n\n\t\t\tjQuery.sap.delayedCall(0, this, function () {\n\t\t\t\tthis.fireTap();\n\t\t\t\tthis.firePress();\n\t\t\t});\n\t\t}\n\n\t\t// tell the parent, item is pressed\n\t\tthis.informList(\"Press\", oEvent.srcControl);\n\t};\n\n\tListItemBase.prototype.ontouchstart = function (oEvent) {\n\t\tthis._eventHandledByControl = oEvent.isMarked();\n\n\t\tvar oTargetTouch = oEvent.targetTouches[0];\n\t\tthis._touchedY = oTargetTouch.clientY;\n\t\tthis._touchedX = oTargetTouch.clientX;\n\n\t\t// active handling if not handled already by control\n\t\t// several fingers could be used\n\t\tif (this._eventHandledByControl || oEvent.touches.length != 1 || !this.hasActiveType()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// timeout regarding active state when scrolling\n\t\tthis._timeoutIdStart = jQuery.sap.delayedCall(100, this, function () {\n\t\t\tthis.setActive(true);\n\t\t});\n\t};\n\n\t// handle touchmove to prevent active state when scrolling\n\tListItemBase.prototype.ontouchmove = function (oEvent) {\n\n\t\tif ((this._active || this._timeoutIdStart) && (Math.abs(this._touchedY - oEvent.targetTouches[0].clientY) > 10 || Math.abs(this._touchedX - oEvent.targetTouches[0].clientX) > 10)) {\n\n\t\t\t// there is movement and therefore no tap...remove active styles\n\t\t\tclearTimeout(this._timeoutIdStart);\n\t\t\tthis._timeoutIdStart = null;\n\t\t\tthis._timeoutIdEnd = null;\n\t\t\tthis.setActive(false);\n\t\t}\n\t};\n\n\tListItemBase.prototype.ontouchend = function (oEvent) {\n\n\t\t// several fingers could be used\n\t\tif (oEvent.targetTouches.length == 0 && this.hasActiveType()) {\n\t\t\tthis._timeoutIdEnd = jQuery.sap.delayedCall(100, this, function () {\n\t\t\t\tthis.setActive(false);\n\t\t\t});\n\t\t}\n\t};\n\n\t// During native scrolling: Chrome sends touchcancel and no touchend thereafter\n\tListItemBase.prototype.ontouchcancel = ListItemBase.prototype.ontouchend;\n\n\t// toggle active styles for navigation items\n\tListItemBase.prototype._activeHandlingNav = function () {};\n\n\t// hook method for active handling...inheritors should overwrite this method\n\tListItemBase.prototype._activeHandlingInheritor = function () {};\n\n\t// hook method for inactive handling...inheritors should overwrite this method\n\tListItemBase.prototype._inactiveHandlingInheritor = function () {};\n\n\t// switch background style... toggle active feedback\n\tListItemBase.prototype._activeHandling = function ($This) {\n\t\t$This.toggleClass(\"sapMLIBActive\", this._active);\n\n\t\tif (Device.system.Desktop && this.isActionable()) {\n\t\t\t$This.toggleClass(\"sapMLIBHoverable\", !this._active);\n\t\t}\n\t};\n\n\t/* Keyboard Handling */\n\tListItemBase.prototype.onsapspace = function (oEvent) {\n\n\t\t// handle only the events that are coming from ListItemBase\n\t\tif (oEvent.srcControl !== this) {\n\t\t\treturn;\n\t\t}\n\n\t\t// prevent default not to scroll down\n\t\toEvent.preventDefault();\n\n\t\t// allow only for selectable items\n\t\tif (oEvent.isMarked() || !this.isSelectable()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// update selected property\n\t\tif (this.getMode() == ListMode.MultiSelect) {\n\t\t\tthis.setSelected(!this.getSelected());\n\t\t\tthis.informList(\"Select\", this.getSelected());\n\t\t} else if (!this.getSelected()) {\n\t\t\tthis.setSelected(true);\n\t\t\tthis.informList(\"Select\", true);\n\t\t}\n\n\t\t// event is handled\n\t\toEvent.setMarked();\n\t};\n\n\tListItemBase.prototype.onsapenter = function (oEvent) {\n\t\tvar oList = this.getList();\n\t\tif (oEvent.isMarked() || !oList) {\n\t\t\treturn;\n\t\t}\n\n\t\t// exit from edit mode\n\t\tvar mKeyboardMode = ListKeyboardMode;\n\t\tif (oEvent.srcControl !== this && oList.getKeyboardMode() == mKeyboardMode.Edit) {\n\t\t\toList.setKeyboardMode(mKeyboardMode.Navigation);\n\t\t\tthis._switchFocus(oEvent);\n\t\t\treturn;\n\t\t}\n\n\t\t// handle only item events\n\t\tif (oEvent.srcControl !== this) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isIncludedIntoSelection()) {\n\n\t\t\t// support old bug and mimic space key handling and\n\t\t\t// do not fire item's press event when item is included into selection\n\t\t\tthis.onsapspace(oEvent);\n\t\t} else if (this.hasActiveType()) {\n\n\t\t\t// active feedback\n\t\t\toEvent.setMarked();\n\t\t\tthis.setActive(true);\n\n\t\t\tjQuery.sap.delayedCall(180, this, function () {\n\t\t\t\tthis.setActive(false);\n\t\t\t});\n\n\t\t\t// fire own press event\n\t\t\tjQuery.sap.delayedCall(0, this, function () {\n\t\t\t\tthis.fireTap();\n\t\t\t\tthis.firePress();\n\t\t\t});\n\t\t}\n\n\t\t// let the parent know item is pressed\n\t\toList.onItemPress(this, oEvent.srcControl);\n\t};\n\n\tListItemBase.prototype.onsapdelete = function (oEvent) {\n\t\tif (oEvent.isMarked() || oEvent.srcControl !== this || this.getMode() != ListMode.Delete) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.informList(\"Delete\");\n\t\toEvent.preventDefault();\n\t\toEvent.setMarked();\n\t};\n\n\tListItemBase.prototype._switchFocus = function (oEvent) {\n\t\tvar oList = this.getList();\n\t\tif (!oList) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $Tabbables = this.getTabbables();\n\t\tif (oEvent.srcControl !== this) {\n\t\t\toList._iLastFocusPosOfItem = $Tabbables.index(oEvent.target);\n\t\t\tthis.focus();\n\t\t} else if ($Tabbables.length) {\n\t\t\tvar iFocusPos = oList._iLastFocusPosOfItem || 0;\n\t\t\tiFocusPos = $Tabbables[iFocusPos] ? iFocusPos : -1;\n\t\t\t$Tabbables.eq(iFocusPos).focus();\n\t\t}\n\n\t\toEvent.preventDefault();\n\t\toEvent.setMarked();\n\t};\n\n\tListItemBase.prototype.onkeydown = function (oEvent) {\n\t\t// check whether event is marked or not\n\t\tif (oEvent.isMarked()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// switch focus to row and focused item with F7\n\t\tvar mKeyCodes = jQuery.sap.KeyCodes;\n\t\tif (oEvent.which == mKeyCodes.F7) {\n\t\t\tthis._switchFocus(oEvent);\n\t\t\treturn;\n\t\t}\n\n\t\t// F2 fire detail event or switch keyboard mode\n\t\tif (oEvent.which == mKeyCodes.F2) {\n\t\t\tif (oEvent.srcControl === this && this.getType().indexOf(\"Detail\") == 0 && this.hasListeners(\"detailPress\") || this.hasListeners(\"detailTap\")) {\n\t\t\t\tthis.fireDetailTap();\n\t\t\t\tthis.fireDetailPress();\n\t\t\t\toEvent.preventDefault();\n\t\t\t\toEvent.setMarked();\n\t\t\t} else {\n\t\t\t\tvar oList = this.getList();\n\t\t\t\tif (oList) {\n\t\t\t\t\tthis.$().prop(\"tabIndex\", -1);\n\t\t\t\t\tvar mKeyboardMode = ListKeyboardMode;\n\t\t\t\t\toList.setKeyboardMode(oList.getKeyboardMode() == mKeyboardMode.Edit ? mKeyboardMode.Navigation : mKeyboardMode.Edit);\n\t\t\t\t\tthis._switchFocus(oEvent);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Returns the tabbable DOM elements as a jQuery collection\n  *\n  * @returns {jQuery} jQuery object\n  * @protected\n  * @since 1.26\n  */\n\tListItemBase.prototype.getTabbables = function () {\n\t\treturn this.$().find(\":sapTabbable\");\n\t};\n\n\t// handle the TAB key\n\tListItemBase.prototype.onsaptabnext = function (oEvent) {\n\t\t// check whether event is marked or not\n\t\tvar oList = this.getList();\n\t\tif (!oList || oEvent.isMarked() || oList.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if tab key is pressed while the last tabbable element of the list item\n\t\t// has been focused, we forward tab to the last pseudo element of the table\n\t\tvar oLastTabbableDomRef = this.getTabbables().get(-1) || this.getDomRef();\n\t\tif (oEvent.target === oLastTabbableDomRef) {\n\t\t\toList.forwardTab(true);\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// handle the SHIFT-TAB key\n\tListItemBase.prototype.onsaptabprevious = function (oEvent) {\n\t\tvar oList = this.getList();\n\t\tif (!oList || oEvent.isMarked() || oList.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if shift-tab is pressed while the list item has been focused,\n\t\t// we forward tab to the root element of the list\n\t\tif (oEvent.target === this.getDomRef()) {\n\t\t\toList.forwardTab(false);\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// handle propagated focus to make the item row focusable\n\tListItemBase.prototype.onfocusin = function (oEvent) {\n\t\tvar oList = this.getList();\n\t\tif (!oList || oEvent.isMarked()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (oEvent.srcControl === this) {\n\t\t\toList.onItemFocusIn(this);\n\t\t\treturn;\n\t\t}\n\n\t\tif (oList.getKeyboardMode() == ListKeyboardMode.Edit || !jQuery(oEvent.target).is(\":sapFocusable\")) {\n\t\t\treturn;\n\t\t}\n\n\t\t// inform the list async that this item should be focusable\n\t\tjQuery.sap.delayedCall(0, oList, \"setItemFocusable\", [this]);\n\t\toEvent.setMarked();\n\t};\n\n\t// inform the list for the vertical navigation\n\tListItemBase.prototype.onsapup = function (oEvent) {\n\t\tif (oEvent.isMarked() || oEvent.srcControl === this || this.getListProperty(\"keyboardMode\") === ListKeyboardMode.Navigation) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.informList(\"ArrowUpDown\", oEvent);\n\t};\n\n\t// inform the list for the vertical navigation\n\tListItemBase.prototype.onsapdown = ListItemBase.prototype.onsapup;\n\n\treturn ListItemBase;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.ListItemBaseRenderer\", __webpack_require__(\"s5vy\"));\n\n/***/ }),\n\n/***/ \"FIFg\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"hsfa\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.GroupHeaderListItem.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"E8Q9\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListItemBase, library, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListMode\n\n\tvar ListMode = library.ListMode;\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\tfunction isTable(o) {\n\t\tvar FNClass = __webpack_require__(\"5KZc\");\n\t\treturn typeof FNClass === 'function' && o instanceof FNClass;\n\t}\n\n\t/**\n  * Constructor for a new GroupHeaderListItem.\n  *\n  * @param {string} [sId] Id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * <code>sap.m.GroupHeaderListItem</code> is used to display the title of a group and act as separator between groups in <code>sap.m.List</code> and <code>sap.m.Table</code>.\n  * <b>Note:</b> The inherited properties <code>unread</code>, <code>selected</code>, <code>counter</code> and <code>press</code> event from <code>sap.m.ListItemBase</code> are not supported.\n  *\n  * @extends sap.m.ListItemBase\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @since 1.12\n  * @alias sap.m.GroupHeaderListItem\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar GroupHeaderListItem = ListItemBase.extend(\"sap.m.GroupHeaderListItem\", /** @lends sap.m.GroupHeaderListItem.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Defines the title of the group header.\n     */\n\t\t\t\ttitle: { type: \"string\", group: \"Data\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the count of items in the group, but it could also be an amount which represents the sum of all amounts in the group.\n     * <b>Note:</b> Will not be displayed if not set.\n     */\n\t\t\t\tcount: { type: \"string\", group: \"Data\", defaultValue: null },\n\n\t\t\t\t/**\n     * Allows to uppercase the group title.\n     * @since 1.13.2\n     * @deprecated Since version 1.40.10\n     */\n\t\t\t\tupperCase: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines the title text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n     * @since 1.28.0\n     */\n\t\t\t\ttitleTextDirection: { type: \"sap.ui.core.TextDirection\", group: \"Appearance\", defaultValue: TextDirection.Inherit }\n\t\t\t}\n\t\t} });\n\n\t// GroupHeaderListItem does not respect the list mode\n\tGroupHeaderListItem.prototype.getMode = function () {\n\t\treturn ListMode.None;\n\t};\n\n\tGroupHeaderListItem.prototype.shouldClearLastValue = function () {\n\t\treturn true;\n\t};\n\n\t// returns responsible table control for the item\n\tGroupHeaderListItem.prototype.getTable = function () {\n\t\tvar oParent = this.getParent();\n\t\tif (isTable(oParent)) {\n\t\t\treturn oParent;\n\t\t}\n\n\t\t// support old list with columns aggregation\n\t\tif (oParent && oParent.getMetadata().getName() == \"sap.m.Table\") {\n\t\t\treturn oParent;\n\t\t}\n\t};\n\n\tGroupHeaderListItem.prototype.onBeforeRendering = function () {\n\t\tvar oParent = this.getParent();\n\t\tif (isTable(oParent)) {\n\t\t\t// clear column last value to reset cell merging\n\t\t\toParent.getColumns().forEach(function (oColumn) {\n\t\t\t\toColumn.clearLastValue();\n\t\t\t});\n\n\t\t\t// defines the tag name\n\t\t\tthis.TagName = \"tr\";\n\t\t}\n\t};\n\n\tGroupHeaderListItem.prototype.getAccessibilityType = function (oBundle) {\n\t\tvar sType = this.getTable() ? \"ROW\" : \"OPTION\";\n\t\treturn oBundle.getText(\"LIST_ITEM_GROUP_HEADER\") + \" \" + oBundle.getText(\"ACC_CTR_TYPE_\" + sType);\n\t};\n\n\tGroupHeaderListItem.prototype.getContentAnnouncement = function () {\n\t\treturn this.getTitle();\n\t};\n\n\treturn GroupHeaderListItem;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.GroupHeaderListItemRenderer\", __webpack_require__(\"+Gcz\"));\n\n/***/ }),\n\n/***/ \"FYwE\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"GnRY\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Shell.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"20/6\"), __webpack_require__(\"wTGv\"), __webpack_require__(\"7cJM\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, library, Control, coreLibrary, ShellRenderer) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TitleLevel\n\n\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\t/**\n  * Constructor for a new Shell.\n  *\n  * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * The Shell control can be used as root element of applications. It can contain an App or a <code>SplitApp</code> control.\n  * The Shell provides some overarching functionality for the overall application and takes care of visual adaptation, such as a frame around the App, on desktop browser platforms.\n  * @extends sap.ui.core.Control\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @since 1.12\n  * @alias sap.m.Shell\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar Shell = Control.extend(\"sap.m.Shell\", /** @lends sap.m.Shell.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Defines the application title, which may or may not be displayed outside the actual application, depending on the available screen size.\n     */\n\t\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the logo to be displayed next to the App when the screen is sufficiently large.\n     */\n\t\t\t\tlogo: { type: \"sap.ui.core.URI\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Determines whether the Logout button should be displayed. Currently, this only happens on very tall screens (1568px height), otherwise, it is always hidden.\n     */\n\t\t\t\tshowLogout: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * Defines texts, such as the name of the logged-in user, which should be displayed on the right side of the header (if there is enough space to display the header at all - this only happens on very tall screens (1568px height), otherwise, it is always hidden).\n     */\n\t\t\t\theaderRightText: { type: \"string\", group: \"Data\", defaultValue: null },\n\n\t\t\t\t/**\n     * Determines whether the width of the content (the aggregated App) should be limited or extended to the full screen width.\n     */\n\t\t\t\tappWidthLimited: { type: \"boolean\", group: \"Appearance\", defaultValue: true },\n\n\t\t\t\t/**\n     * Defines the background color of the Shell. If set, this color will override the default background defined by the theme. This should only be set when really required.\n     * Any configured background image will be placed above this colored background.\n     * Use the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled.\n     * @since 1.11.2\n     */\n\t\t\t\tbackgroundColor: { type: \"sap.ui.core.CSSColor\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the background image of the Shell. If set, this image will override the default background defined by the theme. This should only be set when really required.\n     * This background image will be placed above any color set for the background.\n     * Use the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled.\n     * @since 1.11.2\n     */\n\t\t\t\tbackgroundImage: { type: \"sap.ui.core.URI\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Determines whether the background image (if configured) should be proportionally stretched to cover the whole Shell (false, default) or whether it should be tiled (true).\n     * @since 1.11.2\n     */\n\t\t\t\tbackgroundRepeat: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines the opacity of the background image. The opacity can be set between 0 (fully transparent) and 1 (fully opaque).\n     * This can be used to improve readability of the Shell content by making the background image partly transparent.\n     * @since 1.11.2\n     */\n\t\t\t\tbackgroundOpacity: { type: \"float\", group: \"Appearance\", defaultValue: 1 },\n\n\t\t\t\t/**\n     * Sets the icon used for the mobile device home screen and the icon to be used for bookmarks by desktop browsers.\n     *\n     * This property should be only set once, and as early as possible. Subsequent calls replace the previous icon settings and may lead to different behavior depending on the browser.\n     *\n     * Different image sizes for device home screen need to be given as PNG images, an ICO file needs to be given as desktop browser bookmark icon (other file formats may not work in all browsers).\n     * The <code>precomposed</code> flag defines whether there is already a glow effect contained in the home screen images (or whether iOS should add such an effect). The given structure could look like this:\n     * {\n    * 'phone':'phone-icon_57x57.png',\n    * 'phone@2':'phone-retina_114x114.png',\n     * 'tablet':'tablet-icon_72x72.png',\n     * 'tablet@2':'tablet-retina_144x144.png',\n     * 'precomposed':true,\n     * 'favicon':'favicon.ico'\n     * }\n     *\n     * See jQuery.sap.setIcons() for full documentation.\n     *\n     */\n\t\t\t\thomeIcon: { type: \"object\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the semantic level of the title.\n     *\n     * This information is used by assistive technologies, such as screen readers to create a hierarchical site map for faster navigation.\n     * Depending on this setting an HTML h1-h6 element is used.\n     */\n\t\t\t\ttitleLevel: { type: \"sap.ui.core.TitleLevel\", group: \"Appearance\", defaultValue: TitleLevel.H1 }\n\t\t\t},\n\t\t\tdefaultAggregation: \"app\",\n\t\t\taggregations: {\n\n\t\t\t\t/**\n     * A Shell contains an App or a SplitApp (they may be wrapped in a View). Other control types are not allowed.\n     */\n\t\t\t\tapp: { type: \"sap.ui.core.Control\", multiple: false }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * Fires when the user presses the logout button/link.\n     */\n\t\t\t\tlogout: {}\n\t\t\t}\n\t\t} });\n\n\tShell.prototype.init = function () {\n\t\t// theme change might change the logo\n\t\tsap.ui.getCore().attachThemeChanged(jQuery.proxy(function () {\n\t\t\tvar $hdr = this.$(\"hdr\");\n\t\t\tif ($hdr.length) {\n\t\t\t\t$hdr.find(\".sapMShellLogo\").remove(); // remove old logo, if present\n\t\t\t\tvar html = ShellRenderer.getLogoImageHtml(this);\n\t\t\t\t$hdr.prepend(jQuery(html)); // insert new logo\n\t\t\t}\n\t\t}, this));\n\n\t\tjQuery.sap.initMobile({\n\t\t\tstatusBar: \"default\",\n\t\t\thideBrowser: true\n\t\t});\n\t};\n\n\tShell.prototype.onAfterRendering = function () {\n\t\tvar ref = this.getDomRef().parentNode,\n\t\t    $ref;\n\t\t// set all parent elements to 100% height this *should* be done by the application in CSS, but people tend to forget it...\n\t\tif (ref && !ref._sapui5_heightFixed) {\n\t\t\tref._sapui5_heightFixed = true;\n\t\t\twhile (ref && ref !== document.documentElement) {\n\t\t\t\t$ref = jQuery(ref);\n\t\t\t\tif ($ref.attr(\"data-sap-ui-root-content\")) {\n\t\t\t\t\t// some parents (e.g. Unified Shell) do this already\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!ref.style.height) {\n\t\t\t\t\tref.style.height = \"100%\";\n\t\t\t\t}\n\t\t\t\tref = ref.parentNode;\n\t\t\t}\n\t\t}\n\t\tthis.$(\"content\").css(\"height\", \"\");\n\t};\n\n\tShell.prototype.ontap = function (oEvent) {\n\t\tif (oEvent.target.className && oEvent.target.className.indexOf /* not available for SVG elements */\n\t\t&& oEvent.target.className.indexOf(\"sapMShellHeaderLogout\") > -1) {\n\t\t\t// logout button clicked\n\t\t\tthis.fireLogout();\n\t\t}\n\t};\n\n\t// API methods\n\n\tShell.prototype.setTitle = function (sTitle) {\n\t\tthis.$(\"hdrTxt\").text(sTitle);\n\t\tthis.setProperty(\"title\", sTitle, true); // no rerendering\n\t\treturn this;\n\t};\n\n\tShell.prototype.setHeaderRightText = function (sText) {\n\t\tthis.setProperty(\"headerRightText\", sText, true); // no rerendering\n\t\tif (!sText) {\n\t\t\tsText = \"\";\n\t\t}\n\t\tthis.$(\"hdrRightTxt\").text(sText).css(\"display\", !!sText ? \"inline\" : \"none\");\n\t\treturn this;\n\t};\n\n\tShell.prototype.setAppWidthLimited = function (bLimit) {\n\t\tthis.$().toggleClass(\"sapMShellAppWidthLimited\", bLimit);\n\t\tthis.setProperty(\"appWidthLimited\", bLimit, true); // no rerendering\n\t\treturn this;\n\t};\n\n\tShell.prototype.setBackgroundOpacity = function (fOpacity) {\n\t\tif (fOpacity > 1 || fOpacity < 0) {\n\t\t\tjQuery.sap.log.warning(\"Invalid value \" + fOpacity + \" for Shell.setBackgroundOpacity() ignored. Valid values are: floats between 0 and 1.\");\n\t\t\treturn this;\n\t\t}\n\t\tthis.$(\"BG\").css(\"opacity\", fOpacity);\n\t\treturn this.setProperty(\"backgroundOpacity\", fOpacity, true); // no rerendering - live opacity change looks cooler\n\t};\n\n\tShell.prototype.setHomeIcon = function (oIcons) {\n\t\tthis.setProperty(\"homeIcon\", oIcons, true); // no rerendering\n\t\tjQuery.sap.setIcons(oIcons);\n\t\treturn this;\n\t};\n\n\treturn Shell;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.ShellRenderer\", __webpack_require__(\"7cJM\"));\n\n/***/ }),\n\n/***/ \"GPUP\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"s5vy\"), __webpack_require__(\"ax/N\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListItemBaseRenderer, Renderer, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t/**\n  * DisplayListItem renderer.\n  * @namespace\n  */\n\tvar DisplayListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\t/**\n  * Renders the HTML for the given control, using the provided\n  * {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager}\n  *          oRenderManager the RenderManager that can be used for writing to the\n  *          Render-Output-Buffer\n  * @param {sap.ui.core.Control}\n  *          oControl an object representation of the control that should be\n  *          rendered\n  */\n\tDisplayListItemRenderer.renderLIAttributes = function (rm, oLI) {\n\t\trm.addClass(\"sapMDLI\");\n\t};\n\n\tDisplayListItemRenderer.renderLIContent = function (rm, oLI) {\n\n\t\tvar isLabel = oLI.getLabel();\n\n\t\t// List item label\n\t\tif (isLabel) {\n\t\t\trm.write(\"<label for='\" + oLI.getId() + \"-value' class='sapMDLILabel'>\");\n\t\t\trm.writeEscaped(oLI.getLabel());\n\t\t\trm.write(\"</label>\");\n\t\t}\n\n\t\tvar isValue = oLI.getValue();\n\t\tvar sValueTextDir = oLI.getValueTextDirection();\n\n\t\t// List item value\n\t\tif (isValue) {\n\t\t\trm.write(\"<div id='\" + oLI.getId() + \"-value' class='sapMDLIValue'\");\n\n\t\t\tif (sValueTextDir != TextDirection.Inherit) {\n\t\t\t\trm.writeAttribute(\"dir\", sValueTextDir.toLowerCase());\n\t\t\t}\n\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(oLI.getValue());\n\t\t\trm.write(\"</div>\");\n\t\t}\n\t};\n\n\treturn DisplayListItemRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"GnRY\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"IVex\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"JTcp\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"ax/N\"), __webpack_require__(\"wTGv\"), __webpack_require__(\"BRbz\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (Renderer, coreLibrary, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.ui.core.ValueState\n\tvar ValueState = coreLibrary.ValueState;\n\n\t/**\n  * Input renderer.\n  *\n  * @namespace\n  */\n\tvar InputBaseRenderer = {};\n\n\t/**\n  * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.render = function (oRm, oControl) {\n\t\tvar sValueState = oControl.getValueState(),\n\t\t    sTextDir = oControl.getTextDirection(),\n\t\t    sTextAlign = Renderer.getTextAlign(oControl.getTextAlign(), sTextDir),\n\t\t    bAccessibility = sap.ui.getCore().getConfiguration().getAccessibility();\n\n\t\toRm.write(\"<div\");\n\t\toRm.writeControlData(oControl);\n\n\t\t// outer styles\n\t\tthis.addOuterStyles(oRm, oControl);\n\n\t\tthis.addControlWidth(oRm, oControl);\n\n\t\toRm.writeStyles();\n\n\t\t// outer classes\n\t\toRm.addClass(\"sapMInputBase\");\n\t\tthis.addPaddingClass(oRm, oControl);\n\t\tthis.addCursorClass(oRm, oControl);\n\t\tthis.addOuterClasses(oRm, oControl);\n\n\t\tif (!oControl.getEnabled()) {\n\t\t\toRm.addClass(\"sapMInputBaseDisabled\");\n\t\t}\n\n\t\tif (!oControl.getEditable()) {\n\t\t\toRm.addClass(\"sapMInputBaseReadonly\");\n\t\t}\n\n\t\tif (sValueState !== ValueState.None) {\n\t\t\tthis.addValueStateClasses(oRm, oControl);\n\t\t}\n\n\t\toRm.writeClasses();\n\n\t\t// outer attributes\n\t\tthis.writeOuterAttributes(oRm, oControl);\n\t\tvar sTooltip = oControl.getTooltip_AsString();\n\n\t\tif (sTooltip) {\n\t\t\toRm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\toRm.write(\">\");\n\n\t\tthis.prependInnerContent(oRm, oControl);\n\n\t\t// enable self-made placeholder\n\t\tif (oControl.bShowLabelAsPlaceholder) {\n\t\t\toRm.write(\"<span\");\n\t\t\toRm.writeAttribute(\"id\", oControl.getId() + \"-placeholder\");\n\n\t\t\tif (sTextAlign) {\n\t\t\t\toRm.addStyle(\"text-align\", sTextAlign);\n\t\t\t}\n\n\t\t\tthis.addPlaceholderClasses(oRm, oControl);\n\t\t\tthis.addPlaceholderStyles(oRm, oControl);\n\t\t\toRm.writeClasses();\n\t\t\toRm.writeStyles();\n\t\t\toRm.write(\">\");\n\t\t\toRm.writeEscaped(oControl._getPlaceholder());\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\n\t\toRm.write('<div ');\n\t\toRm.addClass(\"sapMInputDivWrapper\");\n\n\t\t// check disable and readonly\n\t\tif (!oControl.getEnabled()) {\n\t\t\toRm.addClass(\"sapMInputBaseDisabledInner\");\n\t\t} else if (!oControl.getEditable()) {\n\t\t\toRm.addClass(\"sapMInputBaseReadonlyInner\");\n\t\t}\n\n\t\toRm.writeClasses();\n\n\t\tthis.addWrapperStyles(oRm, oControl);\n\t\toRm.writeStyles();\n\t\toRm.write('>');\n\n\t\t// start inner\n\t\tthis.openInputTag(oRm, oControl);\n\n\t\t// inner attributes\n\t\tthis.writeInnerId(oRm, oControl);\n\n\t\t// write the name of input\n\t\tif (oControl.getName()) {\n\t\t\toRm.writeAttributeEscaped(\"name\", oControl.getName());\n\t\t}\n\n\t\t// let the browser handle placeholder\n\t\tif (!oControl.bShowLabelAsPlaceholder && oControl._getPlaceholder()) {\n\t\t\toRm.writeAttributeEscaped(\"placeholder\", oControl._getPlaceholder());\n\t\t}\n\n\t\t// check if there is a maxLength property\n\t\tif (oControl.getMaxLength && oControl.getMaxLength() > 0) {\n\t\t\toRm.writeAttribute(\"maxlength\", oControl.getMaxLength());\n\t\t}\n\t\tif (!oControl.getEnabled()) {\n\t\t\toRm.writeAttribute(\"disabled\", \"disabled\");\n\t\t} else if (!oControl.getEditable()) {\n\t\t\toRm.writeAttribute(\"readonly\", \"readonly\");\n\t\t}\n\t\t// check if textDirection property is not set to default \"Inherit\" and add \"dir\" attribute\n\t\tif (sTextDir != TextDirection.Inherit) {\n\t\t\toRm.writeAttribute(\"dir\", sTextDir.toLowerCase());\n\t\t}\n\n\t\tthis.writeInnerValue(oRm, oControl);\n\n\t\t// accessibility states\n\t\tif (bAccessibility) {\n\t\t\tthis.writeAccessibilityState(oRm, oControl);\n\t\t}\n\n\t\tif (Device.browser.mozilla) {\n\t\t\tif (sTooltip) {\n\n\t\t\t\t// fill tooltip to mozilla validation flag too, to display it in validation error case too\n\t\t\t\toRm.writeAttributeEscaped(\"x-moz-errormessage\", sTooltip);\n\t\t\t} else {\n\n\t\t\t\t// if no tooltip use blank text for mozilla validation text\n\t\t\t\toRm.writeAttribute(\"x-moz-errormessage\", \" \");\n\t\t\t}\n\t\t}\n\n\t\tthis.writeInnerAttributes(oRm, oControl);\n\n\t\t// inner classes\n\t\toRm.addClass(\"sapMInputBaseInner\");\n\n\t\tif (sValueState !== ValueState.None) {\n\t\t\tthis.addValueStateInnerClasses(oRm, oControl);\n\t\t}\n\n\t\tthis.addInnerClasses(oRm, oControl);\n\t\toRm.writeClasses();\n\n\t\t// write text-align\n\t\tif (sTextAlign) {\n\t\t\toRm.addStyle(\"text-align\", sTextAlign);\n\t\t}\n\t\tthis.addInnerStyles(oRm, oControl);\n\t\toRm.writeStyles();\n\t\toRm.write(\">\");\n\n\t\t// finish inner\n\t\tthis.writeInnerContent(oRm, oControl);\n\t\tthis.closeInputTag(oRm, oControl);\n\n\t\t// close wrapper div\n\t\toRm.write('</div>');\n\n\t\tthis.writeDecorations(oRm, oControl);\n\n\t\t// render hidden aria nodes\n\t\tif (bAccessibility) {\n\t\t\tthis.renderAriaLabelledBy(oRm, oControl);\n\t\t\tthis.renderAriaDescribedBy(oRm, oControl);\n\t\t}\n\n\t\t// finish outer\n\t\toRm.write(\"</div>\");\n\t};\n\n\t/**\n  * Returns aria accessibility role for the control.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control\n  * @returns {String}\n  */\n\tInputBaseRenderer.getAriaRole = function (oControl) {\n\t\treturn \"textbox\";\n\t};\n\n\t/**\n  * Returns the inner aria labelledby ids for the accessibility.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control.\n  * @returns {String|undefined}\n  */\n\tInputBaseRenderer.getAriaLabelledBy = function (oControl) {\n\t\tif (this.getLabelledByAnnouncement(oControl)) {\n\t\t\treturn oControl.getId() + \"-labelledby\";\n\t\t}\n\t};\n\n\t/**\n  * Returns the inner aria labelledby announcement texts for the accessibility.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control.\n  * @returns {String}\n  */\n\tInputBaseRenderer.getLabelledByAnnouncement = function (oControl) {\n\t\treturn oControl._getPlaceholder() || \"\";\n\t};\n\n\t/**\n  * Renders the hidden aria labelledby node for the accessibility.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.renderAriaLabelledBy = function (oRm, oControl) {\n\t\tvar sAnnouncement = this.getLabelledByAnnouncement(oControl);\n\t\tif (sAnnouncement) {\n\t\t\toRm.write(\"<span\");\n\t\t\toRm.writeAttribute(\"id\", oControl.getId() + \"-labelledby\");\n\t\t\toRm.writeAttribute(\"aria-hidden\", \"true\");\n\t\t\toRm.addClass(\"sapUiInvisibleText\");\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\toRm.writeEscaped(sAnnouncement.trim());\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\t};\n\n\t/**\n  * Returns the inner aria describedby ids for the accessibility.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control.\n  * @returns {String|undefined}\n  */\n\tInputBaseRenderer.getAriaDescribedBy = function (oControl) {\n\t\tif (this.getDescribedByAnnouncement(oControl)) {\n\t\t\treturn oControl.getId() + \"-describedby\";\n\t\t}\n\t};\n\n\t/**\n  * Returns the inner aria describedby announcement texts for the accessibility.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control.\n  * @returns {String}\n  */\n\tInputBaseRenderer.getDescribedByAnnouncement = function (oControl) {\n\t\treturn oControl.getTooltip_AsString() || \"\";\n\t};\n\n\t/**\n  * Renders the hidden aria labelledby node for the accessibility.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.renderAriaDescribedBy = function (oRm, oControl) {\n\t\tvar sAnnouncement = this.getDescribedByAnnouncement(oControl);\n\t\tif (sAnnouncement) {\n\t\t\toRm.write(\"<span\");\n\t\t\toRm.writeAttribute(\"id\", oControl.getId() + \"-describedby\");\n\t\t\toRm.writeAttribute(\"aria-hidden\", \"true\");\n\t\t\toRm.addClass(\"sapUiInvisibleText\");\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\toRm.writeEscaped(sAnnouncement.trim());\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\t};\n\n\t/**\n  * Returns the accessibility state of the control.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control.\n  * @returns {Object}\n  */\n\tInputBaseRenderer.getAccessibilityState = function (oControl) {\n\t\tvar sAriaLabelledBy = this.getAriaLabelledBy(oControl),\n\t\t    sAriaDescribedBy = this.getAriaDescribedBy(oControl),\n\t\t    sRole = this.getAriaRole(oControl),\n\t\t    mAccessibilityState = {};\n\n\t\tif (sRole) {\n\t\t\tmAccessibilityState.role = sRole;\n\t\t}\n\n\t\tif (oControl.getValueState() === ValueState.Error) {\n\t\t\tmAccessibilityState.invalid = true;\n\t\t}\n\n\t\tif (sAriaLabelledBy) {\n\t\t\tmAccessibilityState.labelledby = {\n\t\t\t\tvalue: sAriaLabelledBy.trim(),\n\t\t\t\tappend: true\n\t\t\t};\n\t\t}\n\n\t\tif (sAriaDescribedBy) {\n\t\t\tmAccessibilityState.describedby = {\n\t\t\t\tvalue: sAriaDescribedBy.trim(),\n\t\t\t\tappend: true\n\t\t\t};\n\t\t}\n\n\t\treturn mAccessibilityState;\n\t};\n\n\t/**\n  * Writes the accessibility state of the control.\n  * Hook for the subclasses.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.writeAccessibilityState = function (oRm, oControl) {\n\t\toRm.writeAccessibilityState(oControl, this.getAccessibilityState(oControl));\n\t};\n\n\t/**\n  * Write the opening tag name of the input.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.openInputTag = function (oRm, oControl) {\n\t\toRm.write(\"<input\");\n\t};\n\n\t/**\n  * Write the value of the input.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.writeInnerValue = function (oRm, oControl) {\n\t\toRm.writeAttributeEscaped(\"value\", oControl.getValue());\n\t};\n\n\t/**\n  * Add cursor class to input container.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addCursorClass = function (oRm, oControl) {};\n\n\t/**\n  * Add a padding class to input container.\n  * May be overwritten by subclasses.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addPaddingClass = function (oRm, oControl) {\n\t\toRm.addClass(\"sapMInputBaseWidthPadding\");\n\t};\n\n\t/**\n  * This method is reserved for derived class to add extra styles for input container.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addOuterStyles = function (oRm, oControl) {};\n\n\t/**\n  * This method is reserved for derived class to set width inline style\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addControlWidth = function (oRm, oControl) {\n\t\tif (oControl.getWidth()) {\n\t\t\toRm.addStyle(\"width\", oControl.getWidth());\n\t\t}\n\t};\n\t/**\n  * This method is reserved for derived classes to add extra classes for input container.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addOuterClasses = function (oRm, oControl) {};\n\n\t/**\n  * This method is reserved for derived class to add extra attributes for input container.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.writeOuterAttributes = function (oRm, oControl) {};\n\n\t/**\n  * This method is reserved for derived classes to add extra styles for input element.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addInnerStyles = function (oRm, oControl) {};\n\n\t/**\n  * This method is reserved for derived classes to add extra styles for input element.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addWrapperStyles = function (oRm, oControl) {};\n\n\t/**\n  * This method is reserved for derived classes to add extra classes for input element.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addInnerClasses = function (oRm, oControl) {};\n\n\t/**\n  * This method is reserved for derived classes to add extra attributes for the input element.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.writeInnerAttributes = function (oRm, oControl) {};\n\n\t/**\n  * This method is reserved for derived classes to prepend inner content.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.prependInnerContent = function (oRm, oControl) {};\n\n\t/**\n  * Write the value of the input.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.writeInnerContent = function (oRm, oControl) {};\n\n\t/**\n  * Write the decorations of the input - description and value-help icon.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.writeDecorations = function (oRm, oControl) {};\n\n\t/**\n  * Write the closing tag name of the input.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.closeInputTag = function (oRm, oControl) {};\n\n\t/**\n  * This method is reserved for derived classes to add extra styles for the placeholder, if rendered as label.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addPlaceholderStyles = function (oRm, oControl) {};\n\n\t/**\n  * Adds custom placeholder classes, if native placeholder is not used.\n  * To be overwritten by subclasses.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addPlaceholderClasses = function (oRm, oControl) {\n\t\toRm.addClass(\"sapMInputBasePlaceholder\");\n\t};\n\n\t/**\n  * Add the CSS value state classes to the input element using the provided {@link sap.ui.core.RenderManager}.\n  * May be overwritten by subclasses.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addValueStateInnerClasses = function (oRm, oControl) {\n\t\toRm.addClass(\"sapMInputBaseStateInner\");\n\t\toRm.addClass(\"sapMInputBase\" + oControl.getValueState() + \"Inner\");\n\t};\n\n\t/**\n  * Add the CSS value state classes to the control's root element using the provided {@link sap.ui.core.RenderManager}.\n  * To be overwritten by subclasses.\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.addValueStateClasses = function (oRm, oControl) {\n\t\toRm.addClass(\"sapMInputBaseState\");\n\t\toRm.addClass(\"sapMInputBase\" + oControl.getValueState());\n\t};\n\n\t/**\n  * Write the id of the inner input\n  *\n  * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n  * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n  */\n\tInputBaseRenderer.writeInnerId = function (oRm, oControl) {\n\t\toRm.writeAttribute(\"id\", oControl.getId() + \"-inner\");\n\t};\n\n\treturn InputBaseRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"LFub\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"20Fv\"), __webpack_require__(\"ax/N\"), __webpack_require__(\"nPt9\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (NavContainerRenderer, Renderer, library) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.BackgroundHelper\n\n\tvar BackgroundHelper = library.BackgroundHelper;\n\n\t/**\n  * App renderer.\n  * @namespace\n  */\n\tvar AppRenderer = {};\n\n\tvar AppRenderer = Renderer.extend(NavContainerRenderer);\n\n\tAppRenderer.renderAttributes = function (rm, oControl) {\n\t\tBackgroundHelper.addBackgroundColorStyles(rm, oControl.getBackgroundColor(), oControl.getBackgroundImage());\n\t};\n\n\tAppRenderer.renderBeforeContent = function (rm, oControl) {\n\t\tBackgroundHelper.renderBackgroundImageTag(rm, oControl, \"sapMAppBG\", oControl.getBackgroundImage(), oControl.getBackgroundRepeat(), oControl.getBackgroundOpacity());\n\t};\n\n\treturn AppRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"Lldq\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [], __WEBPACK_UI5_DEFINE_RESULT__ = function () {\n\t\"use strict\";\n\n\t/**\n  * Page renderer.\n  * @namespace\n  */\n\n\tvar PageRenderer = {};\n\n\t/**\n  * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the Render-Output-Buffer\n  * @param {sap.m.Page} oPage an object representation of the control that should be rendered\n  */\n\tPageRenderer.render = function (oRm, oPage) {\n\t\tvar oHeader = null,\n\t\t    oFooter = null,\n\t\t    bShowFooter = oPage.getShowFooter(),\n\t\t    oSubHeader = null,\n\t\t    bLightHeader = this._isLightHeader(oPage),\n\t\t    oLandmarkInfo = oPage.getLandmarkInfo();\n\n\t\tif (oPage.getShowHeader()) {\n\t\t\toHeader = oPage._getAnyHeader();\n\t\t}\n\n\t\tif (oPage.getShowSubHeader()) {\n\t\t\toSubHeader = oPage.getSubHeader();\n\t\t}\n\n\t\toFooter = oPage.getFooter();\n\n\t\toRm.write(\"<div\");\n\t\toRm.writeControlData(oPage);\n\t\toRm.addClass(\"sapMPage\");\n\n\t\toRm.addClass(\"sapMPageBg\" + oPage.getBackgroundDesign());\n\n\t\tif (oHeader) {\n\t\t\toRm.addClass(\"sapMPageWithHeader\");\n\t\t}\n\n\t\tif (oSubHeader) {\n\t\t\toRm.addClass(\"sapMPageWithSubHeader\");\n\t\t}\n\n\t\tif (oFooter && bShowFooter) {\n\t\t\t// it is used in the PopOver to remove additional margin bottom for page with footer\n\t\t\toRm.addClass(\"sapMPageWithFooter\");\n\t\t}\n\n\t\tif (!oPage.getContentOnlyBusy()) {\n\t\t\toRm.addClass(\"sapMPageBusyCoversAll\");\n\t\t}\n\n\t\tif (oPage.getFloatingFooter()) {\n\t\t\toRm.addClass(\"sapMPageFloatingFooter\");\n\t\t}\n\n\t\toRm.writeClasses();\n\n\t\tvar sTooltip = oPage.getTooltip_AsString();\n\n\t\tif (sTooltip) {\n\t\t\toRm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"Root\"));\n\n\t\toRm.write(\">\");\n\n\t\tif (oHeader) {\n\t\t\tvar sHeaderTag = oPage._getHeaderTag(oLandmarkInfo);\n\t\t\t// Header\n\t\t\toRm.write(\"<\" + sHeaderTag);\n\t\t\toRm.addClass(\"sapMPageHeader\");\n\t\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"Header\"));\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\t//render headers\n\t\t\tthis.renderBarControl(oRm, oPage, oHeader, {\n\t\t\t\tcontext: \"header\",\n\t\t\t\tstyleClass: bLightHeader ? \"\" : \"sapContrastPlus\"\n\t\t\t});\n\t\t\toRm.write(\"</\" + sHeaderTag + \">\");\n\t\t}\n\n\t\tif (oSubHeader) {\n\t\t\tvar sSubHeaderTag = oPage._getSubHeaderTag(oLandmarkInfo);\n\t\t\t// SubHeader\n\t\t\toRm.write(\"<\" + sSubHeaderTag);\n\t\t\toRm.addClass(\"sapMPageSubHeader\");\n\t\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"SubHeader\"));\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\tthis.renderBarControl(oRm, oPage, oSubHeader, {\n\t\t\t\tcontext: \"subHeader\",\n\t\t\t\tstyleClass: bLightHeader ? \"\" : \"sapContrastPlus\"\n\t\t\t});\n\t\t\toRm.write(\"</\" + sSubHeaderTag + \">\");\n\t\t}\n\n\t\t// render child controls\n\t\toRm.write('<section id=\"' + oPage.getId() + '-cont\"');\n\n\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"Content\"));\n\n\t\t// The vertical scroll bar should be immediately available to avoid flickering\n\t\t// and reduce size recalculations of embedded responsive controls that rely on\n\t\t// the page content width. See ScrollEnablement.js: _setOverflow\n\t\tif (oPage.getEnableScrolling()) {\n\t\t\toRm.addClass(\"sapMPageEnableScrolling\");\n\t\t\toRm.writeClasses();\n\t\t}\n\n\t\toRm.write('>');\n\n\t\tvar aContent = oPage.getContent();\n\t\tvar l = aContent.length;\n\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\toRm.renderControl(aContent[i]);\n\t\t}\n\n\t\toRm.write(\"</section>\");\n\n\t\t// render footer Element\n\t\t// if a footer is defined, it should always be rendered\n\t\t// otherwise animation on show/hide won't work always\n\n\t\tif (oFooter) {\n\t\t\tvar sFooterTag = oPage._getFooterTag(oLandmarkInfo);\n\n\t\t\toRm.write(\"<\" + sFooterTag);\n\t\t\toRm.addClass(\"sapMPageFooter\");\n\t\t\tif (!oPage.getShowFooter()) {\n\t\t\t\toRm.addClass(\"sapUiHidden\");\n\t\t\t}\n\t\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"Footer\"));\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\tthis.renderBarControl(oRm, oPage, oFooter, {\n\t\t\t\tcontext: \"footer\"\n\t\t\t});\n\t\t\toRm.write(\"</\" + sFooterTag + \">\");\n\t\t}\n\n\t\toRm.write(\"</div>\");\n\t};\n\n\t/**\n  * Renders the bar control if it is defined. Also adds classes to it.\n  *\n  * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the Render-Output-Buffer\n  * @param {sap.m.Page} oPage\n  * @param {sap.m.IBar} oBarControl the RenderManager that can be used for writing to the Render-Output-Buffer\n  * @param {object} oOptions object containing the tag, contextClass and styleClass added to the bar\n  */\n\tPageRenderer.renderBarControl = function (oRm, oPage, oBarControl, oOptions) {\n\t\tif (!oBarControl) {\n\t\t\treturn;\n\t\t}\n\n\t\toBarControl._applyContextClassFor(oOptions.context.toLowerCase());\n\n\t\toBarControl.addStyleClass(oOptions.styleClass || \"\");\n\n\t\toRm.renderControl(oBarControl);\n\t};\n\n\t/**\n  *\tCheck whether THIS page is used in scenario where its header should be light\n  *\tImportant for Belize styling\n  *\n  * @param {sap.m.Page} oPage\n  * @returns {boolean}\n  * @private\n  */\n\tPageRenderer._isLightHeader = function (oPage) {\n\t\tvar oChild = oPage,\n\t\t    oParent = oPage.getParent(),\n\t\t    sParentName,\n\t\t    sChildName;\n\n\t\t// Loop back to the top to check if there's SplitContainer OR SplitApp OR QuickView and then check if child elem is\n\t\t// sap.m.NavContainer and this Nav container is the master\n\t\twhile (oParent) {\n\t\t\tsParentName = oParent && oParent.getMetadata().getName() || \"\";\n\t\t\tsChildName = oChild.getMetadata().getName();\n\n\t\t\tif ((sParentName === \"sap.m.Popover\" || sParentName === \"sap.m.Dialog\") && sChildName === \"sap.m.NavContainer\") {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (oParent && [\"sap.m.SplitApp\", \"sap.m.SplitContainer\"].indexOf(sParentName) > -1 && sChildName === \"sap.m.NavContainer\" && /\\-Master$/.test(oChild.getId())) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\toChild = oParent;\n\t\t\toParent = oChild.getParent();\n\t\t}\n\n\t\treturn false;\n\t};\n\n\treturn PageRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"MY9s\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"cm02\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n/**\n * @typedef {Object} sap.m.Title\n * @typedef {Object} sap.ui.core.Title\n */\n// Provides control sap.m.Title.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"20/6\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, Control, library, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextAlign\n\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.ui.core.TitleLevel\n\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\t/**\n  * Constructor for a new Title control.\n  *\n  * @param {string} [sId] Id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * The Title control represents a single line of text with explicit header / title semantics.\n  * @extends sap.ui.core.Control\n  * @implements sap.ui.core.IShrinkable\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  * @since 1.27.0\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.Title\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar Title = Control.extend(\"sap.m.Title\", /** @lends sap.m.Title.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tinterfaces: [\"sap.ui.core.IShrinkable\"],\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Defines the text which should be displayed as a title.\n     */\n\t\t\t\ttext: { type: \"string\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the semantic level of the title.\n     * This information is e.g. used by assistive technologies like screenreaders to create a hierarchical site map for faster navigation.\n     * Depending on this setting either an HTML h1-h6 element is used or when using level <code>Auto</code> no explicit level information is written (HTML5 header element).\n     * This property does not influence the style of the control. Use the property <code>titleStyle</code> for this purpose instead.\n     */\n\t\t\t\tlevel: { type: \"sap.ui.core.TitleLevel\", group: \"Appearance\", defaultValue: TitleLevel.Auto },\n\n\t\t\t\t/**\n     * Defines the style of the title.\n     * When using the <code>Auto</code> styling, the appearance of the title depends on the current position of the title (e.g. inside a <code>Toolbar</code>).\n     * This default behavior can be overridden by setting a different style explicitly.\n     * The actual appearance of the title and the different styles always depends on the theme being used.\n     */\n\t\t\t\ttitleStyle: { type: \"sap.ui.core.TitleLevel\", group: \"Appearance\", defaultValue: TitleLevel.Auto },\n\n\t\t\t\t/**\n     * Defines the width of the title.\n     */\n\t\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the alignment of the text within the title. <b>Note:</b> This property only has an effect if the overall width of the title control is\n     * larger than the displayed text.\n     */\n\t\t\t\ttextAlign: { type: \"sap.ui.core.TextAlign\", group: \"Appearance\", defaultValue: TextAlign.Initial },\n\n\t\t\t\t/**\n     * Enables text wrapping.\n     * <b>Note:</b> Wrapping must only be activated if the surrounding container allows flexible heights.\n     * @since 1.52\n     */\n\t\t\t\twrapping: { type: \"boolean\", group: \"Appearance\", defaultValue: false }\n\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n     * Defines a relationship to a generic title description.\n     * If such a title element is associated, the properties text, level and tooltip (text only) of this element are consumed.\n     * The corresponding properties of the title control are ignored.\n     */\n\t\t\t\ttitle: { type: \"sap.ui.core.Title\", multiple: false }\n\t\t\t},\n\t\t\tdesignTime: true\n\n\t\t} });\n\n\t/**\n  * Sets text within the title.\n  *\n  * @name sap.m.Title.setText\n  * @method\n  * @public\n  * @param {string} sText Text that will be set for the title.\n  * @returns {sap.m.Title} this Title reference for chaining.\n  */\n\tTitle.prototype.setText = function (sText) {\n\t\tvar oRef = this.getDomRef(\"inner\");\n\t\tvar bPatchDom = oRef && !this._getTitle();\n\t\tthis.setProperty(\"text\", sText, bPatchDom);\n\t\tif (bPatchDom) {\n\t\t\toRef.innerHTML = jQuery.sap.encodeHTML(this.getText() || \"\");\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n  * Gets the currently set title.\n  *\n  * @name sap.m.Title._getTitle\n  * @method\n  * @private\n  * @returns {sap.m.Title} Instance of the associated sap.ui.core.Title if exists.\n  */\n\tTitle.prototype._getTitle = function () {\n\t\tvar sTitle = this.getTitle();\n\n\t\tif (sTitle) {\n\t\t\tvar oTitle = sap.ui.getCore().byId(sTitle);\n\t\t\tif (oTitle && oTitle instanceof sap.ui.core.Title) {\n\t\t\t\treturn oTitle;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/**\n  * Title on change handler.\n  *\n  * @name sap.m.Title._onTitleChanged\n  * @method\n  * @private\n  */\n\tTitle.prototype._onTitleChanged = function () {\n\t\tthis.invalidate();\n\t};\n\n\t/**\n  * Sets the title for a <code>sap.m.Title</code> or <code>sap.ui.core.Title</code>\n  *\n  * @name sap.m.Title.setTitle\n  * @method\n  * @public\n  * @param {sap.m.Title|sap.ui.core.Title} vTitle Given variant of the a title which can be <code>sap.m.Title</code> or <code>sap.ui.core.Title</code>.\n  * @returns {sap.m.Title} this Title reference for chaining.\n  */\n\tTitle.prototype.setTitle = function (vTitle) {\n\t\tvar that = this;\n\n\t\tvar oOldTitle = this._getTitle();\n\t\tif (oOldTitle) {\n\t\t\toOldTitle.invalidate = oOldTitle.__sapui5_title_originvalidate;\n\t\t\toOldTitle.exit = oOldTitle.__sapui5_title_origexit;\n\t\t\tdelete oOldTitle.__sapui5_title_origexit;\n\t\t\tdelete oOldTitle.__sapui5_title_originvalidate;\n\t\t}\n\n\t\tthis.setAssociation(\"title\", vTitle);\n\n\t\tvar oNewTitle = this._getTitle();\n\t\tif (oNewTitle) {\n\t\t\toNewTitle.__sapui5_title_originvalidate = oNewTitle.invalidate;\n\t\t\toNewTitle.__sapui5_title_origexit = oNewTitle.exit;\n\t\t\toNewTitle.exit = function () {\n\t\t\t\tthat._onTitleChanged();\n\t\t\t\tif (this.__sapui5_title_origexit) {\n\t\t\t\t\tthis.__sapui5_title_origexit.apply(this, arguments);\n\t\t\t\t}\n\t\t\t};\n\t\t\toNewTitle.invalidate = function () {\n\t\t\t\tthat._onTitleChanged();\n\t\t\t\tthis.__sapui5_title_originvalidate.apply(this, arguments);\n\t\t\t};\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Gets the accessibility information for the <code>sap.m.Title</code> control.\n  *\n  * @name sap.m.Title.getAccessibilityInfo\n  * @method\n  * @protected\n  * @see sap.ui.core.Control#getAccessibilityInfo\n  */\n\tTitle.prototype.getAccessibilityInfo = function () {\n\t\tvar oTitle = this._getTitle() || this;\n\t\treturn {\n\t\t\trole: \"heading\",\n\t\t\tdescription: oTitle.getText(),\n\t\t\tfocusable: false\n\t\t};\n\t};\n\n\treturn Title;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.TitleRenderer\", __webpack_require__(\"tsD2\"));\n\n/***/ }),\n\n/***/ \"OZLB\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.SegmentedButtonItem.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"nPt9\"), __webpack_require__(\"dg/h\"), __webpack_require__(\"XYhA\"), __webpack_require__(\"tnqX\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (library, Item, Button, CustomStyleClassSupport) {\n\t\"use strict\";\n\n\t/**\n  * Constructor for a new <code>SegmentedButtonItem</code>.\n  *\n  * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * Used for creating buttons for the {@link sap.m.SegmentedButton}.\n  * It is derived from the {@link sap.ui.core.Item}.\n  * @extends sap.ui.core.Item\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @since 1.28\n  * @alias sap.m.SegmentedButtonItem\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\n\tvar SegmentedButtonItem = Item.extend(\"sap.m.SegmentedButtonItem\", /** @lends sap.m.SegmentedButtonItem.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * The icon, which belongs to the button.\n     * This can be a URI to an image or an icon font URI.\n     */\n\t\t\t\ticon: { type: \"string\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Whether the button should be visible on the screen. If set to false, a placeholder is rendered instead of the real button.\n     */\n\t\t\t\tvisible: { type: \"boolean\", group: \"Appearance\", defaultValue: true },\n\n\t\t\t\t/**\n     * Sets the width of the buttons.\n     */\n\t\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: null }\n\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * Fires when the user clicks on an individual button.\n     */\n\t\t\t\tpress: {}\n\t\t\t}\n\n\t\t} });\n\n\t// Add custom style class support\n\tCustomStyleClassSupport.apply(SegmentedButtonItem.prototype);\n\n\t/**\n  * Called once during the element's initialization\n  * @override\n  * @protected\n  */\n\tSegmentedButtonItem.prototype.init = function () {\n\t\t// Create internal button with a stable ID\n\t\tvar oButton = new Button(this.getId() + \"-button\");\n\n\t\t// Create objects first so they can be referenced in the button\n\t\tthis.aCustomStyleClasses;\n\t\tthis.mCustomStyleClassMap;\n\n\t\t// Reference's between button and item objects related to customStyleClasses so they will be in sync\n\t\toButton.aCustomStyleClasses = this.aCustomStyleClasses;\n\t\toButton.mCustomStyleClassMap = this.mCustomStyleClassMap;\n\n\t\t// Attach CustomData and LayoutData function copy's with bound context to the button\n\t\toButton.getCustomData = this.getCustomData.bind(this);\n\t\toButton.getLayoutData = this.getLayoutData.bind(this);\n\n\t\t// Hook on firePress method of the button so we can fire local press event also\n\t\toButton.firePress = function () {\n\t\t\tthis.firePress();\n\t\t\tButton.prototype.firePress.call(oButton);\n\t\t}.bind(this);\n\n\t\t// We return DOM reference from the button so for example CustomData.setKey method checks\n\t\t// for parent DOM reference and does a live update only of the attribute.\n\t\tthis.getDomRef = oButton.getDomRef.bind(oButton);\n\n\t\t// Keep in mind that we are using property instead of private aggregation because\n\t\t// we need to add this button to the SegmentedButton buttons aggregation\n\t\tthis.oButton = oButton;\n\t};\n\n\t/**\n  * Cleanup\n  * @override\n  * @protected\n  */\n\tSegmentedButtonItem.prototype.exit = function () {\n\t\t// Destroy button only in case of standalone use\n\t\t// In case the element is set as aggregation of the SegmentedButton the latter one takes care for the cleanup\n\t\tif (this.oButton && !(this.oButton.getParent() instanceof sap.m.SegmentedButton)) {\n\t\t\tthis.oButton.destroy();\n\t\t\tthis.oButton = null;\n\t\t}\n\t};\n\n\tSegmentedButtonItem.prototype.setText = function (sValue) {\n\t\tthis.setProperty(\"text\", sValue, true);\n\t\tif (this.oButton) {\n\t\t\tthis.oButton.setText(this.getText());\n\t\t}\n\t\treturn this;\n\t};\n\tSegmentedButtonItem.prototype.setIcon = function (sValue) {\n\t\tthis.setProperty(\"icon\", sValue, true);\n\t\tif (this.oButton) {\n\t\t\tthis.oButton.setIcon(this.getIcon());\n\t\t}\n\t\treturn this;\n\t};\n\tSegmentedButtonItem.prototype.setEnabled = function (bValue) {\n\t\tthis.setProperty(\"enabled\", bValue, true);\n\t\tif (this.oButton) {\n\t\t\tthis.oButton.setEnabled(this.getEnabled());\n\t\t}\n\t\treturn this;\n\t};\n\tSegmentedButtonItem.prototype.setTextDirection = function (sValue) {\n\t\tthis.setProperty(\"textDirection\", sValue, true);\n\t\tif (this.oButton) {\n\t\t\tthis.oButton.setTextDirection(this.getTextDirection());\n\t\t}\n\t\treturn this;\n\t};\n\tSegmentedButtonItem.prototype.setVisible = function (bVisible) {\n\t\tthis.setProperty(\"visible\", bVisible, true);\n\t\tif (this.oButton) {\n\t\t\tthis.oButton.setVisible(bVisible);\n\t\t}\n\t\treturn this;\n\t};\n\tSegmentedButtonItem.prototype.setWidth = function (sValue) {\n\t\tthis.setProperty(\"width\", sValue, true);\n\t\tif (this.oButton) {\n\t\t\tthis.oButton.setWidth(this.getWidth());\n\t\t}\n\t\treturn this;\n\t};\n\tSegmentedButtonItem.prototype.setTooltip = function (sValue) {\n\t\tthis.setAggregation(\"tooltip\", sValue, true);\n\t\tif (this.oButton) {\n\t\t\tthis.oButton.setTooltip(sValue);\n\t\t}\n\t\treturn this;\n\t};\n\n\treturn SegmentedButtonItem;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"Osx1\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n/**\n * @namespace\n * @name sap.m.delegate.ValueState\n * @private\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"uI10\"), __webpack_require__(\"CcuP\"), __webpack_require__(\"6rjb\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, Device, BaseObject, ValueStateSupport, Popup, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.ValueState\n\n\tvar ValueState = coreLibrary.ValueState;\n\n\t/**\n  * Creates a <code>sap.m.delegate.ValueState</code> delegate that can be attached to controls that require\n  * a value state message popup.\n  *\n  * @example <caption>Example of usage:</caption>\n  *\n  * <pre>\n  *\tMyControl.prototype.init = function() {\n  *\t\tthis._oValueStateMessage = new ValueStateMessage(this);\n  *\t};\n  *\n  *  MyControl.prototype.onfocusin = function(oEvent) {\n  *  \tthis._oValueStateMessage.open();\n  *  };\n  *\n  *  MyControl.prototype.onfocusout = function(oEvent) {\n  *  \tthis._oValueStateMessage.close();\n  *  };\n  *\n  *\tMyControl.prototype.exit = function() {\n  *\n  *\t\tif (this._oValueStateMessage) {\n  *\t\t\tthis._oValueStateMessage.destroy();\n  *\t\t}\n  *\n  *\t\tthis._oValueStateMessage = null;\n  *\t};\n  * </pre>\n  *\n  * <b>Preconditions:</b>\n  * The given control must implement the following interface:\n  *\n  * <code>\n  * .getValueState()\n  * .getValueStateText()\n  * .getFocusDomRef()\n  * .getDomRefForValueStateMessage()\n  * </code>\n  *\n  * @extends sap.ui.base.Object\n  * @param {sap.ui.core.Control} oControl The control for which this value state message is the delegate\n  * @constructor\n  * @private\n  * @alias sap.m.delegate.ValueState\n  * @version 1.42\n  * @author SAP SE\n  */\n\tvar ValueStateMessage = BaseObject.extend(\"sap.m.delegate.ValueState\", /** @lends sap.m.delegate.ValueState.prototype */{\n\t\tconstructor: function constructor(oControl) {\n\t\t\tBaseObject.apply(this, arguments);\n\t\t\tthis._oControl = oControl;\n\t\t\tthis._oPopup = null;\n\t\t}\n\t});\n\n\t/**\n  * Opens value state message popup.\n  *\n  * @protected\n  */\n\tValueStateMessage.prototype.open = function () {\n\t\tvar oControl = this._oControl,\n\t\t    oPopup = this.getPopup(),\n\t\t    oMessageDomRef = this.createDom(),\n\t\t    mDock = Popup.Dock,\n\t\t    $Control = jQuery(oControl.getDomRefForValueStateMessage());\n\n\t\tif (!oControl || !oPopup || !oMessageDomRef) {\n\t\t\treturn;\n\t\t}\n\n\t\toPopup.setContent(oMessageDomRef);\n\t\toPopup.close(0);\n\t\tif (oPopup.getContent()) {\n\t\t\toPopup.getContent().style.maxWidth = oControl.getDomRef().offsetWidth + \"px\";\n\t\t} else {\n\t\t\toPopup.getContent().style.maxWidth = \"\";\n\t\t}\n\t\toPopup.open(this.getOpenDuration(), mDock.BeginTop, mDock.BeginBottom, oControl.getDomRefForValueStateMessage(), null, null, Device.system.phone ? true : Popup.CLOSE_ON_SCROLL);\n\n\t\tvar $DomRef = jQuery(oMessageDomRef);\n\n\t\t// check whether popup is below or above the input\n\t\tif ($Control.offset().top < $DomRef.offset().top) {\n\t\t\t$DomRef.addClass(\"sapMValueStateMessageBottom\");\n\t\t} else {\n\t\t\t$DomRef.addClass(\"sapMValueStateMessageTop\");\n\t\t}\n\n\t\tjQuery(oControl.getFocusDomRef()).addAriaDescribedBy(this.getId());\n\t};\n\n\t/**\n  * Closes value state message popup.\n  *\n  * @protected\n  */\n\tValueStateMessage.prototype.close = function () {\n\t\tvar oControl = this._oControl,\n\t\t    oPopup = this.getPopup();\n\n\t\tif (oPopup) {\n\t\t\toPopup.close(0);\n\t\t}\n\n\t\tif (oControl) {\n\t\t\tjQuery(oControl.getFocusDomRef()).removeAriaDescribedBy(this.getId());\n\t\t}\n\t};\n\n\tValueStateMessage.prototype.getId = function () {\n\t\tvar oControl = this._oControl;\n\n\t\tif (!oControl) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\treturn typeof oControl.getValueStateMessageId === \"function\" ? oControl.getValueStateMessageId() : oControl.getId() + \"-message\";\n\t};\n\n\tValueStateMessage.prototype.getOpenDuration = function () {\n\t\tvar oControl = this._oControl;\n\n\t\tif (!oControl) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn oControl.iOpenMessagePopupDuration === undefined ? 0 : oControl.iOpenMessagePopupDuration;\n\t};\n\n\t/**\n  * Creates the value state message popup.\n  *\n  * @param {string} [sID] ID for the new message popup; generated automatically if no ID is given\n  * @returns {sap.ui.core.Popup} The popup instance object\n  */\n\tValueStateMessage.prototype.createPopup = function (sID) {\n\t\tsID = sID || this.getId();\n\n\t\tif (this._oPopup) {\n\t\t\treturn this._oPopup;\n\t\t}\n\n\t\tthis._oPopup = new Popup(document.createElement(\"span\"), false, false, false);\n\t\tthis._oPopup.attachClosed(function () {\n\t\t\tjQuery.sap.byId(sID).remove();\n\t\t});\n\n\t\treturn this._oPopup;\n\t};\n\n\t/**\n  * Gets the value state message popup, creating it if necessary by calling\n  * the <code>createPopup()</code> method.\n  *\n  * @returns {sap.ui.core.Popup} The popup instance object\n  */\n\tValueStateMessage.prototype.getPopup = function () {\n\n\t\tif (!this._oControl) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.createPopup();\n\t};\n\n\t/**\n  * Creates the value state message HTML elements.\n  *\n  * @returns {object} The value state message root HTML element\n  */\n\tValueStateMessage.prototype.createDom = function () {\n\t\tvar oControl = this._oControl;\n\n\t\tif (!oControl) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar sState = oControl.getValueState(),\n\t\t    sText = oControl.getValueStateText() || ValueStateSupport.getAdditionalText(oControl),\n\t\t    sClass = \"sapMValueStateMessage sapMValueStateMessage\" + sState,\n\t\t    oRB = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\n\t\tif (sState === ValueState.Success || sState === ValueState.None) {\n\t\t\tsClass = \"sapUiInvisibleText\";\n\t\t\tsText = \"\";\n\t\t}\n\n\t\tvar sID = this.getId();\n\t\tvar oMessageDomRef = document.createElement(\"div\");\n\t\toMessageDomRef.id = sID;\n\t\toMessageDomRef.className = sClass;\n\t\toMessageDomRef.setAttribute(\"role\", \"tooltip\");\n\t\toMessageDomRef.setAttribute(\"aria-live\", \"assertive\");\n\n\t\tvar oAccDomRef = document.createElement(\"span\");\n\t\toAccDomRef.id = sID + \"hidden\";\n\t\toAccDomRef.className = \"sapUiHidden\";\n\t\toAccDomRef.setAttribute(\"aria-hidden\", \"true\");\n\n\t\tif (sState !== ValueState.None) {\n\t\t\toAccDomRef.appendChild(document.createTextNode(oRB.getText(\"INPUTBASE_VALUE_STATE_\" + sState.toUpperCase())));\n\t\t}\n\n\t\tvar oTextDomRef = document.createElement(\"span\");\n\t\toTextDomRef.id = sID + \"-text\";\n\t\toTextDomRef.setAttribute(\"aria-hidden\", \"true\");\n\t\toTextDomRef.appendChild(document.createTextNode(sText));\n\n\t\toMessageDomRef.appendChild(oAccDomRef);\n\t\toMessageDomRef.appendChild(oTextDomRef);\n\t\treturn oMessageDomRef;\n\t};\n\n\tValueStateMessage.prototype.destroy = function () {\n\n\t\tif (this._oPopup) {\n\t\t\tthis._oPopup.destroy();\n\t\t\tthis._oPopup = null;\n\t\t}\n\n\t\tthis._oControl = null;\n\t};\n\n\treturn ValueStateMessage;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"PYoY\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"Pg/5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides class sap.m.GrowingEnablement\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"uI10\"), __webpack_require__(\"TFyG\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"WUxf\"), __webpack_require__(\"H9VI\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, BaseObject, NumberFormat, library, ChangeReason, ManagedObjectMetadata) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListType\n\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.m.ListGrowingDirection\n\tvar ListGrowingDirection = library.ListGrowingDirection;\n\n\t/**\n  * Creates a GrowingEnablement delegate that can be attached to ListBase Controls requiring capabilities for growing\n  *\n  * @extends sap.ui.base.Object\n  * @alias sap.m.GrowingEnablement\n  * @experimental Since 1.16. This class is experimental and provides only limited functionality. Also the API might be changed in future.\n  *\n  * @param {sap.m.ListBase} oControl the ListBase control of which this Growing is the delegate\n  *\n  * @constructor\n  * @protected\n  */\n\tvar GrowingEnablement = BaseObject.extend(\"sap.m.GrowingEnablement\", /** @lends sap.m.GrowingEnablement.prototype */{\n\n\t\tconstructor: function constructor(oControl) {\n\t\t\tBaseObject.apply(this);\n\t\t\tthis._oControl = oControl;\n\t\t\tthis._oControl.bUseExtendedChangeDetection = true;\n\t\t\tthis._oControl.addDelegate(this);\n\n\t\t\t/* init growing list */\n\t\t\tvar iRenderedItemsLength = this._oControl.getItems(true).length;\n\t\t\tthis._iRenderedDataItems = iRenderedItemsLength;\n\t\t\tthis._iLimit = iRenderedItemsLength;\n\t\t\tthis._bLoading = false;\n\t\t\tthis._sGroupingPath = \"\";\n\t\t\tthis._bDataRequested = false;\n\t\t\tthis._oContainerDomRef = null;\n\t\t\tthis._iTriggerTimer = 0;\n\t\t\tthis._aChunk = [];\n\t\t\tthis._oRM = null;\n\t\t},\n\n\t\t/**\n   * Destroys this GrowingEnablement delegate.\n   * This function must be called by the control which uses this delegate in the <code>exit</code> function.\n   */\n\t\tdestroy: function destroy() {\n\t\t\tif (this._oTrigger) {\n\t\t\t\tthis._oTrigger.destroy();\n\t\t\t\tthis._oTrigger = null;\n\t\t\t}\n\t\t\tif (this._oScrollDelegate) {\n\t\t\t\tthis._oScrollDelegate.setGrowingList(null);\n\t\t\t\tthis._oScrollDelegate = null;\n\t\t\t}\n\t\t\tif (this._oRM) {\n\t\t\t\tthis._oRM.destroy();\n\t\t\t\tthis._oRM = null;\n\t\t\t}\n\n\t\t\tthis._oControl.$(\"triggerList\").remove();\n\t\t\tthis._oControl.bUseExtendedChangeDetection = false;\n\t\t\tthis._oControl.removeDelegate(this);\n\t\t\tthis._oContainerDomRef = null;\n\t\t\tthis._oControl = null;\n\t\t},\n\n\t\t// renders load more trigger\n\t\trender: function render(oRm) {\n\t\t\toRm.write(\"<div\");\n\t\t\toRm.addClass(\"sapMListUl\");\n\t\t\toRm.addClass(\"sapMGrowingList\");\n\t\t\toRm.writeAttribute(\"id\", this._oControl.getId() + \"-triggerList\");\n\t\t\toRm.addStyle(\"display\", \"none\");\n\t\t\toRm.writeClasses();\n\t\t\toRm.writeStyles();\n\t\t\toRm.write(\">\");\n\t\t\toRm.renderControl(this._getTrigger());\n\t\t\toRm.write(\"</div>\");\n\t\t},\n\n\t\tonAfterRendering: function onAfterRendering() {\n\t\t\tvar oControl = this._oControl;\n\t\t\tif (oControl.getGrowingScrollToLoad()) {\n\t\t\t\tvar oScrollDelegate = library.getScrollDelegate(oControl);\n\t\t\t\tif (oScrollDelegate) {\n\t\t\t\t\tthis._oScrollDelegate = oScrollDelegate;\n\t\t\t\t\toScrollDelegate.setGrowingList(this.onScrollToLoad.bind(this), oControl.getGrowingDirection());\n\t\t\t\t}\n\t\t\t} else if (this._oScrollDelegate) {\n\t\t\t\tthis._oScrollDelegate.setGrowingList(null);\n\t\t\t\tthis._oScrollDelegate = null;\n\t\t\t}\n\n\t\t\tthis._updateTriggerDelayed(false);\n\t\t},\n\n\t\tsetTriggerText: function setTriggerText(sText) {\n\t\t\tthis._oControl.$(\"triggerText\").text(sText);\n\t\t},\n\n\t\t// reset paging\n\t\treset: function reset() {\n\t\t\tthis._iLimit = 0;\n\t\t},\n\n\t\t// determines growing reset with binding change reason\n\t\t// according to UX sort/filter/context should reset the growing\n\t\tshouldReset: function shouldReset(sChangeReason) {\n\t\t\tvar mChangeReason = ChangeReason;\n\n\t\t\treturn sChangeReason == mChangeReason.Sort || sChangeReason == mChangeReason.Filter || sChangeReason == mChangeReason.Context;\n\t\t},\n\n\t\t// get actual and total info\n\t\tgetInfo: function getInfo() {\n\t\t\treturn {\n\t\t\t\ttotal: this._oControl.getMaxItemsCount(),\n\t\t\t\tactual: this._iRenderedDataItems\n\t\t\t};\n\t\t},\n\n\t\tonScrollToLoad: function onScrollToLoad() {\n\t\t\tif (!this._bLoading && this._oControl.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\tvar oScrollDelegate = this._oScrollDelegate;\n\t\t\t\tthis._oScrollPosition = {\n\t\t\t\t\tleft: oScrollDelegate.getScrollLeft(),\n\t\t\t\t\ttop: oScrollDelegate.getScrollHeight()\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.requestNewPage();\n\t\t},\n\n\t\t// call to request new page\n\t\trequestNewPage: function requestNewPage() {\n\t\t\tif (!this._oControl || this._bLoading) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if max item count not reached or if we do not know the count\n\t\t\tvar oBinding = this._oControl.getBinding(\"items\");\n\t\t\tif (oBinding && !oBinding.isLengthFinal() || this._iLimit < this._oControl.getMaxItemsCount()) {\n\t\t\t\t// The GrowingEnablement has its own busy indicator. Do not show the busy indicator, if existing, of the parent control.\n\t\t\t\tif (this._oControl.getMetadata().hasProperty(\"enableBusyIndicator\")) {\n\t\t\t\t\tthis._bParentEnableBusyIndicator = this._oControl.getEnableBusyIndicator();\n\t\t\t\t\tthis._oControl.setEnableBusyIndicator(false);\n\t\t\t\t}\n\n\t\t\t\tthis._iLimit += this._oControl.getGrowingThreshold();\n\t\t\t\tthis._updateTriggerDelayed(true);\n\t\t\t\tthis.updateItems(\"Growing\");\n\t\t\t}\n\t\t},\n\n\t\t// called before new page loaded\n\t\t_onBeforePageLoaded: function _onBeforePageLoaded(sChangeReason) {\n\t\t\tthis._bLoading = true;\n\t\t\tthis._oControl.onBeforePageLoaded(this.getInfo(), sChangeReason);\n\t\t},\n\n\t\t// called after new page loaded\n\t\t_onAfterPageLoaded: function _onAfterPageLoaded(sChangeReason) {\n\t\t\tthis._bLoading = false;\n\t\t\tthis._updateTriggerDelayed(false);\n\t\t\tthis._oControl.onAfterPageLoaded(this.getInfo(), sChangeReason);\n\n\t\t\t// After the data has been loaded, restore the busy indicator handling of the parent control.\n\t\t\tif (this._oControl.setEnableBusyIndicator) {\n\t\t\t\tthis._oControl.setEnableBusyIndicator(this._bParentEnableBusyIndicator);\n\t\t\t}\n\t\t},\n\n\t\t// created and returns load more trigger\n\t\t_getTrigger: function _getTrigger() {\n\t\t\tvar sTriggerID = this._oControl.getId() + \"-trigger\",\n\t\t\t    sTriggerText = this._oControl.getGrowingTriggerText();\n\n\t\t\tsTriggerText = sTriggerText || sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LOAD_MORE_DATA\");\n\t\t\tthis._oControl.addNavSection(sTriggerID);\n\n\t\t\tif (this._oTrigger) {\n\t\t\t\tthis.setTriggerText(sTriggerText);\n\t\t\t\treturn this._oTrigger;\n\t\t\t}\n\n\t\t\t// The growing button is changed to span tag as h1 tag was semantically incorrect.\n\t\t\tthis._oTrigger = new sap.m.CustomListItem({\n\t\t\t\tid: sTriggerID,\n\t\t\t\tbusyIndicatorDelay: 0,\n\t\t\t\ttype: ListType.Active,\n\t\t\t\tcontent: new (__webpack_require__(\"m9N0\"))({\n\t\t\t\t\tcontent: '<div class=\"sapMGrowingListTrigger\">' + '<div class=\"sapMSLITitleDiv sapMGrowingListTriggerText\">' + '<span class=\"sapMSLITitle\" id=\"' + sTriggerID + 'Text\">' + jQuery.sap.encodeHTML(sTriggerText) + '</span>' + '</div>' + '<div class=\"sapMGrowingListDescription sapMSLIDescription\" id=\"' + sTriggerID + 'Info\"></div>' + '</div>'\n\t\t\t\t})\n\t\t\t}).setParent(this._oControl, null, true).attachPress(this.requestNewPage, this).addEventDelegate({\n\t\t\t\tonsapenter: function onsapenter(oEvent) {\n\t\t\t\t\tthis.requestNewPage();\n\t\t\t\t\toEvent.preventDefault();\n\t\t\t\t},\n\t\t\t\tonsapspace: function onsapspace(oEvent) {\n\t\t\t\t\tthis.requestNewPage();\n\t\t\t\t\toEvent.preventDefault();\n\t\t\t\t},\n\t\t\t\tonAfterRendering: function onAfterRendering(oEvent) {\n\t\t\t\t\tthis._oTrigger.$().attr({\n\t\t\t\t\t\t\"tabindex\": 0,\n\t\t\t\t\t\t\"role\": \"button\",\n\t\t\t\t\t\t\"aria-labelledby\": sTriggerID + \"Text\" + \" \" + sTriggerID + \"Info\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\t// stop the eventing between item and the list\n\t\t\tthis._oTrigger.getList = function () {};\n\t\t\t// defines the tag name\n\t\t\tthis._oTrigger.TagName = \"div\";\n\n\t\t\treturn this._oTrigger;\n\t\t},\n\n\t\t// returns the growing information to be shown at the growing button\n\t\t_getListItemInfo: function _getListItemInfo() {\n\t\t\treturn \"[ \" + this._iRenderedDataItems + \" / \" + NumberFormat.getFloatInstance().format(this._oControl.getMaxItemsCount()) + \" ]\";\n\t\t},\n\n\t\t// returns the first sorters grouping path when available\n\t\t_getGroupingPath: function _getGroupingPath(oBinding) {\n\t\t\tvar aSorters = oBinding.aSorters || [];\n\t\t\tvar oSorter = aSorters[0] || {};\n\t\t\treturn oSorter.fnGroup ? oSorter.sPath || \"\" : \"\";\n\t\t},\n\n\t\t// if table has pop-in then we have two rows for one item\n\t\t_getDomIndex: function _getDomIndex(vIndex) {\n\t\t\tif (typeof vIndex != \"number\") {\n\t\t\t\treturn vIndex;\n\t\t\t}\n\n\t\t\tif (this._oControl.hasPopin && this._oControl.hasPopin()) {\n\t\t\t\treturn vIndex * 2;\n\t\t\t}\n\n\t\t\treturn vIndex;\n\t\t},\n\n\t\t// determines if the scroll container of the list has enough scrollable area to hide the growing button\n\t\t_getHasScrollbars: function _getHasScrollbars() {\n\t\t\tif (!this._oScrollDelegate) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this._iRenderedDataItems >= 40) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// after growing-button gets hidden scroll container should still be scrollable\n\t\t\treturn this._oScrollDelegate.getMaxScrollTop() > this._oControl.$(\"triggerList\").outerHeight();\n\t\t},\n\n\t\t// destroy all items in the list and cleanup\n\t\tdestroyListItems: function destroyListItems(bSuppressInvalidate) {\n\t\t\tthis._oControl.destroyItems(bSuppressInvalidate);\n\t\t\tthis._iRenderedDataItems = 0;\n\t\t\tthis._aChunk = [];\n\t\t},\n\n\t\t// appends single list item to the list\n\t\taddListItem: function addListItem(oContext, oBindingInfo, bSuppressInvalidate) {\n\n\t\t\tvar oControl = this._oControl,\n\t\t\t    oBinding = oBindingInfo.binding,\n\t\t\t    oItem = this.createListItem(oContext, oBindingInfo);\n\n\t\t\tif (oBinding.isGrouped()) {\n\t\t\t\t// creates group header if need\n\t\t\t\tvar aItems = oControl.getItems(true),\n\t\t\t\t    oLastItem = aItems[aItems.length - 1],\n\t\t\t\t    sModelName = oBindingInfo.model,\n\t\t\t\t    oGroupInfo = oBinding.getGroup(oItem.getBindingContext(sModelName));\n\n\t\t\t\tif (oLastItem && oLastItem.isGroupHeader()) {\n\t\t\t\t\toControl.removeAggregation(\"items\", oLastItem, true);\n\t\t\t\t\tthis._fnAppendGroupItem = this.appendGroupItem.bind(this, oGroupInfo, oLastItem, bSuppressInvalidate);\n\t\t\t\t\toLastItem = aItems[aItems.length - 1];\n\t\t\t\t}\n\n\t\t\t\tif (!oLastItem || oGroupInfo.key !== oBinding.getGroup(oLastItem.getBindingContext(sModelName)).key) {\n\t\t\t\t\tvar oGroupHeader = oBindingInfo.groupHeaderFactory ? oBindingInfo.groupHeaderFactory(oGroupInfo) : null;\n\t\t\t\t\tif (oControl.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\t\t\tthis.applyPendingGroupItem();\n\t\t\t\t\t\tthis._fnAppendGroupItem = this.appendGroupItem.bind(this, oGroupInfo, oGroupHeader, bSuppressInvalidate);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.appendGroupItem(oGroupInfo, oGroupHeader, bSuppressInvalidate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toControl.addAggregation(\"items\", oItem, bSuppressInvalidate);\n\t\t\tif (bSuppressInvalidate) {\n\t\t\t\tthis._aChunk.push(oItem);\n\t\t\t}\n\t\t},\n\n\t\tapplyPendingGroupItem: function applyPendingGroupItem() {\n\t\t\tif (this._fnAppendGroupItem) {\n\t\t\t\tthis._fnAppendGroupItem();\n\t\t\t\tthis._fnAppendGroupItem = undefined;\n\t\t\t}\n\t\t},\n\n\t\tappendGroupItem: function appendGroupItem(oGroupInfo, oGroupHeader, bSuppressInvalidate) {\n\t\t\toGroupHeader = this._oControl.addItemGroup(oGroupInfo, oGroupHeader, bSuppressInvalidate);\n\t\t\tif (bSuppressInvalidate) {\n\t\t\t\tthis._aChunk.push(oGroupHeader);\n\t\t\t}\n\t\t},\n\n\t\t// creates list item from the factory\n\t\tcreateListItem: function createListItem(oContext, oBindingInfo) {\n\t\t\tthis._iRenderedDataItems++;\n\t\t\tvar oItem = oBindingInfo.factory(ManagedObjectMetadata.uid(\"clone\"), oContext);\n\t\t\treturn oItem.setBindingContext(oContext, oBindingInfo.model);\n\t\t},\n\n\t\t// update context on all items except group headers\n\t\tupdateItemsBindingContext: function updateItemsBindingContext(aContexts, oModel) {\n\t\t\tif (!aContexts.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar aItems = this._oControl.getItems(true);\n\t\t\tfor (var i = 0, c = 0, oItem; i < aItems.length; i++) {\n\t\t\t\toItem = aItems[i];\n\n\t\t\t\t// group headers are not in binding context\n\t\t\t\tif (!oItem.isGroupHeader()) {\n\t\t\t\t\toItem.setBindingContext(aContexts[c++], oModel);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// render all the collected items in the chunk and flush them into the DOM\n\t\t// vInsert whether to append (true) or replace (falsy) or to insert at a certain position (int)\n\t\tapplyChunk: function applyChunk(vInsert, oDomRef) {\n\t\t\tthis.applyPendingGroupItem();\n\n\t\t\tvar iLength = this._aChunk.length;\n\t\t\tif (!iLength) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._oControl.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\tthis._aChunk.reverse();\n\t\t\t\tif (vInsert === true) {\n\t\t\t\t\tvInsert = 0;\n\t\t\t\t} else if (typeof vInsert == \"number\") {\n\t\t\t\t\tvInsert = this._iRenderedDataItems - iLength - vInsert;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toDomRef = oDomRef || this._oContainerDomRef;\n\t\t\tthis._oRM = this._oRM || sap.ui.getCore().createRenderManager();\n\n\t\t\tfor (var i = 0; i < iLength; i++) {\n\t\t\t\tthis._oRM.renderControl(this._aChunk[i]);\n\t\t\t}\n\n\t\t\tthis._oRM.flush(oDomRef, false, this._getDomIndex(vInsert));\n\t\t\tthis._aChunk = [];\n\t\t},\n\n\t\t// add multiple items to the list via BindingContext\n\t\taddListItems: function addListItems(aContexts, oBindingInfo, bSuppressInvalidate) {\n\t\t\tfor (var i = 0; i < aContexts.length; i++) {\n\t\t\t\tthis.addListItem(aContexts[i], oBindingInfo, bSuppressInvalidate);\n\t\t\t}\n\t\t},\n\n\t\t// destroy all the items and create from scratch\n\t\trebuildListItems: function rebuildListItems(aContexts, oBindingInfo, bSuppressInvalidate) {\n\t\t\tthis.destroyListItems(bSuppressInvalidate);\n\t\t\tthis.addListItems(aContexts, oBindingInfo, bSuppressInvalidate);\n\t\t\tif (bSuppressInvalidate) {\n\t\t\t\tvar bHasFocus = this._oContainerDomRef.contains(document.activeElement);\n\t\t\t\tthis.applyChunk(false);\n\t\t\t\tbHasFocus && this._oControl.focus();\n\t\t\t} else {\n\t\t\t\tthis.applyPendingGroupItem();\n\t\t\t}\n\t\t},\n\n\t\t// inserts a single list item\n\t\tinsertListItem: function insertListItem(oContext, oBindingInfo, iIndex) {\n\t\t\tvar oItem = this.createListItem(oContext, oBindingInfo);\n\t\t\tthis._oControl.insertAggregation(\"items\", oItem, iIndex, true);\n\t\t\tthis._aChunk.push(oItem);\n\t\t},\n\n\t\t// destroy a single list item\n\t\tdeleteListItem: function deleteListItem(iIndex) {\n\t\t\tthis._oControl.getItems(true)[iIndex].destroy(true);\n\t\t\tthis._iRenderedDataItems--;\n\t\t},\n\n\t\t/**\n   * refresh items only for OData model.\n   */\n\t\trefreshItems: function refreshItems(sChangeReason) {\n\t\t\tif (!this._bDataRequested) {\n\t\t\t\tthis._bDataRequested = true;\n\t\t\t\tthis._onBeforePageLoaded(sChangeReason);\n\t\t\t}\n\n\t\t\t// set iItemCount to initial value if not set or no items at the control yet\n\t\t\tif (!this._iLimit || this.shouldReset(sChangeReason) || !this._oControl.getItems(true).length) {\n\t\t\t\tthis._iLimit = this._oControl.getGrowingThreshold();\n\t\t\t}\n\n\t\t\t// send the request to get the context\n\t\t\tthis._oControl.getBinding(\"items\").getContexts(0, this._iLimit);\n\t\t},\n\n\t\t/**\n   * update control aggregation if contexts are already available\n   * or send a request to get the contexts in case of ODATA model.\n   */\n\t\tupdateItems: function updateItems(sChangeReason) {\n\t\t\tvar oControl = this._oControl,\n\t\t\t    oBinding = oControl.getBinding(\"items\"),\n\t\t\t    oBindingInfo = oControl.getBindingInfo(\"items\"),\n\t\t\t    aItems = oControl.getItems(true);\n\n\t\t\t// set limit to initial value if not set yet or no items at the control yet\n\t\t\tif (!this._iLimit || this.shouldReset(sChangeReason) || !aItems.length) {\n\t\t\t\tthis._iLimit = oControl.getGrowingThreshold();\n\t\t\t}\n\n\t\t\t// fire growing started event if data was requested this is a followup call of updateItems\n\t\t\tif (this._bDataRequested) {\n\t\t\t\tthis._bDataRequested = false;\n\t\t\t} else {\n\t\t\t\tthis._onBeforePageLoaded(sChangeReason);\n\t\t\t}\n\n\t\t\t// get the context from the binding or request will be sent\n\t\t\tvar aContexts = oBinding.getContexts(0, this._iLimit) || [];\n\n\t\t\t// if getContexts did cause a request to be sent, set the internal flag so growing started event is not fired again\n\t\t\tif (aContexts.dataRequested) {\n\t\t\t\tthis._bDataRequested = true;\n\n\t\t\t\t// a partial response may already be contained, so only return here without updating the list when diff is empty\n\t\t\t\tif (aContexts.diff && !aContexts.diff.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// cache dom ref for internal functions not to lookup again and again\n\t\t\tthis._oContainerDomRef = oControl.getItemsContainerDomRef();\n\n\t\t\t// aContexts.diff ==> undefined : New data we should build from scratch\n\t\t\t// aContexts.diff ==> [] : There is no diff, means data did not changed at all\n\t\t\t// aContexts.diff ==> [{index: 0, type: \"delete\"}, {index: 1, type: \"insert\"},...] : Run the diff logic\n\t\t\tvar aDiff = aContexts.diff,\n\t\t\t    bFromScratch = false,\n\t\t\t    vInsertIndex;\n\n\t\t\t// process the diff\n\t\t\tif (!aContexts.length) {\n\t\t\t\t// no context, destroy list items\n\t\t\t\tthis.destroyListItems();\n\t\t\t} else if (!this._oContainerDomRef) {\n\t\t\t\t// no dom ref for compatibility reason start from scratch\n\t\t\t\tthis.rebuildListItems(aContexts, oBindingInfo);\n\t\t\t} else if (!aDiff || !aItems.length && aDiff.length) {\n\t\t\t\t// new records need to be applied from scratch\n\t\t\t\tthis.rebuildListItems(aContexts, oBindingInfo, true);\n\t\t\t} else if (oBinding.isGrouped() || oControl.checkGrowingFromScratch()) {\n\n\t\t\t\tif (this._sGroupingPath != this._getGroupingPath(oBinding)) {\n\t\t\t\t\t// grouping is changed so we need to rebuild the list for the group headers\n\t\t\t\t\tbFromScratch = true;\n\t\t\t\t} else {\n\t\t\t\t\t// append items if possible\n\t\t\t\t\tfor (var i = 0; i < aDiff.length; i++) {\n\t\t\t\t\t\tvar oDiff = aDiff[i],\n\t\t\t\t\t\t    oContext = aContexts[oDiff.index];\n\n\t\t\t\t\t\tif (oDiff.type == \"delete\") {\n\t\t\t\t\t\t\t// group header may need to be deleted as well\n\t\t\t\t\t\t\tbFromScratch = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (oDiff.index != this._iRenderedDataItems) {\n\t\t\t\t\t\t\t// this item is not appended\n\t\t\t\t\t\t\tbFromScratch = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.addListItem(oContext, oBindingInfo, true);\n\t\t\t\t\t\t\tvInsertIndex = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\tif (this._sGroupingPath) {\n\t\t\t\t\t// if it was already grouped then we need to remove group headers first\n\t\t\t\t\toControl.removeGroupHeaders(true);\n\t\t\t\t}\n\n\t\t\t\tvInsertIndex = -1;\n\t\t\t\tvar iLastInsertIndex = -1;\n\t\t\t\tfor (var i = 0; i < aDiff.length; i++) {\n\t\t\t\t\tvar oDiff = aDiff[i],\n\t\t\t\t\t    iDiffIndex = oDiff.index,\n\t\t\t\t\t    oContext = aContexts[iDiffIndex];\n\n\t\t\t\t\tif (oDiff.type == \"delete\") {\n\t\t\t\t\t\tif (vInsertIndex != -1) {\n\t\t\t\t\t\t\t// this record is deleted while the chunk is getting build\n\t\t\t\t\t\t\tthis.applyChunk(vInsertIndex);\n\t\t\t\t\t\t\tiLastInsertIndex = -1;\n\t\t\t\t\t\t\tvInsertIndex = -1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.deleteListItem(iDiffIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (vInsertIndex == -1) {\n\t\t\t\t\t\t\t// the subsequent of items needs to be inserted at this position\n\t\t\t\t\t\t\tvInsertIndex = iDiffIndex;\n\t\t\t\t\t\t} else if (iLastInsertIndex > -1 && iDiffIndex != iLastInsertIndex + 1) {\n\t\t\t\t\t\t\t// this item is not simply appended to the last one but has been inserted\n\t\t\t\t\t\t\tthis.applyChunk(vInsertIndex);\n\t\t\t\t\t\t\tvInsertIndex = iDiffIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.insertListItem(oContext, oBindingInfo, iDiffIndex);\n\t\t\t\t\t\tiLastInsertIndex = iDiffIndex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bFromScratch) {\n\t\t\t\tthis.rebuildListItems(aContexts, oBindingInfo, true);\n\t\t\t} else if (this._oContainerDomRef && aDiff) {\n\t\t\t\t// set the binding context of items inserting/deleting entries shifts the index of all following items\n\t\t\t\tthis.updateItemsBindingContext(aContexts, oBindingInfo.model);\n\t\t\t\tthis.applyChunk(vInsertIndex);\n\t\t\t}\n\n\t\t\tthis._oContainerDomRef = null;\n\t\t\tthis._sGroupingPath = this._getGroupingPath(oBinding);\n\n\t\t\tif (!this._bDataRequested) {\n\t\t\t\tthis._onAfterPageLoaded(sChangeReason);\n\t\t\t}\n\t\t},\n\n\t\t_updateTriggerDelayed: function _updateTriggerDelayed(bLoading) {\n\t\t\tif (this._oControl.getGrowingScrollToLoad()) {\n\t\t\t\tthis._iTriggerTimer && window.cancelAnimationFrame(this._iTriggerTimer);\n\t\t\t\tthis._iTriggerTimer = window.requestAnimationFrame(this._updateTrigger.bind(this, bLoading));\n\t\t\t} else {\n\t\t\t\tthis._updateTrigger(bLoading);\n\t\t\t}\n\t\t},\n\n\t\t// updates the trigger state\n\t\t_updateTrigger: function _updateTrigger(bLoading) {\n\t\t\tvar oTrigger = this._oTrigger,\n\t\t\t    oControl = this._oControl;\n\n\t\t\t// If there are no visible columns then also hide the trigger.\n\t\t\tif (!oTrigger || !oControl || !oControl.shouldRenderItems()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oBinding = oControl.getBinding(\"items\");\n\t\t\tif (!oBinding) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// update busy state\n\t\t\toTrigger.setBusy(bLoading);\n\t\t\toTrigger.$().toggleClass(\"sapMGrowingListBusyIndicatorVisible\", bLoading);\n\n\t\t\tif (bLoading) {\n\t\t\t\toTrigger.setActive(false);\n\t\t\t\toControl.$(\"triggerList\").css(\"display\", \"\");\n\t\t\t} else {\n\t\t\t\tvar aItems = oControl.getItems(true),\n\t\t\t\t    iItemsLength = aItems.length,\n\t\t\t\t    iBindingLength = oBinding.getLength() || 0,\n\t\t\t\t    bLengthFinal = oBinding.isLengthFinal(),\n\t\t\t\t    bHasScrollToLoad = oControl.getGrowingScrollToLoad();\n\n\t\t\t\t// show, update or hide the growing button\n\t\t\t\tif (!iItemsLength || !this._iLimit || bLengthFinal && this._iLimit >= iBindingLength || bHasScrollToLoad && this._getHasScrollbars()) {\n\t\t\t\t\toControl.$(\"triggerList\").css(\"display\", \"none\");\n\t\t\t\t\tif (document.activeElement === oTrigger.getDomRef()) {\n\t\t\t\t\t\toControl.$(\"after\").focus();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (bLengthFinal) {\n\t\t\t\t\t\toControl.$(\"triggerInfo\").css(\"display\", \"block\").text(this._getListItemInfo());\n\t\t\t\t\t}\n\n\t\t\t\t\toTrigger.$().removeClass(\"sapMGrowingListBusyIndicatorVisible\");\n\t\t\t\t\toControl.$(\"triggerList\").css(\"display\", \"\");\n\t\t\t\t}\n\n\t\t\t\t// at the beginning we should scroll to last item\n\t\t\t\tif (bHasScrollToLoad && this._oScrollPosition === undefined && oControl.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\t\tthis._oScrollPosition = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// scroll to last position\n\t\t\t\tif (iItemsLength > 0 && this._oScrollPosition) {\n\t\t\t\t\tvar oScrollDelegate = this._oScrollDelegate,\n\t\t\t\t\t    oScrollPosition = this._oScrollPosition;\n\n\t\t\t\t\toScrollDelegate.scrollTo(oScrollPosition.left, oScrollDelegate.getScrollHeight() - oScrollPosition.top);\n\t\t\t\t\tthis._oScrollPosition = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn GrowingEnablement;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"Q3pR\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"+q+U\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.CheckBox.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"ACjf\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"20/6\"), __webpack_require__(\"NZXE\"), __webpack_require__(\"Wjxd\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, Label, library, Device, Control, IconPool, EnabledPropagator, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.ValueState\n\n\tvar ValueState = coreLibrary.ValueState;\n\n\t// shortcut for sap.ui.core.TextAlign\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t/**\n  * Constructor for a new <code>CheckBox</code>.\n  *\n  * @param {string} [sId] The ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] The Initial settings for the new control\n  *\n  * @class\n  * Allows the user to set a binary value, such as true/false or yes/no for an item.\n  *\n  * <h3>Overview</h3>\n  *\n  * The <code>CheckBox</code> control consists of a box and a label that describes its purpose.\n  * If it's checked, an indicator is displayed inside the box.\n  *\n  * To select/deselect the <code>CheckBox</code>, the user has to click or tap the square box or its label.\n  * Clicking or tapping toggles the <code>CheckBox</code> between checked and unchecked state.\n  * The <code>CheckBox</code> control only has 2 states - checked and unchecked. There is no third\n  * state for partially selected.\n  *\n  * <h3>Usage</h3>\n  *\n  * You can set the width of the element containing the box and the label manually with the use\n  * of the <code>width<code> property. If the text exceeds the available width, it is truncated.\n  *\n  * <b>Note:</b> When <code>useEntireWidth</code> property is set to <code>true</code>, the value of the\n  * <code>width</code> property is applied to the control as a whole (box and label). If\n  * <code>useEntireWidth</code> is set to <code>false</code>, the <code>width</code> is applied to the label only.\n  *\n  * The touchable area for toggling the <code>CheckBox</code> ends where the text ends.\n  *\n  * If the width allows more space than the text requires, white space is added.\n  * The text can be positioned manually in this space using the <code>textAlign<code> property.\n  *\n  * <b>Note:</b> Keep in mind that setting the <code>textAlign<code> property to <code>Right</code>\n  * can result in a large amount of white space between the box and the text.\n  *\n  * You can disable the <code>CheckBox</code> by setting the <code>enabled</code> property to <code>false</code>,\n  * or use the <code>CheckBox</code> in read-only mode by setting the <code>editable</code> property to false.\n  *\n  * <b>Note:</b> Disabled and read-only states shouldn't be used together.\n  *\n  * @extends sap.ui.core.Control\n  * @implements sap.ui.core.IFormContent\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.CheckBox\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar CheckBox = Control.extend(\"sap.m.CheckBox\", /** @lends sap.m.CheckBox.prototype */{ metadata: {\n\n\t\t\tinterfaces: [\"sap.ui.core.IFormContent\"],\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Stores the state of the checkbox whether it is selected or not.\n     */\n\t\t\t\tselected: { type: \"boolean\", group: \"Data\", defaultValue: false },\n\n\t\t\t\t/**\n     * Disables the Checkbox. Disabled controls are not interactive and are rendered differently according to the theme.\n     */\n\t\t\t\tenabled: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * The 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.\n     */\n\t\t\t\tname: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the text displayed next to the checkbox\n     */\n\t\t\t\ttext: { type: \"string\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Options for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n     */\n\t\t\t\ttextDirection: { type: \"sap.ui.core.TextDirection\", group: \"Appearance\", defaultValue: TextDirection.Inherit },\n\n\t\t\t\t/**\n     * Aligns the text of the checkbox. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n     */\n\t\t\t\ttextAlign: { type: \"sap.ui.core.TextAlign\", group: \"Appearance\", defaultValue: TextAlign.Begin },\n\n\t\t\t\t/**\n     * Determines the total width of the control or the width of its label only, depending on the value of <code>useEntireWidth</code>.\n     *\n     * <b>Note:</b> When <code>useEntireWidth</code> is set to <code>true</code>, <code>width</code> is applied to the control as a whole (checkbox and label). Otherwise, <code>width</code> is applied to the label only.\n     */\n\t\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: '' },\n\n\t\t\t\t/**\n     * Indicates if the given width will be applied to the control as a whole or to its label only.\n     *\n     * <b>Note:</b> by default the width is set to the label\n     * @since 1.52\n     */\n\t\t\t\tuseEntireWidth: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Flag to switch on activeHandling, when it is switched off, there will be no visual changes on active state. Default value is 'true'\n     */\n\t\t\t\tactiveHandling: { type: \"boolean\", group: \"Misc\", defaultValue: true },\n\n\t\t\t\t/**\n     * Specifies whether the user shall be allowed to edit the state of the checkbox\n     * @since 1.25\n     */\n\t\t\t\teditable: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * Accepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n     * @since 1.38\n     */\n\t\t\t\tvalueState: { type: \"sap.ui.core.ValueState\", group: \"Data\", defaultValue: ValueState.None }\n\t\t\t},\n\t\t\taggregations: {\n\t\t\t\t/**\n     * The label that represents the text of the checkbox control\n     */\n\t\t\t\t_label: { type: \"sap.m.Label\", group: \"Behavior\", multiple: false, visibility: \"hidden\" }\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n     * Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).\n     */\n\t\t\t\tariaDescribedBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaDescribedBy\" },\n\n\t\t\t\t/**\n     * Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).\n     */\n\t\t\t\tariaLabelledBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaLabelledBy\" }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * Event is triggered when the control status is changed by the user by selecting or deselecting the checkbox.\n     */\n\t\t\t\tselect: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * Checks whether the CheckBox is marked or not .\n       */\n\t\t\t\t\t\tselected: { type: \"boolean\" }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdesignTime: true\n\t\t} });\n\n\tEnabledPropagator.call(CheckBox.prototype);\n\n\t/**\n  * Lifecycle Methods\n  */\n\tCheckBox.prototype.init = function () {\n\t\tthis.addActiveState(this);\n\t\tIconPool.insertFontFaceStyle();\n\t};\n\n\tCheckBox.prototype.exit = function () {\n\t\tthis._oLabel = null;\n\t\tdelete this._iTabIndex;\n\t};\n\n\t// Public Methods\n\n\tCheckBox.prototype.setSelected = function (bSelected) {\n\t\tbSelected = !!bSelected;\n\t\tif (bSelected == this.getSelected()) {\n\t\t\treturn this;\n\t\t}\n\t\tthis.$(\"CbBg\").toggleClass(\"sapMCbMarkChecked\", bSelected);\n\t\tthis.$().attr(\"aria-checked\", bSelected);\n\t\tvar oCheckBox = this.getDomRef(\"CB\");\n\t\tif (oCheckBox) {\n\t\t\tbSelected ? oCheckBox.setAttribute('checked', 'checked') : oCheckBox.removeAttribute('checked');\n\t\t}\n\t\tthis.setProperty(\"selected\", bSelected, true);\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setText = function (sText) {\n\t\tvar oLabel = this._getLabel(),\n\t\t    bHasText = !!sText;\n\n\t\tthis.setProperty(\"text\", sText, true);\n\t\toLabel.setText(sText);\n\t\tthis.$().toggleClass(\"sapMCbHasLabel\", bHasText);\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setWidth = function (sWidth) {\n\t\tthis.setProperty(\"width\", sWidth, true);\n\t\tthis._setWidth();\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setUseEntireWidth = function (bUseEntireWidth) {\n\t\tthis.setProperty(\"useEntireWidth\", bUseEntireWidth, true);\n\t\tthis._setWidth();\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setTextDirection = function (sDirection) {\n\t\tvar oLabel = this._getLabel();\n\n\t\tthis.setProperty(\"textDirection\", sDirection, true);\n\t\toLabel.setTextDirection(sDirection);\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setTextAlign = function (sAlign) {\n\t\tvar oLabel = this._getLabel();\n\n\t\tthis.setProperty(\"textAlign\", sAlign, true);\n\t\toLabel.setTextAlign(sAlign);\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Add ActiveState to non-supported mobile platform\n  * @private\n  */\n\tCheckBox.prototype.addActiveState = function (oControl) {\n\t\tif (Device.os.blackberry) {\n\t\t\toControl.addDelegate({\n\t\t\t\tontouchstart: function ontouchstart(oEvent) {\n\t\t\t\t\tjQuery(oControl.getDomRef()).addClass(\"sapMActive\");\n\t\t\t\t},\n\t\t\t\tontouchend: function ontouchend(oEvent) {\n\t\t\t\t\tjQuery(oControl.getDomRef()).removeClass(\"sapMActive\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n  * Event handler called when the CheckBox is touched.\n  *\n  * @param {jQuery.Event} oEvent\n  */\n\tCheckBox.prototype.ontouchstart = function (oEvent) {\n\t\t//for control who need to know if they should handle events from the CheckBox control\n\t\toEvent.originalEvent._sapui_handledByControl = true;\n\t};\n\n\t/**\n  * Event handler called when the CheckBox is tapped.\n  *\n  * @param {jQuery.Event} oEvent\n  */\n\tCheckBox.prototype.ontap = function (oEvent) {\n\t\tif (this.getEnabled() && this.getEditable()) {\n\t\t\tthis.$().focus(); // In IE taping on the input doesn`t focus the wrapper div.\n\t\t\tvar bSelected = !this.getSelected();\n\t\t\tthis.setSelected(bSelected);\n\t\t\tthis.fireSelect({ selected: bSelected });\n\n\t\t\t// mark the event that it is handled by the control\n\t\t\toEvent && oEvent.setMarked();\n\t\t}\n\t};\n\n\t/**\n  * Event handler called when the space key is pressed onto the Checkbox.\n  *\n  * @param {jQuery.Event} oEvent\n  */\n\tCheckBox.prototype.onsapspace = function (oEvent) {\n\t\tthis.ontap(oEvent);\n\t\t// stop browsers default behavior\n\t\tif (oEvent) {\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\t/**\n  * Event handler called when the enter key is pressed onto the Checkbox.\n  *\n  * @param {jQuery.Event} oEvent\n  */\n\tCheckBox.prototype.onsapenter = function (oEvent) {\n\t\tthis.ontap(oEvent);\n\t};\n\n\t/**\n  * Sets the tab index of the control\n  *\n  * @param {int} iTabIndex The tab index should be greater than or equal -1\n  * @return {sap.m.CheckBox}\n  * @since 1.16\n  * @protected\n  */\n\tCheckBox.prototype.setTabIndex = function (iTabIndex) {\n\t\tthis._iTabIndex = iTabIndex;\n\t\tthis.$(\"CbBg\").attr(\"tabindex\", iTabIndex);\n\t\treturn this;\n\t};\n\n\t/**\n  * Returns the CheckBox`s tab index.\n  *\n  * @return {int} iTabIndex for Checkbox\n  * @since 1.22\n  * @protected\n  */\n\tCheckBox.prototype.getTabIndex = function () {\n\t\tif (this.hasOwnProperty(\"_iTabIndex\")) {\n\t\t\treturn this._iTabIndex;\n\t\t}\n\t\treturn this.getEnabled() ? 0 : -1;\n\t};\n\n\t/**\n  * Lazy loads the CheckBox`s label\n  *\n  * @return {sap.m.Label}\n  * @private\n  */\n\tCheckBox.prototype._getLabel = function () {\n\t\tif (!this._oLabel) {\n\t\t\tthis._oLabel = new Label(this.getId() + \"-label\", {\n\t\t\t\tlabelFor: this.getId()\n\t\t\t}).addStyleClass(\"sapMCbLabel\");\n\n\t\t\tthis.setAggregation(\"_label\", this._oLabel, true);\n\t\t}\n\n\t\treturn this.getAggregation(\"_label\");\n\t};\n\n\t/**\n  * Sets the width of the CheckBox control or its label, based on the <code>useEntireWidth</code> property.\n  * @param {string} sWidth - CSS size to be set as width\n  * @private\n  */\n\tCheckBox.prototype._setWidth = function () {\n\t\tvar oLabel = this._getLabel(),\n\t\t    $oCheckBox = this.$(),\n\t\t    sWidth = this.getWidth();\n\n\t\tif (this.getUseEntireWidth()) {\n\t\t\toLabel.setWidth(\"\");\n\t\t\t$oCheckBox.outerWidth(sWidth);\n\t\t} else {\n\t\t\t$oCheckBox.outerWidth(\"\");\n\t\t\toLabel.setWidth(sWidth);\n\t\t}\n\t};\n\n\t/**\n  * @see sap.ui.core.Control#getAccessibilityInfo\n  * @protected\n  */\n\tCheckBox.prototype.getAccessibilityInfo = function () {\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\treturn {\n\t\t\trole: \"checkbox\",\n\t\t\ttype: oBundle.getText(\"ACC_CTR_TYPE_CHECKBOX\"),\n\t\t\tdescription: (this.getText() || \"\") + (this.getSelected() ? \" \" + oBundle.getText(\"ACC_CTR_STATE_CHECKED\") : \"\"),\n\t\t\tfocusable: this.getEnabled(),\n\t\t\tenabled: this.getEnabled(),\n\t\t\teditable: this.getEditable()\n\t\t};\n\t};\n\n\t/*\n  * Checkbox without label must not be stretched in Form.\n  */\n\tCheckBox.prototype.getFormDoNotAdjustWidth = function () {\n\t\treturn this.getText() ? false : true;\n\t};\n\n\treturn CheckBox;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.CheckBoxRenderer\", __webpack_require__(\"9z75\"));\n\n/***/ }),\n\n/***/ \"QlcA\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"RL+X\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.List.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"CD64\"), __webpack_require__(\"nPt9\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListBase, library) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.BackgroundDesign\n\n\tvar BackgroundDesign = library.BackgroundDesign;\n\n\t/**\n  * Constructor for a new List.\n  *\n  * @param {string} [sId] Id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * The List control provides a container for all types of list items.\n  * For mobile devices, the recommended limit of list items is 100 to assure proper performance. To improve initial rendering of large lists, use the \"growing\" feature. Please refer to the SAPUI5 Developer Guide for more information..\n  *\n  * See section \"{@link topic:1da158152f644ba1ad408a3e982fd3df Lists}\"\n  * in the documentation for an introduction to <code>sap.m.List</code> control.\n  *\n  * @extends sap.m.ListBase\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.List\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar List = ListBase.extend(\"sap.m.List\", /** @lends sap.m.List.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Sets the background style of the list. Depending on the theme, you can change the state of the background from <code>Solid</code> to <code>Translucent</code> or to <code>Transparent</code>.\n     * @since 1.14\n     */\n\t\t\t\tbackgroundDesign: { type: \"sap.m.BackgroundDesign\", group: \"Appearance\", defaultValue: BackgroundDesign.Solid }\n\t\t\t},\n\t\t\taggregations: {\n\n\t\t\t\t/**\n     * Defines columns of the list.\n     * @deprecated Since version 1.16. Instead, use the <code>sap.m.Table</code> control.\n     */\n\t\t\t\tcolumns: { type: \"sap.m.Column\", multiple: true, singularName: \"column\", deprecated: true }\n\t\t\t}\n\t\t} });\n\n\tList.prototype.onBeforeRendering = function () {\n\t\tif (ListBase.prototype.onBeforeRendering) {\n\t\t\tListBase.prototype.onBeforeRendering.call(this);\n\t\t}\n\n\t\t// if \"columns\" aggregation is not in use or incompatible then ignore\n\t\tif (!this.getColumns().length || this._isColumnsIncompatible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n   * FIXME: Here to support old API if columns are set\n   * We are trying to extend renderer to render list as table\n   * This is so ugly and we need to get rid of it ASAP\n   */\n\t\tvar proto = __webpack_require__(\"5KZc\").prototype;\n\t\tObject.keys(proto).forEach(function (key) {\n\t\t\tthis[key] = proto[key];\n\t\t}, this);\n\n\t\t/**\n   * FIXME: Handle different default backgroundDesign value for Table\n   */\n\t\tif (!this.mProperties.hasOwnProperty(\"backgroundDesign\")) {\n\t\t\tthis.setBackgroundDesign(\"Translucent\");\n\t\t}\n\t};\n\n\t// checks if \"columns\" usage is not compatible anymore\n\tList.prototype._isColumnsIncompatible = function () {\n\t\treturn sap.ui.getCore().getConfiguration().getCompatibilityVersion(\"sapMListAsTable\").compareTo(\"1.16\") >= 0;\n\t};\n\n\treturn List;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.ListRenderer\", __webpack_require__(\"UOOL\"));\n\n/***/ }),\n\n/***/ \"RNqf\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"s5vy\"), __webpack_require__(\"ax/N\"), __webpack_require__(\"8rlm\"), __webpack_require__(\"ACjf\"), __webpack_require__(\"wTGv\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"nPt9\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, ListItemBaseRenderer, Renderer, ColumnHeader, Label, coreLibrary, Device, library) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.PopinDisplay\n\n\tvar PopinDisplay = library.PopinDisplay;\n\n\t// shortcut for sap.ui.core.VerticalAlign\n\tvar VerticalAlign = coreLibrary.VerticalAlign;\n\n\t// shortcut for sap.m.PopinLayout\n\tvar PopinLayout = library.PopinLayout;\n\n\t/**\n  * ColumnListItem renderer.\n  * @namespace\n  */\n\tvar ColumnListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\tColumnListItemRenderer.render = function (rm, oLI) {\n\t\tvar oTable = oLI.getTable();\n\t\tif (!oTable) {\n\t\t\treturn;\n\t\t}\n\n\t\tListItemBaseRenderer.render.apply(this, arguments);\n\n\t\tif (oLI.getVisible() && oTable.hasPopin()) {\n\t\t\tthis.renderPopin(rm, oLI, oTable);\n\t\t}\n\t};\n\n\t// render type highlight always within a cell\n\tColumnListItemRenderer.renderHighlight = function (rm, oLI) {\n\t\trm.write('<td class=\"sapMListTblHighlightCell\" aria-hidden=\"true\">');\n\n\t\t// let the list item base render the highlight\n\t\tListItemBaseRenderer.renderHighlight.apply(this, arguments);\n\n\t\trm.write('</td>');\n\t};\n\n\t// render type content always within a cell\n\tColumnListItemRenderer.renderType = function (rm, oLI) {\n\t\trm.write('<td class=\"sapMListTblNavCol\" aria-hidden=\"true\">');\n\n\t\t// let the list item base render the type\n\t\tListItemBaseRenderer.renderType.apply(this, arguments);\n\n\t\trm.write('</td>');\n\t};\n\n\t// wrap mode content with a cell\n\tColumnListItemRenderer.renderModeContent = function (rm, oLI) {\n\t\trm.write('<td class=\"sapMListTblSelCol\" aria-hidden=\"true\">');\n\n\t\t// let the list item base render the mode control\n\t\tListItemBaseRenderer.renderModeContent.apply(this, arguments);\n\n\t\trm.write('</td>');\n\t};\n\n\t// ColumnListItem does not respect counter property of the LIB\n\tColumnListItemRenderer.renderCounter = function (rm, oLI) {};\n\n\t// Returns aria accessibility role\n\tColumnListItemRenderer.getAriaRole = function (oLI) {\n\t\treturn \"\";\n\t};\n\n\t/**\n  * Renders the HTML for the given control, using the provided\n  * {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager}\n  *            oRenderManager the RenderManager that can be used for writing to\n  *            the Render-Output-Buffer\n  * @param {sap.ui.core.Control}\n  *            oControl an object representation of the control that should be\n  *            rendered\n  */\n\tColumnListItemRenderer.renderLIAttributes = function (rm, oLI) {\n\t\trm.addClass(\"sapMListTblRow\");\n\t\tvar vAlign = oLI.getVAlign();\n\t\tif (vAlign != VerticalAlign.Inherit) {\n\t\t\trm.addClass(\"sapMListTblRow\" + vAlign);\n\t\t}\n\n\t\tvar oTable = oLI.getTable();\n\t\tif (oTable && oTable.getAlternateRowColors()) {\n\t\t\tvar iPos = oTable.indexOfItem(oLI);\n\t\t\tif (iPos % 2 == 0) {\n\t\t\t\trm.addClass(\"sapMListTblRowAlternate\");\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Overwriting hook method of ListItemBase\n  *\n  * @public\n  *\n  * @param {sap.ui.core.RenderManager} rm RenderManager\n  * @param {sap.m.ListItemBase} oLI List item\n  */\n\tColumnListItemRenderer.renderLIContentWrapper = function (rm, oLI) {\n\t\tvar oTable = oLI.getTable();\n\t\tif (!oTable) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar aColumns = oTable.getColumns(true),\n\t\t    aCells = oLI.getCells();\n\n\t\t// remove cloned headers\n\t\toLI._destroyClonedHeaders();\n\n\t\taColumns.forEach(function (oColumn, i) {\n\t\t\tvar cls,\n\t\t\t    oHeader,\n\t\t\t    bRenderCell = true,\n\t\t\t    oCell = aCells[oColumn.getInitialOrder()];\n\n\t\t\tif (!oCell || !oColumn.getVisible() || oColumn.isPopin()) {\n\t\t\t\t// update the visible index of the column\n\t\t\t\toColumn.setIndex(-1);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trm.write(\"<td\");\n\t\t\trm.addClass(\"sapMListTblCell\");\n\t\t\trm.writeAttribute(\"id\", oLI.getId() + \"_cell\" + i);\n\n\t\t\t// check column properties\n\t\t\tif (oColumn) {\n\t\t\t\tcls = oColumn.getStyleClass(true);\n\t\t\t\tcls && rm.addClass(jQuery.sap.encodeHTML(cls));\n\n\t\t\t\t// aria for virtual keyboard mode\n\t\t\t\toHeader = oColumn.getHeader();\n\t\t\t\tif (oHeader) {\n\t\t\t\t\trm.writeAttribute(\"headers\", oHeader.getId());\n\t\t\t\t}\n\n\t\t\t\t// merge duplicate cells\n\t\t\t\tif (!oTable.hasPopin() && oColumn.getMergeDuplicates()) {\n\t\t\t\t\tvar sFuncWithParam = oColumn.getMergeFunctionName(),\n\t\t\t\t\t    aFuncWithParam = sFuncWithParam.split(\"#\"),\n\t\t\t\t\t    sFuncParam = aFuncWithParam[1],\n\t\t\t\t\t    sFuncName = aFuncWithParam[0];\n\n\t\t\t\t\tif (typeof oCell[sFuncName] != \"function\") {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"mergeFunctionName property is defined on \" + oColumn + \" but this is not function of \" + oCell);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar lastColumnValue = oColumn.getLastValue(),\n\t\t\t\t\t\t    cellValue = oCell[sFuncName](sFuncParam);\n\n\t\t\t\t\t\tif (lastColumnValue === cellValue) {\n\t\t\t\t\t\t\t// it is not necessary to render cell content but\n\t\t\t\t\t\t\t// screen readers need content to announce it\n\t\t\t\t\t\t\tbRenderCell = sap.ui.getCore().getConfiguration().getAccessibility();\n\t\t\t\t\t\t\toCell.addStyleClass(\"sapMListTblCellDupCnt\");\n\t\t\t\t\t\t\trm.addClass(\"sapMListTblCellDup\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toColumn.setLastValue(cellValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toColumn.getVAlign() != \"Inherit\" && rm.addStyle(\"vertical-align\", oColumn.getVAlign().toLowerCase());\n\t\t\t\tvar sAlign = oColumn.getCssAlign();\n\t\t\t\tif (sAlign) {\n\t\t\t\t\trm.addStyle(\"text-align\", sAlign);\n\t\t\t\t}\n\n\t\t\t\trm.writeStyles();\n\t\t\t}\n\n\t\t\trm.writeClasses();\n\t\t\trm.write(\">\");\n\n\t\t\tif (bRenderCell) {\n\t\t\t\tthis.applyAriaLabelledBy(oHeader, oCell);\n\t\t\t\trm.renderControl(oColumn.applyAlignTo(oCell));\n\t\t\t}\n\n\t\t\trm.write(\"</td>\");\n\t\t}, this);\n\t};\n\n\tColumnListItemRenderer.applyAriaLabelledBy = function (oHeader, oCell) {\n\t\tif (oCell) {\n\t\t\toCell.removeAssociation(\"ariaLabelledBy\", oCell.data(\"ariaLabelledBy\") || undefined, true);\n\t\t}\n\n\t\t/* add the header as an aria-labelled by association for the cells */\n\t\t/* only set the header text to the aria-labelled association if the header is a textual control and is visible */\n\t\tif (oHeader && oHeader.getText && oCell.getAriaLabelledBy && oHeader.getVisible()) {\n\n\t\t\t// suppress the invalidation during the rendering\n\t\t\toCell.addAssociation(\"ariaLabelledBy\", oHeader, true);\n\t\t\toCell.data(\"ariaLabelledBy\", oHeader.getId());\n\t\t}\n\t};\n\n\t/**\n  * Renders pop-ins for Table Rows\n  *\n  * @private\n  *\n  * @param {sap.ui.core.RenderManager} rm RenderManager\n  * @param {sap.m.ListItemBase} oLI List item\n  * @param {sap.m.Table} oTable Table control\n  */\n\tColumnListItemRenderer.renderPopin = function (rm, oLI, oTable) {\n\t\t// remove existing popin first\n\t\toLI.removePopin();\n\n\t\t// popin row\n\t\trm.write(\"<tr\");\n\t\trm.addClass(\"sapMListTblSubRow\");\n\t\trm.writeElementData(oLI.getPopin());\n\t\trm.writeAttribute(\"tabindex\", \"-1\");\n\n\t\tif (oLI.isSelectable()) {\n\t\t\trm.writeAttribute(\"aria-selected\", oLI.getSelected());\n\t\t}\n\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\tthis.renderHighlight(rm, oLI);\n\n\t\t// cell\n\t\trm.write(\"<td\");\n\t\trm.writeAttribute(\"id\", oLI.getId() + \"-subcell\");\n\t\trm.writeAttribute(\"colspan\", oTable.getColSpan());\n\n\t\tvar sPopinLayout = oTable.getPopinLayout();\n\t\t// overwrite sPopinLayout=Block to avoid additional margin-top in IE and Edge\n\t\tif (Device.browser.msie || Device.browser.edge) {\n\t\t\tsPopinLayout = PopinLayout.Block;\n\t\t}\n\t\trm.write(\"><div\");\n\t\trm.addClass(\"sapMListTblSubCnt\");\n\t\trm.addClass(\"sapMListTblSubCnt\" + sPopinLayout);\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\tvar aCells = oLI.getCells(),\n\t\t    aColumns = oTable.getColumns(true);\n\n\t\taColumns.forEach(function (oColumn) {\n\t\t\tif (!oColumn.getVisible() || !oColumn.isPopin()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oCell = aCells[oColumn.getInitialOrder()],\n\t\t\t    oHeader = oColumn.getHeader();\n\n\t\t\tif (!oHeader && !oCell) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sStyleClass = oColumn.getStyleClass(),\n\t\t\t    sPopinDisplay = oColumn.getPopinDisplay();\n\n\t\t\t/* row start */\n\t\t\trm.write(\"<div\");\n\t\t\trm.addClass(\"sapMListTblSubCntRow\");\n\t\t\tsStyleClass && rm.addClass(jQuery.sap.encodeHTML(sStyleClass));\n\t\t\trm.writeClasses();\n\t\t\trm.write(\">\");\n\n\t\t\t/* header cell */\n\t\t\tif (oHeader && sPopinDisplay != PopinDisplay.WithoutHeader) {\n\t\t\t\trm.write(\"<div\");\n\t\t\t\trm.addClass(\"sapMListTblSubCntHdr\");\n\t\t\t\trm.writeClasses();\n\t\t\t\trm.write(\">\");\n\t\t\t\tif (oHeader instanceof ColumnHeader) {\n\t\t\t\t\tvar sColumnHeaderTitle = oHeader.getText();\n\t\t\t\t\toHeader = new Label({ text: sColumnHeaderTitle });\n\t\t\t\t} else {\n\t\t\t\t\toHeader = oHeader.clone();\n\t\t\t\t}\n\t\t\t\toColumn.addDependent(oHeader);\n\t\t\t\toLI._addClonedHeader(oHeader);\n\t\t\t\toColumn.applyAlignTo(oHeader, \"Begin\");\n\t\t\t\trm.renderControl(oHeader);\n\t\t\t\trm.write(\"</div>\");\n\n\t\t\t\t/* separator cell */\n\t\t\t\trm.write(\"<div class='sapMListTblSubCntSpr'>:</div>\");\n\t\t\t}\n\n\t\t\t/* value cell */\n\t\t\tif (oCell) {\n\t\t\t\trm.write(\"<div\");\n\t\t\t\trm.addClass(\"sapMListTblSubCntVal\");\n\t\t\t\trm.addClass(\"sapMListTblSubCntVal\" + sPopinDisplay);\n\t\t\t\trm.writeClasses();\n\t\t\t\trm.write(\">\");\n\t\t\t\toColumn.applyAlignTo(oCell, \"Begin\");\n\t\t\t\tthis.applyAriaLabelledBy(oHeader, oCell);\n\t\t\t\trm.renderControl(oCell);\n\t\t\t\trm.write(\"</div>\");\n\t\t\t}\n\n\t\t\t/* row end */\n\t\t\trm.write(\"</div>\");\n\t\t}, this);\n\n\t\trm.write(\"</div></td></tr>\");\n\t};\n\n\t/**\n  * Overwriting hook method of ListItemBase.\n  *\n  * @param {sap.ui.core.RenderManager} rm RenderManager\n  * @param {sap.m.ListItemBase} [oLI] List item\n  */\n\tColumnListItemRenderer.addLegacyOutlineClass = function (rm, oLI) {};\n\n\treturn ColumnListItemRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"Riks\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"ax/N\"), __webpack_require__(\"qW8B\"), __webpack_require__(\"RNqf\"), __webpack_require__(\"8rlm\"), __webpack_require__(\"nPt9\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, Renderer, ListBaseRenderer, ColumnListItemRenderer, ColumnHeader, library) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListKeyboardMode\n\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\t/**\n  * List renderer.\n  * @namespace\n  *\n  * TableRenderer extends the ListBaseRenderer\n  */\n\tvar TableRenderer = Renderer.extend(ListBaseRenderer);\n\n\t/**\n  * Renders the Header and/or Footer of the Table like List Control\n  *\n  * @param {sap.ui.core.RenderManager} rm RenderManager\n  * @param {sap.m.ListBase} oTable Table control\n  * @param {String} type Whether \"Head\" or \"Foot\"\n  */\n\tTableRenderer.renderColumns = function (rm, oTable, type) {\n\t\tvar index = 0,\n\t\t    hiddens = 0,\n\t\t    hasPopin = false,\n\t\t    hasFooter = false,\n\t\t    mode = oTable.getMode(),\n\t\t    iModeOrder = ListBaseRenderer.ModeOrder[mode],\n\t\t    clsPrefix = \"sapMListTbl\",\n\t\t    idPrefix = oTable.getId(\"tbl\"),\n\t\t    cellTag = type == \"Head\" ? \"th\" : \"td\",\n\t\t    groupTag = \"t\" + type.toLowerCase(),\n\t\t    aColumns = oTable.getColumns(),\n\t\t    isHeaderHidden = type == \"Head\" && aColumns.every(function (oColumn) {\n\t\t\treturn !oColumn.getHeader() || !oColumn.getHeader().getVisible() || !oColumn.getVisible() || oColumn.isPopin() || oColumn.isHidden();\n\t\t}),\n\t\t    hasOneHeader = type == \"Head\" && aColumns.filter(function (oColumn) {\n\t\t\treturn oColumn.getVisible() && !oColumn.isPopin() && !oColumn.isHidden();\n\t\t}).length == 1,\n\t\t    createBlankCell = function createBlankCell(cls, id, bAriaHidden) {\n\t\t\trm.write(\"<\");\n\t\t\trm.write(cellTag);\n\t\t\tbAriaHidden && rm.writeAttribute(\"aria-hidden\", \"true\");\n\t\t\tid && rm.writeAttribute(\"id\", idPrefix + id);\n\t\t\trm.addClass(clsPrefix + cls);\n\t\t\trm.writeClasses();\n\t\t\trm.write(\"></\");\n\t\t\trm.write(cellTag);\n\t\t\trm.write(\">\");\n\t\t\tindex++;\n\t\t};\n\n\t\trm.write(\"<\" + groupTag + \">\");\n\t\trm.write(\"<tr\");\n\t\trm.writeAttribute(\"tabindex\", -1);\n\t\trm.writeAttribute(\"id\", oTable.addNavSection(idPrefix + type + \"er\"));\n\n\t\tif (isHeaderHidden) {\n\t\t\trm.addClass(\"sapMListTblHeaderNone\");\n\t\t} else {\n\t\t\trm.addClass(\"sapMListTblRow sapMLIBFocusable sapMListTbl\" + type + \"er\");\n\t\t\tColumnListItemRenderer.addLegacyOutlineClass.call(ColumnListItemRenderer, rm);\n\t\t}\n\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\tcreateBlankCell(\"HighlightCol\", type + \"Highlight\", !oTable._iItemNeedsHighlight);\n\n\t\tif (iModeOrder == -1) {\n\t\t\tif (mode == \"MultiSelect\" && type == \"Head\" && !isHeaderHidden) {\n\t\t\t\trm.write(\"<th class='\" + clsPrefix + \"SelCol'>\");\n\t\t\t\trm.renderControl(oTable._getSelectAllCheckbox());\n\t\t\t\trm.write(\"</th>\");\n\t\t\t\tindex++;\n\t\t\t} else {\n\t\t\t\tcreateBlankCell(\"SelCol\");\n\t\t\t}\n\t\t}\n\n\t\taColumns.forEach(function (oColumn, order) {\n\t\t\toColumn.setIndex(-1);\n\t\t\toColumn.setInitialOrder(order);\n\t\t});\n\n\t\toTable.getColumns(true).forEach(function (oColumn, order) {\n\t\t\tif (!oColumn.getVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (oColumn.isPopin()) {\n\t\t\t\thasPopin = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (oColumn.isHidden()) {\n\t\t\t\thiddens++;\n\t\t\t}\n\n\t\t\tvar control = oColumn[\"get\" + type + \"er\"](),\n\t\t\t    width = hasOneHeader ? \"\" : oColumn.getWidth(),\n\t\t\t    cls = oColumn.getStyleClass(true),\n\t\t\t    align = oColumn.getCssAlign();\n\n\t\t\trm.write(\"<\" + cellTag);\n\t\t\tcls && rm.addClass(jQuery.sap.encodeHTML(cls));\n\n\t\t\tif (type === \"Head\") {\n\t\t\t\trm.writeElementData(oColumn);\n\t\t\t\t// adding ColumnHeader specific class in order to overwrite the padding of the cell\n\t\t\t\tif (control instanceof ColumnHeader) {\n\t\t\t\t\trm.addClass(clsPrefix + \"CellCH\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trm.addClass(clsPrefix + \"Cell\");\n\t\t\trm.addClass(clsPrefix + type + \"erCell\");\n\t\t\trm.writeAttribute(\"data-sap-width\", oColumn.getWidth());\n\t\t\twidth && rm.addStyle(\"width\", width);\n\n\t\t\tif (align) {\n\t\t\t\trm.addStyle(\"text-align\", align);\n\t\t\t}\n\n\t\t\trm.writeClasses();\n\t\t\trm.writeStyles();\n\t\t\trm.write(\">\");\n\t\t\tif (control) {\n\t\t\t\toColumn.applyAlignTo(control);\n\t\t\t\trm.renderControl(control);\n\t\t\t}\n\t\t\tif (type == \"Head\" && !hasFooter) {\n\t\t\t\thasFooter = !!oColumn.getFooter();\n\t\t\t}\n\t\t\trm.write(\"</\" + cellTag + \">\");\n\t\t\toColumn.setIndex(index++);\n\t\t});\n\n\t\tcreateBlankCell(\"NavCol\", type + \"Nav\", !oTable._iItemNeedsColumn);\n\n\t\tif (iModeOrder == 1) {\n\t\t\tcreateBlankCell(\"SelCol\");\n\t\t}\n\n\t\trm.write(\"</tr></\" + groupTag + \">\");\n\n\t\tif (type == \"Head\") {\n\t\t\toTable._hasPopin = hasPopin;\n\t\t\toTable._colCount = index - hiddens;\n\t\t\toTable._hasFooter = hasFooter;\n\t\t\toTable._headerHidden = isHeaderHidden;\n\t\t}\n\t};\n\n\t/**\n  * add table container class name\n  */\n\tTableRenderer.renderContainerAttributes = function (rm, oControl) {\n\t\trm.addClass(\"sapMListTblCnt\");\n\t};\n\n\t/**\n  * render table tag and add required classes\n  */\n\tTableRenderer.renderListStartAttributes = function (rm, oControl) {\n\t\trm.write(\"<table\");\n\t\trm.addClass(\"sapMListTbl\");\n\t\tif (oControl.getFixedLayout() === false) {\n\t\t\trm.addStyle(\"table-layout\", \"auto\");\n\t\t}\n\n\t\t// make the type column visible if needed\n\t\tif (oControl._iItemNeedsColumn) {\n\t\t\trm.addClass(\"sapMListTblHasNav\");\n\t\t}\n\t};\n\n\t/**\n  * returns aria accessibility role\n  */\n\tTableRenderer.getAriaRole = function (oControl) {\n\t\treturn \"\";\n\t};\n\n\t/**\n  * generate table columns\n  */\n\tTableRenderer.renderListHeadAttributes = function (rm, oControl) {\n\t\tthis.renderColumns(rm, oControl, \"Head\");\n\t\trm.write(\"<tbody\");\n\t\trm.writeAttribute(\"id\", oControl.addNavSection(oControl.getId(\"tblBody\")));\n\t\tif (oControl.getAlternateRowColors()) {\n\t\t\trm.addClass(oControl._getAlternateRowColorsClass());\n\t\t\trm.writeClasses();\n\t\t}\n\t\trm.write(\">\");\n\t};\n\n\t/**\n  * render footer and finish rendering table\n  */\n\tTableRenderer.renderListEndAttributes = function (rm, oControl) {\n\t\trm.write(\"</tbody>\"); // items should be rendered before foot\n\t\toControl._hasFooter && this.renderColumns(rm, oControl, \"Foot\");\n\t\trm.write(\"</table>\");\n\t};\n\n\t/**\n  * render no data\n  */\n\tTableRenderer.renderNoData = function (rm, oControl) {\n\t\trm.write(\"<tr\");\n\t\trm.writeAttribute(\"tabindex\", oControl.getKeyboardMode() == ListKeyboardMode.Navigation ? -1 : 0);\n\t\trm.writeAttribute(\"id\", oControl.getId(\"nodata\"));\n\t\trm.addClass(\"sapMLIB sapMListTblRow sapMLIBTypeInactive\");\n\t\tColumnListItemRenderer.addFocusableClasses.call(ColumnListItemRenderer, rm);\n\t\tif (!oControl._headerHidden || !oControl.getHeaderText() && !oControl.getHeaderToolbar()) {\n\t\t\trm.addClass(\"sapMLIBShowSeparator\");\n\t\t}\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\trm.write(\"<td\");\n\t\trm.writeAttribute(\"id\", oControl.getId(\"nodata-text\"));\n\t\trm.writeAttribute(\"colspan\", oControl.getColCount());\n\t\trm.addClass(\"sapMListTblCell sapMListTblCellNoData\");\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\t\trm.writeEscaped(oControl.getNoDataText(true));\n\t\trm.write(\"</td>\");\n\n\t\trm.write(\"</tr>\");\n\t};\n\n\treturn TableRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"RnsF\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"#This is the resource bundle for the SAPUI5 sap.m library\\n#\\n\\n#XACT: ARIA ColumnHeader control description\\nCOLUMNHEADER_ACCESS_COLUMN_ACTIONS=Auf Spaltenaktionen zugreifen\\n\\n#XACT: ARIA ColumnHeader filtered state announcement\\nCOLUMNHEADER_FILTERED=Gefiltert\\n\\n#XACT: ARIA ColumnHeader sorted state announcement\\nCOLUMNHEADER_SORTED=Sortiert\\n\\n#XACT: ARIA ColumnHeader sort ascending state announcement\\nCOLUMNHEADER_SORTED_ASCENDING=Aufsteigend\\n\\n#XACT: ARIA ColumnHeader sort descending state announcement\\nCOLUMNHEADER_SORTED_DESCENDING=Absteigend\\n\\n#XACT: ARIA keyboard announcement for the combo box arrow\\nCOMBOBOX_BUTTON=Pfeil nach unten\\n\\n#XACT: ARIA announcement for Combo Box available options\\nCOMBOBOX_AVAILABLE_OPTIONS=Verf\\\\u00FCgbare Optionen\\n\\n#XBUT: Button text for ok button in the combo box (mobile version)\\nCOMBOBOX_CLOSE_BUTTON=OK\\n\\n#XBUT: Default title text for picker in the combo box (mobile version)\\nCOMBOBOX_PICKER_TITLE=Ausw\\\\u00E4hlen\\n\\n#XBUT: Button text for cancel button in the select (mobile version)\\nSELECT_CANCEL_BUTTON=Abbrechen\\n\\n#XBLI: List text for no data lists\\nLIST_NO_DATA=Keine Daten\\n\\n#XACT: ARIA announcement for the controls which do not provide any accessibility info\\nCONTROL_EMPTY=Leer\\n\\n#XACT: ARIA announcement for the disabled controls\\nCONTROL_DISABLED=Deaktiviert\\n\\n#XACT: ARIA announcement for the read-only controls\\nCONTROL_READONLY=Schreibgesch\\\\u00FCtzt\\n\\n#XACT: ARIA announcement for the list which allows single selections\\nLIST_SELECTABLE=Enth\\\\u00E4lt ausw\\\\u00E4hlbare Elemente\\n\\n#XACT: ARIA announcement for the list which allows multiple selections\\nLIST_MULTISELECTABLE=Enth\\\\u00E4lt Elemente f\\\\u00FCr Mehrfachauswahl\\n\\n#XACT: ARIA announcement for the list which has deletable items\\nLIST_DELETABLE=Enth\\\\u00E4lt l\\\\u00F6schbare Elemente\\n\\n#XACT: ARIA announcement for the list which is grouped\\nLIST_GROUPED=Gruppiert\\n\\n#XACT: ARIA announcement for the list when all items are selected\\nLIST_ALL_SELECTED=Alle ausgew\\\\u00E4hlt\\n\\n#XACT: ARIA announcement for a required list (e.g. inside a form)\\nLIST_REQUIRED=Erforderlich\\n\\n#XACT: ARIA announcement for the selected list item\\nLIST_ITEM_SELECTED=Ausgew\\\\u00E4hlt\\n\\n#XACT: ARIA keyboard announcement for the unread state of the list items\\nLIST_ITEM_UNREAD=Ungelesen\\n\\n#XACT: ARIA announcement for the navigable list items\\nLIST_ITEM_NAVIGATION=Hat Details\\n\\n#XACT: ARIA announcement for the list item details with edit option\\nLIST_ITEM_DETAIL=Ist bearbeitbar\\n\\n#XACT: ARIA announcement for the active clickable list items\\nLIST_ITEM_ACTIVE=Ist aktiv\\n\\n#XACT: ARIA announcement for the group header list items\\nLIST_ITEM_GROUP_HEADER=Gruppenkopf\\n\\n#XACT: ARIA announcement for the position of the list items in an entire list\\nLIST_ITEM_POSITION={0} von {1}\\n\\n#XACT: ARIA announcement for the position of the list item\\nLIST_ITEM_INDEX=Element {0} \\n\\n#XACT: ARIA announcement for the counter property of the list item\\nLIST_ITEM_COUNTER=Z\\\\u00E4hler {0}\\n\\n#XACT: ARIA announcement for the information state of the list item\\nLIST_ITEM_STATE_INFORMATION=Information\\n\\n#XACT: ARIA announcement for the error state of the list item\\nLIST_ITEM_STATE_ERROR=Fehler\\n\\n#XACT: ARIA announcement for the warning state of the list item\\nLIST_ITEM_STATE_WARNING=Warnung\\n\\n#XACT: ARIA announcement for the success state of the list item\\nLIST_ITEM_STATE_SUCCESS=Erfolg\\n\\n#XTOL: tooltip for the delete icon of the list item\\nLIST_ITEM_DELETE=L\\\\u00F6schen\\n\\n#XTOL: tooltip for the edit icon of the list item\\nLIST_ITEM_EDIT=Bearbeiten\\n\\n#XBUT: Button text for back button on page\\nPAGE_NAVBUTTON_TEXT=Zur\\\\u00FCck\\n\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\nSWITCH_ON=Ein\\n\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\nSWITCH_OFF=Aus\\n\\n#XACT: ARIA keyboard announcement for the accept state in the Switch control\\nSWITCH_ARIA_ACCEPT=Annehmen\\n\\n#XACT: ARIA keyboard announcement for the reject state in the Switch control\\nSWITCH_ARIA_REJECT=Ablehnen\\n\\n#XBUT: Button text for cancel button in the action sheet\\nACTIONSHEET_CANCELBUTTON_TEXT=Abbrechen\\n\\n#XACT: ARIA announcement for index of a button\\nACTIONSHEET_BUTTON_INDEX={0} von {1}\\n\\n#XACT: ARIA announcement for Action Sheet available actions\\nACTIONSHEET_AVAILABLE_ACTIONS=Verf\\\\u00FCgbare Aktionen\\n\\n#XBUT: Button text for cancel button in the busy dialog\\nBUSYDIALOG_CANCELBUTTON_TEXT=Abbrechen\\n\\n#XBUT: Text for growing list - pull button to load more data\\nLOAD_MORE_DATA=Weitere\\n\\n#XBUT: Date Selection text for Date&Time Picker of MobiScroll\\nMOBISCROLL_SET=OK\\n\\n#XBUT: Cancel/Close button of MobiScroll Date&Time Picker\\nMOBISCROLL_CANCEL=Abbrechen\\n\\n#XBUT: MobiScroll Date&Time Picker Month Header\\nMOBISCROLL_MONTH=Monat\\n\\n#XBUT: MobiScroll Date&Time Picker Day Header\\nMOBISCROLL_DAY=Tag\\n\\n#XBUT: MobiScroll Date&Time Picker Year Header\\nMOBISCROLL_YEAR=Jahr\\n\\n#XBUT: MobiScroll Date&Time Picker Hours Header\\nMOBISCROLL_HOURS=Stunden\\n\\n#XBUT: MobiScroll Date&Time Picker Minutes Header\\nMOBISCROLL_MINUTES=Minuten\\n\\n#XBUT: MobiScroll Date&Time Picker Seconds Header\\nMOBISCROLL_SECONDS=Sekunden\\n\\n#XBUT: Show Now button of MobiScroll Date&Time Picker\\nMOBISCROLL_NOW=Jetzt\\n\\n#XBUT: The navigation button text in master area in SplitContainer\\nSPLITCONTAINER_NAVBUTTON_TEXT=Navigation\\n\\n#XTOL: Tooltip for navigation button\\nSPLITCONTAINER_NAVBUTTON_DEFAULT_TOOLTIP=Objektliste anzeigen\\n\\n#XTOL: Tooltip for navigation button\\nSPLITCONTAINER_NAVBUTTON_TOOLTIP={0} anzeigen\\n\\n#XBUT: MessageBox predefined text for OK action\\nMSGBOX_OK=OK\\n\\n#XBUT: MessageBox predefined text for CANCEL action\\nMSGBOX_CANCEL=Abbrechen\\n\\n#XBUT: MessageBox predefined text for YES action\\nMSGBOX_YES=Ja\\n\\n#XBUT: MessageBox predefined text for No action\\nMSGBOX_NO=Nein\\n\\n#XBUT: MessageBox predefined text for ABORT action\\nMSGBOX_ABORT=Abbrechen\\n\\n#XBUT: MessageBox predefined text for RETRY action\\nMSGBOX_RETRY=Wiederholen\\n\\n#XBUT: MessageBox predefined text for IGNORE action\\nMSGBOX_IGNORE=Ignorieren\\n\\n#XBUT: MessageBox predefined text for CLOSE action\\nMSGBOX_CLOSE=Schlie\\\\u00DFen\\n\\n#XBUT: MessageBox predefined text for DELETE action\\nMSGBOX_DELETE=L\\\\u00F6schen\\n\\n#XTIT: MessageBox predefined text for title of alert dialog\\nMSGBOX_TITLE_ALERT=Warnung\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_CONFIRM=Best\\\\u00E4tigung\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_ERROR=Fehler\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_INFO=Informationen\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_WARNING=Warnung\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_SUCCESS=Erfolg\\n\\n#XLNK: MessageBox textLink\\nMSGBOX_LINK_TITLE=Details einblenden\\n\\n#YINS,30: Pull down to refresh text in the hidden area of a scrolled area\\nPULL2REFRESH_PULLDOWN=Zum Aktualisieren ziehen\\n\\n#YINS,30: Release dragged list to start update request\\nPULL2REFRESH_RELEASE=Zum Aktualisieren loslassen\\n\\n#YMSG,25: Refresh request is in process, short text, displayed on all platforms\\nPULL2REFRESH_LOADING=Ladevorgang l\\\\u00E4uft...\\n\\n#YMSG,32: Refresh request is in process, longer text, displayed smaller and only on certain platforms\\nPULL2REFRESH_LOADING_LONG=Daten werden geladen\\n\\n#XBUT: Button to trigger refresh of the displayed data\\nPULL2REFRESH_REFRESH=Aktualisieren\\n\\n#XBUT: Text displayed on the logout button in the top right corner of the Shell\\nSHELL_LOGOUT=Abmelden\\n\\n#XBUT: Text for OK button in the personalization dialog\\nPERSODIALOG_OK=OK\\n\\n#XBUT: Text for Cancel button in the personalization dialog\\nPERSODIALOG_CANCEL=Abbrechen\\n\\n#XTOL: Tooltip for Reset Personalization toolbar button\\nPERSODIALOG_UNDO=Personalisierung zur\\\\u00FCcksetzen\\n\\n#XTOL: Tooltip for Perso Dialog's 'Move Up' button (displays an 'up' arrow)\\nPERSODIALOG_UP=Spalte nach oben verschieben\\n\\n#XTOL: Tooltip for Perso Dialog's 'Move Down' button (displays a 'down' arrow)\\nPERSODIALOG_DOWN=Spalte nach unten verschieben\\n\\n#XTIT: Title text of personalization dialog for columns\\nPERSODIALOG_COLUMNS_TITLE=Spalten\\n\\n#XBUT: Text of personalization dialog for 'Select All' checkbox\\nPERSODIALOG_SELECT_ALL=Alle\\n\\n#XTIT: Text of personalization dialog for its list to indicate no search hits\\nPERSODIALOG_NO_DATA=Keine Spalten gefunden\\n\\n#XTIT: Predefined text for the view settings dialog title\\nVIEWSETTINGS_TITLE=Anzeigen\\n\\n#XTIT: Predefined text for the view settings dialog title when in sort mode\\nVIEWSETTINGS_TITLE_SORT=Sortieren nach\\n\\n#XTIT: Predefined text for the view settings dialog title when in group mode\\nVIEWSETTINGS_TITLE_GROUP=Gruppieren nach\\n\\n#XTIT: Predefined text for the view settings dialog title when in filter mode\\nVIEWSETTINGS_TITLE_FILTER=Filtern nach\\n\\n#XTIT: Predefined text for the view settings dialog title when in filter detail mode (an item name is appended to this string)\\nVIEWSETTINGS_TITLE_FILTERBY=Filtern nach\\\\:\\n\\n#YMSG: Start text for the text representation of the filter state\\nVIEWSETTINGS_FILTERTEXT=Gefiltert nach\\\\:\\n\\n#XBUT: Button to confirm the view settings dialog\\nVIEWSETTINGS_ACCEPT=OK\\n\\n#XBUT: Button to cancel the view settings dialog\\nVIEWSETTINGS_CANCEL=Abbrechen\\n\\n#XBLI: List item text in the view settings dialog that represents a \\\"none of the above\\\" or \\\"none\\\" selection in a single selection list\\nVIEWSETTINGS_NONE_ITEM=Ohne\\n\\n#XBLI: List item text in the view settings for sorting items in ascending order\\nVIEWSETTINGS_ASCENDING_ITEM=Aufsteigend\\n\\n#XBLI: List item text in the view settings for sorting items in descending order\\nVIEWSETTINGS_DESCENDING_ITEM=Absteigend\\n\\n#XTOL: Tooltip for the clear filter button\\nVIEWSETTINGS_CLEAR_FILTER_TOOLTIP=Alle Filter zur\\\\u00FCcksetzen\\n\\n#XTIT: Predefined text for the view settings dialog aria label for the sort list\\nVIEWSETTINGS_SORT_DIRECTION=Sortierrichtung\\n\\n#XTIT: Predefined text for the view settings dialog aria label for the group list\\nVIEWSETTINGS_GROUP_DIRECTION=Gruppenrichtung\\n\\n#XLST: Label for the select all checkbox used to select all facet filter items\\nFACETFILTER_CHECKBOX_ALL=Alle\\n\\n#XLST: All Items in the list with the name of the list as a parameter: ex. Suppliers (All)\\nFACETFILTER_ALL_SELECTED={0} (Alle)\\n\\n#XFLD: Search field prompt\\nFACETFILTER_SEARCH=Suchen\\n\\n#XBUT: Either a single filter value or the number of selected values, displayed on facet filter button: ex. Suppliers (Dell) or Suppliers (6)\\nFACETFILTER_ITEM_SELECTION={0} ({1})\\n\\n#XACT: ARIA announcement for facet filter itself\\nFACETFILTER_ARIA_FACET_FILTER=Facettenfilter\\n\\n#XTIT: Light flow facet filter dialog and facet add dialog title\\nFACETFILTER_TITLE=Filter\\n\\n#XBUT: Button to confirm facet filter dialogs\\nFACETFILTER_ACCEPT=OK\\n\\n#XSEL: Infobar filter summary: ex. Filtered by Suppliers (Supplier1, Supplier2)\\nFACETFILTER_INFOBAR_FILTERED_BY=Gefiltert nach {0} ({1})\\n\\n#XSEL: Infobar filter summary when no filters selected\\nFACETFILTER_INFOBAR_NO_FILTERS=Kein Filter ausgew\\\\u00E4hlt\\n\\n#XSEL: Infobar filter add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\nFACETFILTER_INFOBAR_AND=und\\n\\n#XSEL: Infobar filter after add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\nFACETFILTER_INFOBAR_AFTER_AND={0} ({1})\\n\\n#XSEL: Alternate infobar filter summary\\nFACETFILTER_INFOBAR_FILTERS_APPLIED=Mehrere Filter aktiv\\n\\n#YMSG: Filter bar msg shown when there are more filters available that cannot be displayed because there is not enough room: ex. 2 More...\\nFACETFILTER_MORE_COUNT={0} weitere...\\n\\n#YMSG: Message displayed in filter dialog when there are many more filters available but not shown: ex. 76 more available\\nFACETFILTER_FILTERS_HUGE={0} weitere vorhanden\\n\\n#XLNK: Link to allow searching additional filter values from the server\\nFACETFILTER_SERVER_SEARCH=Auf Server weitersuchen\\n\\n#XBUT: Button to remove a filter from the filter bar\\nFACETFILTER_REMOVE_FILTER=Filter entfernen\\n\\n#XACT: ARIA announcement for the position of the list items in an entire list\\nFACETFILTERLIST_ARIA_POSITION={0} von {1}\\n\\n#YMSG: Message displayed near the list of selection items in the SelectDialg and TableSelectDialog controls. It will be filled with the number of selected items\\nTABLESELECTDIALOG_SELECTEDITEMS=Ausgew\\\\u00E4hlte Elemente\\\\: {0}\\n\\n#YMSG: Default placeholder for the input field of a feed\\nFEEDINPUT_PLACEHOLDER=Hier etwas posten\\n\\n#XTOL: Tooltip for submit button of a feed input\\nFEEDINPUT_SUBMIT=Abschicken\\n\\n#XBUT: A link that can be clicked to display more/all items\\nINPUT_SUGGESTIONS_SHOW_ALL=Alle Elemente anzeigen\\n\\n#XACT: ARIA announcement for the Input suggestion result if one hit\\nINPUT_SUGGESTIONS_ONE_HIT=1 Ergebnis verf\\\\u00FCgbar\\n\\n#XACT: ARIA announcement for the Input suggestion result if more than one hit ({0} is the number of hits)\\nINPUT_SUGGESTIONS_MORE_HITS={0} Ergebnisse sind verf\\\\u00FCgbar\\n\\n#XACT: ARIA announcement for the Input suggestion result if no hit\\nINPUT_SUGGESTIONS_NO_HIT=Keine Ergebnisse\\n\\n#XACT: ARIA announcement for the value help\\nINPUT_VALUEHELP=Wertehilfe verf\\\\u00FCgbar\\n\\n#XACT: ARIA announcement disabled input (e.g. for value help only)\\nINPUT_DISABLED=Texteingabe deaktiviert\\n\\n#XACT: ARIA announcement for suggestions popup\\nINPUT_AVALIABLE_VALUES=Verf\\\\u00FCgbare Werte\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Error\\\"\\nINPUTBASE_VALUE_STATE_ERROR=Wertzustand Fehler\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Warning\\\"\\nINPUTBASE_VALUE_STATE_WARNING=Wertzustand Warnung\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Success\\\"\\nINPUTBASE_VALUE_STATE_SUCCESS=Wertzustand Erfolg\\n\\n#XBUT,10: Tooltip for button to remove facet list\\nFACETFILTER_REMOVE=Facette entfernen\\n\\n#XBUT: ARIA announcement for removable facet\\nFACETFILTER_ARIA_REMOVE=Entfernbare Facette\\\\: entfernen mit L\\\\u00D6SCHEN\\n\\n#XBUT: Tooltip for button to add facet filter list\\nFACETFILTER_ADDFACET=Filter hinzuf\\\\u00FCgen\\n\\n#XBUT: Tooltip for button to reset filter\\nFACETFILTER_RESET=Filter zur\\\\u00FCcksetzen\\n\\n#XBUT: Tooltip for left scrolling arrow\\nFACETFILTER_PREVIOUS=Zur\\\\u00FCck\\n\\n#XBUT: Tooltip for right scrolling arrow\\nFACETFILTER_NEXT=Weiter\\n\\n#XLNK: Link to allow the user to see complete feed post\\nTEXT_SHOW_MORE=MEHR\\n\\n#XLNK: This link allows the user to hide the complete feed post and display only the first lines\\nTEXT_SHOW_LESS=WENIGER\\n\\n#XFLD: Label text for number of attachments in the UploadCollection control\\nUPLOADCOLLECTION_ATTACHMENTS=Anlagen ({0})\\n\\n#XMSG: Message text for deleting a file in the UploadCollection control\\nUPLOADCOLLECTION_DELETE_TEXT=M\\\\u00F6chten Sie ''{0}'' wirklich l\\\\u00F6schen?\\n\\n#XMSG: Message text for deleting a file in the UploadCollection control without filename\\nUPLOADCOLLECTION_DELETE_WITHOUT_FILENAME_TEXT=M\\\\u00F6chten Sie die Datei wirklich l\\\\u00F6schen?\\n\\n#XMSG: Message title for deleting a file in the UploadCollection control\\nUPLOADCOLLECTION_DELETE_TITLE=Datei l\\\\u00F6schen\\n\\n#XMSG: Message text for a popup to terminate a file uploading in the UploadCollection control\\nUPLOADCOLLECTION_TERMINATE_TEXT=Das Hochladen der folgenden Dateien wird beendet\\\\:\\n\\n#XMSG: Message title for a popup to terminate a file uploading in the UploadCollection control\\nUPLOADCOLLECTION_TERMINATE_TITLE=Upload abbrechen\\n\\n#XMSG: Message text file name already exists in the UploadCollection control\\nUPLOADCOLLECTION_EXISTS=Dateiname bereits vorhanden.\\n\\n#XMSG: Message text informing that a file name must be entered during edit file name in the UploadCollection control\\nUPLOADCOLLECTION_TYPE_FILENAME=Geben Sie einen Dateinamen ein.\\n\\n#XMSG: Message text for uploading status to the UploadCollection control\\nUPLOADCOLLECTION_UPLOADING=Hochladen\\\\: {0} %\\n\\n#XMSG: Message title for the Upload Failed message box\\nUPLOADCOLLECTION_FAILED=Hochladen fehlgeschlagen\\n\\n#XMSG: Message text informing that it is not allowed to upload the selected file(s) (MIME type or file extension not allowed)\\nUPLOADCOLLECTION_MISMATCH=Dateityp nicht erlaubt.\\n\\n#XMSG: Message text informing that upload is completed\\nUPLOADCOLLECTION_UPLOAD_COMPLETED=Upload abgeschlossen. Bitte warten Sie, bis der Server die Verarbeitung abgeschlossen hat.\\n\\n#XMSG: Message text informing that only one file can be dropped if uploading multiple files is not allowed\\nUPLOADCOLLECTION_MULTIPLE_FALSE=Nur eine Datei kann hierher gezogen werden.\\n\\n#XBUT: Button text for cancel button in the upload collection\\nUPLOADCOLLECTION_CANCELBUTTON_TEXT=Abbrechen\\n\\n#XBUT: Text for OK button in the upload collection in case of Delete Dialog\\nUPLOADCOLLECTION_OKBUTTON_TEXT=OK\\n\\n#XBUT: Text for Rename button in the upload collection in case of renaming a file\\nUPLOADCOLLECTION_RENAMEBUTTON_TEXT=Umbenennen\\n\\n#XBUT: Text for DELETE button in the upload collection\\nUPLOADCOLLECTION_DELETEBUTTON_TEXT=L\\\\u00F6schen\\n\\n#XBUT: Text for TERMINATE button in the upload collection\\nUPLOADCOLLECTION_TERMINATEBUTTON_TEXT=Beenden\\n\\n#XBUT: Text for RENAME button in the upload collection\\nUPLOADCOLLECTION_EDITBUTTON_TEXT=Umbenennen\\n\\n#XBUT: Text for Add button in the upload collection\\nUPLOADCOLLECTION_ADD=Hinzuf\\\\u00FCgen\\n\\n#XBUT: Text for Upload button in the upload collection\\nUPLOADCOLLECTION_UPLOAD=Hochladen\\n\\n#XMSG: Message text for no data text in the upload collection\\nUPLOADCOLLECTION_NO_DATA_TEXT=Keine Dateien gefunden.\\n\\n#XMSG: Message text for no data description in the upload collection\\nUPLOADCOLLECTION_NO_DATA_DESCRIPTION=Dateien f\\\\u00FCr Upload hierher ziehen oder Taste \\\"+\\\" verwenden.\\n\\n#XMSG: Message text indicating where to drag\\nUPLOADCOLLECTION_DRAG_FILE_INDICATOR=Dateien hierher ziehen\\n\\n#XMSG: Message text indicating where to drop file and upload\\nUPLOADCOLLECTION_DROP_FILE_INDICATOR=Dateien f\\\\u00FCr Upload hierher ziehen\\n\\n#XTIT: Predefined text for title in the personalization dialog - Settings for the view ('view' here is a noun).\\nP13NDIALOG_VIEW_SETTINGS=Anzeigeeinstellungen\\n#XTIT: dialog title if the dialog contains only filter panel\\nP13NDIALOG_TITLE_FILTER=Filter definieren\\n#XTIT: dialog title if the dialog contains only sort panel\\nP13NDIALOG_TITLE_SORT=Sortierung definieren\\n#XTIT: dialog title if the dialog contains only group panel\\nP13NDIALOG_TITLE_GROUP=Gruppen definieren\\n#XTIT: dialog title if the dialog contains only columns panel\\nP13NDIALOG_TITLE_COLUMNS=Spalteneigenschaften definieren\\n#XTIT: dialog title if the dialog contains only panel for dimensions and measures\\nP13NDIALOG_TITLE_DIMEASURE=Diagrammeigenschaften definieren\\n#XBUT: Text for OK button in the personalization dialog\\nP13NDIALOG_OK=OK\\n#XBUT: Text for Cancel button in the personalization dialog\\nP13NDIALOG_CANCEL=Abbrechen\\n#XBUT: Text for Reset button in the personalization dialog\\nP13NDIALOG_RESET=Zur\\\\u00FCcksetzen\\n#XTIT: Text for Fix button in ValidationDialog\\nP13NDIALOG_VALIDATION_FIX=Beheben\\n#XTIT: personalization dialog ValidationDialog predefined title for warning\\nP13NDIALOG_VALIDATION_TITLE=Warnung\\n#XTIT: personalization dialog ValidationDialog predefined title for error\\nP13NDIALOG_VALIDATION_TITLE_ERROR=Fehler\\n#XTIT: personalization dialog ValidationDialog predefined message\\nP13NDIALOG_VALIDATION_MESSAGE=Fehlende oder falsche Filterwerte\\n#XTIT: personalization dialog ValidationDialog predefined message for columns panel\\nP13NDIALOG_VISIBLE_ITEMS_THRESHOLD_MESSAGE=Die Auswahl vieler Spalten kann sich negativ auf die Performance auswirken\\n#XTIT: personalization dialog ValidationDialog predefined message for P13nDimMeasure\\nP13NDIALOG_VALIDATION_CHARTTYPE=Die ausgew\\\\u00E4hlten Dimensionen und Kennzahlen k\\\\u00F6nnen nicht mit diesem Diagrammtyp verwendet werden.\\n#XTIT: personalization dialog ValidationDialog predefined question an the end\\nP13NDIALOG_VALIDATION_MESSAGE_QUESTION=M\\\\u00F6chten Sie Ihre Eintr\\\\u00E4ge korrigieren?\\n\\n#XTIT: on some personalization panels \\\"(none)\\\" as 'column key' means that no criteria was defined\\nP13NDIALOG_SELECTION_NONE=(keine)\\n\\n#XTIT: Filterpanel predefined title for Include filter\\nFILTERPANEL_INCLUDES=Einschlie\\\\u00DFen\\n#XTIT: Filterpanel predefined title for Exclude filter\\nFILTERPANEL_EXCLUDES=Ausschlie\\\\u00DFen\\n#XTIT: Text for title 'Filter' in the personalization dialog\\nFILTERPANEL_TITLE=Filter\\n\\n#XTIT: Text for title 'Sort' in the personalization dialog\\nSORTPANEL_TITLE=Sortierung\\n\\n#XTIT: Text for title 'Group' in the personalization dialog\\nGROUPPANEL_TITLE=Gruppe\\n\\n#XFLD: Label text for combobox control\\nCONDITIONPANEL_FIELD_LABEL=Feld\\\\:\\n#XFLD: Label text for select control\\nCONDITIONPANEL_OPERATOR_LABEL=Operator\\\\:\\n\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONBT=zwischen\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONEQ=gleich\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONContains=enth\\\\u00E4lt\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGT=gr\\\\u00F6\\\\u00DFer als\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGE=gr\\\\u00F6\\\\u00DFer oder gleich\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONLT=kleiner als\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONLE=kleiner oder gleich\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONInitial=initial\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONStartsWith=beginnt mit\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONEndsWith=endet auf\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONAscending=Aufsteigend\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONDescending=Absteigend\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGroupAscending=Aufsteigend\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGroupDescending=Absteigend\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONTotal=Summe\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONAverage=Durchschnitt\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONMinimum=Minimum\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONMaximum=Maximum\\n#XTIT: ConditionPanel Empty\\nCONDITIONPANEL_OPTIONEmpty=leer\\n#XTIT: ConditionPanel NotEmpty\\nCONDITIONPANEL_OPTIONNotEmpty=nicht leer\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_BT=zwischen\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_EQ=gleich\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_GT=nach dem\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_GE=am oder nach dem\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_LT=vor dem\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_LE=vor dem oder am\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_BT=zwischen\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_EQ=gleich\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_GT=gr\\\\u00F6\\\\u00DFer als\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_GE=gr\\\\u00F6\\\\u00DFer oder gleich\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_LT=kleiner als\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_LE=kleiner oder gleich\\n\\n\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELFROM=von\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELTO=bis\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELVALUE=Wert\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELGROUPING=Feld als Spalte anzeigen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_TOOLTIP=Neue Zeile hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_TOOLTIP=Zeile entfernen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_FILTER_TOOLTIP=Filter hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_FILTER_TOOLTIP=Filter entfernen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_SORT_TOOLTIP=Sortierkriterium hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_SORT_TOOLTIP=Sortierkriterium entfernen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_GROUP_TOOLTIP=Gruppierungskriterium hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_GROUP_TOOLTIP=Gruppierungskriterium entfernen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_CONDITION_TOOLTIP=Bedingung hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_CONDITION_TOOLTIP=Bedingung entfernen\\n#XBUT: ConditionPanel predefined text for remove all button\\nCONDITIONPANEL_REMOVE_ALL=Alle entfernen\\n#XTIT: ConditionPanel predefined field warning hint\\nCONDITIONPANEL_FIELDMESSAGE=G\\\\u00FCltigen Wert eingeben\\n\\n#XTIT: Text for title 'Chart' in the personalization dialog\\nCHARTPANEL_TITLE=Diagramm\\n\\n#XTIT: Text for title 'Columns' in the personalization dialog\\nCOLUMSPANEL_TITLE=Spalten\\n#XBUT: ColumnsPanel Show All button\\nCOLUMNSPANEL_SHOW_ALL=Alles anzeigen\\n#XBUT: ColumnsPanel Show Selected button\\nCOLUMNSPANEL_SHOW_SELECTED=Auswahl anzeigen\\n#XLST: ColumnsPanel Select All label\\nCOLUMNSPANEL_SELECT_ALL=Alle ausw\\\\u00E4hlen\\n#XLST: ColumnsPanel Select All label\\nCOLUMNSPANEL_SELECT_ALL_WITH_COUNTER=Alle ausw\\\\u00E4hlen ({0}/{1})\\n#XTOL: Tooltip for MOVE: ToStart button\\nCOLUMNSPANEL_MOVE_TO_TOP=Nach ganz oben\\n#XTOL: Tooltip for MOVE: Up button\\nCOLUMNSPANEL_MOVE_UP=Nach oben\\n#XTOL: Tooltip for MOVE: Down button\\nCOLUMNSPANEL_MOVE_DOWN=Nach unten\\n#XTOL: Tooltip for MOVE: ToEnd button\\nCOLUMNSPANEL_MOVE_TO_BOTTOM=Nach ganz unten\\n\\n#XLST: ColumnsPanel Chart Type caption\\nCOLUMNSPANEL_COLUMN_TYPE=Typ\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_TYPE_DIMENSION=Dimension\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_TYPE_MEASURE=Kennzahl\\n#XLST: ColumnsPanel Chart Role caption\\nCOLUMNSPANEL_COLUMN_ROLE=Rolle\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_CATEGORY=Kategorie\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_SERIES=Serie\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_AXIS1=Achse 1\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_AXIS2=Achse 2\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_CHARTTYPE=Diagrammtyp\\n\\n\\n#XFLD: Subtle link description label\\nLINK_SUBTLE=Dezent\\n#XFLD: Emphasized link description label\\nLINK_EMPHASIZED=Hervorgehoben\\n\\n#XACT: ARIA announcement for the search field F5 keyboard shortcut\\nSEARCHFIELD_ARIA_F5=Aktualisieren mit F5\\n\\n#XACT: ARIA announcement for the F4 value help keyboard shortcut\\nVALUEHELP_ARIA_F4=Hilfedialog mit F4-Taste \\\\u00F6ffnen\\n\\n#XTXT: Bar's ARIA description when it is a footer\\nBAR_ARIA_DESCRIPTION_FOOTER=Fu\\\\u00DFbereich\\n#XTXT: Bar's ARIA description when it is a header\\nBAR_ARIA_DESCRIPTION_HEADER=Kopfbereich\\n#XTXT: Bar's ARIA description when it is a subheader\\nBAR_ARIA_DESCRIPTION_SUBHEADER=Zwischen\\\\u00FCberschrift\\n\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Error\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_ERROR=Wertzustand Fehler\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Warning\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_WARNING=Wertzustand Warnung\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Success\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_SUCCESS=Wertzustand Erfolg\\n\\n#XACT: ARIA text for tab separator icons\\nICONTABBAR_NEXTSTEP=N\\\\u00E4chster Schritt\\n#XACT: ARIA text for positive icon color\\nICONTABBAR_ICONCOLOR_POSITIVE=Positiv\\n#XACT: ARIA text for critical icon color\\nICONTABBAR_ICONCOLOR_CRITICAL=Kritisch\\n#XACT: ARIA text for negative icon color\\nICONTABBAR_ICONCOLOR_NEGATIVE=Negativ\\n\\n#XACT: ARIA text of current selected value vs. max. possible value of the RatingIndicator control\\nRATING_VALUEARIATEXT={0} von {1}\\n#XACT: ARIA description of the RatingIndicator control\\nRATING_ARIA_NAME=Bewertung\\n\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s favorite property\\nARIA_FAVORITE_MARK_VALUE=Favorit\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s flag property\\nARIA_FLAG_MARK_VALUE=Kennzeichen\\n\\n#XACT: ARIA description for ObjectHeader icon infront of the title when it's active\\nOH_ARIA_ICON=Symbol\\n\\n#XACT: ARIA description for Shell logo\\nSHELL_ARIA_LOGO=Logo\\n\\n#XTXT: MessagePage text\\nMESSAGE_PAGE_TEXT=Keine passenden Elemente gefunden.\\n#XTXT: MessagePage description\\nMESSAGE_PAGE_DESCRIPTION=\\\\u00DCberpr\\\\u00FCfen Sie die Filtereinstellungen\\n\\n#XFLD: Token number indicator which is used to show more tokens in MultiInput when the MultiInput it is in multi-line display mode\\nMULTIINPUT_SHOW_MORE_TOKENS={0} Mehr\\n#XACT: ARIA announcement for multiinput containing label\\nMULTIINPUT_ARIA_CONTAIN_TOKEN=Enth\\\\u00E4lt gegebenenfalls Tokens\\n#XACT: ARIA announcement for multiinput containing one token\\nMULTIINPUT_ARIA_CONTAIN_ONE_TOKEN=Enth\\\\u00E4lt 1 Token\\n#XACT: ARIA announcement for multiinput containing several tokens\\nMULTIINPUT_ARIA_CONTAIN_SEVERAL_TOKENS=Enth\\\\u00E4lt {0} Tokens\\n\\n#XACT: ARIA announcement for tokenizer label\\nTOKENIZER_ARIA_LABEL=Tokenizer\\n\\n#XACT: ARIA announcement for token label\\nTOKEN_ARIA_LABEL=Token\\n#XACT: ARIA announcement for token deletable\\nTOKEN_ARIA_DELETABLE=L\\\\u00F6schbar\\n\\n#XACT: ARIA announcement for the ObjectListItem unread mark\\nOBJECTLISTITEM_ARIA_UNREAD_VALUE=Ungelesen\\n#XACT: ARIA announcement for the ObjectListItem locked mark\\nOBJECTLISTITEM_ARIA_LOCKED_MARK_VALUE=Gesperrt\\n\\n#XBUT: MessagePopover predefined text for CLOSE action\\nMESSAGEPOPOVER_CLOSE=Schlie\\\\u00DFen\\n#XBUT: MessagePopover predefined text for All Button\\nMESSAGEPOPOVER_ALL=Alle\\n#XACT: ARIA announcement for the MessagePopover back buttons tooltip\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON_TOOLTIP=Zur\\\\u00FCck zu Nachrichten\\n#XACT: ARIA announcement for the MessagePopover back buttons\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON=Nachrichtendetails\\n#XACT: ARIA announcement for the MessagePopover heading\\nMESSAGEPOPOVER_ARIA_HEADING=Nachrichten\\n\\n#XACT: ARIA announcement for the accept button\\nBUTTON_ARIA_TYPE_ACCEPT=Positive Aktion\\n#XACT: ARIA announcement for the reject button\\nBUTTON_ARIA_TYPE_REJECT=Negative Aktion\\n#XACT: ARIA announcement for the emphasized button\\nBUTTON_ARIA_TYPE_EMPHASIZED=Hervorgehoben\\n\\n#XACT: ARIA text for position markers\\nCAROUSEL_POSITION=Element {0} von {1} wird angezeigt\\n\\n#XTXT: Text between numbers in the numeric page indicator\\nCAROUSEL_PAGE_INDICATOR_TEXT={0} von {1}\\n\\n#XTXT: colon separator\\nCOLON=\\\\:\\n\\n#XBUT: sap.m.semantic.SemanticControl Edit button text\\nSEMANTIC_CONTROL_EDIT=Bearbeiten\\n#XBUT: sap.m.semantic.SemanticControl Save button text\\nSEMANTIC_CONTROL_SAVE=Sichern\\n#XBUT: sap.m.semantic.SemanticControl Delete button text\\nSEMANTIC_CONTROL_DELETE=L\\\\u00F6schen\\n#XBUT: sap.m.semantic.SemanticControl Cancel button text\\nSEMANTIC_CONTROL_CANCEL=Abbrechen\\n#XBUT: sap.m.semantic.SemanticControl Approve button text\\nSEMANTIC_CONTROL_APPROVE=Genehmigen\\n#XBUT: sap.m.semantic.SemanticControl Reject button text\\nSEMANTIC_CONTROL_REJECT=Ablehnen\\n#XBUT: sap.m.semantic.SemanticControl Forward button text\\nSEMANTIC_CONTROL_FORWARD=Weiterleiten\\n#XBUT: sap.m.semantic.SemanticControl Open in button text\\nSEMANTIC_CONTROL_OPEN_IN=\\\\u00D6ffnen in ...\\n#XBUT: sap.m.semantic.SemanticControl Sort button text\\nSEMANTIC_CONTROL_SORT=Sortierung\\n#XBUT: sap.m.semantic.SemanticControl Filter button text\\nSEMANTIC_CONTROL_FILTER=Filter\\n#XBUT: sap.m.semantic.SemanticControl Group button text\\nSEMANTIC_CONTROL_GROUP=Gruppierung\\n#XBUT: sap.m.semantic.SemanticControl Flag button text\\nSEMANTIC_CONTROL_FLAG=Kennzeichen\\n#XBUT: sap.m.semantic.SemanticControl Favorite button text\\nSEMANTIC_CONTROL_FAVORITE=Favorit\\n#XBUT: sap.m.semantic.SemanticControl Add button text\\nSEMANTIC_CONTROL_ADD=Hinzuf\\\\u00FCgen\\n#XBUT: sap.m.semantic.SemanticControl Send Email button text\\nSEMANTIC_CONTROL_SEND_EMAIL=E-Mail senden\\n#XBUT: sap.m.semantic.SemanticControl Discuss in SAP Jam button text\\nSEMANTIC_CONTROL_DISCUSS_IN_JAM=In SAP Jam diskutieren\\n#XBUT: sap.m.semantic.SemanticControl Share in SAP Jam button text\\nSEMANTIC_CONTROL_SHARE_IN_JAM=\\\\u00DCber SAP Jam teilen\\n#XBUT: sap.m.semantic.SemanticControl Send Message button text\\nSEMANTIC_CONTROL_SEND_MESSAGE=Nachricht senden\\n#XBUT: sap.m.semantic.SemanticControl Save as Tile button text\\nSEMANTIC_CONTROL_SAVE_AS_TILE=Als Kachel sichern\\n#XBUT: sap.m.semantic.SemanticControl Print button text\\nSEMANTIC_CONTROL_PRINT=Drucken\\n#XBUT: sap.m.semantic.SemanticControl Multi select button text\\nSEMANTIC_CONTROL_MULTI_SELECT=Mehrfachauswahl\\n#XBUT: sap.m.semantic.SemanticControl Multi select cancel button text\\nSEMANTIC_CONTROL_MULTI_SELECT_CANCEL=Mehrfachauswahl aufheben\\n#XBUT: sap.m.semantic.SemanticControl Message indicator button text\\nSEMANTIC_CONTROL_MESSAGES_INDICATOR=Nachrichten\\n#XBUT: sap.m.semantic.SemanticControl \\\"Action\\\" Share button text\\nSEMANTIC_CONTROL_ACTION_SHARE=Teilen\\n#XTXT: sap.m.semantic.DetailPage title\\nSEMANTIC_DETAIL_PAGE_TITLE=Details\\n#XTXT: sap.m.semantic.MasterPage title\\nSEMANTIC_MASTER_PAGE_TITLE=Master\\n\\n#XFLD: sap.m.DraftIndicator Saving Draft indicator text\\nDRAFT_INDICATOR_SAVING_DRAFT=Entwurf wird gesichert...\\n#XFLD: sap.m.DraftIndicator Draft saved indicator text\\nDRAFT_INDICATOR_DRAFT_SAVED=Entwurf wurde gesichert\\n\\n#XBUT: Wizard predefined text for Cancel button\\nWIZARD_CANCEL=Abbrechen\\n#XBUT: Wizard predefined text for Next button\\nWIZARD_NEXT=Weiter\\n#XBUT: Wizard predefined text for Finish button\\nWIZARD_FINISH=\\\\u00DCberpr\\\\u00FCfen\\n\\n#XACT: Aria information for the Date Picker\\nDATEPICKER_DATE_TYPE=Datum\\n\\n#XACT: WizardProgressNavigator selected step\\nWIZARD_PROG_NAV_SELECTED=Ausgew\\\\u00E4hlt\\n#XACT: WizardProgressNavigator processed step\\nWIZARD_PROG_NAV_PROCESSED=Verarbeitet\\n#XACT: WizardProgressNavigator predefined text for step\\nWIZARD_PROG_NAV_STEP_TITLE=Schritt\\n#XBUT: Wizard predefined text for Step button\\nWIZARD_STEP=Schritt\\n#XACT: Aria label for the wizard\\nWIZARD_LABEL=Assistent\\n\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectHeader, showing that the item is flagged\\nTOOLTIP_OH_FLAG_MARK_VALUE=Markiert\\n\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectHeader, showing that the item is favorite\\nTOOLTIP_OH_FAVORITE_MARK_VALUE=Favorit\\n\\n#XTOL: Tooltip for the select title arrow inside sap.m.ObjectHeader\\nOH_SELECT_ARROW_TOOLTIP=Verwandte Optionen\\n\\n#XTXT: Text value for marker type Flag\\nOM_FLAG=Markiert\\n\\n#XTXT: Text value for marker type Favorite\\nOM_FAVORITE=Favorit\\n\\n#XTXT: Text value for marker type Draft\\nOM_DRAFT=Entwurf\\n\\n#XTXT: Text value for marker type Locked\\nOM_LOCKED=Gesperrt\\n\\n#XTXT: Text value for marker type LockedBy that shows who has locked the object, e.g. Locked by {User name}\\nOM_LOCKED_BY=Gesperrt von {0}\\n\\n#XTXT: Text value for marker type Locked by another user\\nOM_LOCKED_BY_ANOTHER_USER=Gesperrt durch anderen Benutzer\\n\\n#XTXT: Text value for marker type Unsaved Changes\\nOM_UNSAVED=Nicht gesicherte \\\\u00C4nderungen\\n\\n#XTXT: Text value for marker type UnsavedBy Changes that shows who has unsaved changes, e.g. Unsaved Changes by {User name}\\nOM_UNSAVED_BY=Nicht gesicherte \\\\u00C4nderungen von {0}\\n\\n#XTXT: Text value for marker type Unsaved by another user\\nOM_UNSAVED_BY_ANOTHER_USER=Nicht gesicherte \\\\u00C4nderungen eines anderen Benutzers\\n\\n#XTOL: Tooltip for \\\"Send SMS\\\" in QuickView\\nQUICKVIEW_SEND_SMS=SMS schicken\\n\\n#XTXT: Text for character left\\nTEXTAREA_CHARACTER_LEFT={0} Zeichen \\\\u00FCbrig\\n\\n#XTXT: Text for characters left\\nTEXTAREA_CHARACTERS_LEFT={0} Zeichen \\\\u00FCbrig\\n\\n#XTXT: Text for character exceeded\\nTEXTAREA_CHARACTER_EXCEEDED={0} Zeichen \\\\u00FCberschritten\\n\\n#XTXT: Text for characters exceeded\\nTEXTAREA_CHARACTERS_EXCEEDED={0} Zeichen \\\\u00FCberschritten\\n\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectListItem, showing that the item is flagged\\nTOOLTIP_OLI_FLAG_MARK_VALUE=Markiert\\n\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectListItem, showing that the item is favorite\\nTOOLTIP_OLI_FAVORITE_MARK_VALUE=Favorit\\n\\n#XTOL: Tooltip for the locked icon inside sap.m.ObjectListItem, showing that the item is locked\\nTOOLTIP_OLI_LOCK_MARK_VALUE=Gesperrt\\n\\n#XBUT: Time Selection button text of Time Picker control\\nTIMEPICKER_SET=OK\\n\\n#XBUT: Cancel/Close button text of Time Picker control\\nTIMEPICKER_CANCEL=Abbrech.\\n\\n#YACT: ARIA tag of Time Picker control\\nTIMEPICKER_SCREENREADER_TAG=Uhrzeitauswahl\\n\\n#YACT: ARIA tag of Time Picker control with format as placeholder\\nTIMEPICKER_WITH_PH_SCREENREADER_TAG=Uhrzeitauswahl im Format {0}\\n\\n#XFLD: Label of the hours value slider inside a Time Picker control\\nTIMEPICKER_LBL_HOURS=Stunden\\n\\n#XFLD: Label of the minutes value slider inside a Time Picker control\\nTIMEPICKER_LBL_MINUTES=Minuten\\n\\n#XFLD: Label of the seconds value slider inside a Time Picker control\\nTIMEPICKER_LBL_SECONDS=Sekunden\\n\\n#XFLD: Label of the am/pm value slider inside a Time Picker control\\nTIMEPICKER_LBL_AMPM=AM/PM\\n\\n#XACT: ARIA label for Breadcrumbs\\nBREADCRUMB_LABEL=Navigationspfad\\n\\n#XTOL: Tooltip text for Breadcrumbs select\\nBREADCRUMB_SELECT_TOOLTIP=Mehr\\n\\n#XACT: Unread status of Notification List Item\\nNOTIFICATION_LIST_ITEM_UNREAD=Benachrichtigung ungelesen.\\n\\n#XACT: Read status of Notification List Item\\nNOTIFICATION_LIST_ITEM_READ=Benachrichtigung gelesen.\\n\\n#XACT: ARIA text for datetime and priority\\nNOTIFICATION_LIST_ITEM_DATETIME_PRIORITY=F\\\\u00E4llig in {0}, Priorit\\\\u00E4t {1}.\\n\\n#XFLD: text that will be displayed when tile failed to load\\nINFOTILE_CANNOT_LOAD_TILE=Kachel kann nicht geladen werden\\n\\n#XFLD: text that will be read while tile is loading\\nINFOTILE_LOADING=Ladevorgang l\\\\u00E4uft\\n\\n#XTXT: text for critical color\\nSEMANTIC_COLOR_CRITICAL=Warnung\\n\\n#XTXT: text for good color\\nSEMANTIC_COLOR_GOOD=Gut\\n\\n#XTXT: text for neutral color\\nSEMANTIC_COLOR_NEUTRAL=Neutral\\n\\n#XTXT: text for error color\\nSEMANTIC_COLOR_ERROR=Kritisch\\n\\n#XTOL:\\nNUMERICCONTENT_DEVIATION_UP=Aufsteigend\\n\\n#XTOL:\\nNUMERICCONTENT_DEVIATION_DOWN=Absteigend\\n\\n#YACT: ARIA tag of MaskInput control\\nMASKINPUT_SCREENREADER_TAG=Maskiert\\n\\n#YACT: ARIA description of MaskInput control\\nMASKINPUT_SCREENREADER_DESCRIPTION=Das fokussierte, maskierte Eingabefeld wird formatiert und vorgef\\\\u00FCllt. Das Symbol {0} ist f\\\\u00FCr einen Platzhalter reserviert. Der in dieses Feld einzugebende Wert hat das Format {1}, wobei jedes Symbol einer Regel entspricht. Bei einer Regel handelt es sich um eine Folge von Zeichen, die f\\\\u00FCr ihre konkrete Position erlaubt sind. Symbole, die keine Regel haben, sind unver\\\\u00E4nderbare Zeichen, und Teil der Werteformatierung.\\n\\n#XACT: ARIA scroll back button for tabstrip\\nTABSTRIP_SCROLL_BACK=Bildlauf zur\\\\u00FCck\\n\\n#XACT: ARIA scroll forward button for tabstrip\\nTABSTRIP_SCROLL_FORWARD=Bildlauf vorw\\\\u00E4rts\\n\\n#XACT: ARIA static text for modified tabstrip item\\nTABSTRIP_ITEM_MODIFIED=Nicht gesichert\\n\\n#XACT: ARIA static text for not-modified tabstrip item\\nTABSTRIP_ITEM_NOT_MODIFIED=Gesichert\\n\\n#XACT: ARIA static text for closable tabstrip item\\nTABSTRIP_ITEM_CLOSABLE=Schlie\\\\u00DFbar\\n#XFLD: Footer text for TileContent\\nTILECONTENT_FOOTER_TEXT={0}, {1}\\n\\n#XBUT: Button text for collapsing the Notification List Group\\nNOTIFICATION_LIST_GROUP_COLLAPSE=Gruppe komprimieren\\n\\n#XBUT: Button text for expanding the Notification List Group\\nNOTIFICATION_LIST_GROUP_EXPAND=Gruppe expandieren\\n\\n#XACT: ARIA add new tab button for tabstrip\\nTABCONTAINER_ADD_NEW_TAB=Neue Registerkarte hinzuf\\\\u00FCgen\\n\\n#XACT: ARIA dropdown button for tabstrip\\nTABSTRIP_OPENED_TABS=Offene Registerkarten\\n\\n#XBUT: Button text for expanding a Notification List Item\\nNOTIFICATION_LIST_ITEM_SHOW_MORE=Mehr anzeigen\\n\\n#XBUT: Button text for collapsing a Notification List Item\\nNOTIFICATION_LIST_ITEM_SHOW_LESS=Weniger anzeigen\\n\\n#XBUT: Date button of DateTimePicker on small screens\\nDATETIMEPICKER_DATE=Datum\\n\\n#XBUT: Time button of DateTimePicker on small screens\\nDATETIMEPICKER_TIME=Zeit\\n\\n#XACT: Aria information for the Date Time Picker\\nDATETIMEPICKER_TYPE=Datum und Uhrzeit\\n\\n#XACT: PlanningCalendar accessibility description\\nPLANNINGCALENDAR=Planungskalender\\n\\n#XACT: PlanningCalendar view selector accessibility description\\nPLANNINGCALENDAR_VIEW=Kalender anzeigen nach\\n\\n#XFLD: Name of the \\\"Hours\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_HOURS=Stunden\\n\\n#XFLD: Name of the \\\"Days\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_DAYS=Tage\\n\\n#XFLD: Name of the \\\"Months\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_MONTHS=Monate\\n\\n#XFLD: Name of the \\\"Week\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_WEEK=1 Woche\\n\\n#XFLD: Name of the \\\"OneMonth\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_ONE_MONTH=1 Monat\\n\\n#XBUT: Today button of PlanningCalendar control\\nPLANNINGCALENDAR_TODAY=Heute\\n\\n#XFLD: Text for all day event\\nPLANNINGCALENDAR_ALLDAY=Ganzer Tag\\n\\n#XFLD: Text for event with no starting time\\nPLANNINGCALENDAR_UNTIL=bis {0}\\n\\n#XFLD: Text for a placeholder row when there are no appointments\\nPLANNINGCALENDAR_ROW_NO_APPOINTMENTS=Keine Eintr\\\\u00E4ge\\n\\n#XTOL: Tool tip for nextButton of the PagingButton\\nPAGINGBUTTON_NEXT=N\\\\u00E4chste Seite\\n\\n#XTOL: Tool tip for nextButton of the PagingButton\\nPAGINGBUTTON_PREVIOUS=Vorherige Seite\\n\\n#XBUT: Text and number of selected items for toolbar button of SelectionDetails\\nSELECTIONDETAILS_BUTTON_TEXT_WITH_NUMBER=Details ({0})\\n\\n#XBUT: Text for toolbar button of SelectionDetails\\nSELECTIONDETAILS_BUTTON_TEXT=Details\\n\\n#############\\n#Translatable Control Types and States for ACC\\n#############\\n\\n#XACT: type of an UI control is an input field\\nACC_CTR_TYPE_INPUT=Eingabe\\n\\n#XACT: type of an UI control is a input field (which allows setting multiple values)\\nACC_CTR_TYPE_MULTIINPUT=Mehrfache Eingabe\\n\\n#XACT: type of an UI control is a date input field\\nACC_CTR_TYPE_DATEINPUT=Datumseingabe\\n\\n#XACT: type of an UI control is a time input field\\nACC_CTR_TYPE_TIMEINPUT=Zeiteingabe\\n\\n#XACT: type of an UI control is a date and time input field\\nACC_CTR_TYPE_DATETIMEINPUT=Datum/Zeit-Eingabe\\n\\n#XACT: type of an UI control is a rating indicator\\nACC_CTR_TYPE_RATING=Bewertung\\n\\n#XACT: type of an UI control is a button\\nACC_CTR_TYPE_BUTTON=Drucktaste\\n\\n#XACT: type of an UI control is a link\\nACC_CTR_TYPE_LINK=Link\\n\\n#XACT: type of an UI control is an image\\nACC_CTR_TYPE_IMAGE=Bild\\n\\n#XACT: type of an UI control is a checkbox\\nACC_CTR_TYPE_CHECKBOX=Ankreuzfeld\\n\\n#XACT: type of of an UI control is a progess indicator\\nACC_CTR_TYPE_PROGRESS=Fortschritt\\n\\n#XACT: type of an UI control is a combobox\\nACC_CTR_TYPE_COMBO=Combobox\\n\\n#XACT: type of of an UI control is a combobox (which allows multi selection)\\nACC_CTR_TYPE_MULTICOMBO=Mehrfach-Combobox\\n\\n#XACT: type of of an UI control is a list\\nACC_CTR_TYPE_LIST=Listenfeld\\n\\n#XACT: type of of an UI control is a list item\\nACC_CTR_TYPE_OPTION=Listenelement\\n\\n#XACT: type of of an UI control is a tree\\nACC_CTR_TYPE_TREE=Baum\\n\\n#XACT: type of of an UI control is a tree item\\nACC_CTR_TYPE_TREEITEM=Baumelement\\n\\n#XACT: type of of an UI control is a table\\nACC_CTR_TYPE_TABLE=Tabelle\\n\\n#XACT: type of of an UI control is a table row\\nACC_CTR_TYPE_ROW=Zeile\\n\\n#XACT: ARIA announcement for the header row of the table\\nACC_CTR_TYPE_HEADER_ROW=Kopfzeile\\n\\n#XACT: ARIA announcement for the footer row of the table\\nACC_CTR_TYPE_FOOTER_ROW=Fu\\\\u00DFzeile\\n\\n#XACT: \\\"pressed\\\" state of e.g. a togglebutton which should be announced by screenreaders\\nACC_CTR_STATE_PRESSED=Gedr\\\\u00FCckt\\n\\n#XACT: \\\"checked\\\" state of e.g. a checkbox which should be announced by screenreaders\\nACC_CTR_STATE_CHECKED=Aktiviert\\n\\n#XACT: state (current and max. value) of a rating indicator which should be announced by screenreaders\\nACC_CTR_STATE_RATING={0} von {1}\\n\\n#XACT: progress state of a progress indicator which should be announced by screenreaders\\nACC_CTR_STATE_PROGRESS={0} %\\n\\n#############\\n\\n#XACT: Aria information for the Split Button\\nSPLIT_BUTTON_DESCRIPTION=Zweigeteilte Drucktaste\\n\\n#XACT: Aria hint for the keyboard handling support of the Split Button\\nSPLIT_BUTTON_KEYBOARD_HINT=Dr\\\\u00FCcken Sie Enter, um Aktion auszul\\\\u00F6sen und dr\\\\u00FCcken Sie Pfeil nach unten, um Men\\\\u00FC zu \\\\u00F6ffnen\\n\\n#XTOL: Tooltip text for back button inside a Menu Page\\nMENU_PAGE_BACK_BUTTON=Zur\\\\u00FCck zu\\n\\n#XBUT: Menu predefined text for CLOSE action\\nMENU_CLOSE=Abbrechen\\n\\n#XBUT: Button text for closing a Notification List Base control\\nNOTIFICATION_LIST_BASE_CLOSE=Schlie\\\\u00DFen\\n\\n\\n#XBUT: No grouping item in ViewSettingsPopover\\nNO_GROUPING=Keine Gruppierung\\n\\n#XBUT: No filtering item in ViewSettingsPopover\\nREMOVE_FILTER=Filter entfernen\\n\\n#XBUT: ARIA-LabelledBy for ViewSettingsPopover\\nARIA_LABELLED_BY_POPOVER=Einstellungen f\\\\u00FCr Spaltensicht\\n\\n#XBUT: Show selected only for ViewSettingsPopover\\nSHOW_SELECTED_ONLY=Nur ausgew\\\\u00E4hlte anzeigen\\n\\n#XBUT: No sorting item in ViewSettingsPopover\\nNO_SORTING=Keine Sortierung\\n\\n#YACT: ARIA information about multiple content within the SlideTile\\nSLIDETILE_MULTIPLE_CONTENT=Element mit mehrfachem Inhalt\\n\\n#YACT: ARIA information about toggle sliding within the SlideTile\\nSLIDETILE_TOGGLE_SLIDING=Um Sliding umzuschalten, Leertaste dr\\\\u00FCcken\\n\\n#YACT: ARIA information how to activate the SlideTile\\nSLIDETILE_ACTIVATE=Zum Aktivieren, ENTER dr\\\\u00FCcken\\n\\n#YACT: ARIA information how to scroll back in the SlideTile\\nSLIDETILE_SCROLL_BACK=Um zur\\\\u00FCck zu bl\\\\u00E4ttern, B dr\\\\u00FCcken\\n\\n#YACT: ARIA information how to to scroll forward in the SlideTile\\nSLIDETILE_SCROLL_FORWARD=Um weiter zu bl\\\\u00E4ttern, F dr\\\\u00FCcken\\n\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\nSLIDER_HANDLE=Griff des Schiebereglers\\n\\n#XACT: ARIA announcement for the range in RangeSlider\\nRANGE_SLIDER_RANGE_ANNOUNCEMENT=von {0} bis {1}\\n\\n#XACT: ARIA ARIA-LabelledBy for the left handle and tooltip in RangeSlider\\nRANGE_SLIDER_LEFT_HANDLE=Linker Regler\\n\\n#XACT: ARIA ARIA-LabelledBy for the right handle and tooltip in RangeSlider\\nRANGE_SLIDER_RIGHT_HANDLE=Rechter Regler\\n\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\nRANGE_SLIDER_RANGE_HANDLE=Bereich\\n\\n#XBUT: Button text for close button in the LightBox\\nLIGHTBOX_CLOSE_BUTTON=Schlie\\\\u00DFen\\n\\n#XTOL: Tooltip on the button to allow to scroll back\\nHEADERCONTAINER_BUTTON_PREV_SECTION=Zur\\\\u00FCck\\n\\n#XTOL: Tooltip on the button to allow to scroll forward\\nHEADERCONTAINER_BUTTON_NEXT_SECTION=Weiter\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout.\\nLIGHTBOX_IMAGE_TIMED_OUT=Bild kann nicht geladen werden\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\nLIGHTBOX_IMAGE_TIMED_OUT_DETAILS=Das Bild ist zu gro\\\\u00DF, um es jetzt zu laden. Bitte versuchen Sie es sp\\\\u00E4ter erneut.\\n\\n#XTXT: Error message for LightBox image not loaded.\\nLIGHTBOX_IMAGE_ERROR=Ein Fehler ist aufgetreten.\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\nLIGHTBOX_IMAGE_ERROR_DETAILS=Das Bild wurde am angegebenen Speicherort nicht gefunden oder der Server ist nicht aktiv.\\n\\n#XACT: ARIA announcement for enlarged image\\nLIGHTBOX_ARIA_ENLARGED=Vergr\\\\u00F6\\\\u00DFertes Bild von {0}\\n\\n#XACT: ARIA keyboard announcement for the DEL key for removing a tile\\nTILE_REMOVE_BY_DEL_KEY=Um das Element zu entfernen, dr\\\\u00FCcken Sie die L\\\\u00F6schtaste.\\n\\n#XACT: ARIA text for GenericTile in actions scope\\nGENERICTILE_ACTIONS_ARIA_TEXT=Entfernbare Kachel\\n\\n#XTOL: Tooltip for REMOVE button in the GenericTile\\nGENERICTILE_REMOVEBUTTON_TEXT=Entfernen\\n\\n#XTXT: Reached maximum number of notifications in NotificationListGroup title\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_TITLE=Es sind {0} weitere Benachrichtigungen vorhanden\\n\\n#XTXT: Reached maximum number of notifications in NotificationListGroup\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_BODY=Um mehr anzuzeigen, m\\\\u00FCssen Sie die aufgef\\\\u00FChrten Benachrichtigungen schlie\\\\u00DFen oder eine Aktion durchf\\\\u00FChren.\\n\\n#XTOL: Tooltip of the button for increasing for example the quantity of a product inside shopping-cart application\\nSTEP_INPUT_INCREASE_BTN=Vergr\\\\u00F6\\\\u00DFern\\n\\n#XTOL: Tooltip of the button for decreasing for example the quantity of a product inside shopping-cart application\\nSTEP_INPUT_DECREASE_BTN=Verkleinern\\n\\n#XMIT: Radio button control name caption\\nRADIOBUTTON_NAME=Auswahlknopf\\n\\n#XTIT: Radio button control name plural caption\\nRADIOBUTTON_NAME_PLURAL=Auswahlkn\\\\u00F6pfe\\n\\n#XMIT: Text control name caption\\nTEXT_NAME=Text\\n\\n#XTIT: Text control name plural caption\\nTEXT_NAME_PLURAL=Texte\\n\\n#XMIT: Date picker control name caption\\nDATEPICKER_NAME=Date Picker\\n\\n#XACT: ARIA role for the control Object Identifier\\nOI_ARIA_ROLE=Objekt-ID\\n\\n#XTIT: Date picker control name plural caption\\nDATEPICKER_NAME_PLURAL=Date Pickers\\n\\n#XMIT: Check Box control name caption\\nCHECKBOX_NAME=Ankreuzfeld\\n\\n#XTIT: Check Box control name plural caption\\nCHECKBOX_NAME_PLURAL=Ankreuzfelder\\n\\n#XMIT: Rating Indicator control name caption\\nRATINGINDICATOR_NAME=Bewertungssterne\\n\\n#XTIT: Rating Indicator control name plural caption\\nRATINGINDICATOR_NAME_PLURAL=Bewertungssterne\\n\\n#XMIT: Page control name caption\\nPAGE_NAME=Seite\\n\\n#XTIT: Page control name plural caption\\nPAGE_NAME_PLURAL=Seiten\\n\\n#XMIT: Label control name caption\\nLABEL_NAME=Bezeichner\\n\\n#XTIT: Label control name plural caption\\nLABEL_NAME_PLURAL=Bezeichner\\n\\n#XMIT: Link control name caption\\nLINK_NAME=Link\\n\\n#XTIT: Link control name plural caption\\nLINK_NAME_PLURAL=Links\\n\\n#XMIT: Scroll container control name caption\\nSCROLL_CONTAINER_CONTROL_NAME=Container\\n\\n#XTIT: Scroll container control name plural caption\\nSCROLL_CONTAINER_CONTROL_NAME_PLURAL=Container\\n\\n#XMIT: Panel control name caption\\nPANEL_NAME=Panel\\n\\n#XTIT: Panel control name plural caption\\nPANEL_NAME_PLURAL=Panels\\n\\n#XMIT: ListItemBase control name caption\\nLIST_ITEM_BASE_NAME=Listenelement\\n\\n#XTIT: ListItemBase control name plural caption\\nLIST_ITEM_BASE_NAME_PLURAL=Listenelemente\\n\\n#XACT:Author of Notification List Item\\nNOTIFICATION_LIST_ITEM_CREATED_BY=Angelegt von\\n\\n#XACT: Unread status of Notification List Item\\nNOTIFICATION_LIST_GROUP_UNREAD=Benachrichtigungsgruppe ungelesen.\\n\\n#XACT: Read status of Notification List Item\\nNOTIFICATION_LIST_GROUP_READ=Benachrichtigungsgruppe gelesen.\\n\\n#XMIT: Image control name caption\\nIMAGE_NAME=Bild\\n\\n#XTIT: Image control name plural caption\\nIMAGE_NAME_PLURAL=Bilder\\n\\n#XMIT: InputBase control name caption\\nINPUT_BASE_NAME=Eingabe\\n\\n#XTIT: InputBase control name plural caption\\nINPUT_BASE_NAME_PLURAL=Eingaben\\n\\n#XMIT: Title control name caption\\nTITLE_NAME=Titel\\n\\n#XTIT: Title control name plural caption\\nTITLE_NAME_PLURAL=Titel\\n\\n#XMIT: Slider control name caption\\nSLIDER_NAME=Schieberegler\\n\\n#XTIT: Slider control name plural caption\\nSLIDER_NAME_PLURAL=Schieberegler\\n\\n#XMIT: ListBase control name caption\\nLIST_BASE_NAME=Liste\\n\\n#XTIT: ListBase control name plural caption\\nLIST_BASE_NAME_PLURAL=Listen\\n\\n#XMIT: Responsive Table control name caption\\nTABLE_NAME=Tabelle\\n\\n#XTIT: Table control name plural caption\\nTABLE_NAME_PLURAL=Tabellen\\n\\n#XACT: Aria label for Table select all CheckBox\\nTABLE_CHECKBOX_SELECT_ALL=Alle Zeilen ausw\\\\u00E4hlen\\n\\n#XTIT: Column control name caption\\nCOLUMN_NAME=Spalte\\n\\n#XTIT: Column control name plural caption\\nCOLUMN_NAME_PLURAL=Spalten\\n\\n#XMIT: FlexBox control name caption\\nFLEXBOX_CONTROL_NAME=Container\\n\\n#XTIT: FlexBox control name plural caption\\nFLEXBOX_CONTROL_NAME_PLURAL=Container\\n\\n#XBUT: Pdf viewer's popup close button\\nPDF_VIEWER_POPUP_CLOSE_BUTTON=Schlie\\\\u00DFen\\n\\n#XTXT: Pdf viewer's download link\\nPDF_VIEWER_DOWNLOAD_TEXT=Download\\n\\n#XTXT: Text in error placeholder of pdf viewer\\nPDF_VIEWER_PLACEHOLDER_ERROR_TEXT=Die PDF-Datei kann nicht geladen werden.\\n\\n#XACT: PDF viewer's accessibility label\\nPDF_VIEWER_ACCESSIBILITY_LABEL=PDF-Viewer\\n\\n#XTIT: PDF viewer's message box header for source validation error\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_HEADER=Fehler bei der Validierung der Quelle\\n\\n#XMSG: PDF viewer's message box text for source validation error\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_TEXT=Die Quelle der Datei kann nicht validiert werden. Datei trotzdem anzeigen?\\n\\n#XBUT: MultiEditField prefilled Item keep\\nMULTI_EDIT_KEEP_TEXT=Vorhandene Werte beibehalten\\n\\n#XBUT: MultiEditField prefilled Item blank\\nMULTI_EDIT_BLANK_TEXT=Leer lassen\\n\\n#XBUT: MultiEditField prefilled Item new\\nMULTI_EDIT_NEW_TEXT=Wertehilfe verwenden \\n\\n#XTXT: Text representing the Select's picker title text\\nSELECT_PICKER_TITLE_TEXT=Ausw\\\\u00E4hlen\\n\"\n\n/***/ }),\n\n/***/ \"TFyG\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides class sap.ui.core.format.NumberFormat\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"uI10\"), __webpack_require__(\"aHUd\"), __webpack_require__(\"2Qtg\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, BaseObject, Locale, LocaleData) {\n\t\"use strict\";\n\n\t/**\n  * Format classes\n  *\n  * @namespace\n  * @name sap.ui.core.format\n  * @public\n  */\n\n\t/**\n  * Constructor for NumberFormat - must not be used: To get a NumberFormat instance, please use getInstance, getFloatInstance or getIntegerInstance.\n  *\n  * @class\n  * The NumberFormat is a static class for formatting and parsing numeric values according\n  * to a set of format options.\n  *\n  * @public\n  * @param {object} [oFormatOptions] The option object which support the following parameters. If no options is given, default values according to the type and locale settings are used.\n  * @param {int} [oFormatOptions.minIntegerDigits] defines minimal number of non-decimal digits\n  * @param {int} [oFormatOptions.maxIntegerDigits] defines maximum number of non-decimal digits\n  * @param {int} [oFormatOptions.minFractionDigits] defines minimal number of decimal digits\n  * @param {int} [oFormatOptions.maxFractionDigits] defines maximum number of decimal digits\n  * @param {int} [oFormatOptions.decimals] defines the number of decimal digits\n  * @param {int} [oFormatOptions.shortDecimals] defines the number of decimal in the shortified format string. If this isn't specified, the 'decimals' options is used\n  * @param {int} [oFormatOptions.shortLimit] only use short number formatting for values above this limit\n  * @param {int} [oFormatOptions.shortRefNumber] @since 1.40 specifies a number from which the scale factor for 'short' or 'long' style format is generated. The generated scale factor is\n  *  used for all numbers which are formatted with this format instance. This option has effect only when the option 'style' is set to 'short' or 'long'. This option is by default set\n  *  with undefined which means the scale factor is selected automatically for each number being formatted.\n  * @param {boolean} [oFormatOptions.showScale=true] @since 1.40 specifies whether the scale factor is shown in the formatted number. This option takes effect only when the 'style' options is set to either 'short' or 'long'.\n  * @param {int} [oFormatOptions.precision] defines the number precision, number of decimals is calculated dependent on the integer digits\n  * @param {string} [oFormatOptions.pattern] CLDR number pattern which is used to format the number\n  * @param {boolean} [oFormatOptions.groupingEnabled] defines whether grouping is enabled (show the grouping separators)\n  * @param {string} [oFormatOptions.groupingSeparator] defines the used grouping separator\n  * @param {int} [oFormatOptions.groupingSize] defines the grouping size in digits, the default is three\n  * @param {int} [oFormatOptions.groupingBaseSize] defines the grouping base size in digits, in case it is different from the grouping size (e.g. indian grouping)\n  * @param {string} [oFormatOptions.decimalSeparator] defines the used decimal separator\n  * @param {string} [oFormatOptions.plusSign] defines the used plus symbol\n  * @param {string} [oFormatOptions.minusSign] defines the used minus symbol\n  * @param {boolean} [oFormatOptions.parseAsString] @since 1.28.2 defines whether to output string from parse function in order to keep the precision for big numbers. Numbers in scientific notation are parsed\n  *  back to the standard notation. For example \".5e-3\" is parsed to \"0.0005\".\n  * @param {string} [oFormatOptions.style] defines the style of format. Valid values are 'short, 'long' or 'standard' (based on CLDR decimalFormat). Numbers are formatted into compact forms when it's set to\n  * 'short' or 'long'. When this option is set, the default value of option 'precision' is set to 2. This can be changed by setting either min/maxFractionDigits, decimals, shortDecimals or precision option.\n  * @param {sap.ui.core.format.NumberFormat.RoundingMode} [oFormatOptions.roundingMode] specifies a rounding behavior for discarding the digits after the maximum fraction digits\n  *  defined by maxFractionDigits. Rounding will only be applied, if the passed value if of type number. This can be assigned by value in {@link sap.ui.core.format.NumberFormat.RoundingMode RoundingMode}\n  *  or a function which will be used for rounding the number. The function is called with two parameters: the number and how many decimal digits should be reserved.\n  * @param {boolean} [oFormatOptions.showMeasure] defines whether the measure according to the format is shown in the formatted string\n  * @param {boolean} [oFormatOptions.currencyCode] defines whether the currency is shown as code in currency format. The currency symbol is displayed when this is set to false and there's symbol defined\n  *  for the given currency code.\n  * @param {string} [oFormatOptions.currencyContext] It can be set either with 'standard' (the default value) or with 'accounting' for an accounting specific currency display\n  * @param {number} [oFormatOptions.emptyString=NaN] @since 1.30.0 defines what empty string is parsed as and what is formatted as empty string. The allowed values are only NaN, null or 0.\n  *  The 'format' and 'parse' are done in a symmetric way which means when this parameter is set to NaN, empty string is parsed as NaN and NaN is formatted as empty string.\n  *\n  * @alias sap.ui.core.format.NumberFormat\n  * @extends sap.ui.base.Object\n  */\n\n\tvar NumberFormat = BaseObject.extend(\"sap.ui.core.format.NumberFormat\", /** @lends sap.ui.core.format.NumberFormat.prototype */{\n\t\tconstructor: function constructor(oFormatOptions) {\n\t\t\t// Do not use the constructor\n\t\t\tthrow new Error();\n\t\t}\n\t});\n\n\t// Regex for matching the number placeholder in pattern\n\tvar rNumPlaceHolder = /0+(\\.0+)?/;\n\n\t/**\n  * Internal enumeration to differentiate number types\n  */\n\tvar mNumberType = {\n\t\tINTEGER: \"integer\",\n\t\tFLOAT: \"float\",\n\t\tCURRENCY: \"currency\",\n\t\tPERCENT: \"percent\"\n\t};\n\n\t/**\n  * Specifies a rounding behavior for numerical operations capable of discarding precision. Each rounding mode in this object indicates how the least\n  * significant returned digits of rounded result is to be calculated.\n  *\n  * @public\n  * @enum {string}\n  * @alias sap.ui.core.format.NumberFormat.RoundingMode\n  */\n\tvar mRoundingMode = {\n\t\t/**\n   * Rounding mode to round towards negative infinity\n   * @public\n   */\n\t\tFLOOR: \"floor\",\n\t\t/**\n   * Rounding mode to round towards positive infinity\n   * @public\n   */\n\t\tCEILING: \"ceiling\",\n\t\t/**\n   * Rounding mode to round towards zero\n   * @public\n   */\n\t\tTOWARDS_ZERO: \"towards_zero\",\n\t\t/**\n   * Rounding mode to round away from zero\n   * @public\n   */\n\t\tAWAY_FROM_ZERO: \"away_from_zero\",\n\t\t/**\n   * Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards negative infinity.\n   * @public\n   */\n\t\tHALF_FLOOR: \"half_floor\",\n\t\t/**\n   * Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards positive infinity.\n   * @public\n   */\n\t\tHALF_CEILING: \"half_ceiling\",\n\t\t/**\n   * Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards zero.\n   * @public\n   */\n\t\tHALF_TOWARDS_ZERO: \"half_towards_zero\",\n\t\t/**\n   * Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round away from zero.\n   * @public\n   */\n\t\tHALF_AWAY_FROM_ZERO: \"half_away_from_zero\"\n\t};\n\n\tvar mRoundingFunction = {};\n\tmRoundingFunction[mRoundingMode.FLOOR] = Math.floor;\n\tmRoundingFunction[mRoundingMode.CEILING] = Math.ceil;\n\tmRoundingFunction[mRoundingMode.TOWARDS_ZERO] = function (nValue) {\n\t\treturn nValue > 0 ? Math.floor(nValue) : Math.ceil(nValue);\n\t};\n\tmRoundingFunction[mRoundingMode.AWAY_FROM_ZERO] = function (nValue) {\n\t\treturn nValue > 0 ? Math.ceil(nValue) : Math.floor(nValue);\n\t};\n\tmRoundingFunction[mRoundingMode.HALF_TOWARDS_ZERO] = function (nValue) {\n\t\treturn nValue > 0 ? Math.ceil(nValue - 0.5) : Math.floor(nValue + 0.5);\n\t};\n\tmRoundingFunction[mRoundingMode.HALF_AWAY_FROM_ZERO] = function (nValue) {\n\t\treturn nValue > 0 ? Math.floor(nValue + 0.5) : Math.ceil(nValue - 0.5);\n\t};\n\tmRoundingFunction[mRoundingMode.HALF_FLOOR] = function (nValue) {\n\t\treturn Math.ceil(nValue - 0.5);\n\t};\n\tmRoundingFunction[mRoundingMode.HALF_CEILING] = Math.round;\n\n\tNumberFormat.RoundingMode = mRoundingMode;\n\n\t/*\n  * Default format options for Integer\n  */\n\tNumberFormat.oDefaultIntegerFormat = {\n\t\tminIntegerDigits: 1,\n\t\tmaxIntegerDigits: 99,\n\t\tminFractionDigits: 0,\n\t\tmaxFractionDigits: 0,\n\t\tgroupingEnabled: false,\n\t\tgroupingSize: 3,\n\t\tgroupingSeparator: \",\",\n\t\tdecimalSeparator: \".\",\n\t\tplusSign: \"+\",\n\t\tminusSign: \"-\",\n\t\tisInteger: true,\n\t\ttype: mNumberType.INTEGER,\n\t\tshowMeasure: false,\n\t\tstyle: \"standard\",\n\t\tparseAsString: false,\n\t\troundingMode: NumberFormat.RoundingMode.TOWARDS_ZERO,\n\t\temptyString: NaN,\n\t\tshowScale: true\n\t};\n\n\t/*\n  * Default format options for Float\n  */\n\tNumberFormat.oDefaultFloatFormat = {\n\t\tminIntegerDigits: 1,\n\t\tmaxIntegerDigits: 99,\n\t\tminFractionDigits: 0,\n\t\tmaxFractionDigits: 99,\n\t\tgroupingEnabled: true,\n\t\tgroupingSize: 3,\n\t\tgroupingSeparator: \",\",\n\t\tdecimalSeparator: \".\",\n\t\tplusSign: \"+\",\n\t\tminusSign: \"-\",\n\t\tisInteger: false,\n\t\ttype: mNumberType.FLOAT,\n\t\tshowMeasure: false,\n\t\tstyle: \"standard\",\n\t\tparseAsString: false,\n\t\troundingMode: NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO,\n\t\temptyString: NaN,\n\t\tshowScale: true\n\t};\n\n\t/*\n * Default format options for Percent\n */\n\tNumberFormat.oDefaultPercentFormat = {\n\t\tminIntegerDigits: 1,\n\t\tmaxIntegerDigits: 99,\n\t\tminFractionDigits: 0,\n\t\tmaxFractionDigits: 99,\n\t\tgroupingEnabled: true,\n\t\tgroupingSize: 3,\n\t\tgroupingSeparator: \",\",\n\t\tdecimalSeparator: \".\",\n\t\tplusSign: \"+\",\n\t\tminusSign: \"-\",\n\t\tpercentSign: \"%\",\n\t\tisInteger: false,\n\t\ttype: mNumberType.PERCENT,\n\t\tshowMeasure: false,\n\t\tstyle: \"standard\",\n\t\tparseAsString: false,\n\t\troundingMode: NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO,\n\t\temptyString: NaN,\n\t\tshowScale: true\n\t};\n\n\t/*\n  * Default format options for Currency\n  * @name sap.ui.core.format.NumberFormat.oDefaultCurrencyFormat\n  */\n\tNumberFormat.oDefaultCurrencyFormat = {\n\t\tminIntegerDigits: 1,\n\t\tmaxIntegerDigits: 99,\n\t\t// the default value for min/maxFractionDigits is defined in oLocaleData.getCurrencyDigits\n\t\t// they need to be left undefined here in order to detect whether they are set from outside\n\t\tgroupingEnabled: true,\n\t\tgroupingSize: 3,\n\t\tgroupingSeparator: \",\",\n\t\tdecimalSeparator: \".\",\n\t\tplusSign: \"+\",\n\t\tminusSign: \"-\",\n\t\tisInteger: false,\n\t\ttype: mNumberType.CURRENCY,\n\t\tshowMeasure: true,\n\t\tcurrencyCode: true,\n\t\tcurrencyContext: 'standard',\n\t\tstyle: \"standard\",\n\t\tparseAsString: false,\n\t\troundingMode: NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO,\n\t\temptyString: NaN,\n\t\tshowScale: true\n\t};\n\n\t/**\n  * An alias for {@link #getFloatInstance}.\n  *\n  * @param {object} [oFormatOptions] Object which defines the format options\n  * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n  * @return {sap.ui.core.format.NumberFormat} float instance of the NumberFormat\n  *\n  */\n\tNumberFormat.getInstance = function (oFormatOptions, oLocale) {\n\t\treturn this.getFloatInstance(oFormatOptions, oLocale);\n\t};\n\n\t/**\n  * Get a float instance of the NumberFormat, which can be used for formatting.\n  *\n  * If no locale is given, the currently configured\n  * {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n  *\n  * <p>\n  * This instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\n  * Please set the roundingMode property in oFormatOptions to change the\n  * default value.\n  * </p>\n  *\n  * @param {object} [oFormatOptions] Object which defines the format options\n  * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n  * @return {sap.ui.core.format.NumberFormat} float instance of the NumberFormat\n  * @static\n  * @public\n  */\n\tNumberFormat.getFloatInstance = function (oFormatOptions, oLocale) {\n\t\tvar oFormat = this.createInstance(oFormatOptions, oLocale),\n\t\t    oLocaleFormatOptions = this.getLocaleFormatOptions(oFormat.oLocaleData, mNumberType.FLOAT);\n\n\t\toFormat.oFormatOptions = jQuery.extend(false, {}, this.oDefaultFloatFormat, oLocaleFormatOptions, oFormatOptions);\n\t\treturn oFormat;\n\t};\n\n\t/**\n  * Get an integer instance of the NumberFormat, which can be used for formatting.\n  *\n  * If no locale is given, the currently configured\n  * {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n  *\n  * <p>\n  * This instance has TOWARDS_ZERO set as default rounding mode.\n  * Please set the roundingMode property in oFormatOptions to change the\n  * default value.\n  * </p>\n  *\n  * @param {object} [oFormatOptions] Object which defines the format options\n  * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n  * @return {sap.ui.core.format.NumberFormat} integer instance of the NumberFormat\n  * @static\n  * @public\n  */\n\tNumberFormat.getIntegerInstance = function (oFormatOptions, oLocale) {\n\t\tvar oFormat = this.createInstance(oFormatOptions, oLocale),\n\t\t    oLocaleFormatOptions = this.getLocaleFormatOptions(oFormat.oLocaleData, mNumberType.INTEGER);\n\n\t\toFormat.oFormatOptions = jQuery.extend(false, {}, this.oDefaultIntegerFormat, oLocaleFormatOptions, oFormatOptions);\n\t\treturn oFormat;\n\t};\n\n\t/**\n  * Get a currency instance of the NumberFormat, which can be used for formatting.\n  *\n  * If no locale is given, the currently configured\n  * {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n  *\n  * <p>\n  * This instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\n  * Please set the roundingMode property in oFormatOptions to change the\n  * default value.\n  * </p>\n  *\n  * @param {object} [oFormatOptions] Object which defines the format options\n  * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n  * @return {sap.ui.core.format.NumberFormat} integer instance of the NumberFormat\n  * @static\n  * @public\n  */\n\tNumberFormat.getCurrencyInstance = function (oFormatOptions, oLocale) {\n\t\tvar oFormat = this.createInstance(oFormatOptions, oLocale),\n\t\t    sContext = oFormatOptions && oFormatOptions.currencyContext,\n\t\t    oLocaleFormatOptions = this.getLocaleFormatOptions(oFormat.oLocaleData, mNumberType.CURRENCY, sContext);\n\n\t\toFormat.oFormatOptions = jQuery.extend(false, {}, this.oDefaultCurrencyFormat, oLocaleFormatOptions, oFormatOptions);\n\t\treturn oFormat;\n\t};\n\n\t/**\n  * Get a percent instance of the NumberFormat, which can be used for formatting.\n  *\n  * If no locale is given, the currently configured\n  * {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n  *\n  * <p>\n  * This instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\n  * Please set the roundingMode property in oFormatOptions to change the\n  * default value.\n  * </p>\n  *\n  * @param {object} [oFormatOptions] Object which defines the format options\n  * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n  * @return {sap.ui.core.format.NumberFormat} integer instance of the NumberFormat\n  * @static\n  * @public\n */\n\tNumberFormat.getPercentInstance = function (oFormatOptions, oLocale) {\n\t\tvar oFormat = this.createInstance(oFormatOptions, oLocale),\n\t\t    oLocaleFormatOptions = this.getLocaleFormatOptions(oFormat.oLocaleData, mNumberType.PERCENT);\n\n\t\toFormat.oFormatOptions = jQuery.extend(false, {}, this.oDefaultPercentFormat, oLocaleFormatOptions, oFormatOptions);\n\t\treturn oFormat;\n\t};\n\n\t/**\n  * Create an instance of the NumberFormat.\n  *\n  * @param {object} [oFormatOptions] Object which defines the format options\n  * @return {sap.ui.core.format.NumberFormat} integer instance of the NumberFormat\n  * @static\n  * @private\n  */\n\tNumberFormat.createInstance = function (oFormatOptions, oLocale) {\n\t\tvar oFormat = Object.create(this.prototype),\n\t\t    oPatternOptions;\n\t\tif (oFormatOptions instanceof Locale) {\n\t\t\toLocale = oFormatOptions;\n\t\t\toFormatOptions = undefined;\n\t\t}\n\t\tif (!oLocale) {\n\t\t\toLocale = sap.ui.getCore().getConfiguration().getFormatSettings().getFormatLocale();\n\t\t}\n\t\toFormat.oLocale = oLocale;\n\t\toFormat.oLocaleData = LocaleData.getInstance(oLocale);\n\t\toFormat.oOriginalFormatOptions = oFormatOptions;\n\n\t\t// If a pattern is defined in the format option, parse it and add options\n\t\tif (oFormatOptions) {\n\t\t\tif (oFormatOptions.pattern) {\n\t\t\t\toPatternOptions = this.parseNumberPattern(oFormatOptions.pattern);\n\t\t\t\tjQuery.each(oPatternOptions, function (sName, vOption) {\n\t\t\t\t\toFormatOptions[sName] = vOption;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (oFormatOptions.emptyString !== undefined) {\n\t\t\t\tjQuery.sap.assert(typeof oFormatOptions.emptyString !== \"string\", \"The format option 'emptyString' can not be with type 'string'\");\n\t\t\t\tjQuery.sap.assert(oFormatOptions.emptyString === 0 || oFormatOptions.emptyString === null || /* check if it's NaN (only NaN doesn't equal to itself) */oFormatOptions.emptyString !== oFormatOptions.emptyString, \"The format option 'emptyString' must be either 0, null or NaN\");\n\t\t\t}\n\t\t}\n\n\t\treturn oFormat;\n\t};\n\n\t/**\n  * Get locale dependent default format options.\n  *\n  * @static\n  */\n\tNumberFormat.getLocaleFormatOptions = function (oLocaleData, iType, sContext) {\n\t\tvar oLocaleFormatOptions = {},\n\t\t    sNumberPattern;\n\n\t\tswitch (iType) {\n\t\t\tcase mNumberType.PERCENT:\n\t\t\t\tsNumberPattern = oLocaleData.getPercentPattern();\n\t\t\t\tbreak;\n\t\t\tcase mNumberType.CURRENCY:\n\t\t\t\tsNumberPattern = oLocaleData.getCurrencyPattern(sContext);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsNumberPattern = oLocaleData.getDecimalPattern();\n\t\t}\n\n\t\toLocaleFormatOptions = this.parseNumberPattern(sNumberPattern);\n\n\t\toLocaleFormatOptions.plusSign = oLocaleData.getNumberSymbol(\"plusSign\");\n\t\toLocaleFormatOptions.minusSign = oLocaleData.getNumberSymbol(\"minusSign\");\n\t\toLocaleFormatOptions.decimalSeparator = oLocaleData.getNumberSymbol(\"decimal\");\n\t\toLocaleFormatOptions.groupingSeparator = oLocaleData.getNumberSymbol(\"group\");\n\t\toLocaleFormatOptions.percentSign = oLocaleData.getNumberSymbol(\"percentSign\");\n\t\toLocaleFormatOptions.pattern = sNumberPattern;\n\n\t\t// Some options need to be overridden to stay compatible with the formatting defaults\n\t\t// before pattern parsing was added to the NumberFormat\n\t\tswitch (iType) {\n\t\t\tcase mNumberType.FLOAT:\n\t\t\tcase mNumberType.PERCENT:\n\t\t\t\t// Unlimited fraction digits for float and percent values\n\t\t\t\toLocaleFormatOptions.minFractionDigits = 0;\n\t\t\t\toLocaleFormatOptions.maxFractionDigits = 99;\n\t\t\t\tbreak;\n\t\t\tcase mNumberType.INTEGER:\n\t\t\t\t// No fraction digits and no grouping for integer values\n\t\t\t\toLocaleFormatOptions.minFractionDigits = 0;\n\t\t\t\toLocaleFormatOptions.maxFractionDigits = 0;\n\t\t\t\toLocaleFormatOptions.groupingEnabled = false;\n\t\t\t\tbreak;\n\t\t\tcase mNumberType.CURRENCY:\n\t\t\t\t// reset the iMin/MaxFractionDigits because the extracted info from the pattern doesn't contain the currency specific info.\n\t\t\t\toLocaleFormatOptions.minFractionDigits = undefined;\n\t\t\t\toLocaleFormatOptions.maxFractionDigits = undefined;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn oLocaleFormatOptions;\n\t};\n\n\t/**\n  * Get digit information from number format.\n  *\n  * @static\n  */\n\tNumberFormat.parseNumberPattern = function (sFormatString) {\n\t\tvar iMinIntegerDigits = 0,\n\t\t    iMinFractionDigits = 0,\n\t\t    iMaxFractionDigits = 0,\n\t\t    bGroupingEnabled = false,\n\t\t    iGroupSize = 0,\n\t\t    iBaseGroupSize = 0,\n\t\t    iSeparatorPos = sFormatString.indexOf(\";\"),\n\t\t    mSection = {\n\t\t\tInteger: 0,\n\t\t\tFraction: 1\n\t\t},\n\t\t    iSection = mSection.Integer;\n\n\t\t// The sFormatString can be ¤#,##0.00;(¤#,##0.00). If the whole string is parsed, the wrong\n\t\t// iMinFractionDigits and iMaxFractionDigits are wrong.\n\t\t// Only the sub string before ';' is taken into consideration.\n\t\tif (iSeparatorPos !== -1) {\n\t\t\tsFormatString = sFormatString.substring(0, iSeparatorPos);\n\t\t}\n\n\t\tfor (var i = 0; i < sFormatString.length; i++) {\n\t\t\tvar sCharacter = sFormatString[i];\n\t\t\tswitch (sCharacter) {\n\t\t\t\tcase \",\":\n\t\t\t\t\tif (bGroupingEnabled) {\n\t\t\t\t\t\tiGroupSize = iBaseGroupSize;\n\t\t\t\t\t\tiBaseGroupSize = 0;\n\t\t\t\t\t}\n\t\t\t\t\tbGroupingEnabled = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \".\":\n\t\t\t\t\tiSection = mSection.Fraction;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"0\":\n\t\t\t\t\tif (iSection === mSection.Integer) {\n\t\t\t\t\t\tiMinIntegerDigits++;\n\t\t\t\t\t\tif (bGroupingEnabled) {\n\t\t\t\t\t\t\tiBaseGroupSize++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tiMinFractionDigits++;\n\t\t\t\t\t\tiMaxFractionDigits++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"#\":\n\t\t\t\t\tif (iSection === mSection.Integer) {\n\t\t\t\t\t\tif (bGroupingEnabled) {\n\t\t\t\t\t\t\tiBaseGroupSize++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tiMaxFractionDigits++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!iGroupSize) {\n\t\t\tiGroupSize = iBaseGroupSize;\n\t\t\tiBaseGroupSize = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tminIntegerDigits: iMinIntegerDigits,\n\t\t\tminFractionDigits: iMinFractionDigits,\n\t\t\tmaxFractionDigits: iMaxFractionDigits,\n\t\t\tgroupingEnabled: bGroupingEnabled,\n\t\t\tgroupingSize: iGroupSize,\n\t\t\tgroupingBaseSize: iBaseGroupSize\n\t\t};\n\t};\n\n\t/**\n  * Format a number according to the given format options.\n  *\n  * @param {number|array} oValue the number to format or an array which contains the number to format and the sMeasure parameter\n  * @param {string} [sMeasure] a measure which has an impact on the formatting\n  * @return {string} the formatted output value\n  * @public\n  */\n\tNumberFormat.prototype.format = function (oValue, sMeasure) {\n\t\tif (Array.isArray(oValue)) {\n\t\t\tsMeasure = oValue[1];\n\t\t\toValue = oValue[0];\n\t\t}\n\n\t\tvar sIntegerPart = \"\",\n\t\t    sFractionPart = \"\",\n\t\t    sGroupedIntegerPart = \"\",\n\t\t    sResult = \"\",\n\t\t    sNumber = \"\",\n\t\t    sPattern = \"\",\n\t\t    iPosition = 0,\n\t\t    iLength = 0,\n\t\t    iGroupSize = 0,\n\t\t    iBaseGroupSize = 0,\n\t\t    bNegative = oValue < 0,\n\t\t    iDotPos = -1,\n\t\t    oOptions = jQuery.extend({}, this.oFormatOptions),\n\t\t    oOrigOptions = this.oOriginalFormatOptions,\n\t\t    aPatternParts,\n\t\t    oShortFormat,\n\t\t    nShortRefNumber,\n\t\t    sPluralCategory;\n\n\t\tif (oValue === oOptions.emptyString || isNaN(oValue) && isNaN(oOptions.emptyString)) {\n\t\t\t// if the value equals the 'emptyString' format option, return empty string.\n\t\t\t// the NaN case has to be checked by using isNaN because NaN !== NaN\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (oOptions.decimals !== undefined) {\n\t\t\toOptions.minFractionDigits = oOptions.decimals;\n\t\t\toOptions.maxFractionDigits = oOptions.decimals;\n\t\t}\n\n\t\tif (oOptions.shortLimit === undefined || Math.abs(oValue) >= oOptions.shortLimit) {\n\t\t\tnShortRefNumber = oOptions.shortRefNumber === undefined ? oValue : oOptions.shortRefNumber;\n\t\t\toShortFormat = getShortenedFormat(nShortRefNumber, oOptions, this.oLocaleData);\n\t\t\tif (oShortFormat && oShortFormat.formatString != \"0\") {\n\t\t\t\toValue = oValue / oShortFormat.magnitude;\n\t\t\t\t// If shortDecimals is defined, override the fractionDigits\n\t\t\t\tif (oOptions.shortDecimals !== undefined) {\n\t\t\t\t\toOptions.minFractionDigits = oOptions.shortDecimals;\n\t\t\t\t\toOptions.maxFractionDigits = oOptions.shortDecimals;\n\t\t\t\t} else {\n\t\t\t\t\tif (oOrigOptions.minFractionDigits === undefined && oOrigOptions.maxFractionDigits === undefined && oOrigOptions.decimals === undefined && oOrigOptions.precision === undefined && oOrigOptions.pattern === undefined) {\n\t\t\t\t\t\t// if none of the options which can affect the decimal digits is set, the default precision is set to 2\n\t\t\t\t\t\toOptions.precision = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (oOrigOptions.maxFractionDigits === undefined && oOrigOptions.decimals === undefined) {\n\t\t\t\t\t\t// overwrite the default setting of Integer instance because\n\t\t\t\t\t\t// Integer with short format could have fraction part\n\t\t\t\t\t\toOptions.maxFractionDigits = 99;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Always use HALF_AWAY_FROM_ZERO for short formats\n\t\t\t\toOptions.roundingMode = NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO;\n\t\t\t}\n\t\t}\n\n\t\t// Must be done after calculating the short value, as it depends on the value\n\t\tif (oOptions.precision !== undefined) {\n\t\t\t// the number of decimal digits is calculated using (precision - number of integer digits)\n\t\t\t// the maxFractionDigits is adapted if the calculated value is smaller than the maxFractionDigits\n\t\t\toOptions.maxFractionDigits = Math.min(oOptions.maxFractionDigits, getDecimals(oValue, oOptions.precision));\n\n\t\t\t// if the minFractionDigits is greater than the maxFractionDigits, adapt the minFractionDigits with\n\t\t\t// the same value of the maxFractionDigits\n\t\t\toOptions.minFractionDigits = Math.min(oOptions.minFractionDigits, oOptions.maxFractionDigits);\n\t\t}\n\n\t\tif (oOptions.type == mNumberType.PERCENT) {\n\t\t\toValue = NumberFormat._shiftDecimalPoint(oValue, 2);\n\t\t}\n\n\t\t//handle measure\n\t\tif (oOptions.type == mNumberType.CURRENCY) {\n\t\t\tvar iDigits = this.oLocaleData.getCurrencyDigits(sMeasure);\n\t\t\tif (oOptions.maxFractionDigits === undefined) {\n\t\t\t\toOptions.maxFractionDigits = iDigits;\n\t\t\t}\n\t\t\tif (oOptions.minFractionDigits === undefined) {\n\t\t\t\toOptions.minFractionDigits = iDigits;\n\t\t\t}\n\t\t}\n\n\t\t// Rounding the value with oOptions.maxFractionDigits and oOptions.roundingMode.\n\t\t//\n\t\t// If the number of fraction digits are equal or less than oOptions.maxFractionDigits, the\n\t\t// number isn't changed. After this operation, the number of fraction digits is\n\t\t// equal or less than oOptions.maxFractionDigits.\n\t\tif (typeof oValue == \"number\") {\n\t\t\toValue = rounding(oValue, oOptions.maxFractionDigits, oOptions.roundingMode);\n\t\t}\n\n\t\t// No sign on zero values\n\t\tif (oValue == 0) {\n\t\t\tbNegative = false;\n\t\t}\n\n\t\tsNumber = this.convertToDecimal(oValue);\n\n\t\tif (sNumber == \"NaN\") {\n\t\t\treturn sNumber;\n\t\t}\n\n\t\t// if number is negative remove minus\n\t\tif (bNegative) {\n\t\t\tsNumber = sNumber.substr(1);\n\t\t}\n\n\t\t// if number contains fraction, extract it\n\t\tiDotPos = sNumber.indexOf(\".\");\n\t\tif (iDotPos > -1) {\n\t\t\tsIntegerPart = sNumber.substr(0, iDotPos);\n\t\t\tsFractionPart = sNumber.substr(iDotPos + 1);\n\t\t} else {\n\t\t\tsIntegerPart = sNumber;\n\t\t}\n\n\t\t// integer part length\n\t\tif (sIntegerPart.length < oOptions.minIntegerDigits) {\n\t\t\tsIntegerPart = jQuery.sap.padLeft(sIntegerPart, \"0\", oOptions.minIntegerDigits);\n\t\t} else if (sIntegerPart.length > oOptions.maxIntegerDigits) {\n\t\t\tsIntegerPart = jQuery.sap.padLeft(\"\", \"?\", oOptions.maxIntegerDigits);\n\t\t}\n\n\t\t// fraction part length\n\t\tif (sFractionPart.length < oOptions.minFractionDigits) {\n\t\t\tsFractionPart = jQuery.sap.padRight(sFractionPart, \"0\", oOptions.minFractionDigits);\n\t\t} else if (sFractionPart.length > oOptions.maxFractionDigits) {\n\t\t\tsFractionPart = sFractionPart.substr(0, oOptions.maxFractionDigits);\n\t\t}\n\n\t\t// grouping\n\t\tiLength = sIntegerPart.length;\n\n\t\tif (oOptions.groupingEnabled) {\n\t\t\tiGroupSize = oOptions.groupingSize;\n\t\t\tiBaseGroupSize = oOptions.groupingBaseSize || iGroupSize;\n\t\t\tiPosition = Math.max(iLength - iBaseGroupSize, 0) % iGroupSize || iGroupSize;\n\t\t\tsGroupedIntegerPart = sIntegerPart.substr(0, iPosition);\n\t\t\twhile (iLength - iPosition >= iBaseGroupSize) {\n\t\t\t\tsGroupedIntegerPart += oOptions.groupingSeparator;\n\t\t\t\tsGroupedIntegerPart += sIntegerPart.substr(iPosition, iGroupSize);\n\t\t\t\tiPosition += iGroupSize;\n\t\t\t}\n\t\t\tsGroupedIntegerPart += sIntegerPart.substr(iPosition);\n\t\t} else {\n\t\t\tsGroupedIntegerPart = sIntegerPart;\n\t\t}\n\n\t\t// combine\n\t\tif (bNegative) {\n\t\t\tsResult = oOptions.minusSign;\n\t\t}\n\t\tsResult += sGroupedIntegerPart;\n\t\tif (sFractionPart) {\n\t\t\tsResult += oOptions.decimalSeparator + sFractionPart;\n\t\t}\n\n\t\tif (oShortFormat && oShortFormat.formatString && oOptions.showScale && oOptions.type !== mNumberType.CURRENCY) {\n\t\t\t// Get correct format string based on actual decimal/fraction digits\n\t\t\tsPluralCategory = this.oLocaleData.getPluralCategory(sIntegerPart + \".\" + sFractionPart);\n\t\t\toShortFormat.formatString = this.oLocaleData.getDecimalFormat(oOptions.style, oShortFormat.key, sPluralCategory);\n\t\t\t//inject formatted shortValue in the formatString\n\t\t\tsResult = oShortFormat.formatString.replace(oShortFormat.valueSubString, sResult);\n\t\t\t//formatString may contain '.' (quoted to differentiate them decimal separator)\n\t\t\t//which must be replaced with .\n\t\t\tsResult = sResult.replace(/'.'/g, \".\");\n\t\t}\n\n\t\tif (oOptions.type === mNumberType.CURRENCY) {\n\t\t\tsPattern = oOptions.pattern;\n\n\t\t\tif (oShortFormat && oShortFormat.formatString && oOptions.showScale) {\n\t\t\t\t// Get correct format string based on actual decimal/fraction digits\n\t\t\t\tsPluralCategory = this.oLocaleData.getPluralCategory(sIntegerPart + \".\" + sFractionPart);\n\t\t\t\tsPattern = this.oLocaleData.getCurrencyFormat(\"short\", oShortFormat.key, sPluralCategory);\n\t\t\t\t//formatString may contain '.' (quoted to differentiate them decimal separator)\n\t\t\t\t//which must be replaced with .\n\t\t\t\tsPattern = sPattern.replace(/'.'/g, \".\");\n\t\t\t}\n\n\t\t\t// The currency pattern is definde in some locale, for example in \"ko\", as: ¤#,##0.00;(¤#,##0.00)\n\t\t\t// where the pattern after ';' should be used for negative numbers.\n\t\t\t// Therefore it's needed to check whether the pattern contains ';' and use the later part for\n\t\t\t// negative values\n\t\t\taPatternParts = sPattern.split(\";\");\n\t\t\tif (aPatternParts.length === 2) {\n\t\t\t\tsPattern = bNegative ? aPatternParts[1] : aPatternParts[0];\n\t\t\t\tif (bNegative) {\n\t\t\t\t\tsResult = sResult.substring(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!oOptions.currencyCode) {\n\t\t\t\tsMeasure = this.oLocaleData.getCurrencySymbol(sMeasure);\n\t\t\t}\n\n\t\t\tsResult = this._composeCurrencyResult(sPattern, sResult, sMeasure, {\n\t\t\t\tshowMeasure: oOptions.showMeasure,\n\t\t\t\tnegative: bNegative,\n\t\t\t\tminusSign: oOptions.minusSign\n\t\t\t});\n\t\t}\n\n\t\tif (oOptions.type == mNumberType.PERCENT) {\n\t\t\tsPattern = oOptions.pattern;\n\t\t\tsResult = sPattern.replace(/[0#.,]+/, sResult);\n\t\t\tsResult = sResult.replace(/%/, oOptions.percentSign);\n\t\t}\n\n\t\tif (sap.ui.getCore().getConfiguration().getOriginInfo()) {\n\t\t\tsResult = new String(sResult);\n\t\t\tsResult.originInfo = {\n\t\t\t\tsource: \"Common Locale Data Repository\",\n\t\t\t\tlocale: this.oLocale.toString()\n\t\t\t};\n\t\t}\n\n\t\treturn sResult;\n\t};\n\n\tNumberFormat.prototype._composeCurrencyResult = function (sPattern, sFormattedNumber, sMeasure, oOptions) {\n\t\tvar sMinusSign = oOptions.minusSign;\n\n\t\tsPattern = sPattern.replace(/[0#.,]+/, sFormattedNumber);\n\n\t\tif (oOptions.showMeasure && sMeasure) {\n\t\t\tvar sPlaceHolder = '\\xA4',\n\n\t\t\t// convert the PCRE regex in CLDR to the regex supported by Javascript\n\t\t\tmRegex = {\n\t\t\t\t\"[:digit:]\": /\\d/,\n\t\t\t\t\"[:^S:]\": /[^\\$\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BD\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6]/\n\t\t\t},\n\t\t\t    iMeasureStart = sPattern.indexOf(sPlaceHolder),\n\n\t\t\t// determine whether the number is before the measure or after it by comparing the position of measure placeholder with half of the length of the pattern string\n\t\t\tsPosition = iMeasureStart < sPattern.length / 2 ? \"after\" : \"before\",\n\t\t\t    oSpacingSetting = this.oLocaleData.getCurrencySpacing(sPosition),\n\t\t\t    sCurrencyChar = sPosition === \"after\" ? sMeasure.charAt(sMeasure.length - 1) : sMeasure.charAt(0),\n\t\t\t    sNumberChar,\n\t\t\t    rCurrencyChar = mRegex[oSpacingSetting.currencyMatch],\n\t\t\t    rNumberChar = mRegex[oSpacingSetting.surroundingMatch],\n\t\t\t    iInsertPos;\n\n\t\t\tsPattern = sPattern.replace(sPlaceHolder, sMeasure);\n\n\t\t\tsNumberChar = sPosition === \"after\" ? sPattern.charAt(iMeasureStart + sMeasure.length) : sPattern.charAt(iMeasureStart - 1);\n\n\t\t\tif (rCurrencyChar && rCurrencyChar.test(sCurrencyChar) && rNumberChar && rNumberChar.test(sNumberChar)) {\n\t\t\t\t// when both checks are valid, insert the defined space\n\n\t\t\t\tif (sPosition === \"after\") {\n\t\t\t\t\tiInsertPos = iMeasureStart + sMeasure.length;\n\t\t\t\t} else {\n\t\t\t\t\tiInsertPos = iMeasureStart;\n\t\t\t\t}\n\n\t\t\t\t// insert the space char between the measure and the number\n\t\t\t\tsPattern = sPattern.slice(0, iInsertPos) + oSpacingSetting.insertBetween + sPattern.slice(iInsertPos);\n\t\t\t} else if (oOptions.negative && sPosition === \"after\") {\n\t\t\t\t// when no space is inserted between measure and number\n\t\t\t\t// and when the number is negative and the measure is shown before the number\n\t\t\t\t// a zero-width non-breakable space (\"\\ufeff\") is inserted before the minus sign\n\t\t\t\t// in order to prevent the formatted currency number from being wrapped after the\n\t\t\t\t// minus sign when the space isn't enough for displaying the currency number within\n\t\t\t\t// one line\n\t\t\t\tsMinusSign = '\\uFEFF' + oOptions.minusSign;\n\t\t\t}\n\t\t} else {\n\t\t\t// If measure is not shown, also remove whitespace next to the measure symbol\n\t\t\tsPattern = sPattern.replace(/\\s*\\u00a4\\s*/, \"\");\n\t\t}\n\n\t\tif (oOptions.negative) {\n\t\t\tsPattern = sPattern.replace(/-/, sMinusSign);\n\t\t}\n\n\t\treturn sPattern;\n\t};\n\n\t/**\n  * Parse a string which is formatted according to the given format options.\n  *\n  * @param {string} sValue the string containing a formatted numeric value\n  * @return {number|array} the parsed value or an array which contains the parsed value and the currency code (symbol) when the NumberFormat is a currency instance\n  * @public\n  */\n\tNumberFormat.prototype.parse = function (sValue) {\n\t\tvar oOptions = this.oFormatOptions,\n\t\t    sPlusMinusSigns = quote(oOptions.plusSign + oOptions.minusSign),\n\t\t    sGroupingSeparator = quote(oOptions.groupingSeparator),\n\t\t    sDecimalSeparator = quote(oOptions.decimalSeparator),\n\t\t    sRegExpFloat = \"^\\\\s*([\" + sPlusMinusSigns + \"]?(?:[0-9\" + sGroupingSeparator + \"]+|[0-9\" + sGroupingSeparator + \"]*\" + sDecimalSeparator + \"[0-9]*)(?:[eE][+-][0-9]+)?)\\\\s*$\",\n\t\t    sRegExpInt = \"^\\\\s*([\" + sPlusMinusSigns + \"]?[0-9\" + sGroupingSeparator + \"]+)\\\\s*$\",\n\t\t    oGroupingRegExp = new RegExp(sGroupingSeparator, \"g\"),\n\t\t    oDecimalRegExp = new RegExp(sDecimalSeparator, \"g\"),\n\t\t    sPercentPattern = this.oLocaleData.getPercentPattern(),\n\t\t    sPercentSign = this.oLocaleData.getNumberSymbol(\"percentSign\"),\n\t\t    oRegExp,\n\t\t    bPercent,\n\t\t    sRegExpCurrency,\n\t\t    sRegExpCurrencyMeasure,\n\t\t    aParsed,\n\t\t    sCurrencyMeasure,\n\t\t    vResult = 0,\n\t\t    oShort,\n\t\t    vEmptyParseValue;\n\n\t\tif (sValue === \"\") {\n\t\t\tvEmptyParseValue = oOptions.emptyString;\n\t\t\t// If the 'emptyString' option is set to 0 or NaN and parseAsString is set to true, the return value should be converted to a string.\n\t\t\t// Because null is a valid value for string type, therefore null is not converted to a string.\n\t\t\tif (oOptions.parseAsString && (oOptions.emptyString === 0 || isNaN(oOptions.emptyString))) {\n\t\t\t\tvEmptyParseValue = oOptions.emptyString + \"\";\n\t\t\t}\n\t\t\tif (oOptions.type === mNumberType.CURRENCY) {\n\t\t\t\treturn [vEmptyParseValue, undefined];\n\t\t\t} else {\n\t\t\t\treturn vEmptyParseValue;\n\t\t\t}\n\t\t}\n\n\t\tif (sPercentPattern.charAt(0) === \"%\") {\n\t\t\tsRegExpFloat = sRegExpFloat.slice(0, 1) + \"%?\" + sRegExpFloat.slice(1);\n\t\t} else if (sPercentPattern.charAt(sPercentPattern.length - 1) === \"%\") {\n\t\t\tsRegExpFloat = sRegExpFloat.slice(0, sRegExpFloat.length - 1) + \"%?\" + sRegExpFloat.slice(sRegExpFloat.length - 1);\n\t\t}\n\n\t\t// remove all white spaces because when grouping separator is a non-breaking space (russian and french for example)\n\t\t// user will not input it this way. Also white spaces or grouping separator can be ignored by determining the value\n\t\tsValue = sValue.replace(/\\s/g, \"\");\n\n\t\toShort = getNumberFromShortened(sValue, this.oFormatOptions.style, this.oLocaleData);\n\n\t\t// Check for valid syntax\n\t\tif (oShort) {\n\t\t\tsValue = oShort.number;\n\t\t\toRegExp = new RegExp(sRegExpFloat);\n\t\t} else if (oOptions.isInteger) {\n\t\t\toRegExp = new RegExp(sRegExpInt);\n\t\t} else if (oOptions.type === mNumberType.CURRENCY) {\n\t\t\tsRegExpCurrencyMeasure = \"[^\\\\d\\\\s+-]*\";\n\t\t\tsRegExpCurrency = \"(?:^(\" + sRegExpCurrencyMeasure + \")\" + sRegExpFloat.substring(1, sRegExpFloat.length - 1) + \"$)|(?:^\" + sRegExpFloat.substring(1, sRegExpFloat.length - 1) + \"(\" + sRegExpCurrencyMeasure + \")\\\\s*$)\";\n\t\t\toRegExp = new RegExp(sRegExpCurrency);\n\t\t} else {\n\t\t\toRegExp = new RegExp(sRegExpFloat);\n\t\t}\n\t\tif (!oRegExp.test(sValue)) {\n\t\t\treturn oOptions.type === mNumberType.CURRENCY ? null : NaN;\n\t\t}\n\n\t\tif (oOptions.type === mNumberType.CURRENCY) {\n\t\t\taParsed = oRegExp.exec(sValue);\n\t\t\t// checks whether the currency code (symbol) is at the beginnig or end of the string\n\t\t\tif (aParsed[2]) {\n\t\t\t\t// currency code is at the beginning\n\t\t\t\tsValue = aParsed[2];\n\t\t\t\tsCurrencyMeasure = aParsed[1] || undefined;\n\t\t\t} else {\n\t\t\t\t// currency code is at the end\n\t\t\t\tsValue = aParsed[3];\n\t\t\t\tsCurrencyMeasure = aParsed[4] || undefined;\n\t\t\t}\n\t\t\tif (sCurrencyMeasure && !oOptions.showMeasure) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (sCurrencyMeasure) {\n\t\t\tsCurrencyMeasure = this.oLocaleData.getCurrencyCodeBySymbol(sCurrencyMeasure) || sCurrencyMeasure;\n\t\t}\n\n\t\t// Remove grouping separator and replace locale dependant decimal separator,\n\t\t// before calling parseInt/parseFloat\n\t\tsValue = sValue.replace(oGroupingRegExp, \"\");\n\t\tsValue = sValue.replace(oOptions.plusSign, \"+\");\n\t\tsValue = sValue.replace(oOptions.minusSign, \"-\");\n\n\t\t// Remove the leading \"+\" sign because when \"parseAsString\" is set to true the \"parseInt\" or \"parseFloat\" isn't called and the leading \"+\" has to be moved manually\n\t\tsValue = sValue.replace(/^\\+/, \"\");\n\n\t\t// Expanding short value before using parseInt/parseFloat\n\t\tif (oShort) {\n\t\t\tsValue = sValue.replace(oDecimalRegExp, \".\");\n\t\t\tsValue = NumberFormat._shiftDecimalPoint(sValue, Math.round(Math.log(oShort.factor) / Math.LN10));\n\t\t}\n\n\t\tif (oOptions.isInteger) {\n\t\t\tvResult = oOptions.parseAsString ? sValue : parseInt(sValue, 10);\n\t\t} else {\n\t\t\tsValue = sValue.replace(oDecimalRegExp, \".\");\n\t\t\tif (sValue.indexOf(sPercentSign) !== -1) {\n\t\t\t\tbPercent = true;\n\t\t\t\tsValue = sValue.replace(sPercentSign, \"\");\n\t\t\t}\n\t\t\tvResult = oOptions.parseAsString ? sValue : parseFloat(sValue);\n\t\t\tif (bPercent) {\n\t\t\t\tvResult = NumberFormat._shiftDecimalPoint(vResult, -2);\n\t\t\t}\n\t\t}\n\n\t\t// Get rid of leading zeros\n\t\tif (oOptions.parseAsString) {\n\t\t\tvResult = NumberFormat._shiftDecimalPoint(sValue, 0);\n\t\t}\n\n\t\treturn oOptions.type === mNumberType.CURRENCY ? [vResult, sCurrencyMeasure] : vResult;\n\t};\n\n\t/**\n  * Convert to decimal representation\n  * Floats larger than 1e+20 or smaller than 1e-6 are shown in exponential format,\n  * but need to be converted to decimal format for further formatting\n  *\n  * @param {float} fValue\n  * @private\n  */\n\tNumberFormat.prototype.convertToDecimal = function (fValue) {\n\t\tvar sValue = \"\" + fValue,\n\t\t    bNegative,\n\t\t    sBase,\n\t\t    iDecimalLength,\n\t\t    iFractionLength,\n\t\t    iExponent,\n\t\t    iPos;\n\t\tif (sValue.indexOf(\"e\") == -1 && sValue.indexOf(\"E\") == -1) {\n\t\t\treturn sValue;\n\t\t}\n\t\tvar aResult = sValue.match(/^([+-]?)((\\d+)(?:\\.(\\d+))?)[eE]([+-]?\\d+)$/);\n\t\tbNegative = aResult[1] == \"-\";\n\t\tsBase = aResult[2].replace(/\\./g, \"\");\n\t\tiDecimalLength = aResult[3] ? aResult[3].length : 0;\n\t\tiFractionLength = aResult[4] ? aResult[4].length : 0;\n\t\tiExponent = parseInt(aResult[5], 10);\n\n\t\tif (iExponent > 0) {\n\t\t\tif (iExponent < iFractionLength) {\n\t\t\t\tiPos = iDecimalLength + iExponent;\n\t\t\t\tsValue = sBase.substr(0, iPos) + \".\" + sBase.substr(iPos);\n\t\t\t} else {\n\t\t\t\tsValue = sBase;\n\t\t\t\tiExponent -= iFractionLength;\n\t\t\t\tfor (var i = 0; i < iExponent; i++) {\n\t\t\t\t\tsValue += \"0\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (-iExponent < iDecimalLength) {\n\t\t\t\tiPos = iDecimalLength + iExponent;\n\t\t\t\tsValue = sBase.substr(0, iPos) + \".\" + sBase.substr(iPos);\n\t\t\t} else {\n\t\t\t\tsValue = sBase;\n\t\t\t\tiExponent += iDecimalLength;\n\t\t\t\tfor (var i = 0; i > iExponent; i--) {\n\t\t\t\t\tsValue = \"0\" + sValue;\n\t\t\t\t}\n\t\t\t\tsValue = \"0.\" + sValue;\n\t\t\t}\n\t\t}\n\t\tif (bNegative) {\n\t\t\tsValue = \"-\" + sValue;\n\t\t}\n\t\treturn sValue;\n\t};\n\n\t/**\n  * Returns the scaling factor which is calculated based on the format options and the current locale being used.\n  *\n  * This function returns meaningful scaling factor only when the formatting option 'style' is set to 'short' or 'long' and the option 'shortRefNumber' is set which\n  * is used for calculating the scale factor.\n  *\n  * Consider using this function when the option 'showScale' is set to false which makes the scale factor not to appear in every formatted number but in a shared place.\n  *\n  * @since 1.40\n  * @returns {string|undefined} The scale string if it exists based on the given 'shortRefNumber' option. Otherwise it returns undefined.\n  */\n\tNumberFormat.prototype.getScale = function () {\n\t\tif (this.oFormatOptions.style !== \"short\" && this.oFormatOptions.style !== \"long\" || this.oFormatOptions.shortRefNumber === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar oShortFormat = getShortenedFormat(this.oFormatOptions.shortRefNumber, this.oFormatOptions, this.oLocaleData),\n\t\t    sScale;\n\t\tif (oShortFormat && oShortFormat.formatString) {\n\t\t\t// remove the placeholder of number\n\t\t\t// replace the \"'.'\" with \".\"\n\t\t\t// trim to remove the space and non-breakable space\n\t\t\tsScale = oShortFormat.formatString.replace(rNumPlaceHolder, \"\").replace(/'.'/g, \".\").trim();\n\t\t\tif (sScale) {\n\t\t\t\t// sScale could be an empty string and undefined should be returned in this case\n\t\t\t\treturn sScale;\n\t\t\t}\n\t\t}\n\t};\n\n\tNumberFormat._shiftDecimalPoint = function (vValue, iStep) {\n\t\tif (typeof iStep !== \"number\") {\n\t\t\treturn NaN;\n\t\t}\n\n\t\tvar aExpParts = vValue.toString().toLowerCase().split(\"e\");\n\n\t\tif (typeof vValue === \"number\") {\n\t\t\t// Exponential operation is used instead of simply multiply the number by\n\t\t\t// Math.pow(10, maxFractionDigits) because Exponential operation returns exact float\n\t\t\t// result but multiply doesn't. For example 1.005*100 = 100.49999999999999.\n\n\t\t\tiStep = aExpParts[1] ? +aExpParts[1] + iStep : iStep;\n\n\t\t\treturn +(aExpParts[0] + \"e\" + iStep);\n\t\t} else if (typeof vValue === \"string\") {\n\t\t\tif (parseInt(vValue, 10) === 0 && iStep >= 0) {\n\t\t\t\treturn vValue;\n\t\t\t}\n\n\t\t\tvValue = aExpParts[0];\n\n\t\t\tvar iDecimalPos = vValue.indexOf(\".\"),\n\n\t\t\t// the expected position after move\n\t\t\tiAfterMovePos,\n\n\t\t\t// the integer part in the final result\n\t\t\tsInt,\n\n\t\t\t// the decimal part in the final result\n\t\t\tsDecimal;\n\n\t\t\tif (iDecimalPos === -1) {\n\t\t\t\t// when there's no decimal point, add one to the end\n\t\t\t\tvValue = vValue + \".\";\n\t\t\t\tiDecimalPos = vValue.length - 1;\n\t\t\t}\n\n\t\t\tif (aExpParts[1]) {\n\t\t\t\tiDecimalPos += +aExpParts[1];\n\t\t\t}\n\n\t\t\tiAfterMovePos = iDecimalPos + iStep;\n\t\t\tif (iAfterMovePos <= 0) {\n\t\t\t\t// pad 0 to the left when decimal point should be shifted far left\n\t\t\t\tvValue = jQuery.sap.padLeft(vValue, '0', vValue.length - iAfterMovePos + 1);\n\t\t\t\tiAfterMovePos = 1;\n\t\t\t} else if (iAfterMovePos >= vValue.length - 1) {\n\t\t\t\t// pad 0 to the right\n\t\t\t\tvValue = jQuery.sap.padRight(vValue, '0', iAfterMovePos + 1);\n\t\t\t\tiAfterMovePos = vValue.length - 1;\n\t\t\t}\n\n\t\t\tvValue = vValue.replace(\".\", \"\");\n\n\t\t\tsInt = vValue.substring(0, iAfterMovePos);\n\t\t\tsDecimal = vValue.substring(iAfterMovePos);\n\n\t\t\t// remove unnecessary leading zeros\n\t\t\tsInt = sInt.replace(/^(-?)0+(\\d)/, \"$1$2\");\n\n\t\t\treturn sInt + (sDecimal ? \".\" + sDecimal : \"\");\n\t\t} else {\n\t\t\t// can't shift decimal point in this case\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tfunction getShortenedFormat(fValue, oOptions, oLocaleData) {\n\t\tvar oShortFormat,\n\t\t    iKey,\n\t\t    sKey,\n\t\t    sStyle = oOptions.style,\n\t\t    iPrecision = oOptions.precision !== undefined ? oOptions.precision : 2;\n\n\t\tif (sStyle != \"short\" && sStyle != \"long\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfor (var i = 0; i < 14; i++) {\n\t\t\tiKey = Math.pow(10, i);\n\t\t\tif (rounding(Math.abs(fValue) / iKey, iPrecision - 1) < 10) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsKey = iKey.toString();\n\n\t\t// Use \"other\" format to find the right magnitude, the actual format will be retrieved later\n\t\t// after the value has been calculated\n\t\tvar sCldrFormat = oLocaleData.getDecimalFormat(sStyle, sKey, \"other\");\n\n\t\tif (!sCldrFormat || sCldrFormat == \"0\") {\n\t\t\t//no format or special \"0\" format => number doesn't need to be shortified\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\toShortFormat = {};\n\t\t\toShortFormat.key = sKey;\n\t\t\toShortFormat.formatString = sCldrFormat;\n\t\t\tvar match = sCldrFormat.match(rNumPlaceHolder);\n\t\t\tif (match) {\n\t\t\t\t//to get magnitude, we need to remove from key the number of zeros\n\t\t\t\t//contained in valueSubString before decimal separator minus 1\n\t\t\t\t//    \"0.0\" => magnitude = key\n\t\t\t\t//    \"00\"  => magnitude = key / 10\n\t\t\t\t//    \"000\" => magnitude = key / 100\n\t\t\t\toShortFormat.valueSubString = match[0];\n\t\t\t\tvar decimalSeparatorPosition = oShortFormat.valueSubString.indexOf(\".\");\n\t\t\t\tif (decimalSeparatorPosition == -1) {\n\t\t\t\t\toShortFormat.decimals = 0;\n\t\t\t\t\toShortFormat.magnitude = iKey * Math.pow(10, 1 - oShortFormat.valueSubString.length);\n\t\t\t\t} else {\n\t\t\t\t\toShortFormat.decimals = oShortFormat.valueSubString.length - decimalSeparatorPosition - 1;\n\t\t\t\t\toShortFormat.magnitude = iKey * Math.pow(10, 1 - decimalSeparatorPosition);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//value pattern has not be recognized\n\t\t\t\t//we cannot shortify\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn oShortFormat;\n\t}\n\n\tfunction getNumberFromShortened(sValue, sStyle, oLocaleData) {\n\t\tif (sStyle != \"short\" && sStyle != \"long\") {\n\t\t\treturn;\n\t\t}\n\t\tvar sNumber,\n\t\t    iFactor = 1,\n\t\t    iKey = 10,\n\t\t    aPluralCategories = oLocaleData.getPluralCategories(),\n\t\t    sCldrFormat,\n\t\t    fnGetFactor = function fnGetFactor(sPlural) {\n\t\t\tsCldrFormat = oLocaleData.getDecimalFormat(sStyle, iKey.toString(), sPlural);\n\n\t\t\tif (sCldrFormat) {\n\t\t\t\t// Note: CLDR uses a non-breaking space in the forma tstring\n\t\t\t\tsCldrFormat = sCldrFormat.replace(/[\\s\\u00a0]/g, \"\");\n\t\t\t\t//formatString may contain '.' (quoted to differentiate them decimal separator)\n\t\t\t\t//which must be replaced with .\n\t\t\t\tsCldrFormat = sCldrFormat.replace(/'.'/g, \".\");\n\t\t\t\tvar match = sCldrFormat.match(rNumPlaceHolder);\n\t\t\t\tif (match) {\n\t\t\t\t\t// determine unit -> may be on the beginning e.g. for he\n\t\t\t\t\tvar sValueSubString = match[0];\n\t\t\t\t\tvar sUnit = sCldrFormat.replace(sValueSubString, \"\");\n\t\t\t\t\tif (!sUnit) {\n\t\t\t\t\t\t// If there's no scale defined in the pattern, skip the pattern\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar iIndex = sValue.indexOf(sUnit);\n\t\t\t\t\tif (iIndex >= 0) {\n\t\t\t\t\t\t// parse the number part like every other number and then use the factor to get the real number\n\t\t\t\t\t\tsNumber = sValue.replace(sUnit, \"\");\n\t\t\t\t\t\tiFactor = iKey;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\twhile (iKey < 1e14) {\n\t\t\tif (aPluralCategories.some(fnGetFactor)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tiKey = iKey * 10;\n\t\t}\n\n\t\tif (!sNumber) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn { number: sNumber, factor: iFactor };\n\t}\n\n\tfunction rounding(fValue, iMaxFractionDigits, sRoundingMode) {\n\t\tif (typeof fValue !== \"number\") {\n\t\t\treturn NaN;\n\t\t}\n\n\t\tsRoundingMode = sRoundingMode || NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO;\n\t\tiMaxFractionDigits = parseInt(iMaxFractionDigits, 10);\n\n\t\tif (typeof sRoundingMode === \"function\") {\n\t\t\t// Support custom function for rounding the number\n\t\t\tfValue = sRoundingMode(fValue, iMaxFractionDigits);\n\t\t} else {\n\t\t\tif (!iMaxFractionDigits) {\n\t\t\t\treturn mRoundingFunction[sRoundingMode](fValue);\n\t\t\t}\n\n\t\t\t// First move the decimal point towards right by maxFactionDigits\n\t\t\t// Then using the rounding function to round the first digit after decimal point\n\t\t\t// In the end, move the decimal point back to the original position\n\t\t\t//\n\t\t\t// For example rounding 1.005 by maxFractionDigits 2\n\t\t\t// \t1. Move the decimal point to right by 2 digits, result 100.5\n\t\t\t// \t2. Using the round function, for example, Math.round(100.5) = 101\n\t\t\t// \t3. Move the decimal point back by 2 digits, result 1.01\n\t\t\tfValue = NumberFormat._shiftDecimalPoint(mRoundingFunction[sRoundingMode](NumberFormat._shiftDecimalPoint(fValue, iMaxFractionDigits)), -iMaxFractionDigits);\n\t\t}\n\n\t\treturn fValue;\n\t}\n\n\tfunction quote(sRegex) {\n\t\treturn sRegex.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n\t}\n\n\tfunction getDecimals(fValue, iPrecision) {\n\t\tvar iIntegerDigits = Math.floor(Math.log(Math.abs(fValue)) / Math.LN10);\n\t\treturn Math.max(0, iPrecision - iIntegerDigits - 1);\n\t}\n\n\treturn NumberFormat;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"UOOL\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"ax/N\"), __webpack_require__(\"qW8B\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, Renderer, ListBaseRenderer) {\n\t\"use strict\";\n\n\t/**\n  * List renderer.\n  *\n  * ListRenderer extends the ListBaseRenderer\n  * @namespace\n  * @alias sap.m.ListRenderer\n  */\n\n\tvar ListRenderer = Renderer.extend(ListBaseRenderer);\n\n\tListRenderer.render = function (rm, oControl) {\n\t\t// if \"columns\" aggregation is not in use then we do not need backwards compatibility\n\t\tif (!oControl.getColumns().length) {\n\t\t\tListBaseRenderer.render.call(this, rm, oControl);\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n   * For backwards compatibility we need to render List with columns\n   * However, if the compatibility version is 1.16 or higher then\n   * we stop rendering to force using Table control with columns\n   */\n\t\tif (oControl._isColumnsIncompatible()) {\n\t\t\tjQuery.sap.log.warning(\"Does not render sap.m.List#\" + oControl.getId() + \" with columns aggregation when compatibility version is 1.16 or higher. Instead use sap.m.Table control!\");\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n   * FIXME: Here to support old API if columns are set\n   * We are trying to extend renderer to render list as table\n   * This is so ugly and we need to get rid of it ASAP\n   */\n\t\t__webpack_require__(\"Riks\");\n\t\tvar oRenderer = jQuery.extend({}, this, sap.m.TableRenderer);\n\t\tListBaseRenderer.render.call(oRenderer, rm, oControl);\n\t};\n\n\treturn ListRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"VC4D\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// sap.ui.core.message.MessageMixin\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [], __WEBPACK_UI5_DEFINE_RESULT__ = function () {\n\t\"use strict\";\n\n\t/**\n  * Applying the MessageMixin to a Control's prototype augments the refreshDataState function to support Label-texts.\n  * For all messages, the additionalText property of the message will be set based on the associated Label-texts for the control instances.\n  *\n  * Please be aware, that only controls supporting a value state should apply this mixin to their prototype.\n  *\n  * @protected\n  * @alias sap.ui.core.message.MessageMixin\n  * @mixin\n  * @since 1.44.0\n  */\n\n\tvar MessageMixin = function MessageMixin() {\n\t\tthis.refreshDataState = refreshDataState;\n\t};\n\n\t/**\n  * If messages are present:\n  * - Adds an additional text to the message from the label(s) of the corresponding control instance\n  * - Propagates the value state\n  */\n\tfunction refreshDataState(sName, oDataState) {\n\t\tif (oDataState.getChanges().messages) {\n\t\t\tvar aMessages = oDataState.getMessages();\n\t\t\tvar aLabels = (__webpack_require__(\"LFMt\")).getReferencingLabels(this);\n\n\t\t\tif (aLabels && aLabels.length > 0) {\n\t\t\t\t// we simply take the first label text and ignore all others\n\t\t\t\tvar sLabelId = aLabels[0];\n\t\t\t\taMessages.forEach(function (oMessage) {\n\t\t\t\t\tvar oLabel = sap.ui.getCore().byId(sLabelId);\n\t\t\t\t\tif (oLabel.getMetadata().isInstanceOf(\"sap.ui.core.Label\") && oLabel.getText) {\n\t\t\t\t\t\toMessage.setAdditionalText(oLabel.getText());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"sap.ui.core.message.Message: Can't create labelText.\" + \"Label with id \" + sLabelId + \" is no valid sap.ui.core.Label.\", this);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\t\t\t}\n\n\t\t\t// Update the model to apply the changes\n\t\t\tvar oMessageModel = sap.ui.getCore().getMessageManager().getMessageModel();\n\t\t\toMessageModel.checkUpdate();\n\n\t\t\t// propagate messages\n\t\t\tif (aMessages && aMessages.length > 0) {\n\t\t\t\tvar oMessage = aMessages[0];\n\t\t\t\t// check if the message type is a valid sap.ui.core.ValueState\n\t\t\t\tif (sap.ui.core.ValueState[oMessage.type]) {\n\t\t\t\t\tthis.setValueState(oMessage.type);\n\t\t\t\t\tthis.setValueStateText(oMessage.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.setValueStateText('');\n\t\t\t}\n\t\t}\n\t}\n\n\treturn MessageMixin;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"VWRi\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"VrC2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"s5vy\"), __webpack_require__(\"ax/N\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListItemBaseRenderer, Renderer) {\n\t\"use strict\";\n\n\t/**\n  * CustomListItem renderer.\n  * @namespace\n  */\n\n\tvar CustomListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\t/**\n  * Renders the HTML for the given control, using the provided\n  * {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager}\n  *            oRenderManager the RenderManager that can be used for writing to\n  *            the Render-Output-Buffer\n  * @param {sap.ui.core.Control}\n  *            oControl an object representation of the control that should be\n  *            rendered\n  */\n\tCustomListItemRenderer.renderLIAttributes = function (rm, oLI) {\n\t\trm.addClass(\"sapMCLI\");\n\t};\n\n\tCustomListItemRenderer.renderLIContent = function (rm, oLI) {\n\t\tvar aContent = oLI.getContent();\n\t\tvar cLength = aContent.length;\n\t\tfor (var i = 0; i < cLength; i++) {\n\t\t\trm.renderControl(aContent[i]);\n\t\t}\n\t};\n\n\treturn CustomListItemRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"VwGf\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides the default renderer for control sap.m.Label\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"ax/N\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (Renderer, library, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.m.LabelDesign\n\tvar LabelDesign = library.LabelDesign;\n\n\t/**\n  * Label renderer.\n  *\n  * @author SAP SE\n  * @namespace\n  */\n\tvar LabelRenderer = {};\n\n\t/**\n  * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the renderer output buffer\n  * @param {sap.ui.core.Control} oLabel An object representation of the control that should be rendered\n  */\n\tLabelRenderer.render = function (rm, oLabel) {\n\t\t// convenience variable\n\t\tvar r = LabelRenderer,\n\t\t    sTextDir = oLabel.getTextDirection(),\n\t\t    sTextAlign = oLabel.getTextAlign(),\n\t\t    sWidth = oLabel.getWidth(),\n\t\t    sLabelText = oLabel.getText(),\n\t\t    sTooltip = oLabel.getTooltip_AsString(),\n\t\t    labelForRendering = oLabel.getLabelForRendering(),\n\t\t    htmlTagToRender = labelForRendering ? \"label\" : \"span\",\n\t\t    bDisplayOnly = oLabel.isDisplayOnly();\n\n\t\t// write the HTML into the render manager\n\t\t// for accessibility reasons when a label doesn't have a \"for\" attribute, pointing at a HTML element it is rendered as span\n\t\trm.write(\"<\" + htmlTagToRender);\n\t\trm.writeControlData(oLabel);\n\n\t\t// styles\n\t\trm.addClass(\"sapMLabel\");\n\t\trm.addClass(\"sapUiSelectable\");\n\n\t\t// label wrapping\n\t\tif (oLabel.getWrapping()) {\n\t\t\trm.addClass(\"sapMLabelWrapped\");\n\t\t}\n\t\t// set design to bold\n\t\tif (oLabel.getDesign() == LabelDesign.Bold) {\n\t\t\trm.addStyle(\"font-weight\", \"bold\");\n\t\t}\n\n\t\tif (oLabel.isRequired()) {\n\t\t\trm.addClass(\"sapMLabelRequired\");\n\t\t}\n\n\t\tif (labelForRendering) {\n\t\t\t(__webpack_require__(\"LFMt\")).writeLabelForAttribute(rm, oLabel);\n\t\t} else if (oLabel.getParent() instanceof sap.m.Toolbar) {\n\t\t\trm.addClass(\"sapMLabelTBHeader\");\n\t\t}\n\n\t\t// text direction\n\t\tif (sTextDir !== TextDirection.Inherit) {\n\t\t\trm.writeAttribute(\"dir\", sTextDir.toLowerCase());\n\t\t}\n\n\t\t// style for width\n\t\tif (sWidth) {\n\t\t\trm.addStyle(\"width\", sWidth);\n\t\t} else {\n\t\t\trm.addClass(\"sapMLabelMaxWidth\");\n\t\t}\n\n\t\t// style for text alignment\n\t\tif (sTextAlign) {\n\t\t\tsTextAlign = r.getTextAlign(sTextAlign, sTextDir);\n\t\t\tif (sTextAlign) {\n\t\t\t\trm.addStyle(\"text-align\", sTextAlign);\n\t\t\t}\n\t\t}\n\n\t\tif (sLabelText == \"\") {\n\t\t\trm.addClass(\"sapMLabelNoText\");\n\t\t}\n\n\t\tif (bDisplayOnly) {\n\t\t\trm.addClass(\"sapMLabelDisplayOnly\");\n\t\t}\n\n\t\trm.writeStyles();\n\t\trm.writeClasses();\n\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\trm.write(\">\");\n\n\t\t// write the label text\n\t\trm.write(\"<bdi id=\\\"\" + oLabel.getId() + \"-bdi\\\" >\");\n\t\tif (sLabelText) {\n\t\t\trm.writeEscaped(sLabelText);\n\t\t}\n\t\trm.write(\"</bdi>\");\n\n\t\trm.write(\"</\" + htmlTagToRender + \">\");\n\t};\n\n\t/**\n  * Dummy inheritance of static methods/functions.\n  * @see sap.ui.core.Renderer.getTextAlign\n  * @private\n  */\n\tLabelRenderer.getTextAlign = Renderer.getTextAlign;\n\n\treturn LabelRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"WEwg\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"6s6H\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.CustomListItem.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"E8Q9\"), __webpack_require__(\"nPt9\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListItemBase, library) {\n\t\"use strict\";\n\n\t/**\n  * Constructor for a new CustomListItem.\n  *\n  * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * This control with a content aggregation can be used to customize standard list items that we don't provide. List mode and ListItem type are applied to CustomListItems as well.\n  * <b>Note:</b> Even though the content aggregation allows any control, complex responsive layout controls (e.g. <code>Table, Form</code>) should not be aggregated as content.\n  *\n  * @extends sap.m.ListItemBase\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.CustomListItem\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\n\tvar CustomListItem = ListItemBase.extend(\"sap.m.CustomListItem\", /** @lends sap.m.CustomListItem.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tdefaultAggregation: \"content\",\n\t\t\taggregations: {\n\n\t\t\t\t/**\n     * The content of this list item\n     */\n\t\t\t\tcontent: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"content\", bindable: \"bindable\" }\n\t\t\t},\n\t\t\tdesignTime: true\n\t\t} });\n\n\tCustomListItem.prototype.getContentAnnouncement = function () {\n\t\treturn this.getContent().map(function (oContent) {\n\t\t\treturn ListItemBase.getAccessibilityText(oContent);\n\t\t}).join(\" \").trim();\n\t};\n\n\treturn CustomListItem;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.CustomListItemRenderer\", __webpack_require__(\"VrC2\"));\n\n/***/ }),\n\n/***/ \"WL0V\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"X6ta\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"YrK0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"ZSOb\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Input.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"tzTi\"), __webpack_require__(\"mwwg\"), __webpack_require__(\"rMbf\"), __webpack_require__(\"RL+X\"), __webpack_require__(\"67l+\"), __webpack_require__(\"dg/h\"), __webpack_require__(\"83Mu\"), __webpack_require__(\"q8q5\"), __webpack_require__(\"djde\"), __webpack_require__(\"A1Do\"), __webpack_require__(\"5KZc\"), __webpack_require__(\"D3v/\"), __webpack_require__(\"Y3my\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"NZXE\"), __webpack_require__(\"Uj8/\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"Px0v\"), __webpack_require__(\"20/6\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, Bar, Dialog, InputBase, List, Popover, Item, ColumnListItem, StandardListItem, DisplayListItem, ListItem, Table, Toolbar, ToolbarSpacer, library, IconPool, InvisibleText, Device, ResizeHandler, Control) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListMode\n\n\tvar ListMode = library.ListMode;\n\n\t// shortcut for sap.m.PlacementType\n\tvar PlacementType = library.PlacementType;\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.m.InputTextFormatMode\n\tvar InputTextFormatMode = library.InputTextFormatMode;\n\n\t// shortcut for sap.m.InputType\n\tvar InputType = library.InputType;\n\n\t/**\n  * Constructor for a new <code>Input</code>.\n  *\n  * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * Allows the user to enter and edit text or numeric values in one line.\n  *\n  * <h3>Overview</h3>\n  *\n  * You can enable the autocomplete suggestion feature and the value help option to easily enter a valid value.\n  *\n  * <h3>Guidelines</h3>\n  *\n  * <ul>\n  * <li> Always provide a meaningful label for any input field </li>\n  * <li> Limit the length of the input field. This will visually emphasize the constraints for the field. </li>\n  * <li> Do not use the <code>placeholder</code> property as a label.</li>\n  * <li> Use the <code>description</code> property only for small fields with no placeholders (i.e. for currencies).</li>\n  * </ul>\n  *\n  * <h3>Structure</h3>\n  *\n  * The controls inherits from {@link sap.m.InputBase} which controls the core properties like:\n  * <ul>\n  * <li> editable / read-only </li>\n  * <li> enabled / disabled</li>\n  * <li> placeholder</li>\n  * <li> text direction</li>\n  * <li> value states</li>\n  * </ul>\n  * To aid the user during input, you can enable value help (<code>showValueHelp</code>) or autocomplete (<code>showSuggestion</code>).\n  * <strong>Value help</strong> will open a new dialog where you can refine your input.\n  * <strong>Autocomplete</strong> has three types of suggestions:\n  * <ul>\n  * <li> Single value - a list of suggestions of type <code>sap.ui.core.Item</code> or <code>sap.ui.core.ListItem</code> </li>\n  * <li> Two values - a list of two suggestions (ID and description) of type <code>sap.ui.core.Item</code> or <code>sap.ui.core.ListItem</code> </li>\n  * <li> Tabular suggestions of type <code>sap.m.ColumnListItem</code> </li>\n  * </ul>\n  * The suggestions are stored in two aggregations <code>suggestionItems</code> (for single and double values) and <code>suggestionRows</code> (for tabular values).\n  *\n  * <h3>Usage</h3>\n  *\n  * <b>When to use:</b>\n  * Use the control for short inputs like emails, phones, passwords, fields for assisted value selection.\n  *\n  * <b>When not to use:</b>\n  * Don't use the control for long texts, dates, designated search fields, fields for multiple selection.\n  *\n  * @extends sap.m.InputBase\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.Input\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar Input = InputBase.extend(\"sap.m.Input\", /** @lends sap.m.Input.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * HTML type of the internal <code>input</code> tag (e.g. Text, Number, Email, Phone).\n     * The particular effect of this property differs depending on the browser and the current language settings,\n     * especially for the type Number.<br>\n     * This parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<br>\n     * Only the default value <code>sap.m.InputType.Text</code> may be used in combination with data model formats.\n     * <code>sap.ui.model</code> defines extended formats that are mostly incompatible with normal HTML\n     * representations for numbers and dates.\n     */\n\t\t\t\ttype: { type: \"sap.m.InputType\", group: \"Data\", defaultValue: InputType.Text },\n\n\t\t\t\t/**\n     * Maximum number of characters. Value '0' means the feature is switched off.\n     * This parameter is not compatible with the input type <code>sap.m.InputType.Number</code>.\n     * If the input type is set to <code>Number</code>, the <code>maxLength</code> value is ignored.\n     */\n\t\t\t\tmaxLength: { type: \"int\", group: \"Behavior\", defaultValue: 0 },\n\n\t\t\t\t/**\n     * Only used if type=date and no datepicker is available.\n     * The data is displayed and the user input is parsed according to this format.\n     * NOTE: The value property is always of the form RFC 3339 (YYYY-MM-dd).\n     * @deprecated Since version 1.9.1.\n     * <code>sap.m.DatePicker</code>, <code>sap.m.TimePicker</code> or <code>sap.m.DateTimePicker</code> should be used for date/time inputs and formating.\n     */\n\t\t\t\tdateFormat: { type: \"string\", group: \"Misc\", defaultValue: 'YYYY-MM-dd', deprecated: true },\n\n\t\t\t\t/**\n     * If set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired.\n     * @since 1.16\n     */\n\t\t\t\tshowValueHelp: { type: \"boolean\", group: \"Behavior\", defaultValue: false },\n\n\t\t\t\t/**\n     * If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input.\n     * @since 1.16.1\n     */\n\t\t\t\tshowSuggestion: { type: \"boolean\", group: \"Behavior\", defaultValue: false },\n\n\t\t\t\t/**\n     * If set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect\n     * @since 1.21.0\n     */\n\t\t\t\tvalueHelpOnly: { type: \"boolean\", group: \"Behavior\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines whether to filter the provided suggestions before showing them to the user.\n     */\n\t\t\t\tfilterSuggests: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * If set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field.\n     * Note: The value will be ignored if the actual width of the input field is larger than the specified parameter value.\n     * @since 1.21.1\n     */\n\t\t\t\tmaxSuggestionWidth: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", defaultValue: null },\n\n\t\t\t\t/**\n     * Minimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input. When it's set to 0, suggest event is fired when input with no text gets focus.\n     * @since 1.21.2\n     */\n\t\t\t\tstartSuggestion: { type: \"int\", group: \"Behavior\", defaultValue: 1 },\n\n\t\t\t\t/**\n     * For tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true.\n     *\n     * NOTE: If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect.\n     * @since 1.22.1\n     */\n\t\t\t\tshowTableSuggestionValueHelp: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * The description is a text after the input field, e.g. units of measurement, currencies.\n     */\n\t\t\t\tdescription: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * This property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description.\n     */\n\t\t\t\tfieldWidth: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", defaultValue: '50%' },\n\n\t\t\t\t/**\n     * Indicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false).\n     * @since 1.24\n     */\n\t\t\t\tvalueLiveUpdate: { type: \"boolean\", group: \"Behavior\", defaultValue: false },\n\n\t\t\t\t/**\n     * Defines the key of the selected item.\n     *\n     * <b>Note:</b> If duplicate keys exist, the first item matching the key is used.\n     * @since 1.44\n     */\n\t\t\t\tselectedKey: { type: \"string\", group: \"Data\", defaultValue: \"\" },\n\t\t\t\t/**\n     * Defines the display text format mode.\n     * @since 1.44\n     */\n\t\t\t\ttextFormatMode: { type: \"sap.m.InputTextFormatMode\", group: \"Misc\", defaultValue: InputTextFormatMode.Value },\n\t\t\t\t/**\n     * Defines the display text formatter function.\n     * @since 1.44\n     */\n\t\t\t\ttextFormatter: { type: \"any\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t\t/**\n     * Defines the validation callback function called when a suggestion row gets selected.\n     * @since 1.44\n     */\n\t\t\t\tsuggestionRowValidator: { type: \"any\", group: \"Misc\", defaultValue: \"\" },\n\n\t\t\t\t/**\n     * Specifies whether the suggestions highlighting is enabled.\n     * @since 1.46\n     */\n\t\t\t\tenableSuggestionsHighlighting: { type: \"boolean\", group: \"Behavior\", defaultValue: true }\n\t\t\t},\n\t\t\tdefaultAggregation: \"suggestionItems\",\n\t\t\taggregations: {\n\n\t\t\t\t/**\n     * SuggestItems are the items which will be shown in the suggestion popup. Changing this aggregation (by calling addSuggestionItem, insertSuggestionItem, removeSuggestionItem, removeAllSuggestionItems, destroySuggestionItems) after input is rendered will open/close the suggestion popup. o display suggestions with two text values, it is also possible to add sap.ui.core/ListItems as SuggestionItems (since 1.21.1). For the selected ListItem, only the first value is returned to the input field.\n     * @since 1.16.1\n     */\n\t\t\t\tsuggestionItems: { type: \"sap.ui.core.Item\", multiple: true, singularName: \"suggestionItem\" },\n\n\t\t\t\t/**\n     * The suggestionColumns and suggestionRows are for tabular input suggestions. This aggregation allows for binding the table columns; for more details see the aggregation \"suggestionRows\".\n     * @since 1.21.1\n     */\n\t\t\t\tsuggestionColumns: { type: \"sap.m.Column\", multiple: true, singularName: \"suggestionColumn\", bindable: \"bindable\" },\n\n\t\t\t\t/**\n     * The suggestionColumns and suggestionRows are for tabular input suggestions. This aggregation allows for binding the table cells.\n     * The items of this aggregation are to be bound directly or to set in the suggest event method.\n     * Note: If this aggregation is filled, the aggregation suggestionItems will be ignored.\n     * @since 1.21.1\n     */\n\t\t\t\tsuggestionRows: { type: \"sap.m.ColumnListItem\", multiple: true, singularName: \"suggestionRow\", bindable: \"bindable\" },\n\n\t\t\t\t/**\n     * The icon on the right side of the Input\n     */\n\t\t\t\t_valueHelpIcon: { type: \"sap.ui.core.Icon\", multiple: false, visibility: \"hidden\" }\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n     * Sets or retrieves the selected item from the suggestionItems.\n     * @since 1.44\n     */\n\t\t\t\tselectedItem: { type: \"sap.ui.core.Item\", multiple: false },\n\n\t\t\t\t/**\n     * Sets or retrieves the selected row from the suggestionRows.\n     * @since 1.44\n     */\n\t\t\t\tselectedRow: { type: \"sap.m.ColumnListItem\", multiple: false }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * This event is fired when the value of the input is changed - e.g. at each keypress\n     */\n\t\t\t\tliveChange: {\n\t\t\t\t\tparameters: {\n\t\t\t\t\t\t/**\n       * The new value of the input.\n       */\n\t\t\t\t\t\tvalue: { type: \"string\" },\n\n\t\t\t\t\t\t/**\n       * Indicate that ESC key triggered the event.\n       * @since 1.48\n       */\n\t\t\t\t\t\tescPressed: { type: \"boolean\" },\n\n\t\t\t\t\t\t/**\n       * The value of the input before pressing ESC key.\n       * @since 1.48\n       */\n\t\t\t\t\t\tpreviousValue: { type: \"string\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * When the value help indicator is clicked, this event will be fired.\n     * @since 1.16\n     */\n\t\t\t\tvalueHelpRequest: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The event parameter is set to true, when the button at the end of the suggestion table is clicked, otherwise false. It can be used to determine whether the \"value help\" trigger or the \"show all items\" trigger has been pressed.\n       */\n\t\t\t\t\t\tfromSuggestions: { type: \"boolean\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup.\n     * @since 1.16.1\n     */\n\t\t\t\tsuggest: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The current value which has been typed in the input.\n       */\n\t\t\t\t\t\tsuggestValue: { type: \"string\" },\n\n\t\t\t\t\t\t/**\n       * The suggestion list is passed to this event for convenience. If you use list-based or tabular suggestions, fill the suggestionList with the items you want to suggest. Otherwise, directly add the suggestions to the \"suggestionItems\" aggregation of the input control.\n       */\n\t\t\t\t\t\tsuggestionColumns: { type: \"sap.m.ListBase\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup.\n     * @since 1.16.3\n     */\n\t\t\t\tsuggestionItemSelected: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * This is the item selected in the suggestion popup for one and two-value suggestions. For tabular suggestions, this value will not be set.\n       */\n\t\t\t\t\t\tselectedItem: { type: \"sap.ui.core.Item\" },\n\n\t\t\t\t\t\t/**\n       * This is the row selected in the tabular suggestion popup represented as a ColumnListItem. For one and two-value suggestions, this value will not be set.\n       *\n       * Note: The row result function to select a result value for the string is already executed at this time. To pick different value for the input field or to do follow up steps after the item has been selected.\n       * @since 1.21.1\n       */\n\t\t\t\t\t\tselectedRow: { type: \"sap.m.ColumnListItem\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n     * This event is fired when user presses the <code>Enter</code> key on the input.\n     *\n     * <b>Note:</b>\n     * The event is fired independent of whether there was a change before or not. If a change was performed the event is fired after the change event.\n     * The event is also fired when an item of the select list is selected via <code>Enter</code>.\n     * The event is only fired on an input which allows text input (<code>editable</code>, <code>enabled</code> and not <code>valueHelpOnly</code>).\n     *\n     * @since 1.33.0\n     */\n\t\t\t\tsubmit: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The new value of the input.\n       */\n\t\t\t\t\t\tvalue: { type: \"string\" }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} });\n\n\tIconPool.insertFontFaceStyle();\n\n\t/**\n  * Returns true if some word from the text starts with specific value.\n  *\n  * @name sap.m.Input._wordStartsWithValue\n  * @method\n  * @private\n  * @param {string} sText The text of the word.\n  * @param {string} sValue The value which must be compared to the word.\n  * @returns {boolean} Indication if the word starts with the passed value.\n  */\n\tInput._wordStartsWithValue = function (sText, sValue) {\n\n\t\tvar index;\n\n\t\twhile (sText) {\n\t\t\tif (jQuery.sap.startsWithIgnoreCase(sText, sValue)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tindex = sText.indexOf(' ');\n\t\t\tif (index == -1) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsText = sText.substring(index + 1);\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n  * The default filter function for one and two-value. It checks whether the item text begins with the typed value.\n  *\n  * @name sap.m.Input._DEFAULTFILTER\n  * @private\n  * @param {string} sValue the current filter string.\n  * @param {sap.ui.core.Item} oItem the filtered list item.\n  * @returns {boolean} true for items that start with the parameter sValue, false for non matching items.\n  */\n\tInput._DEFAULTFILTER = function (sValue, oItem) {\n\n\t\tif (oItem instanceof ListItem && Input._wordStartsWithValue(oItem.getAdditionalText(), sValue)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Input._wordStartsWithValue(oItem.getText(), sValue);\n\t};\n\n\t/**\n  * The default filter function for tabular suggestions. It checks whether some item text begins with the typed value.\n  *\n  * @name sap.m.Input._DEFAULTFILTER_TABULAR\n  * @private\n  * @param {string} sValue the current filter string.\n  * @param {sap.m.ColumnListItem} oColumnListItem The filtered list item.\n  * @returns {boolean} true for items that start with the parameter sValue, false for non matching items.\n  */\n\tInput._DEFAULTFILTER_TABULAR = function (sValue, oColumnListItem) {\n\t\tvar aCells = oColumnListItem.getCells(),\n\t\t    i = 0;\n\n\t\tfor (; i < aCells.length; i++) {\n\n\t\t\tif (aCells[i].getText) {\n\t\t\t\tif (Input._wordStartsWithValue(aCells[i].getText(), sValue)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n  * The default result function for tabular suggestions. It returns the value of the first cell with a \"text\" property.\n  *\n  * @name sap.m.Input._DEFAULTRESULT_TABULAR\n  * @private\n  * @param {sap.m.ColumnListItem} oColumnListItem The selected list item.\n  * @returns {string} The value to be displayed in the input field.\n  */\n\tInput._DEFAULTRESULT_TABULAR = function (oColumnListItem) {\n\t\tvar aCells = oColumnListItem.getCells(),\n\t\t    i = 0;\n\n\t\tfor (; i < aCells.length; i++) {\n\t\t\t// take first cell with a text method and compare value\n\t\t\tif (aCells[i].getText) {\n\t\t\t\treturn aCells[i].getText();\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t/**\n  * Initializes the control.\n  *\n  * @name sap.m.Input.init\n  * @private\n  */\n\tInput.prototype.init = function () {\n\t\tInputBase.prototype.init.call(this);\n\t\tthis._fnFilter = Input._DEFAULTFILTER;\n\n\t\t// Show suggestions in a dialog on phones:\n\t\tthis._bUseDialog = Device.system.phone;\n\n\t\t// Show suggestions in a full screen dialog on phones:\n\t\tthis._bFullScreen = Device.system.phone;\n\n\t\t// Counter for concurrent issues with setValue:\n\t\tthis._iSetCount = 0;\n\n\t\tthis._oRb = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\n\t\t// Init static hidden text for ARIA\n\t\tif (!Input._sAriaPopupLabelId) {\n\t\t\tInput._sAriaPopupLabelId = new InvisibleText({\n\t\t\t\ttext: this._oRb.getText(\"INPUT_AVALIABLE_VALUES\")\n\t\t\t}).toStatic().getId();\n\t\t}\n\t};\n\n\t/**\n  * Destroys the Input.\n  *\n  * @name sap.m.Input.exit\n  * @private\n  */\n\tInput.prototype.exit = function () {\n\n\t\tthis._deregisterEvents();\n\n\t\t// clear delayed calls\n\t\tthis.cancelPendingSuggest();\n\n\t\tif (this._iRefreshListTimeout) {\n\t\t\tjQuery.sap.clearDelayedCall(this._iRefreshListTimeout);\n\t\t\tthis._iRefreshListTimeout = null;\n\t\t}\n\n\t\tif (this._oSuggestionPopup) {\n\t\t\tthis._oSuggestionPopup.destroy();\n\t\t\tthis._oSuggestionPopup = null;\n\t\t}\n\n\t\t// CSN# 1404088/2014: list is not destroyed when it has not been attached to the popup yet\n\t\tif (this._oList) {\n\t\t\tthis._oList.destroy();\n\t\t\tthis._oList = null;\n\t\t}\n\n\t\tif (this._oSuggestionTable) {\n\t\t\tthis._oSuggestionTable.destroy();\n\t\t\tthis._oSuggestionTable = null;\n\t\t}\n\n\t\tif (this._oButtonToolbar) {\n\t\t\tthis._oButtonToolbar.destroy();\n\t\t\tthis._oButtonToolbar = null;\n\t\t}\n\n\t\tif (this._oShowMoreButton) {\n\t\t\tthis._oShowMoreButton.destroy();\n\t\t\tthis._oShowMoreButton = null;\n\t\t}\n\t};\n\n\t/**\n  * Resize the popup to the input width and makes sure that the input is never bigger than the popup.\n  *\n  * @name sap.m.Input._resizePopup\n  * @private\n  */\n\tInput.prototype._resizePopup = function (bForceResize) {\n\t\tvar that = this;\n\n\t\tif (bForceResize) {\n\t\t\tthis._shouldResizePopup = true;\n\t\t}\n\n\t\tif (this._oList && this._oSuggestionPopup && this._shouldResizePopup) {\n\n\t\t\tif (this.getMaxSuggestionWidth()) {\n\t\t\t\tthis._oSuggestionPopup.setContentWidth(this.getMaxSuggestionWidth());\n\t\t\t} else {\n\t\t\t\tthis._oSuggestionPopup.setContentWidth(this.$().outerWidth() + \"px\");\n\t\t\t}\n\n\t\t\t// resize suggestion popup to minimum size of the input field\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (that._oSuggestionPopup && that._oSuggestionPopup.isOpen() && that._oSuggestionPopup.$().outerWidth() < that.$().outerWidth()) {\n\t\t\t\t\tthat._oSuggestionPopup.setContentWidth(that.$().outerWidth() + \"px\");\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t};\n\n\t/**\n  * Overwrites the onBeforeRendering.\n  *\n  * @name sap.m.Input.onBeforeRendering\n  * @public\n  */\n\tInput.prototype.onBeforeRendering = function () {\n\t\tvar sSelectedKey = this.getSelectedKey();\n\t\tInputBase.prototype.onBeforeRendering.call(this);\n\n\t\tthis._deregisterEvents();\n\n\t\tif (sSelectedKey) {\n\t\t\tthis.setSelectedKey(sSelectedKey);\n\t\t}\n\n\t\tif (this.getShowSuggestion()) {\n\t\t\tif (this.getShowTableSuggestionValueHelp()) {\n\t\t\t\tthis._addShowMoreButton();\n\t\t\t} else {\n\t\t\t\tthis._removeShowMoreButton();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Overwrites the onAfterRendering.\n  *\n  * @name sap.m.Input.onAfterRendering\n  * @public\n  */\n\tInput.prototype.onAfterRendering = function () {\n\t\tvar that = this;\n\n\t\tInputBase.prototype.onAfterRendering.call(this);\n\n\t\tif (!this._bFullScreen) {\n\t\t\tthis._sPopupResizeHandler = ResizeHandler.register(this.getDomRef(), function () {\n\t\t\t\tthat._resizePopup();\n\t\t\t});\n\t\t}\n\n\t\tif (this._bUseDialog && this.getEditable() && this.getEnabled()) {\n\t\t\t// click event has to be used in order to focus on the input in dialog\n\t\t\t// do not open suggestion dialog by click over the value help icon\n\t\t\tthis.$().on(\"click\", jQuery.proxy(function (oEvent) {\n\t\t\t\tif (this._onclick) {\n\t\t\t\t\tthis._onclick(oEvent);\n\t\t\t\t}\n\n\t\t\t\tif (this.getShowSuggestion() && this._oSuggestionPopup && oEvent.target.id != this.getId() + \"-vhi\") {\n\t\t\t\t\tthis._resizePopup(true);\n\t\t\t\t\tthis._oSuggestionPopup.open();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t}\n\t};\n\n\t/**\n  * Returns input display text.\n  *\n  * @name sap.m.Input._getDisplayText\n  * @private\n  * @param {sap.ui.core.Item} oItem The displayed item.\n  * @returns {string} The key for the text format mode.\n  */\n\tInput.prototype._getDisplayText = function (oItem) {\n\n\t\tvar fTextFormatter = this.getTextFormatter();\n\t\tif (fTextFormatter) {\n\t\t\treturn fTextFormatter(oItem);\n\t\t}\n\n\t\tvar sText = oItem.getText(),\n\t\t    sKey = oItem.getKey(),\n\t\t    textFormatMode = this.getTextFormatMode();\n\n\t\tswitch (textFormatMode) {\n\t\t\tcase InputTextFormatMode.Key:\n\t\t\t\treturn sKey;\n\t\t\tcase InputTextFormatMode.ValueKey:\n\t\t\t\treturn sText + ' (' + sKey + ')';\n\t\t\tcase InputTextFormatMode.KeyValue:\n\t\t\t\treturn '(' + sKey + ') ' + sText;\n\t\t\tdefault:\n\t\t\t\treturn sText;\n\t\t}\n\t};\n\n\t/**\n  * Handles value updates.\n  *\n  * @name sap.m.Input._onValueUpdated\n  * @private\n  * @param {string} newValue The new selected value.\n  */\n\tInput.prototype._onValueUpdated = function (newValue) {\n\t\tif (this._bSelectingItem || newValue === this._sSelectedValue) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sKey = this.getSelectedKey(),\n\t\t    bHasSelectedItem;\n\n\t\tif (sKey === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._hasTabularSuggestions()) {\n\t\t\tbHasSelectedItem = !!this._oSuggestionTable.getSelectedItem();\n\t\t} else {\n\t\t\tbHasSelectedItem = !!this._oList.getSelectedItem();\n\t\t}\n\n\t\tif (bHasSelectedItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setProperty(\"selectedKey\", '', true);\n\t\tthis.setAssociation(\"selectedRow\", null, true);\n\t\tthis.setAssociation(\"selectedItem\", null, true);\n\n\t\tthis.fireSuggestionItemSelected({\n\t\t\tselectedItem: null,\n\t\t\tselectedRow: null\n\t\t});\n\t};\n\n\t/**\n  * Updates and synchronizes the <code>selectedItem</code> association and <code>selectedKey</code> properties.\n  *\n  * @name sap.m.Input.setSelectionItem\n  * @private\n  * @param {sap.ui.core.Item | null} oItem Selected item.\n  * @param {boolean} bInteractionChange Specifies if the change is triggered by user interaction.\n  */\n\tInput.prototype.setSelectionItem = function (oItem, bInteractionChange) {\n\n\t\tif (!oItem) {\n\t\t\tthis.setAssociation(\"selectedItem\", null, true);\n\t\t\tthis.setProperty(\"selectedKey\", '', true);\n\n\t\t\tthis.setValue('');\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._bSelectingItem = true;\n\n\t\tvar iCount = this._iSetCount,\n\t\t    sNewValue;\n\n\t\tthis.setAssociation(\"selectedItem\", oItem, true);\n\t\tthis.setProperty(\"selectedKey\", oItem.getKey(), true);\n\n\t\t// fire suggestion item select event\n\t\tif (bInteractionChange) {\n\t\t\tthis.fireSuggestionItemSelected({\n\t\t\t\tselectedItem: oItem\n\t\t\t});\n\t\t}\n\n\t\t// choose which field should be used for the value\n\t\tif (iCount !== this._iSetCount) {\n\t\t\t// if the event handler modified the input value we take this one as new value\n\t\t\tsNewValue = this.getValue();\n\t\t} else {\n\t\t\tsNewValue = this._getDisplayText(oItem);\n\t\t}\n\n\t\tthis._sSelectedValue = sNewValue;\n\n\t\t// update the input field\n\t\tif (this._bUseDialog) {\n\t\t\tthis._oPopupInput.setValue(sNewValue);\n\t\t\tthis._oPopupInput._doSelect();\n\t\t} else {\n\t\t\t// call _getInputValue to apply the maxLength to the typed value\n\t\t\tsNewValue = this._getInputValue(sNewValue);\n\t\t\tthis.setDOMValue(sNewValue);\n\t\t\tthis.onChange(null, null, sNewValue);\n\t\t}\n\n\t\tthis._iPopupListSelectedIndex = -1;\n\n\t\tif (!(this._bUseDialog && this instanceof sap.m.MultiInput && this._isMultiLineMode)) {\n\t\t\tthis._closeSuggestionPopup();\n\t\t}\n\n\t\tif (!Device.support.touch) {\n\t\t\tthis._doSelect();\n\t\t}\n\n\t\tthis._bSelectingItem = false;\n\t};\n\n\t/**\n  * Sets the <code>selectedItem</code> association.\n  *\n  *\n  * @name sap.m.Input.setSelectedItem\n  * @public\n  * @param {sap.ui.core.Item} oItem New value for the <code>selectedItem</code> association.\n  * Default value is <code>null</code>.\n  * If an ID of a <code>sap.ui.core.Item</code> is given, the item with this ID becomes the\n  * <code>selectedItem</code> association.\n  * Alternatively, a <code>sap.ui.core.Item</code> instance may be given or <code>null</code> to clear\n  * the selection.\n  * @returns {sap.m.Input} <code>this</code> to allow method chaining.\n  * @since 1.44\n  */\n\tInput.prototype.setSelectedItem = function (oItem) {\n\n\t\tif (typeof oItem === \"string\") {\n\t\t\toItem = sap.ui.getCore().byId(oItem);\n\t\t}\n\n\t\tif (oItem !== null && !(oItem instanceof Item)) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.setSelectionItem(oItem);\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the <code>selectedKey</code> property.\n  *\n  * Default value is an empty string <code>\"\"</code> or <code>undefined</code>.\n  *\n  * @name sap.m.Input.setSelectedKey\n  * @public\n  * @param {string} sKey New value for property <code>selectedKey</code>.\n  * If the provided <code>sKey</code> is an empty string <code>\"\"</code> or <code>undefined</code>,\n  * the selection is cleared.\n  * If duplicate keys exist, the first item matching the key is selected.\n  * @returns {sap.m.Input} <code>this</code> to allow method chaining.\n  * @since 1.44\n  */\n\tInput.prototype.setSelectedKey = function (sKey) {\n\t\tsKey = this.validateProperty(\"selectedKey\", sKey);\n\n\t\tif (this._hasTabularSuggestions()) {\n\t\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!sKey) {\n\t\t\tthis.setSelectionItem();\n\t\t\treturn this;\n\t\t}\n\n\t\tvar oItem = this.getSuggestionItemByKey(sKey);\n\n\t\tif (oItem) {\n\t\t\tthis.setSelectionItem(oItem);\n\t\t} else {\n\t\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Gets the item with the given key from the aggregation <code>suggestionItems</code>.\n  * <b>Note:</b> If duplicate keys exist, the first item matching the key is returned.\n  *\n  * @public\n  * @name sap.m.Input.getSuggestionItemByKey\n  * @param {string} sKey An item key that specifies the item to retrieve.\n  * @returns {sap.ui.core.Item} Suggestion item.\n  * @since 1.44\n  */\n\tInput.prototype.getSuggestionItemByKey = function (sKey) {\n\t\tvar aItems = this.getSuggestionItems() || [],\n\t\t    oItem,\n\t\t    i;\n\n\t\tfor (i = 0; i < aItems.length; i++) {\n\t\t\toItem = aItems[i];\n\t\t\tif (oItem.getKey() === sKey) {\n\t\t\t\treturn oItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Updates and synchronizes the <code>selectedRow</code> association and <code>selectedKey</code> properties.\n  *\n  * @name sap.m.Input.setSelectionRow\n  * @private\n  * @param {sap.m.ColumnListItem} oListItem Selected item.\n  * @param {boolean} bInteractionChange Specifies if the change is triggered by user interaction.\n  */\n\tInput.prototype.setSelectionRow = function (oListItem, bInteractionChange) {\n\n\t\tif (!oListItem) {\n\t\t\tthis.setAssociation(\"selectedRow\", null, true);\n\t\t\tthis.setProperty(\"selectedKey\", '', true);\n\n\t\t\tthis.setValue('');\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._bSelectingItem = true;\n\n\t\tvar oItem,\n\t\t    fSuggestionRowValidator = this.getSuggestionRowValidator();\n\n\t\tif (fSuggestionRowValidator) {\n\t\t\toItem = fSuggestionRowValidator(oListItem);\n\t\t\tif (!(oItem instanceof Item)) {\n\t\t\t\toItem = null;\n\t\t\t}\n\t\t}\n\n\t\tvar iCount = this._iSetCount,\n\t\t    sKey = \"\",\n\t\t    sNewValue;\n\n\t\tthis.setAssociation(\"selectedRow\", oListItem, true);\n\n\t\tif (oItem) {\n\t\t\tsKey = oItem.getKey();\n\t\t}\n\n\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\n\t\t// fire suggestion item select event\n\t\tif (bInteractionChange) {\n\t\t\tthis.fireSuggestionItemSelected({\n\t\t\t\tselectedRow: oListItem\n\t\t\t});\n\t\t}\n\n\t\t// choose which field should be used for the value\n\t\tif (iCount !== this._iSetCount) {\n\t\t\t// if the event handler modified the input value we take this one as new value\n\t\t\tsNewValue = this.getValue();\n\t\t} else {\n\t\t\t// for tabular suggestions we call a result filter function\n\t\t\tif (oItem) {\n\t\t\t\tsNewValue = this._getDisplayText(oItem);\n\t\t\t} else {\n\t\t\t\tsNewValue = this._fnRowResultFilter(oListItem);\n\t\t\t}\n\t\t}\n\n\t\tthis._sSelectedValue = sNewValue;\n\n\t\t// update the input field\n\t\tif (this._bUseDialog) {\n\t\t\tthis._oPopupInput.setValue(sNewValue);\n\t\t\tthis._oPopupInput._doSelect();\n\t\t} else {\n\t\t\t// call _getInputValue to apply the maxLength to the typed value\n\t\t\tsNewValue = this._getInputValue(sNewValue);\n\t\t\tthis.setDOMValue(sNewValue);\n\t\t\tthis.onChange(null, null, sNewValue);\n\t\t}\n\t\tthis._iPopupListSelectedIndex = -1;\n\n\t\tif (!(this._bUseDialog && this instanceof sap.m.MultiInput && this._isMultiLineMode)) {\n\t\t\tthis._closeSuggestionPopup();\n\t\t}\n\n\t\tif (!Device.support.touch) {\n\t\t\tthis._doSelect();\n\t\t}\n\n\t\tthis._bSelectingItem = false;\n\t};\n\n\t/**\n  * Sets the <code>selectedRow</code> association.\n  * Default value is <code>null</code>.\n  *\n  * @name sap.m.Input.setSelectedRow\n  * @public\n  * @param {sap.m.ColumnListItem} oListItem New value for the <code>selectedRow</code> association.\n  * If an ID of a <code>sap.m.ColumnListItem</code> is given, the item with this ID becomes the\n  * <code>selectedRow</code> association.\n  * Alternatively, a <code>sap.m.ColumnListItem</code> instance may be given or <code>null</code> to clear\n  * the selection.\n  * @returns {sap.m.Input} <code>this</code> to allow method chaining.\n  * @since 1.44\n  */\n\tInput.prototype.setSelectedRow = function (oListItem) {\n\n\t\tif (typeof oListItem === \"string\") {\n\t\t\toListItem = sap.ui.getCore().byId(oListItem);\n\t\t}\n\n\t\tif (oListItem !== null && !(oListItem instanceof ColumnListItem)) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.setSelectionRow(oListItem);\n\t\treturn this;\n\t};\n\n\t/**\n  * Returns/Instantiates the value help icon control when needed.\n  *\n  * @name sap.m.Input._getValueHelpIcon\n  * @private\n  * @returns {object} Value help icon of the input.\n  */\n\tInput.prototype._getValueHelpIcon = function () {\n\t\tvar that = this,\n\t\t    valueHelpIcon = this.getAggregation(\"_valueHelpIcon\"),\n\t\t    sURI;\n\n\t\tif (valueHelpIcon) {\n\t\t\treturn valueHelpIcon;\n\t\t}\n\n\t\tsURI = IconPool.getIconURI(\"value-help\");\n\t\tvalueHelpIcon = IconPool.createControlByURI({\n\t\t\tid: this.getId() + \"-vhi\",\n\t\t\tsrc: sURI,\n\t\t\tuseIconTooltip: false,\n\t\t\tnoTabStop: true\n\t\t});\n\n\t\tvalueHelpIcon.addStyleClass(\"sapMInputValHelpInner\");\n\t\tvalueHelpIcon.attachPress(function (evt) {\n\t\t\t// if the property valueHelpOnly is set to true, the event is triggered in the ontap function\n\t\t\tif (!that.getValueHelpOnly()) {\n\t\t\t\tthis.getParent().focus();\n\t\t\t\tthat.fireValueHelpRequest({ fromSuggestions: false });\n\t\t\t}\n\t\t});\n\n\t\tthis.setAggregation(\"_valueHelpIcon\", valueHelpIcon);\n\n\t\treturn valueHelpIcon;\n\t};\n\n\t/**\n  * Fire valueHelpRequest event if conditions for ValueHelpOnly property are met.\n  *\n  * @name sap.m.Input._fireValueHelpRequestForValueHelpOnly\n  * @private\n  */\n\tInput.prototype._fireValueHelpRequestForValueHelpOnly = function () {\n\t\t// if all the named properties are set to true, the control triggers \"valueHelpRequest\" for all user interactions\n\t\tif (this.getEnabled() && this.getEditable() && this.getShowValueHelp() && this.getValueHelpOnly()) {\n\t\t\tthis.fireValueHelpRequest({ fromSuggestions: false });\n\t\t}\n\t};\n\n\t/**\n  * Fire valueHelpRequest event on tap.\n  *\n  * @name sap.m.Input.ontap\n  * @public\n  * @param {jQuery.Event} oEvent Ontap event.\n  */\n\tInput.prototype.ontap = function (oEvent) {\n\t\tInputBase.prototype.ontap.call(this, oEvent);\n\t\tthis._fireValueHelpRequestForValueHelpOnly();\n\t};\n\n\t/**\n  * Defines the width of the input. Default value is 100%.\n  *\n  * @name sap.m.Input.setWidth\n  * @public\n  * @param {string} sWidth The new width of the input.\n  * @returns {void} Sets the width of the Input.\n  */\n\tInput.prototype.setWidth = function (sWidth) {\n\t\treturn InputBase.prototype.setWidth.call(this, sWidth || \"100%\");\n\t};\n\n\t/**\n  * Returns the width of the input.\n  *\n  * @name sap.m.Input.getWidth\n  * @public\n  * @return {string} The current width or 100% as default.\n  */\n\tInput.prototype.getWidth = function () {\n\t\treturn this.getProperty(\"width\") || \"100%\";\n\t};\n\n\t/**\n  * Sets a custom filter function for suggestions. The default is to check whether the first item text begins with the typed value. For one and two-value suggestions this callback function will operate on sap.ui.core.Item types, for tabular suggestions the function will operate on sap.m.ColumnListItem types.\n  *\n  * @name sap.m.Input.setFilterFunction\n  * @public\n  * @param {function} fnFilter The filter function is called when displaying suggestion items and has two input parameters: the first one is the string that is currently typed in the input field and the second one is the item that is being filtered. Returning true will add this item to the popup, returning false will not display it.\n  * @returns {sap.m.Input} this pointer for chaining\n  * @since 1.16.1\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tInput.prototype.setFilterFunction = function (fnFilter) {\n\t\t// reset to default function when calling with null or undefined\n\t\tif (fnFilter === null || fnFilter === undefined) {\n\t\t\tthis._fnFilter = Input._DEFAULTFILTER;\n\t\t\treturn this;\n\t\t}\n\t\t// set custom function\n\t\tjQuery.sap.assert(typeof fnFilter === \"function\", \"Input.setFilterFunction: first argument fnFilter must be a function on \" + this);\n\t\tthis._fnFilter = fnFilter;\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets a custom result filter function for tabular suggestions to select the text that is passed to the input field. Default is to check whether the first cell with a \"text\" property begins with the typed value. For one value and two-value suggestions this callback function is not called.\n  *\n  * @name sap.m.Input.setRowResultFunction\n  * @method\n  * @public\n  * @param {function} fnFilter The result function is called with one parameter: the sap.m.ColumnListItem that is selected. The function must return a result string that will be displayed as the input field's value.\n  * @returns {sap.m.Input} this pointer for chaining\n  * @since 1.21.1\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tInput.prototype.setRowResultFunction = function (fnFilter) {\n\t\t// reset to default function when calling with null or undefined\n\t\tif (fnFilter === null || fnFilter === undefined) {\n\t\t\tthis._fnRowResultFilter = Input._DEFAULTRESULT_TABULAR;\n\t\t\treturn this;\n\t\t}\n\t\t// set custom function\n\t\tjQuery.sap.assert(typeof fnFilter === \"function\", \"Input.setRowResultFunction: first argument fnFilter must be a function on \" + this);\n\t\tthis._fnRowResultFilter = fnFilter;\n\t\treturn this;\n\t};\n\n\t/**\n  * Closes the suggestion list.\n  *\n  * @name sap.m.Input.closeSuggestions\n  * @method\n  * @public\n  * @since 1.48\n  */\n\tInput.prototype.closeSuggestions = function () {\n\t\tthis._closeSuggestionPopup();\n\t};\n\n\t/**\n  * Shows the value help.\n  *\n  * @name sap.m.Input.setShowValueHelp\n  * @method\n  * @public\n  * @param {boolean} bShowValueHelp Indication for showing the value help.\n  * @returns {sap.m.Input} this pointer for chaining.\n  */\n\tInput.prototype.setShowValueHelp = function (bShowValueHelp) {\n\n\t\tthis.setProperty(\"showValueHelp\", bShowValueHelp);\n\n\t\tif (bShowValueHelp && !Input.prototype._sAriaValueHelpLabelId) {\n\t\t\t// create an F4 ARIA announcement and remember its ID for later use in the renderer:\n\t\t\tInput.prototype._sAriaValueHelpLabelId = new InvisibleText({\n\t\t\t\ttext: this._oRb.getText(\"INPUT_VALUEHELP\")\n\t\t\t}).toStatic().getId();\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the value help.\n  *\n  * @name sap.m.Input.setValueHelpOnly\n  * @method\n  * @public\n  * @param {boolean} bValueHelpOnly New value for the value help.\n  * @returns {sap.m.Input} this pointer for chaining.\n  */\n\tInput.prototype.setValueHelpOnly = function (bValueHelpOnly) {\n\n\t\tthis.setProperty(\"valueHelpOnly\", bValueHelpOnly);\n\n\t\tif (bValueHelpOnly && !Input.prototype._sAriaInputDisabledLabelId) {\n\t\t\t// create an F4 ARIA announcement and remember its ID for later use in the renderer:\n\t\t\tInput.prototype._sAriaInputDisabledLabelId = new InvisibleText({\n\t\t\t\ttext: this._oRb.getText(\"INPUT_DISABLED\")\n\t\t\t}).toStatic().getId();\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n  * Selects the text of the InputDomRef in the given range.\n  *\n  * @name sap.m.Input._doSelect\n  * @private\n  * @param {int} iStart Start of selection.\n  * @param {iEnd} iEnd End of selection.\n  * @returns {sap.m.Input} this Input instance for chaining.\n  */\n\tInput.prototype._doSelect = function (iStart, iEnd) {\n\t\tif (Device.support.touch) {\n\t\t\treturn;\n\t\t}\n\t\tvar oDomRef = this._$input[0];\n\t\tif (oDomRef) {\n\t\t\t// if no Dom-Ref - no selection (Maybe popup closed)\n\t\t\tvar $Ref = this._$input;\n\t\t\toDomRef.focus();\n\t\t\t$Ref.selectText(iStart ? iStart : 0, iEnd ? iEnd : $Ref.val().length);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n  * Scrolls to item.\n  *\n  * @name sap.m.Input._scrollToItem\n  * @method\n  * @private\n  * @param {int} iIndex Index of the item to scroll to.\n  */\n\tInput.prototype._scrollToItem = function (iIndex) {\n\t\tvar oPopup = this._oSuggestionPopup,\n\t\t    oList = this._oList,\n\t\t    oScrollDelegate,\n\t\t    oPopupRect,\n\t\t    oItemRect,\n\t\t    iTop,\n\t\t    iBottom;\n\n\t\tif (!(oPopup instanceof Popover) || !oList) {\n\t\t\treturn;\n\t\t}\n\t\toScrollDelegate = oPopup.getScrollDelegate();\n\t\tif (!oScrollDelegate) {\n\t\t\treturn;\n\t\t}\n\t\tvar oListItem = oList.getItems()[iIndex],\n\t\t    oListItemDom = oListItem && oListItem.getDomRef();\n\t\tif (!oListItemDom) {\n\t\t\treturn;\n\t\t}\n\t\toPopupRect = oPopup.getDomRef(\"cont\").getBoundingClientRect();\n\t\toItemRect = oListItemDom.getBoundingClientRect();\n\n\t\tiTop = oPopupRect.top - oItemRect.top;\n\t\tiBottom = oItemRect.bottom - oPopupRect.bottom;\n\t\tif (iTop > 0) {\n\t\t\toScrollDelegate.scrollTo(oScrollDelegate._scrollX, Math.max(oScrollDelegate._scrollY - iTop, 0));\n\t\t} else if (iBottom > 0) {\n\t\t\toScrollDelegate.scrollTo(oScrollDelegate._scrollX, oScrollDelegate._scrollY + iBottom);\n\t\t}\n\t};\n\n\t/**\n  * Helper method for keyboard navigation in suggestion items.\n  *\n  * @name sap.m.Input._isSuggestionItemSelectable\n  * @method\n  * @private\n  * @param {sap.ui.core.Item} oItem Suggestion item.\n  * @returns {boolean} Is the suggestion item selectable.\n  */\n\tInput.prototype._isSuggestionItemSelectable = function (oItem) {\n\t\t// CSN# 1390866/2014: The default for ListItemBase type is \"Inactive\", therefore disabled entries are only supported for single and two-value suggestions\n\t\t// for tabular suggestions: only check visible\n\t\t// for two-value and single suggestions: check also if item is not inactive\n\t\treturn oItem.getVisible() && (this._hasTabularSuggestions() || oItem.getType() !== ListType.Inactive);\n\t};\n\n\t/**\n  *  Helper method for distinguishing between incremental and non-incremental types of input.\n  *\n  * @name sap.m.Input._isIncrementalType\n  * @method\n  * @private\n  * @returns {boolean} Is it incremental type.\n  */\n\tInput.prototype._isIncrementalType = function () {\n\t\tvar sTypeOfInput = this.getType();\n\t\tif (sTypeOfInput === \"Number\" || sTypeOfInput === \"Date\" || sTypeOfInput === \"Datetime\" || sTypeOfInput === \"Month\" || sTypeOfInput === \"Time\" || sTypeOfInput === \"Week\") {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n  * Keyboard handler helper.\n  *\n  * @name sap.m.Input._onsaparrowkey\n  * @method\n  * @private\n  * @param {jQuery.Event} oEvent Arrow key event.\n  * @param {string} sDir Arrow direction.\n  * @param {int} iItems Items to be changed.\n  */\n\tInput.prototype._onsaparrowkey = function (oEvent, sDir, iItems) {\n\t\tif (!this.getEnabled() || !this.getEditable()) {\n\t\t\treturn;\n\t\t}\n\t\tif (sDir !== \"up\" && sDir !== \"down\") {\n\t\t\treturn;\n\t\t}\n\t\tif (this._isIncrementalType()) {\n\t\t\toEvent.setMarked();\n\t\t}\n\n\t\tif (!this._oSuggestionPopup || !this._oSuggestionPopup.isOpen()) {\n\t\t\treturn;\n\t\t}\n\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\n\t\tvar bFirst = false,\n\t\t    oList = this._oList,\n\t\t    aItems = this.getSuggestionItems(),\n\t\t    aListItems = oList.getItems(),\n\t\t    iSelectedIndex = this._iPopupListSelectedIndex,\n\t\t    sNewValue,\n\t\t    iOldIndex = iSelectedIndex;\n\n\t\tif (sDir === \"up\" && iSelectedIndex === 0) {\n\t\t\t// if key is 'up' and selected Item is first -> do nothing\n\t\t\treturn;\n\t\t}\n\t\tif (sDir == \"down\" && iSelectedIndex === aListItems.length - 1) {\n\t\t\t//if key is 'down' and selected Item is last -> do nothing\n\t\t\treturn;\n\t\t}\n\n\t\tvar iStopIndex;\n\t\tif (iItems > 1) {\n\t\t\t// if iItems would go over the borders, search for valid item in other direction\n\t\t\tif (sDir == \"down\" && iSelectedIndex + iItems >= aListItems.length) {\n\t\t\t\tsDir = \"up\";\n\t\t\t\tiItems = 1;\n\t\t\t\taListItems[iSelectedIndex].setSelected(false);\n\t\t\t\tiStopIndex = iSelectedIndex;\n\t\t\t\tiSelectedIndex = aListItems.length - 1;\n\t\t\t\tbFirst = true;\n\t\t\t} else if (sDir == \"up\" && iSelectedIndex - iItems < 0) {\n\t\t\t\tsDir = \"down\";\n\t\t\t\tiItems = 1;\n\t\t\t\taListItems[iSelectedIndex].setSelected(false);\n\t\t\t\tiStopIndex = iSelectedIndex;\n\t\t\t\tiSelectedIndex = 0;\n\t\t\t\tbFirst = true;\n\t\t\t}\n\t\t}\n\n\t\t// always select the first item from top when nothing is selected so far\n\t\tif (iSelectedIndex === -1) {\n\t\t\tiSelectedIndex = 0;\n\t\t\tif (this._isSuggestionItemSelectable(aListItems[iSelectedIndex])) {\n\t\t\t\t// if first item is visible, don't go into while loop\n\t\t\t\tiOldIndex = iSelectedIndex;\n\t\t\t\tbFirst = true;\n\t\t\t} else {\n\t\t\t\t// detect first visible item with while loop\n\t\t\t\tsDir = \"down\";\n\t\t\t}\n\t\t}\n\n\t\tif (sDir === \"down\") {\n\t\t\twhile (iSelectedIndex < aListItems.length - 1 && (!bFirst || !this._isSuggestionItemSelectable(aListItems[iSelectedIndex]))) {\n\t\t\t\taListItems[iSelectedIndex].setSelected(false);\n\t\t\t\tiSelectedIndex = iSelectedIndex + iItems;\n\t\t\t\tbFirst = true;\n\t\t\t\tiItems = 1; // if wanted item is not selectable just search the next one\n\t\t\t\tif (iStopIndex === iSelectedIndex) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\twhile (iSelectedIndex > 0 && (!bFirst || !aListItems[iSelectedIndex].getVisible() || !this._isSuggestionItemSelectable(aListItems[iSelectedIndex]))) {\n\t\t\t\taListItems[iSelectedIndex].setSelected(false);\n\t\t\t\tiSelectedIndex = iSelectedIndex - iItems;\n\t\t\t\tbFirst = true;\n\t\t\t\tiItems = 1; // if wanted item is not selectable just search the next one\n\t\t\t\tif (iStopIndex === iSelectedIndex) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._isSuggestionItemSelectable(aListItems[iSelectedIndex])) {\n\t\t\t// if no further visible item can be found -> do nothing (e.g. set the old item as selected again)\n\t\t\tif (iOldIndex >= 0) {\n\t\t\t\taListItems[iOldIndex].setSelected(true).updateAccessibilityState();\n\t\t\t\tthis.$(\"inner\").attr(\"aria-activedescendant\", aListItems[iOldIndex].getId());\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\taListItems[iSelectedIndex].setSelected(true).updateAccessibilityState();\n\t\t\tthis.$(\"inner\").attr(\"aria-activedescendant\", aListItems[iSelectedIndex].getId());\n\t\t}\n\n\t\tif (Device.system.desktop) {\n\t\t\tthis._scrollToItem(iSelectedIndex);\n\t\t}\n\n\t\t// make sure the value doesn't exceed the maxLength\n\t\tif (ColumnListItem && aListItems[iSelectedIndex] instanceof ColumnListItem) {\n\t\t\t// for tabular suggestions we call a result filter function\n\t\t\tsNewValue = this._getInputValue(this._fnRowResultFilter(aListItems[iSelectedIndex]));\n\t\t} else {\n\t\t\tvar bListItem = aItems[0] instanceof ListItem ? true : false;\n\t\t\tif (bListItem) {\n\t\t\t\t// for two value suggestions we use the item label\n\t\t\t\tsNewValue = this._getInputValue(aListItems[iSelectedIndex].getLabel());\n\t\t\t} else {\n\t\t\t\t// otherwise we use the item title\n\t\t\t\tsNewValue = this._getInputValue(aListItems[iSelectedIndex].getTitle());\n\t\t\t}\n\t\t}\n\n\t\t// setValue isn't used because here is too early to modify the lastValue of input\n\t\tthis.setDOMValue(sNewValue);\n\n\t\t// memorize the value set by calling jQuery.val, because browser doesn't fire a change event when the value is set programmatically.\n\t\tthis._sSelectedSuggViaKeyboard = sNewValue;\n\n\t\tthis._doSelect();\n\t\tthis._iPopupListSelectedIndex = iSelectedIndex;\n\t};\n\n\t/**\n  * Keyboard handler for up arrow key.\n  *\n  * @name sap.m.Input.onsapup\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsapup = function (oEvent) {\n\t\tthis._onsaparrowkey(oEvent, \"up\", 1);\n\t};\n\n\t/**\n  * Keyboard handler for down arrow key.\n  *\n  * @name sap.m.Input.onsapdown\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsapdown = function (oEvent) {\n\t\tthis._onsaparrowkey(oEvent, \"down\", 1);\n\t};\n\n\t/**\n  * Keyboard handler for page up key.\n  *\n  * @name sap.m.Input.onsappageup\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsappageup = function (oEvent) {\n\t\tthis._onsaparrowkey(oEvent, \"up\", 5);\n\t};\n\n\t/**\n  * Keyboard handler for page down key.\n  *\n  * @name sap.m.Input.onsappagedown\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsappagedown = function (oEvent) {\n\t\tthis._onsaparrowkey(oEvent, \"down\", 5);\n\t};\n\n\t/**\n  * Keyboard handler for home key.\n  *\n  * @name sap.m.Input.onsaphome\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsaphome = function (oEvent) {\n\n\t\tif (this._oList) {\n\t\t\tthis._onsaparrowkey(oEvent, \"up\", this._oList.getItems().length);\n\t\t}\n\t};\n\n\t/**\n  * Keyboard handler for end key.\n  *\n  * @name sap.m.Input.onsapend\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsapend = function (oEvent) {\n\n\t\tif (this._oList) {\n\t\t\tthis._onsaparrowkey(oEvent, \"down\", this._oList.getItems().length);\n\t\t}\n\t};\n\n\t/**\n  * Keyboard handler for escape key.\n  *\n  * @name sap.m.Input.onsapescape\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsapescape = function (oEvent) {\n\t\tvar lastValue;\n\n\t\tif (this._oSuggestionPopup && this._oSuggestionPopup.isOpen()) {\n\t\t\t// mark the event as already handled\n\t\t\toEvent.originalEvent._sapui_handledByControl = true;\n\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t\tthis._closeSuggestionPopup();\n\n\t\t\t// restore the initial value that was there before suggestion dialog\n\t\t\tif (this._sBeforeSuggest !== undefined) {\n\t\t\t\tif (this._sBeforeSuggest !== this.getValue()) {\n\t\t\t\t\tlastValue = this._lastValue;\n\t\t\t\t\tthis.setValue(this._sBeforeSuggest);\n\t\t\t\t\tthis._lastValue = lastValue; // override InputBase.onsapescape()\n\t\t\t\t}\n\t\t\t\tthis._sBeforeSuggest = undefined;\n\t\t\t}\n\t\t\treturn; // override InputBase.onsapescape()\n\t\t}\n\n\t\tif (InputBase.prototype.onsapescape) {\n\t\t\tInputBase.prototype.onsapescape.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n  * Keyboard handler for enter key.\n  *\n  * @name sap.m.Input.onsapenter\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsapenter = function (oEvent) {\n\t\tif (InputBase.prototype.onsapenter) {\n\t\t\tInputBase.prototype.onsapenter.apply(this, arguments);\n\t\t}\n\n\t\t// when enter is pressed before the timeout of suggestion delay, suggest event is cancelled\n\t\tthis.cancelPendingSuggest();\n\n\t\tif (this._oSuggestionPopup && this._oSuggestionPopup.isOpen()) {\n\t\t\tvar oSelectedItem = this._oList.getSelectedItem();\n\t\t\tif (oSelectedItem) {\n\t\t\t\tif (this._hasTabularSuggestions()) {\n\t\t\t\t\tthis.setSelectionRow(oSelectedItem, true);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setSelectionItem(oSelectedItem._oItem, true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._iPopupListSelectedIndex >= 0) {\n\t\t\t\t\tthis._fireSuggestionItemSelectedEvent();\n\t\t\t\t\tthis._doSelect();\n\n\t\t\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t\t\t}\n\t\t\t\tthis._closeSuggestionPopup();\n\t\t\t}\n\t\t}\n\n\t\tif (this.getEnabled() && this.getEditable() && !(this.getValueHelpOnly() && this.getShowValueHelp())) {\n\t\t\tthis.fireSubmit({ value: this.getValue() });\n\t\t}\n\t};\n\n\t/**\n  * Keyboard handler for the onFocusLeave event.\n  *\n  * @name sap.m.Input.onsapfocusleave\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsapfocusleave = function (oEvent) {\n\t\tvar oPopup = this._oSuggestionPopup;\n\n\t\tif (oPopup instanceof Popover) {\n\t\t\tif (oEvent.relatedControlId && jQuery.sap.containsOrEquals(oPopup.getDomRef(), sap.ui.getCore().byId(oEvent.relatedControlId).getFocusDomRef())) {\n\t\t\t\t// Force the focus to stay in input\n\t\t\t\tthis._bPopupHasFocus = true;\n\t\t\t\tthis.focus();\n\t\t\t} else {\n\t\t\t\t// When the input still has the value of the last jQuery.val call, a change event has to be\n\t\t\t\t// fired manually because browser doesn't fire an input event in this case.\n\t\t\t\tif (this.getDOMValue() === this._sSelectedSuggViaKeyboard) {\n\t\t\t\t\tthis._sSelectedSuggViaKeyboard = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Inform InputBase to fire the change event on Input only when focus doesn't go into the suggestion popup\n\t\tvar oFocusedControl = sap.ui.getCore().byId(oEvent.relatedControlId);\n\t\tif (!(oPopup && oFocusedControl && jQuery.sap.containsOrEquals(oPopup.getDomRef(), oFocusedControl.getFocusDomRef()))) {\n\t\t\tInputBase.prototype.onsapfocusleave.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n  * Keyboard handler for the onMouseDown event.\n  *\n  * @name sap.m.Input.onmousedown\n  * @method\n  * @public\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onmousedown = function (oEvent) {\n\t\tvar oPopup = this._oSuggestionPopup;\n\n\t\tif (oPopup instanceof Popover && oPopup.isOpen()) {\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\t/**\n  * Removes events from the input.\n  *\n  * @name sap.m.Input._deregisterEvents\n  * @method\n  * @private\n  */\n\tInput.prototype._deregisterEvents = function () {\n\t\tif (this._sPopupResizeHandler) {\n\t\t\tResizeHandler.deregister(this._sPopupResizeHandler);\n\t\t\tthis._sPopupResizeHandler = null;\n\t\t}\n\n\t\tif (this._bUseDialog && this._oSuggestionPopup) {\n\t\t\tthis.$().off(\"click\");\n\t\t}\n\t};\n\n\t/**\n  * Update suggestion items.\n  *\n  * @name sap.m.Input.updateSuggestionItems\n  * @method\n  * @public\n  * @return {sap.m.Input} this Input instance for chaining.\n  */\n\tInput.prototype.updateSuggestionItems = function () {\n\t\tthis._bSuspendInvalidate = true;\n\t\tthis.updateAggregation(\"suggestionItems\");\n\t\tthis._bShouldRefreshListItems = true;\n\t\tthis._refreshItemsDelayed();\n\t\tthis._bSuspendInvalidate = false;\n\t\treturn this;\n\t};\n\n\t/**\n  * Invalidates the control.\n  * @override\n  * @protected\n  */\n\tInput.prototype.invalidate = function () {\n\t\tif (!this._bSuspendInvalidate) {\n\t\t\tControl.prototype.invalidate.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n * Cancels any pending suggestions.\n *\n * @name sap.m.Input.cancelPendingSuggest\n * @method\n * @public\n */\n\tInput.prototype.cancelPendingSuggest = function () {\n\t\tif (this._iSuggestDelay) {\n\t\t\tjQuery.sap.clearDelayedCall(this._iSuggestDelay);\n\t\t\tthis._iSuggestDelay = null;\n\t\t}\n\t};\n\n\t/**\n  * Triggers suggestions.\n  *\n  * @name sap.m.Input._triggerSuggest\n  * @method\n  * @private\n  * @param {string} sValue User input.\n  */\n\tInput.prototype._triggerSuggest = function (sValue) {\n\n\t\tthis.cancelPendingSuggest();\n\t\tthis._bShouldRefreshListItems = true;\n\n\t\tif (!sValue) {\n\t\t\tsValue = \"\";\n\t\t}\n\n\t\tif (sValue.length >= this.getStartSuggestion()) {\n\t\t\tthis._iSuggestDelay = jQuery.sap.delayedCall(300, this, function () {\n\n\t\t\t\t// when using non ASCII characters the value might be the same as previous\n\t\t\t\t// don't re populate the suggestion items in this case\n\t\t\t\tif (this._sPrevSuggValue !== sValue) {\n\n\t\t\t\t\tthis._bBindingUpdated = false;\n\t\t\t\t\tthis.fireSuggest({\n\t\t\t\t\t\tsuggestValue: sValue\n\t\t\t\t\t});\n\t\t\t\t\t// if binding is updated during suggest event, the list items don't need to be refreshed here\n\t\t\t\t\t// because they will be refreshed in updateItems function.\n\t\t\t\t\t// This solves the popup blinking problem\n\t\t\t\t\tif (!this._bBindingUpdated) {\n\t\t\t\t\t\tthis._refreshItemsDelayed();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sPrevSuggValue = sValue;\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (this._bUseDialog) {\n\t\t\tif (this._oList instanceof Table) {\n\t\t\t\t// CSN# 1421140/2014: hide the table for empty/initial results to not show the table columns\n\t\t\t\tthis._oList.addStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t} else if (this._oList && this._oList.destroyItems) {\n\t\t\t\tthis._oList.destroyItems();\n\t\t\t}\n\t\t} else if (this._oSuggestionPopup && this._oSuggestionPopup.isOpen()) {\n\n\t\t\t// when compose a non ASCII character, in Chrome the value is updated in the next browser tick cycle\n\t\t\tjQuery.sap.delayedCall(0, this, function () {\n\t\t\t\tvar sNewValue = this.getDOMValue() || '';\n\t\t\t\tif (sNewValue < this.getStartSuggestion()) {\n\t\t\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t\t\t\tthis._closeSuggestionPopup();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t(function () {\n\t\t/**\n   * Shows suggestions.\n   *\n   * @name sap.m.Input.setShowSuggestion\n   * @method\n   * @public\n   * @param {boolean} bValue Show suggestions.\n   * @return {sap.m.Input} this Input instance for chaining.\n  \t */\n\t\tInput.prototype.setShowSuggestion = function (bValue) {\n\t\t\tthis.setProperty(\"showSuggestion\", bValue, true);\n\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t\tif (bValue) {\n\t\t\t\tthis._lazyInitializeSuggestionPopup(this);\n\t\t\t} else {\n\t\t\t\tdestroySuggestionPopup(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Shows value help suggestions in table.\n   *\n   * @name sap.m.Input.setShowTableSuggestionValueHelp\n   * @method\n   * @public\n   * @param {boolean} bValue Show suggestions.\n   * @return {sap.m.Input} this Input instance for chaining.\n  \t */\n\t\tInput.prototype.setShowTableSuggestionValueHelp = function (bValue) {\n\t\t\tthis.setProperty(\"showTableSuggestionValueHelp\", bValue, true);\n\n\t\t\tif (!this._oSuggestionPopup) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (bValue) {\n\t\t\t\tthis._addShowMoreButton();\n\t\t\t} else {\n\t\t\t\tthis._removeShowMoreButton();\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Gets show more button.\n   *\n   * @name sap.m.Input._getShowMoreButton\n   * @method\n   * @private\n   * @return {sap.m.Button} Show more button.\n  \t */\n\t\tInput.prototype._getShowMoreButton = function () {\n\t\t\tvar that = this,\n\t\t\t    oMessageBundle = this._oRb;\n\n\t\t\treturn this._oShowMoreButton || (this._oShowMoreButton = new sap.m.Button({\n\t\t\t\ttext: oMessageBundle.getText(\"INPUT_SUGGESTIONS_SHOW_ALL\"),\n\t\t\t\tpress: function press() {\n\t\t\t\t\tif (that.getShowTableSuggestionValueHelp()) {\n\t\t\t\t\t\tthat.fireValueHelpRequest({ fromSuggestions: true });\n\t\t\t\t\t\tthat._iPopupListSelectedIndex = -1;\n\t\t\t\t\t\tthat._closeSuggestionPopup();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t};\n\n\t\t/**\n   * Gets button toolbar.\n   *\n   * @name sap.m.Input._getButtonToolbar\n   * @method\n   * @private\n   * @return {sap.m.Toolbar} Button toolbar.\n  \t */\n\t\tInput.prototype._getButtonToolbar = function () {\n\t\t\tvar oShowMoreButton = this._getShowMoreButton();\n\n\t\t\treturn this._oButtonToolbar || (this._oButtonToolbar = new Toolbar({\n\t\t\t\tcontent: [new ToolbarSpacer(), oShowMoreButton]\n\t\t\t}));\n\t\t};\n\n\t\t/**\n   * Adds a show more button to the footer of the tabular suggestion popup/dialog.\n   *\n   * @name sap.m.Input._addShowMoreButton\n   * @method\n   * @private\n   * @param{boolean} [bTabular] optional parameter to force override the tabular suggestions check\n   */\n\t\tInput.prototype._addShowMoreButton = function (bTabular) {\n\t\t\tif (!this._oSuggestionPopup || !bTabular && !this._hasTabularSuggestions()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._oSuggestionPopup instanceof Dialog) {\n\t\t\t\t// phone variant, use endButton (beginButton is close)\n\t\t\t\tvar oShowMoreButton = this._getShowMoreButton();\n\t\t\t\tthis._oSuggestionPopup.setEndButton(oShowMoreButton);\n\t\t\t} else {\n\t\t\t\tvar oButtonToolbar = this._getButtonToolbar();\n\t\t\t\t// desktop/tablet variant, use popover footer\n\t\t\t\tthis._oSuggestionPopup.setFooter(oButtonToolbar);\n\t\t\t}\n\t\t};\n\n\t\t/**\n   * Removes the show more button from the footer of the tabular suggestion popup/dialog.\n   *\n   * @name sap.m.Input._removeShowMoreButton\n   * @method\n   * @private\n   */\n\t\tInput.prototype._removeShowMoreButton = function () {\n\t\t\tif (!this._oSuggestionPopup || !this._hasTabularSuggestions()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._oSuggestionPopup instanceof Dialog) {\n\t\t\t\tthis._oSuggestionPopup.setEndButton(null);\n\t\t\t} else {\n\t\t\t\tthis._oSuggestionPopup.setFooter(null);\n\t\t\t}\n\t\t};\n\n\t\t/**\n   * Event handler for user input.\n   *\n   * @name sap.m.Input.oninput\n   * @method\n   * @public\n   * @param {jQuery.Event} oEvent User input.\n   */\n\t\tInput.prototype.oninput = function (oEvent) {\n\t\t\tInputBase.prototype.oninput.call(this, oEvent);\n\t\t\tif (oEvent.isMarked(\"invalid\")) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar value = this.getDOMValue();\n\n\t\t\tif (this.getValueLiveUpdate()) {\n\t\t\t\tthis.setProperty(\"value\", value, true);\n\t\t\t\tthis._onValueUpdated(value);\n\t\t\t}\n\n\t\t\tthis.fireLiveChange({\n\t\t\t\tvalue: value,\n\t\t\t\t// backwards compatibility\n\t\t\t\tnewValue: value\n\t\t\t});\n\n\t\t\t// No need to fire suggest event when suggestion feature isn't enabled or runs on the phone.\n\t\t\t// Because suggest event should only be fired by the input in dialog when runs on the phone.\n\t\t\tif (this.getShowSuggestion() && !this._bUseDialog) {\n\t\t\t\tthis._triggerSuggest(value);\n\t\t\t}\n\t\t};\n\n\t\t/**\n   * Gets the input value.\n   *\n   * @name sap.m.Input.getValue\n   * @method\n   * @public\n   * @return {sap.m.Input} Value of the input.\n   */\n\t\tInput.prototype.getValue = function () {\n\t\t\treturn this.getDomRef(\"inner\") && this._$input ? this.getDOMValue() : this.getProperty(\"value\");\n\t\t};\n\n\t\t/**\n   * Refreshes delayed items.\n   *\n   * @name sap.m.Input._refreshItemsDelayed\n   * @method\n   * @public\n   */\n\t\tInput.prototype._refreshItemsDelayed = function () {\n\t\t\tjQuery.sap.clearDelayedCall(this._iRefreshListTimeout);\n\t\t\tthis._iRefreshListTimeout = jQuery.sap.delayedCall(0, this, refreshListItems, [this]);\n\t\t};\n\n\t\t/**\n   * Adds suggestion item.\n   *\n   * @name sap.m.Input.addSuggestionItem\n   * @method\n   * @public\n   * @param {sap.ui.core.Item} oItem Suggestion item.\n   * @return {sap.m.Input} this Input instance for chaining.\n   */\n\t\tInput.prototype.addSuggestionItem = function (oItem) {\n\t\t\tthis.addAggregation(\"suggestionItems\", oItem, true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\tcreateSuggestionPopupContent(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Inserts suggestion item.\n   *\n   * @name sap.m.Input.insertSuggestionItem\n   * @method\n   * @public\n   * @param {sap.ui.core.Item} oItem Suggestion item.\n   * @param {int} iIndex Index to be inserted.\n   * @returns {sap.m.Input} this Input instance for chaining.\n   */\n\t\tInput.prototype.insertSuggestionItem = function (oItem, iIndex) {\n\t\t\tthis.insertAggregation(\"suggestionItems\", iIndex, oItem, true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\tcreateSuggestionPopupContent(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Removes suggestion item.\n   *\n   * @name sap.m.Input.removeSuggestionItem\n   * @method\n   * @public\n   * @param {sap.ui.core.Item} oItem Suggestion item.\n   * @returns {boolean} Determines whether the suggestion item has been removed.\n   */\n\t\tInput.prototype.removeSuggestionItem = function (oItem) {\n\t\t\tvar res = this.removeAggregation(\"suggestionItems\", oItem, true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn res;\n\t\t};\n\n\t\t/**\n   * Removes all suggestion items.\n   *\n   * @name sap.m.Input.removeAllSuggestionItems\n   * @method\n   * @public\n   * @returns {boolean} Determines whether the suggestion items are removed.\n   */\n\t\tInput.prototype.removeAllSuggestionItems = function () {\n\t\t\tvar res = this.removeAllAggregation(\"suggestionItems\", true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn res;\n\t\t};\n\n\t\t/**\n   * Destroys suggestion items.\n   *\n   * @name sap.m.Input.destroySuggestionItems\n   * @method\n   * @public\n   * @return {sap.m.Input} this Input instance for chaining.\n   */\n\t\tInput.prototype.destroySuggestionItems = function () {\n\t\t\tthis.destroyAggregation(\"suggestionItems\", true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Adds suggestion row.\n   *\n   * @name sap.m.Input.addSuggestionRow\n   * @method\n   * @public\n   * @param {sap.ui.core.Item} oItem Suggestion item.\n   * @return {sap.m.Input} this Input instance for chaining.\n   */\n\t\tInput.prototype.addSuggestionRow = function (oItem) {\n\t\t\toItem.setType(ListType.Active);\n\t\t\tthis.addAggregation(\"suggestionRows\", oItem);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\tcreateSuggestionPopupContent(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Inserts suggestion row.\n   *\n   * @name sap.m.Input.insertSuggestionRow\n   * @method\n   * @public\n   * @param {sap.ui.core.Item} oItem Suggestion row\n   * @param {int} iIndex Row index.\n   * @return {sap.m.Input} this Input instance for chaining.\n   */\n\t\tInput.prototype.insertSuggestionRow = function (oItem, iIndex) {\n\t\t\toItem.setType(ListType.Active);\n\t\t\tthis.insertAggregation(\"suggestionRows\", iIndex, oItem);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\tcreateSuggestionPopupContent(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Removes suggestion row.\n   *\n   * @name sap.m.Input.removeSuggestionRow\n   * @method\n   * @public\n   * @param {sap.ui.core.Item} oItem Suggestion row.\n   * @returns {boolean} Determines whether the suggestion row is removed.\n   */\n\t\tInput.prototype.removeSuggestionRow = function (oItem) {\n\t\t\tvar res = this.removeAggregation(\"suggestionRows\", oItem);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn res;\n\t\t};\n\n\t\t/**\n   * Removes all suggestion rows.\n   *\n   * @name sap.m.Input.removeAllSuggestionRows\n   * @method\n   * @public\n   * @returns {boolean} Determines whether the suggestion rows are removed.\n   */\n\t\tInput.prototype.removeAllSuggestionRows = function () {\n\t\t\tvar res = this.removeAllAggregation(\"suggestionRows\");\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn res;\n\t\t};\n\n\t\t/**\n   * Destroys all suggestion rows.\n   *\n   * @name sap.m.Input.destroySuggestionRows\n   * @method\n   * @public\n   * @return {sap.m.Input} this Input instance for chaining.\n   */\n\t\tInput.prototype.destroySuggestionRows = function () {\n\t\t\tthis.destroyAggregation(\"suggestionRows\");\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Forwards aggregations with the name of items or columns to the internal table.\n   *\n   * @overwrite\n   * @name sap.m.Input.bindAggregation\n   * @method\n   * @public\n   * @param {string} sAggregationName the name for the binding\n   * @param {object} oBindingInfo the configuration parameters for the binding\n   * @returns {sap.m.Input} this pointer for chaining\n   */\n\t\tInput.prototype.bindAggregation = function () {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t\tif (args[0] === \"suggestionRows\" || args[0] === \"suggestionColumns\" || args[0] === \"suggestionItems\") {\n\t\t\t\tcreateSuggestionPopupContent(this, args[0] === \"suggestionRows\" || args[0] === \"suggestionColumns\");\n\t\t\t\tthis._bBindingUpdated = true;\n\t\t\t}\n\n\t\t\t// propagate the bind aggregation function to list\n\t\t\tthis._callMethodInManagedObject.apply(this, [\"bindAggregation\"].concat(args));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Forwards aggregations with the name of items or columns to the internal table.\n   *\n   * @overwrite\n   * @name sap.m.Input.unbindAggregation\n   * @method\n   * @public\n   * @param {string} sAggregationName the name for the binding\n   * @returns {sap.m.Input} this pointer for chaining\n   */\n\t\tInput.prototype.unbindAggregation = function () {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t\t// propagate the unbind aggregation function to list\n\t\t\tthis._callMethodInManagedObject.apply(this, [\"unbindAggregation\"].concat(args));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n   * Initialize suggestion popup with lazy loading.\n   *\n   * @name sap.m.Input._lazyInitializeSuggestionPopup\n   * @private\n   * @method\n   */\n\t\tInput.prototype._lazyInitializeSuggestionPopup = function () {\n\t\t\tif (!this._oSuggestionPopup) {\n\t\t\t\tcreateSuggestionPopup(this);\n\t\t\t}\n\t\t};\n\n\t\t/**\n   * Closes suggestion popup.\n   *\n   * @name sap.m.Input._closeSuggestionPopup\n   * @private\n   * @method\n   */\n\t\tInput.prototype._closeSuggestionPopup = function () {\n\n\t\t\tif (this._oSuggestionPopup) {\n\t\t\t\tthis._bShouldRefreshListItems = false;\n\t\t\t\tthis.cancelPendingSuggest();\n\t\t\t\tthis._oSuggestionPopup.close();\n\n\t\t\t\t// Ensure the valueStateMessage is opened after the suggestion popup is closed.\n\t\t\t\t// Only do this for desktop (not required for mobile) when the focus is on the input.\n\t\t\t\tif (!this._bUseDialog && this.$().hasClass(\"sapMInputFocused\")) {\n\t\t\t\t\tthis.openValueStateMessage();\n\t\t\t\t}\n\t\t\t\tthis.$(\"SuggDescr\").text(\"\"); // initialize suggestion ARIA text\n\t\t\t\tthis.$(\"inner\").removeAttr(\"aria-haspopup\");\n\t\t\t\tthis.$(\"inner\").removeAttr(\"aria-activedescendant\");\n\n\t\t\t\tthis._sPrevSuggValue = null;\n\t\t\t}\n\t\t};\n\n\t\t/**\n   * Helper function that creates suggestion popup.\n   *\n   * @name createSuggestionPopup\n   * @function\n   * @param {sap.m.Input} oInput Input instance where the popup will be created.\n   */\n\t\tfunction createSuggestionPopup(oInput) {\n\t\t\tvar oMessageBundle = oInput._oRb;\n\n\t\t\tif (oInput._bUseDialog) {\n\t\t\t\toInput._oPopupInput = new Input(oInput.getId() + \"-popup-input\", {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tvalueLiveUpdate: true,\n\t\t\t\t\tshowValueHelp: oInput.getShowValueHelp(),\n\t\t\t\t\tvalueHelpRequest: function valueHelpRequest(oEvent) {\n\t\t\t\t\t\t// it is the same behavior as by ShowMoreButton:\n\t\t\t\t\t\toInput.fireValueHelpRequest({ fromSuggestions: true });\n\t\t\t\t\t\toInput._iPopupListSelectedIndex = -1;\n\t\t\t\t\t\toInput._closeSuggestionPopup();\n\t\t\t\t\t},\n\t\t\t\t\tliveChange: function liveChange(oEvent) {\n\t\t\t\t\t\tvar sValue = oEvent.getParameter(\"newValue\");\n\t\t\t\t\t\t// call _getInputValue to apply the maxLength to the typed value\n\t\t\t\t\t\toInput.setDOMValue(oInput._getInputValue(oInput._oPopupInput.getValue()));\n\n\t\t\t\t\t\toInput._triggerSuggest(sValue);\n\n\t\t\t\t\t\t// make sure the live change handler on the original input is also called\n\t\t\t\t\t\toInput.fireLiveChange({\n\t\t\t\t\t\t\tvalue: sValue,\n\n\t\t\t\t\t\t\t// backwards compatibility\n\t\t\t\t\t\t\tnewValue: sValue\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}).addStyleClass(\"sapMInputSuggInDialog\");\n\t\t\t}\n\n\t\t\toInput._oSuggestionPopup = !oInput._bUseDialog ? new Popover(oInput.getId() + \"-popup\", {\n\t\t\t\tshowArrow: false,\n\t\t\t\tshowHeader: false,\n\t\t\t\tplacement: PlacementType.Vertical,\n\t\t\t\tinitialFocus: oInput,\n\t\t\t\thorizontalScrolling: true\n\t\t\t}).attachAfterClose(function () {\n\t\t\t\tif (oInput._iPopupListSelectedIndex >= 0) {\n\t\t\t\t\toInput._fireSuggestionItemSelectedEvent();\n\t\t\t\t}\n\t\t\t\t// only destroy items in simple suggestion mode\n\t\t\t\tif (oInput._oList instanceof Table) {\n\t\t\t\t\toInput._oList.removeSelections(true);\n\t\t\t\t} else {\n\t\t\t\t\toInput._oList.destroyItems();\n\t\t\t\t}\n\t\t\t\toInput._shouldResizePopup = false;\n\t\t\t}).attachBeforeOpen(function () {\n\t\t\t\toInput._sBeforeSuggest = oInput.getValue();\n\t\t\t}) : new Dialog(oInput.getId() + \"-popup\", {\n\t\t\t\tbeginButton: new sap.m.Button(oInput.getId() + \"-popup-closeButton\", {\n\t\t\t\t\ttext: oMessageBundle.getText(\"MSGBOX_CLOSE\"),\n\t\t\t\t\tpress: function press() {\n\t\t\t\t\t\toInput._closeSuggestionPopup();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tstretch: oInput._bFullScreen,\n\t\t\t\tcontentHeight: oInput._bFullScreen ? undefined : \"20rem\",\n\t\t\t\tcustomHeader: new Bar(oInput.getId() + \"-popup-header\", {\n\t\t\t\t\tcontentMiddle: oInput._oPopupInput.addEventDelegate({ onsapenter: function onsapenter() {\n\t\t\t\t\t\t\tif (!(sap.m.MultiInput && oInput instanceof sap.m.MultiInput)) {\n\t\t\t\t\t\t\t\toInput._closeSuggestionPopup();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }, this)\n\t\t\t\t}),\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tinitialFocus: oInput._oPopupInput\n\t\t\t}).attachBeforeOpen(function () {\n\t\t\t\t// set the same placeholder and maxLength as the original input\n\t\t\t\toInput._oPopupInput.setPlaceholder(oInput.getPlaceholder());\n\t\t\t\toInput._oPopupInput.setMaxLength(oInput.getMaxLength());\n\t\t\t}).attachBeforeClose(function () {\n\t\t\t\t// call _getInputValue to apply the maxLength to the typed value\n\t\t\t\toInput.setDOMValue(oInput._getInputValue(oInput._oPopupInput.getValue()));\n\t\t\t\toInput.onChange();\n\n\t\t\t\tif (oInput instanceof sap.m.MultiInput && oInput._bUseDialog) {\n\t\t\t\t\toInput._onDialogClose();\n\t\t\t\t}\n\t\t\t}).attachAfterClose(function () {\n\n\t\t\t\tif (oInput instanceof sap.m.MultiInput && oInput._isMultiLineMode) {\n\n\t\t\t\t\toInput._showIndicator();\n\t\t\t\t}\n\n\t\t\t\t// only destroy items in simple suggestion mode\n\t\t\t\tif (oInput._oList) {\n\t\t\t\t\tif (Table && !(oInput._oList instanceof Table)) {\n\t\t\t\t\t\toInput._oList.destroyItems();\n\t\t\t\t\t} else {\n\t\t\t\t\t\toInput._oList.removeSelections(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).attachAfterOpen(function () {\n\t\t\t\tvar sValue = oInput.getValue();\n\n\t\t\t\toInput._oPopupInput.setValue(sValue);\n\t\t\t\toInput._triggerSuggest(sValue);\n\t\t\t\trefreshListItems(oInput);\n\t\t\t});\n\n\t\t\toInput._oSuggestionPopup.addStyleClass(\"sapMInputSuggestionPopup\");\n\t\t\toInput._oSuggestionPopup.addAriaLabelledBy(Input._sAriaPopupLabelId);\n\n\t\t\t// add popup as dependent to also propagate the model and bindings to the content of the popover\n\t\t\toInput.addDependent(oInput._oSuggestionPopup);\n\t\t\tif (!oInput._bUseDialog) {\n\t\t\t\toverwritePopover(oInput._oSuggestionPopup, oInput);\n\t\t\t}\n\n\t\t\tif (oInput._oList) {\n\t\t\t\toInput._oSuggestionPopup.addContent(oInput._oList);\n\t\t\t}\n\n\t\t\tif (oInput.getShowTableSuggestionValueHelp()) {\n\t\t\t\toInput._addShowMoreButton();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Helper function that creates content for the suggestion popup.\n   *\n   * @name createSuggestionPopupContent\n   * @function\n   * @param {sap.m.Input} oInput Input instance where the popup will be created.\n   * @param {boolean | null } bTabular Content for the popup.\n   */\n\t\tfunction createSuggestionPopupContent(oInput, bTabular) {\n\t\t\t// only initialize the content once\n\t\t\tif (oInput._oList) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!oInput._hasTabularSuggestions() && !bTabular) {\n\t\t\t\toInput._oList = new List(oInput.getId() + \"-popup-list\", {\n\t\t\t\t\tshowNoData: false,\n\t\t\t\t\tmode: ListMode.SingleSelectMaster,\n\t\t\t\t\trememberSelections: false,\n\t\t\t\t\titemPress: function itemPress(oEvent) {\n\t\t\t\t\t\tvar oListItem = oEvent.getParameter(\"listItem\");\n\t\t\t\t\t\toInput.setSelectionItem(oListItem._oItem, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\toInput._oList.addEventDelegate({\n\t\t\t\t\tonAfterRendering: oInput._highlightListText.bind(oInput)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// tabular suggestions\n\t\t\t\t// if no custom filter is set we replace the default filter function here\n\t\t\t\tif (oInput._fnFilter === Input._DEFAULTFILTER) {\n\t\t\t\t\toInput._fnFilter = Input._DEFAULTFILTER_TABULAR;\n\t\t\t\t}\n\n\t\t\t\t// if not custom row result function is set we set the default one\n\t\t\t\tif (!oInput._fnRowResultFilter) {\n\t\t\t\t\toInput._fnRowResultFilter = Input._DEFAULTRESULT_TABULAR;\n\t\t\t\t}\n\n\t\t\t\toInput._oList = oInput._getSuggestionsTable();\n\n\t\t\t\tif (oInput.getShowTableSuggestionValueHelp()) {\n\t\t\t\t\toInput._addShowMoreButton(bTabular);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oInput._oSuggestionPopup) {\n\t\t\t\tif (oInput._bUseDialog) {\n\t\t\t\t\t// oInput._oList needs to be manually rendered otherwise it triggers a rerendering of the whole\n\t\t\t\t\t// dialog and may close the opened on screen keyboard\n\t\t\t\t\toInput._oSuggestionPopup.addAggregation(\"content\", oInput._oList, true);\n\t\t\t\t\tvar oRenderTarget = oInput._oSuggestionPopup.$(\"scrollCont\")[0];\n\t\t\t\t\tif (oRenderTarget) {\n\t\t\t\t\t\tvar rm = sap.ui.getCore().createRenderManager();\n\t\t\t\t\t\trm.renderControl(oInput._oList);\n\t\t\t\t\t\trm.flush(oRenderTarget);\n\t\t\t\t\t\trm.destroy();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toInput._oSuggestionPopup.addContent(oInput._oList);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Helper function that destroys suggestion popup.\n   *\n   * @name destroySuggestionPopup\n   * @function\n   * @param {sap.m.Input} oInput Input instance.\n   */\n\t\tfunction destroySuggestionPopup(oInput) {\n\n\t\t\tif (oInput._oSuggestionPopup) {\n\n\t\t\t\t// if the table is not removed before destroying the popup the table is also destroyed (table needs to stay because we forward the column and row aggregations to the table directly, they would be destroyed as well)\n\t\t\t\tif (oInput._oList instanceof Table) {\n\t\t\t\t\toInput._oSuggestionPopup.removeAllContent();\n\t\t\t\t\t// also remove the button/toolbar aggregation\n\t\t\t\t\toInput._removeShowMoreButton();\n\t\t\t\t}\n\n\t\t\t\toInput._oSuggestionPopup.destroy();\n\t\t\t\toInput._oSuggestionPopup = null;\n\t\t\t}\n\t\t\t// CSN# 1404088/2014: list is not destroyed when it has not been attached to the popup yet\n\t\t\tif (oInput._oList instanceof List) {\n\t\t\t\toInput._oList.destroy();\n\t\t\t\toInput._oList = null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Helper function that overwrites popover in the Input.\n   *\n   * @name overwritePopover\n   * @function\n   * @param {sap.m.Popover} oPopover Popover instance.\n   * @param {sap.m.Input} oInput Input instance.\n   */\n\t\tfunction overwritePopover(oPopover, oInput) {\n\t\t\toPopover.open = function () {\n\t\t\t\tthis.openBy(oInput, false, true);\n\t\t\t};\n\n\t\t\t// remove animation from popover\n\t\t\toPopover.oPopup.setAnimations(function ($Ref, iRealDuration, fnOpened) {\n\t\t\t\tfnOpened();\n\t\t\t}, function ($Ref, iRealDuration, fnClosed) {\n\t\t\t\tfnClosed();\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Helper function that refreshes list all items.\n   *\n   * @name refreshListItems\n   * @function\n   * @param {sap.m.Input} oInput Input instance.\n   */\n\t\tfunction refreshListItems(oInput) {\n\t\t\tvar bShowSuggestion = oInput.getShowSuggestion();\n\t\t\tvar oRb = oInput._oRb;\n\t\t\toInput._iPopupListSelectedIndex = -1;\n\n\t\t\tif (!bShowSuggestion || !oInput._bShouldRefreshListItems || !oInput.getDomRef() || !oInput._bUseDialog && !oInput.$().hasClass(\"sapMInputFocused\")) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar oItem,\n\t\t\t    aItems = oInput.getSuggestionItems(),\n\t\t\t    aTabularRows = oInput.getSuggestionRows(),\n\t\t\t    sTypedChars = oInput.getDOMValue() || \"\",\n\t\t\t    oList = oInput._oList,\n\t\t\t    bFilter = oInput.getFilterSuggests(),\n\t\t\t    aHitItems = [],\n\t\t\t    iItemsLength = 0,\n\t\t\t    oPopup = oInput._oSuggestionPopup,\n\t\t\t    oListItemDelegate = {\n\t\t\t\tontouchstart: function ontouchstart(oEvent) {\n\t\t\t\t\t(oEvent.originalEvent || oEvent)._sapui_cancelAutoClose = true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t    oListItem,\n\t\t\t    i;\n\n\t\t\t// only destroy items in simple suggestion mode\n\t\t\tif (oInput._oList) {\n\t\t\t\tif (oInput._oList instanceof Table) {\n\t\t\t\t\toList.removeSelections(true);\n\t\t\t\t} else {\n\t\t\t\t\t//TODO: avoid flickering when !bFilter\n\t\t\t\t\toList.destroyItems();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// hide suggestions list/table if the number of characters is smaller than limit\n\t\t\tif (sTypedChars.length < oInput.getStartSuggestion()) {\n\t\t\t\t// when the input has no value, close the Popup when not runs on the phone because the opened dialog on phone shouldn't be closed.\n\t\t\t\tif (!oInput._bUseDialog) {\n\t\t\t\t\toInput._iPopupListSelectedIndex = -1;\n\t\t\t\t\tthis.cancelPendingSuggest();\n\t\t\t\t\toPopup.close();\n\t\t\t\t} else {\n\t\t\t\t\t// hide table on phone when value is empty\n\t\t\t\t\tif (oInput._hasTabularSuggestions() && oInput._oList) {\n\t\t\t\t\t\toInput._oList.addStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toInput.$(\"SuggDescr\").text(\"\"); // clear suggestion text\n\t\t\t\toInput.$(\"inner\").removeAttr(\"aria-haspopup\");\n\t\t\t\toInput.$(\"inner\").removeAttr(\"aria-activedescendant\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (oInput._hasTabularSuggestions()) {\n\t\t\t\t// show list on phone (is hidden when search string is empty)\n\t\t\t\tif (oInput._bUseDialog && oInput._oList) {\n\t\t\t\t\toInput._oList.removeStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t\t}\n\n\t\t\t\t// filter tabular items\n\t\t\t\tfor (i = 0; i < aTabularRows.length; i++) {\n\t\t\t\t\tif (!bFilter || oInput._fnFilter(sTypedChars, aTabularRows[i])) {\n\t\t\t\t\t\taTabularRows[i].setVisible(true);\n\t\t\t\t\t\taHitItems.push(aTabularRows[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taTabularRows[i].setVisible(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toInput._oSuggestionTable.invalidate();\n\t\t\t} else {\n\t\t\t\t// filter standard items\n\t\t\t\tvar bListItem = aItems[0] instanceof ListItem ? true : false;\n\t\t\t\tfor (i = 0; i < aItems.length; i++) {\n\t\t\t\t\toItem = aItems[i];\n\t\t\t\t\tif (!bFilter || oInput._fnFilter(sTypedChars, oItem)) {\n\t\t\t\t\t\tif (bListItem) {\n\t\t\t\t\t\t\toListItem = new DisplayListItem(oItem.getId() + \"-dli\");\n\t\t\t\t\t\t\toListItem.setLabel(oItem.getText());\n\t\t\t\t\t\t\toListItem.setValue(oItem.getAdditionalText());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toListItem = new StandardListItem(oItem.getId() + \"-sli\");\n\t\t\t\t\t\t\toListItem.setTitle(oItem.getText());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toListItem.setType(oItem.getEnabled() ? ListType.Active : ListType.Inactive);\n\t\t\t\t\t\toListItem._oItem = oItem;\n\t\t\t\t\t\toListItem.addEventDelegate(oListItemDelegate);\n\t\t\t\t\t\taHitItems.push(oListItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tiItemsLength = aHitItems.length;\n\t\t\tvar sAriaText = \"\";\n\t\t\tif (iItemsLength > 0) {\n\t\t\t\t// add items to list\n\t\t\t\tif (iItemsLength == 1) {\n\t\t\t\t\tsAriaText = oRb.getText(\"INPUT_SUGGESTIONS_ONE_HIT\");\n\t\t\t\t} else {\n\t\t\t\t\tsAriaText = oRb.getText(\"INPUT_SUGGESTIONS_MORE_HITS\", iItemsLength);\n\t\t\t\t}\n\t\t\t\toInput.$(\"inner\").attr(\"aria-haspopup\", \"true\");\n\n\t\t\t\tif (!oInput._hasTabularSuggestions()) {\n\t\t\t\t\tfor (i = 0; i < iItemsLength; i++) {\n\t\t\t\t\t\toList.addItem(aHitItems[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!oInput._bUseDialog) {\n\t\t\t\t\tif (oInput._sCloseTimer) {\n\t\t\t\t\t\tclearTimeout(oInput._sCloseTimer);\n\t\t\t\t\t\toInput._sCloseTimer = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!oPopup.isOpen() && !oInput._sOpenTimer && this.getValue().length >= this.getStartSuggestion()) {\n\t\t\t\t\t\toInput._sOpenTimer = setTimeout(function () {\n\t\t\t\t\t\t\toInput._resizePopup(true);\n\t\t\t\t\t\t\toInput._sOpenTimer = null;\n\t\t\t\t\t\t\toPopup.open();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsAriaText = oRb.getText(\"INPUT_SUGGESTIONS_NO_HIT\");\n\t\t\t\toInput.$(\"inner\").removeAttr(\"aria-haspopup\");\n\t\t\t\toInput.$(\"inner\").removeAttr(\"aria-activedescendant\");\n\n\t\t\t\tif (!oInput._bUseDialog) {\n\t\t\t\t\tif (oPopup.isOpen()) {\n\t\t\t\t\t\toInput._sCloseTimer = setTimeout(function () {\n\t\t\t\t\t\t\toInput._iPopupListSelectedIndex = -1;\n\t\t\t\t\t\t\toInput.cancelPendingSuggest();\n\t\t\t\t\t\t\toPopup.close();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// hide table on phone when there are no items to display\n\t\t\t\t\tif (oInput._hasTabularSuggestions() && oInput._oList) {\n\t\t\t\t\t\toInput._oList.addStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update Accessibility text for suggestion\n\t\t\toInput.$(\"SuggDescr\").text(sAriaText);\n\t\t}\n\t})();\n\n\t/**\n  * Creates highlighted text.\n  *\n  * @name sap.m.Input._createHighlightedText\n  * @private\n  * @method\n  * @param {sap.m.Label} label Label within the input.\n  * @returns {string} newText Created text.\n  */\n\tInput.prototype._createHighlightedText = function (label) {\n\t\tvar text = label.innerText,\n\t\t    value = this.getValue().toLowerCase(),\n\t\t    count = value.length,\n\t\t    lowerText = text.toLowerCase(),\n\t\t    subString,\n\t\t    newText = '';\n\n\t\tif (!Input._wordStartsWithValue(text, value)) {\n\t\t\treturn text;\n\t\t}\n\n\t\tvar index = lowerText.indexOf(value);\n\n\t\t// search for the first word which starts with these characters\n\t\tif (index > 0) {\n\t\t\tindex = lowerText.indexOf(' ' + value) + 1;\n\t\t}\n\n\t\tif (index > -1) {\n\t\t\tnewText += text.substring(0, index);\n\t\t\tsubString = text.substring(index, index + count);\n\t\t\tnewText += '<span class=\"sapMInputHighlight\">' + subString + '</span>';\n\t\t\tnewText += text.substring(index + count);\n\t\t} else {\n\t\t\tnewText = text;\n\t\t}\n\n\t\treturn newText;\n\t};\n\n\t/**\n  * Highlights matched text in the suggestion list.\n  *\n  * @name sap.m.Input._highlightListText\n  * @private\n  * @method\n  */\n\tInput.prototype._highlightListText = function () {\n\n\t\tif (!this.getEnableSuggestionsHighlighting()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar i,\n\t\t    label,\n\t\t    labels = this._oList.$().find('.sapMDLILabel, .sapMSLITitleOnly, .sapMDLIValue');\n\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tlabel = labels[i];\n\t\t\tlabel.innerHTML = this._createHighlightedText(label);\n\t\t}\n\t};\n\n\t/**\n  * Highlights matched text in the suggestion table.\n  *\n  * @name sap.m.Input._highlightTableText\n  * @private\n  * @method\n  */\n\tInput.prototype._highlightTableText = function () {\n\n\t\tif (!this.getEnableSuggestionsHighlighting()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar i,\n\t\t    label,\n\t\t    labels = this._oSuggestionTable.$().find('tbody .sapMLabel');\n\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tlabel = labels[i];\n\t\t\tlabel.innerHTML = this._createHighlightedText(label);\n\t\t}\n\t};\n\n\t/**\n  * Event handler for the onFocusIn event.\n  *\n  * @name sap.m.Input.onfocusin\n  * @public\n  * @method\n  * @param {jQuery.Event} oEvent On focus in event.\n  */\n\tInput.prototype.onfocusin = function (oEvent) {\n\t\tInputBase.prototype.onfocusin.apply(this, arguments);\n\t\tthis.$().addClass(\"sapMInputFocused\");\n\n\t\t// Close the ValueStateMessage when the suggestion popup is being opened.\n\t\t// Only do this in case a popup is used.\n\t\tif (!this._bUseDialog && this._oSuggestionPopup && this._oSuggestionPopup.isOpen()) {\n\t\t\tthis.closeValueStateMessage();\n\t\t}\n\n\t\t// fires suggest event when startSuggestion is set to 0 and input has no text\n\t\tif (!this._bPopupHasFocus && !this.getStartSuggestion() && !this.getValue()) {\n\t\t\tthis._triggerSuggest(this.getValue());\n\t\t}\n\t\tthis._bPopupHasFocus = undefined;\n\n\t\tthis._sPrevSuggValue = null;\n\t};\n\n\t/**\n  * Register F4 to trigger the valueHelpRequest event\n  *\n  * @name sap.m.Input.onsapshow\n  * @private\n  * @method\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsapshow = function (oEvent) {\n\t\tif (!this.getEnabled() || !this.getEditable() || !this.getShowValueHelp()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireValueHelpRequest({ fromSuggestions: false });\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\t};\n\n\tInput.prototype.onsaphide = Input.prototype.onsapshow;\n\n\t/**\n  * Event handler for input select.\n  *\n  * @name sap.m.Input.onsapselect\n  * @private\n  * @method\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onsapselect = function (oEvent) {\n\t\tthis._fireValueHelpRequestForValueHelpOnly();\n\t};\n\n\t/**\n  * Event handler for the onFocusOut event.\n  *\n  * @name sap.m.Input.onfocusout\n  * @private\n  * @method\n  * @param {jQuery.Event} oEvent Keyboard event.\n  */\n\tInput.prototype.onfocusout = function (oEvent) {\n\t\tInputBase.prototype.onfocusout.apply(this, arguments);\n\t\tthis.$().removeClass(\"sapMInputFocused\");\n\t\tthis.closeValueStateMessage(this);\n\t};\n\n\t/**\n  * Check for tabular suggestions in the input.\n  *\n  * @name sap.m.Input._hasTabularSuggestions\n  * @private\n  * @method\n  * @returns {boolean} Determines if the Input has tabular suggestions.\n  */\n\tInput.prototype._hasTabularSuggestions = function () {\n\t\treturn !!(this.getAggregation(\"suggestionColumns\") && this.getAggregation(\"suggestionColumns\").length);\n\t};\n\n\t/**\n  * Gets suggestion table with lazy loading.\n  *\n  * @name sap.m.Input._getSuggestionsTable\n  * @private\n  * @method\n  * @returns {sap.m.Table} Suggestion table.\n  */\n\tInput.prototype._getSuggestionsTable = function () {\n\n\t\tif (this._bIsBeingDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this;\n\n\t\tif (!this._oSuggestionTable) {\n\t\t\tthis._oSuggestionTable = new Table(this.getId() + \"-popup-table\", {\n\t\t\t\tmode: ListMode.SingleSelectMaster,\n\t\t\t\tshowNoData: false,\n\t\t\t\tshowSeparators: \"All\",\n\t\t\t\twidth: \"100%\",\n\t\t\t\tenableBusyIndicator: false,\n\t\t\t\trememberSelections: false,\n\t\t\t\tselectionChange: function selectionChange(oEvent) {\n\t\t\t\t\tvar oSelectedListItem = oEvent.getParameter(\"listItem\");\n\t\t\t\t\tthat.setSelectionRow(oSelectedListItem, true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._oSuggestionTable.addEventDelegate({\n\t\t\t\tonAfterRendering: this._highlightTableText.bind(this)\n\t\t\t});\n\n\t\t\t// initially hide the table on phone\n\t\t\tif (this._bUseDialog) {\n\t\t\t\tthis._oSuggestionTable.addStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t}\n\n\t\t\tthis._oSuggestionTable.updateItems = function () {\n\t\t\t\tTable.prototype.updateItems.apply(this, arguments);\n\t\t\t\tthat._refreshItemsDelayed();\n\t\t\t\treturn this;\n\t\t\t};\n\t\t}\n\n\t\treturn this._oSuggestionTable;\n\t};\n\n\t/**\n  * Fires suggestion selected event.\n  *\n  * @name sap.m.Input._fireSuggestionItemSelectedEvent\n  * @private\n  * @method\n  */\n\tInput.prototype._fireSuggestionItemSelectedEvent = function () {\n\t\tif (this._iPopupListSelectedIndex >= 0) {\n\t\t\tvar oSelectedListItem = this._oList.getItems()[this._iPopupListSelectedIndex];\n\t\t\tif (oSelectedListItem) {\n\t\t\t\tif (ColumnListItem && oSelectedListItem instanceof ColumnListItem) {\n\t\t\t\t\tthis.fireSuggestionItemSelected({ selectedRow: oSelectedListItem });\n\t\t\t\t} else {\n\t\t\t\t\tthis.fireSuggestionItemSelected({ selectedItem: oSelectedListItem._oItem });\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t}\n\t};\n\n\t/* =========================================================== */\n\t/*           begin: forward aggregation methods to table       */\n\t/* =========================================================== */\n\n\t/*\n  * Forwards a function call to a managed object based on the aggregation name.\n  * If the name is items, it will be forwarded to the table, otherwise called\n  * locally\n  * @name sap.m.Input._callMethodInManagedObject\n  * @private\n  * @param {string} sFunctionName the name of the function to be called.\n  * @param {string} sAggregationName the name of the aggregation asociated.\n  * @returns {any} the return type of the called function.\n  */\n\tInput.prototype._callMethodInManagedObject = function (sFunctionName, sAggregationName) {\n\t\tvar aArgs = Array.prototype.slice.call(arguments),\n\t\t    oSuggestionsTable;\n\n\t\tif (sAggregationName === \"suggestionColumns\") {\n\t\t\t// apply to the internal table (columns)\n\t\t\toSuggestionsTable = this._getSuggestionsTable();\n\t\t\tif (!oSuggestionsTable) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn oSuggestionsTable[sFunctionName].apply(oSuggestionsTable, [\"columns\"].concat(aArgs.slice(2)));\n\t\t} else if (sAggregationName === \"suggestionRows\") {\n\t\t\t// apply to the internal table (rows = table items)\n\t\t\toSuggestionsTable = this._getSuggestionsTable();\n\t\t\tif (!oSuggestionsTable) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn oSuggestionsTable[sFunctionName].apply(oSuggestionsTable, [\"items\"].concat(aArgs.slice(2)));\n\t\t} else {\n\t\t\t// apply to this control\n\t\t\treturn Control.prototype[sFunctionName].apply(this, aArgs.slice(1));\n\t\t}\n\t};\n\n\t/**\n  * Validates aggregation.\n  *\n  * @name sap.m.Input.validateAggregation\n  * @public\n  * @method\n  * @param {string} sAggregationName Name of the aggregation to be validated.\n  * @param {object} oObject Object to be validated.\n  * @param {boolean} bMultiple Multiple objects to be validated.\n  * @returns {any} the return type of the called function.\n  */\n\tInput.prototype.validateAggregation = function (sAggregationName, oObject, bMultiple) {\n\t\treturn this._callMethodInManagedObject(\"validateAggregation\", sAggregationName, oObject, bMultiple);\n\t};\n\n\t/**\n  * Sets aggregation.\n  *\n  * @name sap.m.Input.setAggregation\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @param {string} oObject Object that will set the aggregation to.\n  * @param {string} bSuppressInvalidate Check for suppressing invalidate.\n  * @returns {sap.m.Input} this Input instance for chaining.\n  */\n\tInput.prototype.setAggregation = function (sAggregationName, oObject, bSuppressInvalidate) {\n\t\tthis._callMethodInManagedObject(\"setAggregation\", sAggregationName, oObject, bSuppressInvalidate);\n\t\treturn this;\n\t};\n\n\t/**\n  * Gets aggregation.\n  *\n  * @name sap.m.Input.getAggregation\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @param {object} oDefaultForCreation Object that we will get the aggregation from.\n  * @returns {any} The return type of the called function.\n  */\n\tInput.prototype.getAggregation = function (sAggregationName, oDefaultForCreation) {\n\t\treturn this._callMethodInManagedObject(\"getAggregation\", sAggregationName, oDefaultForCreation);\n\t};\n\n\t/**\n  * Index of given aggregation.\n  *\n  * @name sap.m.Input.indexOfAggregation\n  * @param {string} sAggregationName Aggregation name.\n  * @param {object} oObject Object\n  * @returns {any} The return type of the called function.\n  */\n\tInput.prototype.indexOfAggregation = function (sAggregationName, oObject) {\n\t\treturn this._callMethodInManagedObject(\"indexOfAggregation\", sAggregationName, oObject);\n\t};\n\n\t/**\n  * Inserts aggregation.\n  *\n  * @name sap.m.Input.insertAggregation\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @param {object} oObject Object that will insert aggregation.\n  * @param {int} iIndex Index of the aggregation.\n  * @param {boolean} bSuppressInvalidate Suppress invalidate.\n  * @returns {sap.m.Input} this Input instance for chaining.\n  */\n\tInput.prototype.insertAggregation = function (sAggregationName, oObject, iIndex, bSuppressInvalidate) {\n\t\tthis._callMethodInManagedObject(\"insertAggregation\", sAggregationName, oObject, iIndex, bSuppressInvalidate);\n\t\treturn this;\n\t};\n\n\t/**\n  * Adds aggregation.\n  *\n  * @name sap.m.Input.addAggregation\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @param {object} oObject Object which will contain the new aggregation.\n  * @param {boolean} bSuppressInvalidate Suppress invalidate.\n  * @returns {sap.m.Input} this Input instance for chaining.\n  */\n\tInput.prototype.addAggregation = function (sAggregationName, oObject, bSuppressInvalidate) {\n\t\tthis._callMethodInManagedObject(\"addAggregation\", sAggregationName, oObject, bSuppressInvalidate);\n\t\treturn this;\n\t};\n\n\t/**\n  * Removes aggregation.\n  *\n  * @name sap.m.Input.removeAggregation\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @param {object} oObject Object from which we will remove the aggregation.\n  * @param {boolean} bSuppressInvalidate Suppress invalidate.\n  * @returns {any} The return type of the called function.\n  */\n\tInput.prototype.removeAggregation = function (sAggregationName, oObject, bSuppressInvalidate) {\n\t\treturn this._callMethodInManagedObject(\"removeAggregation\", sAggregationName, oObject, bSuppressInvalidate);\n\t};\n\n\t/**\n  * Removes all aggregations.\n  *\n  * @name sap.m.Input.removeAllAggregation\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @param {boolean} bSuppressInvalidate Suppress invalidate.\n  * @returns {any} The return type of the called function.\n  */\n\tInput.prototype.removeAllAggregation = function (sAggregationName, bSuppressInvalidate) {\n\t\treturn this._callMethodInManagedObject(\"removeAllAggregation\", sAggregationName, bSuppressInvalidate);\n\t};\n\n\t/**\n  * Destroys aggregation.\n  *\n  * @name sap.m.Input.destroyAggregation\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @param {boolean} bSuppressInvalidate Suppress invalidate.\n  * @returns {sap.m.Input} this Input instance for chaining.\n  */\n\tInput.prototype.destroyAggregation = function (sAggregationName, bSuppressInvalidate) {\n\t\tthis._callMethodInManagedObject(\"destroyAggregation\", sAggregationName, bSuppressInvalidate);\n\t\treturn this;\n\t};\n\n\t/**\n  * Gets binding.\n  *\n  * @name sap.m.Input.getBinding\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @returns {any} The binding.\n  */\n\tInput.prototype.getBinding = function (sAggregationName) {\n\t\treturn this._callMethodInManagedObject(\"getBinding\", sAggregationName);\n\t};\n\n\t/**\n  * Gets binding information.\n  *\n  * @name sap.m.Input.getBindingInfo\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @returns {any} The binding information.\n  */\n\tInput.prototype.getBindingInfo = function (sAggregationName) {\n\t\treturn this._callMethodInManagedObject(\"getBindingInfo\", sAggregationName);\n\t};\n\n\t/**\n  * Gets binding path.\n  *\n  * @name sap.m.Input.getBindingPath\n  * @public\n  * @method\n  * @param {string} sAggregationName Aggregation name.\n  * @returns {any} Binding path.\n  */\n\tInput.prototype.getBindingPath = function (sAggregationName) {\n\t\treturn this._callMethodInManagedObject(\"getBindingPath\", sAggregationName);\n\t};\n\n\t/**\n  * Clones input.\n  *\n  * @name sap.m.Input.clone\n  * @public\n  * @method\n  * @returns {sap.m.Input} Cloned input.\n  */\n\tInput.prototype.clone = function () {\n\t\tvar oInputClone = Control.prototype.clone.apply(this, arguments),\n\t\t    bindingInfo;\n\n\t\t// add suggestion columns\n\t\tbindingInfo = this.getBindingInfo(\"suggestionColumns\");\n\t\tif (bindingInfo) {\n\t\t\toInputClone.bindAggregation(\"suggestionColumns\", jQuery.extend({}, bindingInfo));\n\t\t} else {\n\t\t\tthis.getSuggestionColumns().forEach(function (oColumn) {\n\t\t\t\toInputClone.addSuggestionColumn(oColumn.clone(), true);\n\t\t\t});\n\t\t}\n\n\t\t// add suggestion rows\n\t\tbindingInfo = this.getBindingInfo(\"suggestionRows\");\n\t\tif (bindingInfo) {\n\t\t\toInputClone.bindAggregation(\"suggestionRows\", jQuery.extend({}, bindingInfo));\n\t\t} else {\n\t\t\tthis.getSuggestionRows().forEach(function (oRow) {\n\t\t\t\toInputClone.addSuggestionRow(oRow.clone(), true);\n\t\t\t});\n\t\t}\n\n\t\treturn oInputClone;\n\t};\n\n\t/* =========================================================== */\n\t/*           end: forward aggregation methods to table         */\n\t/* =========================================================== */\n\n\t/**\n  * Setter for property <code>value</code>.\n  *\n  * Default value is empty/<code>undefined</code>.\n  *\n  * @param {string} sValue New value for property <code>value</code>.\n  * @return {sap.m.Input} <code>this</code> to allow method chaining.\n  * @public\n  */\n\tInput.prototype.setValue = function (sValue) {\n\t\tthis._iSetCount++;\n\t\tInputBase.prototype.setValue.call(this, sValue);\n\t\tthis._onValueUpdated(sValue);\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the inner input DOM value.\n  *\n  * @protected\n  * @param {string} value Dom value which will be set.\n  */\n\tInput.prototype.setDOMValue = function (value) {\n\t\tthis._$input.val(value);\n\t};\n\n\t/**\n  * Gets the inner input DOM value.\n  *\n  * @protected\n  * @returns {any} The value of the input.\n  */\n\tInput.prototype.getDOMValue = function () {\n\t\treturn this._$input.val();\n\t};\n\n\t/**\n  * Gets accessibility information for the input.\n  *\n  * @see sap.ui.core.Control#getAccessibilityInfo\n  * @protected\n  * @returns {object} Accesibility information.\n  */\n\tInput.prototype.getAccessibilityInfo = function () {\n\t\tvar oInfo = InputBase.prototype.getAccessibilityInfo.apply(this, arguments);\n\t\toInfo.description = ((oInfo.description || \"\") + \" \" + this.getDescription()).trim();\n\t\treturn oInfo;\n\t};\n\n\t/**\n  * Getter for property <code>valueStateText</code>.\n  * The text which is shown in the value state message popup. If not specfied a default text is shown. This property is already available for sap.m.Input since 1.16.0.\n  *\n  * Default value is empty/<code>undefined</code>\n  *\n  * @return {string} the value of property <code>valueStateText</code>\n  * @public\n  * @since 1.16\n  * @name sap.m.Input#getValueStateText\n  * @function\n  */\n\n\t/**\n  * Setter for property <code>valueStateText</code>.\n  *\n  * Default value is empty/<code>undefined</code>\n  *\n  * @param {string} sValueStateText  new value for property <code>valueStateText</code>\n  * @return {sap.m.InputBase} <code>this</code> to allow method chaining\n  * @public\n  * @since 1.16\n  * @name sap.m.Input#setValueStateText\n  * @function\n  */\n\n\t/**\n * Getter for property <code>showValueStateMessage</code>.\n * Whether the value state message should be shown. This property is already available for sap.m.Input since 1.16.0.\n *\n * Default value is <code>true</code>\n *\n * @return {boolean} the value of property <code>showValueStateMessage</code>\n * @public\n * @since 1.16\n * @name sap.m.Input#getShowValueStateMessage\n * @function\n */\n\n\t/**\n  * Setter for property <code>showValueStateMessage</code>.\n  *\n  * Default value is <code>true</code>\n  *\n  * @param {boolean} bShowValueStateMessage  new value for property <code>showValueStateMessage</code>\n  * @return {sap.m.InputBase} <code>this</code> to allow method chaining\n  * @public\n  * @since 1.16\n  * @name sap.m.Input#setShowValueStateMessage\n  * @function\n  */\n\n\treturn Input;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.InputRenderer\", __webpack_require__(\"6LTI\"));\n\n/***/ }),\n\n/***/ \"ZSOb\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"ZcXo\":\n/***/ (function(module, exports) {\n\nmodule.exports = {\"sap.app\":{\"id\":\"sap.ui.demo.todo\",\"type\":\"application\"},\"sap.ui5\":{\"dependencies\":{\"libs\":{\"sap.ui.core\":{},\"sap.m\":{}}},\"rootView\":{\"viewName\":\"sap.ui.demo.todo.view.App\",\"type\":\"XML\",\"id\":\"app\"},\"models\":{\"i18n\":{\"type\":\"sap.ui.model.resource.ResourceModel\",\"settings\":{\"bundleName\":\"sap.ui.demo.todo.i18n.i18n\"}},\"\":{\"type\":\"sap.ui.model.json.JSONModel\",\"uri\":\"model/todoitems.json\"}}}}\n\n/***/ }),\n\n/***/ \"accj\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"PYoY\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Page.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"20/6\"), __webpack_require__(\"DFQa\"), __webpack_require__(\"MY9s\"), __webpack_require__(\"XYhA\"), __webpack_require__(\"tzTi\"), __webpack_require__(\"8d6a\"), __webpack_require__(\"wTGv\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"LJgu\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, library, Control, ScrollEnablement, Title, Button, Bar, ContextMenuSupport, coreLibrary, Device, Element) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.AccessibleLandmarkRole\n\n\tvar AccessibleLandmarkRole = coreLibrary.AccessibleLandmarkRole;\n\n\t// shortcut for sap.m.ButtonType\n\tvar ButtonType = library.ButtonType;\n\n\t// shortcut for sap.m.PageBackgroundDesign\n\tvar PageBackgroundDesign = library.PageBackgroundDesign;\n\n\t// shortcut for sap.ui.core.TitleLevel\n\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\tvar DIV = \"div\";\n\tvar HEADER = \"header\";\n\tvar FOOTER = \"footer\";\n\n\t/**\n  * Constructor for a new Page.\n  *\n  * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * A container control that holds one whole screen of an application.\n  *\n  * <h3>Overview</h3>\n  * The sap.m.Page is a container control that holds one whole screen of an application.\n  * The page has three distinct areas that can hold content - a header, content area and a footer.\n  * <h3>Structure</h3>\n  * <h4>Header</h4>\n  * The top most area of the page is occupied by the header. The standard header includes a navigation button and a title.\n  * Alternatively, you can create your own custom header, which is defined in the <code>customHeader</code> aggregation.\n  * <h4>Content</h4>\n  * The content occupies the main part of the page. Only the content area is scrollable by default.\n  * This can be prevented by setting  <code>enableScrolling</code> to <code>false</code>.\n  * <h4>Footer</h4>\n  * The footer is optional and occupies the fixed bottom part of the page. Alternatively, the footer can be floating above the bottom part of the content.\n  * This is enabled with the <code>floatingFooter</code> property.\n  *\n  * <b>Note:</b> All accessibility information for the different areas and their corresponding ARIA roles is set in the aggregation <code>landmarkInfo</code> of type {@link sap.m.PageAccessibleLandmarkInfo}\n  *\n  * @extends sap.ui.core.Control\n  * @mixes sap.ui.core.ContextMenuSupport\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @public\n  * @alias sap.m.Page\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar Page = Control.extend(\"sap.m.Page\", /** @lends sap.m.Page.prototype */{\n\t\tmetadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * The title text appearing in the page header bar.\n     */\n\t\t\t\ttitle: { type: \"string\", group: \"Data\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the semantic level of the title. Using \"Auto\" no explicit level information is written.\n     * Used for accessibility purposes only.\n     */\n\t\t\t\ttitleLevel: {\n\t\t\t\t\ttype: \"sap.ui.core.TitleLevel\",\n\t\t\t\t\tgroup: \"Appearance\",\n\t\t\t\t\tdefaultValue: TitleLevel.Auto\n\t\t\t\t},\n\n\t\t\t\t/**\n     * A nav button will be rendered on the left area of header bar if this property is set to true.\n     */\n\t\t\t\tshowNavButton: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Whether this page shall have a header.\n     * If set to true, either the control under the \"customHeader\" aggregation is used, or if there is no such control, a Header control is constructed from the properties \"title\", \"showNavButton\", \"navButtonText\" and \"icon\" depending on the platform.\n     */\n\t\t\t\tshowHeader: { type: \"boolean\", group: \"Appearance\", defaultValue: true },\n\n\t\t\t\t/**\n     * Whether this page shall show the subheader.\n     * @since 1.28\n     */\n\t\t\t\tshowSubHeader: { type: \"boolean\", group: \"Appearance\", defaultValue: true },\n\n\t\t\t\t/**\n     * The text of the nav button when running in iOS (if shown) in case it deviates from the default, which is \"Back\". This property is mvi-theme-dependent and will not have any effect in other themes.\n     * @deprecated Since version 1.20.\n     * Deprecated since the MVI theme is removed now. This property only affected the NavButton in that theme.\n     */\n\t\t\t\tnavButtonText: { type: \"string\", group: \"Misc\", defaultValue: null, deprecated: true },\n\n\t\t\t\t/**\n     * The tooltip of the nav button\n     *\n     * Since version 1.34\n     */\n\t\t\t\tnavButtonTooltip: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Enable vertical scrolling of page contents. Page headers and footers are fixed and do not scroll.\n     * If set to false, there will be no scrolling at all.\n     *\n     * The Page only allows vertical scrolling because horizontal scrolling is discouraged in general for full-page content. If it still needs to be achieved, disable the Page scrolling and use a ScrollContainer as full-page content of the Page. This allows you to freely configure scrolling. It can also be used to create horizontally-scrolling sub-areas of (vertically-scrolling) Pages.\n     */\n\t\t\t\tenableScrolling: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * the icon that is rendered in the page header bar in non-iOS phone/tablet platforms. This property is theme-dependent and only has an effect in the MVI theme.\n     * @deprecated Since version 1.20.\n     * Deprecated since the MVI theme is removed now. This property only affected the NavButton in that theme.\n     */\n\t\t\t\ticon: { type: \"sap.ui.core.URI\", group: \"Appearance\", defaultValue: null, deprecated: true },\n\n\t\t\t\t/**\n     * This property is used to set the background color of a page. When a list is placed inside a page, the value \"List\" should be used to display a gray background. \"Standard\", with the value white, is used as default if not specified.\n     */\n\t\t\t\tbackgroundDesign: {\n\t\t\t\t\ttype: \"sap.m.PageBackgroundDesign\",\n\t\t\t\t\tgroup: \"Appearance\",\n\t\t\t\t\tdefaultValue: PageBackgroundDesign.Standard\n\t\t\t\t},\n\n\t\t\t\t/**\n     * This property is used to set the appearance of the NavButton. By default when showNavButton is set to true, a back button will be shown in iOS and an up button in other platforms. In case you want to show a normal button in the left header area, you can set the value to \"Default\".\n     * @since 1.12\n     * @deprecated Since version 1.20.\n     * Deprecated since the MVI theme is removed now. This property is only usable with a Button text in that theme.\n     */\n\t\t\t\tnavButtonType: {\n\t\t\t\t\ttype: \"sap.m.ButtonType\",\n\t\t\t\t\tgroup: \"Appearance\",\n\t\t\t\t\tdefaultValue: ButtonType.Back,\n\t\t\t\t\tdeprecated: true\n\t\t\t\t},\n\n\t\t\t\t/**\n     * Whether this page shall have a footer\n     * @since 1.13.1\n     */\n\t\t\t\tshowFooter: { type: \"boolean\", group: \"Appearance\", defaultValue: true },\n\n\t\t\t\t/**\n     * Decides which area is covered by the local BusyIndicator when <code>page.setBusy()</code> is called. By default the entire page is covered, including headers and footer. When this property is set to \"true\", only the content area is covered (not header/sub header and footer), which is useful e.g. when there is a SearchField in the sub header and live search continuously updates the content area while the user is still able to type.\n     * @since 1.29.0\n     */\n\t\t\t\tcontentOnlyBusy: { type: \"boolean\", group: \"Appearance\", defaultValue: false },\n\n\t\t\t\t/**\n     * Decides whether the footer can float.\n     * When set to true, the footer is not fixed below the content area anymore, but rather floats over it with a slight offset from the bottom.\n     */\n\t\t\t\tfloatingFooter: { type: \"boolean\", group: \"Appearance\", defaultValue: false }\n\t\t\t},\n\t\t\tdefaultAggregation: \"content\",\n\t\t\taggregations: {\n\t\t\t\t/**\n     * The content of this page\n     */\n\t\t\t\tcontent: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"content\" },\n\n\t\t\t\t/**\n     * The (optional) custom header of this page.\n     * Use this aggregation only when a custom header is constructed where the default header consisting of title text + nav button is not sufficient.\n     * If this aggregation is set, the simple properties \"title\", \"showNavButton\", \"NavButtonText\" and \"icon\" are not used.\n     */\n\t\t\t\tcustomHeader: { type: \"sap.m.IBar\", multiple: false },\n\n\t\t\t\t/**\n     * The (optional) footer of this page. It is always located at the bottom of the page\n     */\n\t\t\t\tfooter: { type: \"sap.m.IBar\", multiple: false },\n\n\t\t\t\t/**\n     * a subHeader will be rendered directly under the header\n     */\n\t\t\t\tsubHeader: { type: \"sap.m.IBar\", multiple: false },\n\n\t\t\t\t/**\n     * Controls to be added to the right side of the page header. Usually an application would use Button controls and limit the number to one when the application needs to run on smartphones. There is no automatic overflow handling when the space is insufficient.\n     * When a customHeader is used, this aggregation will be ignored.\n     */\n\t\t\t\theaderContent: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"headerContent\" },\n\n\t\t\t\t/**\n     * Accessible landmark settings to be applied on the containers of the <code>sap.m.Page</code> control.\n     *\n     * If not set, no landmarks will be written.\n     */\n\t\t\t\tlandmarkInfo: { type: \"sap.m.PageAccessibleLandmarkInfo\", multiple: false },\n\n\t\t\t\t/**\n     * A header bar which is managed internally by the Page control\n     */\n\t\t\t\t_internalHeader: { type: \"sap.m.IBar\", multiple: false, visibility: \"hidden\" }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * this event is fired when Nav Button is tapped\n     * @deprecated Since version 1.12.2.\n     * the navButtonPress event is replacing this event\n     */\n\t\t\t\tnavButtonTap: { deprecated: true },\n\n\t\t\t\t/**\n     * this event is fired when Nav Button is pressed\n     * @since 1.12.2\n     */\n\t\t\t\tnavButtonPress: {}\n\t\t\t},\n\t\t\tdesignTime: true\n\t\t}\n\t});\n\n\tContextMenuSupport.apply(Page.prototype);\n\n\tPage.FOOTER_ANIMATION_DURATION = 350;\n\n\t// Return true if scrolling is allowed\n\tPage.prototype._hasScrolling = function () {\n\t\treturn this.getEnableScrolling();\n\t};\n\n\tPage.prototype.onBeforeRendering = function () {\n\t\tif (this._oScroller && !this._hasScrolling()) {\n\t\t\tthis._oScroller.destroy();\n\t\t\tthis._oScroller = null;\n\t\t} else if (this._hasScrolling() && !this._oScroller) {\n\t\t\tthis._oScroller = new ScrollEnablement(this, null, {\n\t\t\t\tscrollContainerId: this.getId() + \"-cont\",\n\t\t\t\thorizontal: false,\n\t\t\t\tvertical: true\n\t\t\t});\n\t\t}\n\n\t\tif (this._headerTitle) {\n\t\t\tthis._headerTitle.setLevel(this.getTitleLevel());\n\t\t}\n\t};\n\n\tPage.prototype.onAfterRendering = function () {\n\t\tjQuery.sap.delayedCall(10, this, this._adjustFooterWidth);\n\t};\n\n\t/**\n  * Called when the control is destroyed.\n  *\n  * @private\n  */\n\tPage.prototype.exit = function () {\n\t\tif (this._oScroller) {\n\t\t\tthis._oScroller.destroy();\n\t\t\tthis._oScroller = null;\n\t\t}\n\t\tif (this._headerTitle) {\n\t\t\tthis._headerTitle.destroy();\n\t\t\tthis._headerTitle = null;\n\t\t}\n\t\tif (this._navBtn) {\n\t\t\tthis._navBtn.destroy();\n\t\t\tthis._navBtn = null;\n\t\t}\n\t\tif (this._appIcon) {\n\t\t\tthis._appIcon.destroy();\n\t\t\tthis._appIcon = null;\n\t\t}\n\t};\n\n\tPage.prototype.setBackgroundDesign = function (sBgDesign) {\n\t\tvar sBgDesignOld = this.getBackgroundDesign();\n\n\t\tthis.setProperty(\"backgroundDesign\", sBgDesign, true);\n\t\tthis.$().removeClass(\"sapMPageBg\" + sBgDesignOld).addClass(\"sapMPageBg\" + this.getBackgroundDesign());\n\t\treturn this;\n\t};\n\n\tPage.prototype.setTitle = function (sTitle) {\n\t\tvar bWasNull = !this._headerTitle;\n\n\t\tthis._headerTitle = this._headerTitle || new Title(this.getId() + \"-title\", {\n\t\t\ttext: sTitle,\n\t\t\tlevel: this.getTitleLevel()\n\t\t});\n\t\tthis._headerTitle.setText(sTitle);\n\n\t\tif (bWasNull) {\n\t\t\tthis._updateHeaderContent(this._headerTitle, \"middle\", 0);\n\t\t}\n\n\t\tthis.setProperty(\"title\", sTitle, true);\n\t\treturn this;\n\t};\n\n\tPage.prototype._ensureNavButton = function () {\n\t\tvar sBackText = this.getNavButtonTooltip() || sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"PAGE_NAVBUTTON_TEXT\"); // any other types than \"Back\" do not make sense anymore in Blue Crystal\n\n\t\tif (!this._navBtn) {\n\t\t\tvar sNavButtonType = this.getNavButtonType();\n\n\t\t\tthis._navBtn = new Button(this.getId() + \"-navButton\", {\n\t\t\t\tpress: jQuery.proxy(function () {\n\t\t\t\t\tthis.fireNavButtonPress();\n\t\t\t\t\tthis.fireNavButtonTap();\n\t\t\t\t}, this)\n\t\t\t});\n\n\t\t\tif (Device.os.android && sNavButtonType == ButtonType.Back) {\n\t\t\t\tthis._navBtn.setType(ButtonType.Up);\n\t\t\t} else {\n\t\t\t\tthis._navBtn.setType(sNavButtonType);\n\t\t\t}\n\t\t}\n\n\t\tthis._navBtn.setTooltip(sBackText);\n\t};\n\n\tPage.prototype.setShowNavButton = function (bShowNavBtn) {\n\t\tvar bOldValue = !!this.getShowNavButton();\n\t\tif (bShowNavBtn === bOldValue) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.setProperty(\"showNavButton\", bShowNavBtn, true);\n\n\t\tif (bShowNavBtn) {\n\t\t\tthis._ensureNavButton(); // creates this._navBtn, if required\n\t\t\tif (this._appIcon) {\n\t\t\t\tthis._updateHeaderContent(this._appIcon, \"left\", -1);\n\t\t\t}\n\n\t\t\tthis._updateHeaderContent(this._navBtn, \"left\", 0);\n\t\t} else if (this._navBtn) {\n\t\t\t// remove back button from header bar\n\t\t\tthis._updateHeaderContent(this._navBtn, \"left\", -1);\n\t\t}\n\t\treturn this;\n\t};\n\n\tPage.prototype.setShowFooter = function (bShowFooter) {\n\t\tif (this.getDomRef()) {\n\t\t\tbShowFooter ? this.$().addClass(\"sapMPageWithFooter\") : this.$().removeClass(\"sapMPageWithFooter\");\n\t\t}\n\n\t\tvar $footer = jQuery(this.getDomRef()).find(\".sapMPageFooter\").last(),\n\t\t    useAnimation = sap.ui.getCore().getConfiguration().getAnimation();\n\n\t\tif (!this.getFloatingFooter()) {\n\t\t\tthis.setProperty(\"showFooter\", bShowFooter);\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.setProperty(\"showFooter\", bShowFooter, true);\n\n\t\t$footer.removeClass(\"sapUiHidden\");\n\t\t$footer.toggleClass(\"sapMPageFooterControlShow\", bShowFooter);\n\t\t$footer.toggleClass(\"sapMPageFooterControlHide\", !bShowFooter);\n\n\t\tif (bShowFooter) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (useAnimation) {\n\t\t\tjQuery.sap.delayedCall(Page.FOOTER_ANIMATION_DURATION, this, function () {\n\t\t\t\t$footer.toggleClass(\"sapUiHidden\", bShowFooter);\n\t\t\t});\n\t\t} else {\n\t\t\t$footer.toggleClass(\"sapUiHidden\", bShowFooter);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tPage.prototype.setNavButtonType = function (sNavButtonType) {\n\t\tthis._ensureNavButton(); // creates this._navBtn, if required\n\t\tif (!Device.os.ios && sNavButtonType == ButtonType.Back) {\n\t\t\t// internal conversion from Back to Up for non-iOS platform\n\t\t\tthis._navBtn.setType(ButtonType.Up);\n\t\t} else {\n\t\t\tthis._navBtn.setType(sNavButtonType);\n\t\t}\n\t\tthis.setProperty(\"navButtonType\", sNavButtonType, true);\n\t\treturn this;\n\t};\n\n\tPage.prototype.setNavButtonText = function (sText) {\n\t\tthis._ensureNavButton(); // creates this._navBtn, if required\n\t\tthis.setProperty(\"navButtonText\", sText, true);\n\t\treturn this;\n\t};\n\n\tPage.prototype.setNavButtonTooltip = function (sText) {\n\t\tthis.setProperty(\"navButtonTooltip\", sText, true);\n\t\tthis._ensureNavButton(); // creates this._navBtn, if required\n\t\treturn this;\n\t};\n\n\tPage.prototype.setIcon = function (sIconSrc) {\n\t\tvar sOldValue = this.getIcon();\n\t\tif (sOldValue === sIconSrc) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.setProperty(\"icon\", sIconSrc, true);\n\t\treturn this;\n\t};\n\n\tPage.prototype._adjustFooterWidth = function () {\n\t\tif (!this.getShowFooter() || !this.getFloatingFooter() || !this.getFooter()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $footer = jQuery(this.getDomRef()).find(\".sapMPageFooter\").last();\n\n\t\tif (this._contentHasScroll()) {\n\t\t\t$footer.css(\"right\", jQuery.position.scrollbarWidth() + \"px\");\n\t\t\t$footer.css(\"width\", \"initial\");\n\t\t} else {\n\t\t\t$footer.css(\"right\", 0);\n\t\t\t$footer.css(\"width\", \"\");\n\t\t}\n\t};\n\n\tPage.prototype._contentHasScroll = function () {\n\t\tvar $section = jQuery.sap.byId(this.getId() + \"-cont\", this.getDomRef());\n\t\treturn $section[0].scrollHeight > $section.innerHeight();\n\t};\n\n\t/**\n  * Update content of internal header\n  * @param {sap.ui.core.Control} oContent control to be added\n  * @param {string} sContentPosition position where the control should be located, possible values left/middle/right\n  * @param {number} iContentIndex the order of the control to be placed. If set to -1, the control will be removed from the header\n  * @private\n  */\n\tPage.prototype._updateHeaderContent = function (oContent, sContentPosition, iContentIndex) {\n\t\tvar oInternalHeader = this._getInternalHeader();\n\n\t\tif (oInternalHeader) {\n\t\t\tswitch (sContentPosition) {\n\t\t\t\tcase \"left\":\n\t\t\t\t\tif (iContentIndex == -1) {\n\t\t\t\t\t\tif (oInternalHeader.getContentLeft()) {\n\t\t\t\t\t\t\toInternalHeader.removeContentLeft(oContent);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (oInternalHeader.indexOfContentLeft(oContent) != iContentIndex) {\n\t\t\t\t\t\t\toInternalHeader.insertContentLeft(oContent, iContentIndex);\n\t\t\t\t\t\t\toInternalHeader.invalidate(); // workaround for bOutput problem\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"middle\":\n\t\t\t\t\tif (iContentIndex == -1) {\n\t\t\t\t\t\tif (oInternalHeader.getContentMiddle()) {\n\t\t\t\t\t\t\toInternalHeader.removeContentMiddle(oContent);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (oInternalHeader.indexOfContentMiddle(oContent) != iContentIndex) {\n\t\t\t\t\t\t\toInternalHeader.insertContentMiddle(oContent, iContentIndex);\n\t\t\t\t\t\t\toInternalHeader.invalidate();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\tif (iContentIndex == -1) {\n\t\t\t\t\t\tif (oInternalHeader.getContentRight()) {\n\t\t\t\t\t\t\toInternalHeader.removeContentRight(oContent);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (oInternalHeader.indexOfContentRight(oContent) != iContentIndex) {\n\t\t\t\t\t\t\toInternalHeader.insertContentRight(oContent, iContentIndex);\n\t\t\t\t\t\t\toInternalHeader.invalidate();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Create internal header\n  * @returns {sap.m.IBar} The header instance\n  * @private\n  */\n\n\tPage.prototype._getInternalHeader = function () {\n\t\tvar oInternalHeader = this.getAggregation(\"_internalHeader\");\n\t\tif (!oInternalHeader) {\n\t\t\tthis.setAggregation(\"_internalHeader\", new Bar(this.getId() + \"-intHeader\"), true); // don\"t invalidate - this is only called before/during rendering, where invalidation would lead to double rendering,  or when invalidation anyway happens\n\t\t\toInternalHeader = this.getAggregation(\"_internalHeader\");\n\n\t\t\tif (this.getShowNavButton() && this._navBtn) {\n\t\t\t\tthis._updateHeaderContent(this._navBtn, \"left\", 0);\n\t\t\t}\n\t\t\tif (this.getTitle() && this._headerTitle) {\n\t\t\t\tthis._updateHeaderContent(this._headerTitle, \"middle\", 0);\n\t\t\t}\n\t\t}\n\t\treturn oInternalHeader;\n\t};\n\n\t/**\n  * Returns the custom or internal header\n  * @returns {sap.m.IBar} The header instance\n  * @private\n  */\n\tPage.prototype._getAnyHeader = function () {\n\t\tvar oCustomHeader = this.getCustomHeader();\n\n\t\tif (oCustomHeader) {\n\t\t\t// return aggregated header, if it exists\n\t\t\treturn oCustomHeader.addStyleClass(\"sapMPageHeader\");\n\t\t}\n\n\t\treturn this._getInternalHeader().addStyleClass(\"sapMPageHeader\");\n\t};\n\n\t/**\n  * Returns the sap.ui.core.ScrollEnablement delegate which is used with this control.\n  * @returns {sap.ui.core.ScrollEnablement} The scroll enablement delegate\n  * @private\n  */\n\tPage.prototype.getScrollDelegate = function () {\n\t\treturn this._oScroller;\n\t};\n\n\t/**\n  * Formats <code>PageAccessibleLandmarkInfo</code> role and label of the provided <code>Page</code> part.\n  *\n  * @param {sap.m.PageAccessibleLandmarkInfo} oLandmarkInfo Page LandmarkInfo\n  * @param {string} sPartName part of the page\n  * @returns {object}\n  * @private\n  */\n\tPage.prototype._formatLandmarkInfo = function (oLandmarkInfo, sPartName) {\n\t\tif (oLandmarkInfo) {\n\t\t\tvar sRole = oLandmarkInfo[\"get\" + sPartName + \"Role\"]() || \"\",\n\t\t\t    sLabel = oLandmarkInfo[\"get\" + sPartName + \"Label\"]() || \"\";\n\n\t\t\tif (sRole === AccessibleLandmarkRole.None) {\n\t\t\t\tsRole = '';\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\trole: sRole.toLowerCase(),\n\t\t\t\tlabel: sLabel\n\t\t\t};\n\t\t}\n\n\t\treturn {};\n\t};\n\n\t/**\n  * Returns HTML tag of the page header.\n  *\n  * @param {sap.m.PageAccessibleLandmarkInfo} oLandmarkInfo Page LandmarkInfo\n  * @returns {string}\n  * @private\n  */\n\tPage.prototype._getHeaderTag = function (oLandmarkInfo) {\n\t\tif (oLandmarkInfo && oLandmarkInfo.getHeaderRole() !== AccessibleLandmarkRole.None) {\n\t\t\treturn DIV;\n\t\t}\n\n\t\treturn HEADER;\n\t};\n\n\t/**\n  * Returns HTML tag of the page sub-header.\n  *\n  * @param {sap.m.PageAccessibleLandmarkInfo} oLandmarkInfo Page LandmarkInfo\n  * @returns {string}\n  * @private\n  */\n\tPage.prototype._getSubHeaderTag = function (oLandmarkInfo) {\n\t\tif (oLandmarkInfo && oLandmarkInfo.getSubHeaderRole() !== AccessibleLandmarkRole.None) {\n\t\t\treturn DIV;\n\t\t}\n\n\t\treturn HEADER;\n\t};\n\n\t/**\n  * Returns HTML tag of the page footer.\n  *\n  * @param {sap.m.PageAccessibleLandmarkInfo} oLandmarkInfo Page LandmarkInfo\n  * @returns {string}\n  * @private\n  */\n\tPage.prototype._getFooterTag = function (oLandmarkInfo) {\n\t\tif (oLandmarkInfo && oLandmarkInfo.getFooterRole() !== AccessibleLandmarkRole.None) {\n\t\t\treturn DIV;\n\t\t}\n\n\t\treturn FOOTER;\n\t};\n\n\t//*** API Methods ***\n\n\n\t/**\n  * Scrolls to the given position. Only available if enableScrolling is set to \"true\".\n  *\n  * @param {int} y The vertical pixel position to scroll to. Scrolling down happens with positive values.\n  * @param {int} time The duration of animated scrolling. To scroll immediately without animation, give 0 as value. 0 is also the default value, when this optional parameter is omitted.\n  * @returns {sap.m.Page} <code>this</code> to facilitate method chaining.\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tPage.prototype.scrollTo = function (y, time) {\n\t\tif (this._oScroller) {\n\t\t\tthis._oScroller.scrollTo(0, y, time);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n  * Scrolls to an element(DOM or sap.ui.core.Element) within the page if the element is rendered.\n  * @param {HTMLElement | sap.ui.core.Element} oElement The element to which should be scrolled.\n  * @param {int} [iTime=0] The duration of animated scrolling. To scroll immediately without animation, give 0 as value or leave it default.\n  * @returns {sap.m.Page} <code>this</code> to facilitate method chaining.\n  * @since 1.30\n  * @public\n  */\n\tPage.prototype.scrollToElement = function (oElement, iTime) {\n\t\tif (oElement instanceof Element) {\n\t\t\toElement = oElement.getDomRef();\n\t\t}\n\n\t\tif (this._oScroller) {\n\t\t\tthis._oScroller.scrollToElement(oElement, iTime);\n\t\t}\n\t\treturn this;\n\t};\n\n\tPage.prototype.setContentOnlyBusy = function (bContentOnly) {\n\t\tthis.setProperty(\"contentOnlyBusy\", bContentOnly, true); // no re-rendering\n\t\tthis.$().toggleClass(\"sapMPageBusyCoversAll\", !bContentOnly);\n\t\treturn this;\n\t};\n\n\t//*** Methods forwarding the \"headerContent\" pseudo-aggregation calls ***\n\n\tPage.prototype.getHeaderContent = function () {\n\t\treturn this._getInternalHeader().getContentRight();\n\t};\n\n\tPage.prototype.indexOfHeaderContent = function (oControl) {\n\t\treturn this._getInternalHeader().indexOfContentRight(oControl);\n\t};\n\n\tPage.prototype.insertHeaderContent = function (oControl, iIndex) {\n\t\treturn this._getInternalHeader().insertContentRight(oControl, iIndex);\n\t};\n\n\tPage.prototype.addHeaderContent = function (oControl) {\n\t\treturn this._getInternalHeader().addContentRight(oControl);\n\t};\n\n\tPage.prototype.removeHeaderContent = function (oControl) {\n\t\treturn this._getInternalHeader().removeContentRight(oControl);\n\t};\n\n\tPage.prototype.removeAllHeaderContent = function () {\n\t\treturn this._getInternalHeader().removeAllContentRight();\n\t};\n\n\tPage.prototype.destroyHeaderContent = function () {\n\t\treturn this._getInternalHeader().destroyContentRight();\n\t};\n\n\tPage.prototype.setCustomHeader = function (oHeader) {\n\n\t\tthis.setAggregation(\"customHeader\", oHeader);\n\t\t/*\n   * Runs Fiori 2.0 adaptation for the header\n   */\n\t\tif (oHeader && this.mEventRegistry[\"_adaptableContentChange\"]) {\n\t\t\tthis.fireEvent(\"_adaptableContentChange\", {\n\t\t\t\t\"parent\": this,\n\t\t\t\t\"adaptableContent\": oHeader\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tPage.prototype._getAdaptableContent = function () {\n\t\treturn this._getAnyHeader();\n\t};\n\n\treturn Page;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.PageRenderer\", __webpack_require__(\"Lldq\"));\n\n/***/ }),\n\n/***/ \"cNzD\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"#This is the resource bundle for the sap.ui.core library\\r\\n#__ldi.translation.uuid=79738ed0-fe50-11e0-be50-0800200c9a66\\r\\n\\r\\n#NOTR\\r\\nSAPUI5_FRIDAY=Friday\\r\\n#NOTR\\r\\nSAPUI5_GM_ZSTEP=Zoom step {0}\\r\\n\\r\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have an error\\r\\nVALUE_STATE_ERROR=Invalid entry\\r\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have a warning\\r\\nVALUE_STATE_WARNING=Warning issued\\r\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to be in success state\\r\\nVALUE_STATE_SUCCESS=Entry successfully validated\\r\\n\\r\\n#XTOL: text that could be show if BusyIndicator is active\\r\\nBUSY_TEXT=Please wait\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.core.format.DateFormat\\r\\n#########\\r\\n\\r\\n#XTXT: the long pattern for formatting a date using calendar week number\\r\\ndate.week.calendarweek.wide=Calendar Week {0}\\r\\n#XTXT: the short pattern for formatting a date using calendar week number\\r\\ndate.week.calendarweek.narrow=CW {0}\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.core.format.FileSizeFormat\\r\\n#########\\r\\n\\r\\n#YMSG,20: File Size Unit one Byte\\r\\nFileSize.Byte={0} Byte\\r\\n#YMSG,20: File Size Unit Bytes\\r\\nFileSize.Bytes={0} Bytes\\r\\n\\r\\n#YMSG,20: File Size Unit Kilobyte (short)\\r\\nFileSize.Kilobyte={0} KB\\r\\n#YMSG,20: File Size Unit Megabyte (short)\\r\\nFileSize.Megabyte={0} MB\\r\\n#YMSG,20: File Size Unit Gigabyte (short)\\r\\nFileSize.Gigabyte={0} GB\\r\\n#YMSG,20: File Size Unit Terabyte (short)\\r\\nFileSize.Terabyte={0} TB\\r\\n#YMSG,20: File Size Unit Petabyte (short)\\r\\nFileSize.Petabyte={0} PB\\r\\n#YMSG,20: File Size Unit Exabyte (short)\\r\\nFileSize.Exabyte={0} EB\\r\\n#YMSG,20: File Size Unit Zettabyte (short)\\r\\nFileSize.Zettabyte={0} ZB\\r\\n#YMSG,20: File Size Unit Yottabyte (short)\\r\\nFileSize.Yottabyte={0} YB\\r\\n\\r\\n#YMSG,20: File Size Unit Kibibyte (short)\\r\\nFileSize.Kibibyte={0} KiB\\r\\n#YMSG,20: File Size Unit Mebibyte (short)\\r\\nFileSize.Mebibyte={0} MiB\\r\\n#YMSG,20: File Size Unit Gibibyte (short)\\r\\nFileSize.Gibibyte={0} GiB\\r\\n#YMSG,20: File Size Unit Tebibyte (short)\\r\\nFileSize.Tebibyte={0} TiB\\r\\n#YMSG,20: File Size Unit Pebibyte (short)\\r\\nFileSize.Pebibyte={0} PiB\\r\\n#YMSG,20: File Size Unit Exbibyte (short)\\r\\nFileSize.Exbibyte={0} EiB\\r\\n#YMSG,20: File Size Unit Zebibyte (short)\\r\\nFileSize.Zebibyte={0} ZiB\\r\\n#YMSG,20: File Size Unit Yobibyte (short)\\r\\nFileSize.Yobibyte={0} YiB\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.model.odata.AnnotationHelper\\r\\n#########\\r\\n\\r\\n#XTOL: mathematical term for a number greater than anything else\\r\\nINFINITY=Infinity\\r\\n#XTOL: mathematical term for a number smaller than anything else\\r\\nMINUS_INFINITY=Minus infinity\\r\\n#XTOL\\r\\nNAN=Not a number\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.model.odata.type.*\\r\\n#########\\r\\n\\r\\n#XTOL: No\\r\\nNO=No\\r\\n#XTOL: Yes\\r\\nYES=Yes\\r\\n#YMSG: Enter \\\"{0}\\\" or \\\"{1}\\\"\\r\\nEnterYesOrNo=Enter \\\"{0}\\\" or \\\"{1}\\\".\\r\\n#YMSG: Enter only digits\\r\\nEnterDigitsOnly=Enter only digits\\r\\n#YMSG: Enter a maximum of {0} digits\\r\\nEnterMaximumOfDigits=Enter a maximum of {0} digits.\\r\\n#YMSG: Enter a number\\r\\nEnterNumber=Enter a number\\r\\n#YMSG: Enter a number with a maximum of {0} digits, including any decimal places\\r\\nEnterNumberPrecision=Enter a number with a maximum of {0} digits, including any decimal places\\r\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator\\r\\nEnterNumberInteger=Enter a number with a maximum of {0} digits to the left of the decimal separator\\r\\n#YMSG: Enter a number with a maximum of {0} decimal places\\r\\nEnterNumberFraction=Enter a number with a maximum of {0} decimal places\\r\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\r\\nEnterNumberIntegerFraction=Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\r\\n#YMSG: Enter a number with a minimum value of {0}\\r\\nEnterNumberMin=Enter a number with a minimum value of {0}\\r\\n#YMSG: Enter a number greater than {0}\\r\\nEnterNumberMinExclusive=Enter a number greater than {0}\\r\\n#YMSG: Enter a number with a maximum value of {0}\\r\\nEnterNumberMax=Enter a number with a maximum value of {0}\\r\\n#YMSG: Enter a number less than {0}\\r\\nEnterNumberMaxExclusive=Enter a number less than {0}\\r\\n#YMSG: Enter a text\\r\\nEnterText=Enter a text\\r\\n#YMSG: Enter a text with a maximum of {0} characters and spaces\\r\\nEnterTextMaxLength=Enter a text with a maximum of {0} characters and spaces\\r\\n#YMSG: Enter a number with no decimal places\\r\\nEnterInt=Enter a number with no decimal places\\r\\n#YMSG: Enter a valid date and a valid time in the following format\\\\: {0}\\r\\nEnterDateTime=Enter a valid date and a valid time in the following format\\\\: {0}\\r\\n#YMSG: Enter a valid date in the following format\\\\: {0}\\r\\nEnterDate=Enter a valid date in the following format\\\\: {0}\\r\\n#YMSG: Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\r\\nEnterGuid=Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\r\\n#YMSG: Enter a valid time in the following format\\\\: {0}\\r\\nEnterTime=Enter a valid time in the following format\\\\: {0}\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.model.type.*\\r\\n#########\\r\\n\\r\\n#YMSG,100: Enter a valid boolean\\r\\nBoolean.Invalid=Enter a valid Boolean value\\r\\n\\r\\n#YMSG,100: Enter a valid number\\r\\nInteger.Invalid=Enter a valid number\\r\\n#YMSG,100: Enter a number greater than or equal to {0}\\r\\nInteger.Minimum=Enter a number greater than or equal to {0}\\r\\n#YMSG,100: Enter a number lower than or equal to {0}\\r\\nInteger.Maximum=Enter a number less than or equal to {0}\\r\\n\\r\\n#YMSG,100: Enter a valid number.\\r\\nFloat.Invalid=Enter a valid number\\r\\n#YMSG,100: Enter a number greater than or equal to {0}\\r\\nFloat.Minimum=Enter a number greater than or equal to {0}\\r\\n#YMSG,100: Enter a number lower than or equal to {0}\\r\\nFloat.Maximum=Enter a number less than or equal to {0}\\r\\n\\r\\n#YMSG,100: Enter a valid currency amount\\r\\nCurrency.Invalid=Enter a valid currency amount\\r\\n#YMSG,100: Enter an amount greater than or equal to {0}\\r\\nCurrency.Minimum=Enter an amount greater than or equal to {0}\\r\\n#YMSG,100: Enter an amount lower than or equal to {0}\\r\\nCurrency.Maximum=Enter an amount less than or equal to {0}\\r\\n\\r\\n#YMSG,100: Enter a valid file size\\r\\nFileSize.Invalid=Enter a valid file size\\r\\n#YMSG,100: EEnter a file size greater than or equal to {0}\\r\\nFileSize.Minimum=Enter a file size greater than or equal to {0}\\r\\n#YMSG,100: Enter a file size lower than or equal to {0}\\r\\nFileSize.Maximum=Enter a file size lower than or equal to {0}\\r\\n\\r\\n#YMSG,100: Enter a valid date\\r\\nDate.Invalid=Enter a date\\r\\n#YMSG,100: Enter a date after {0}\\r\\nDate.Minimum=Enter a date after {0}\\r\\n#YMSG,100: Enter a date before {0}\\r\\nDate.Maximum=Enter a date before {0}\\r\\n\\r\\n#YMSG,100: Enter a valid time\\r\\nTime.Invalid=Enter a valid time\\r\\n#YMSG,100: Enter a time after {0}\\r\\nTime.Minimum=Enter a time after {0}\\r\\n#YMSG,100: Enter a time before {0}\\r\\nTime.Maximum=Enter a time before {0}\\r\\n\\r\\n#YMSG,100: Enter a valid date and time\\r\\nDateTime.Invalid=Enter a valid date and time\\r\\n#YMSG,100: Enter a date and time after {0}\\r\\nDateTime.Minimum=Enter a date and time after {0}\\r\\n#YMSG,100: Enter a date and time before {0}\\r\\nDateTime.Maximum=Enter a date and time before {0}\\r\\n\\r\\n#YMSG,100: Enter a valid date interval\\r\\nDateInterval.Invalid=Enter a valid date interval\\r\\n\\r\\n#YMSG,100: Enter a value with at least {0} characters\\r\\nString.MinLength=Enter a value with at least {0} characters\\r\\n#YMSG,100: Enter a value with no more than {0} characters\\r\\nString.MaxLength=Enter a value with no more than {0} characters\\r\\n#YMSG,100: Enter a value starting with \\\"{0}\\\"\\r\\nString.StartsWith=Enter a value starting with \\\"{0}\\\"\\r\\n#YMSG,100: Enter a value ending with \\\"{0}\\\"\\r\\nString.EndsWith=Enter a value ending with \\\"{0}\\\"\\r\\n#YMSG,100: Enter a value containing \\\"{0}\\\"\\r\\nString.Contains=Enter a value containing \\\"{0}\\\"\\r\\n#YMSG,100: Enter value \\\"{0}\\\"\\r\\nString.Equals=Enter value \\\"{0}\\\"\\r\\n#YMSG,100: Enter a value matching \\\"{0}\\\"\\r\\nString.Search=Enter a value matching \\\"{0}\\\"\\r\\n\\r\\n#XACT: ARIA announcement for the MessageStrip's \\\"Error\\\" state\\r\\nMESSAGE_STRIP_ERROR=Message Strip Error\\r\\n#XACT: ARIA announcement for the MessageStrip's \\\"Warning\\\" state\\r\\nMESSAGE_STRIP_WARNING=Message Strip Warning\\r\\n#XACT: ARIA announcement for the MessageStrip's \\\"Success\\\" state\\r\\nMESSAGE_STRIP_SUCCESS=Message Strip Success\\r\\n#XACT: ARIA announcement for the MessageStrip's \\\"Information\\\" state\\r\\nMESSAGE_STRIP_INFORMATION=Message Strip Information\\r\\n#XACT: ARIA announcement for the MessageStrip's closable state\\r\\nMESSAGE_STRIP_CLOSABLE=Closable\\r\\n\\r\\n#XACT: type of an UI control is an image\\r\\nACC_CTR_TYPE_IMAGE=Image\\r\\n#XACT: type of an UI control is a button\\r\\nACC_CTR_TYPE_BUTTON=Button\\r\\n\\r\\n#XFLD: Close\\r\\nCLOSE=Close\\r\\n\\r\\n#########\\r\\n# Texts for sap-icon Font\\r\\n#\\r\\n# Update \\\"sap.ui.core.IconPool\\\" (mIconI18nKey)\\r\\n# when adding a new key here\\r\\n#########\\r\\n\\r\\n#XTXT\\r\\nIcon.action-settings=Settings\\r\\n#XTXT\\r\\nIcon.activate=Activate\\r\\n#XTXT\\r\\nIcon.add=Add\\r\\n#XTXT\\r\\nIcon.add-contact=Add Contact\\r\\n#XTXT\\r\\nIcon.add-filter=Add Filter\\r\\n#XTXT\\r\\nIcon.add-photo=Add Photo\\r\\n#XTXT\\r\\nIcon.back-to-top=Back to Top\\r\\n#XTXT\\r\\nIcon.collapse=Collapse\\r\\n#XTXT\\r\\nIcon.collapse-group=Collapse Group\\r\\n#XTXT: Crop parts of an image\\r\\nIcon.crop=Crop\\r\\n#XTXT: To decline an offer\\r\\nIcon.decline=Decline\\r\\n#XTXT\\r\\nIcon.delete=Delete\\r\\n#XTXT\\r\\nIcon.display=Display\\r\\n#XTXT\\r\\nIcon.down=Down\\r\\n#XTXT\\r\\nIcon.download=Download\\r\\n#XTXT\\r\\nIcon.drill-down=Drill Down\\r\\n#XTXT\\r\\nIcon.drill-up=Drill Up\\r\\n#XTXT\\r\\nIcon.error=Error\\r\\n#XTXT\\r\\nIcon.exit-full-screen=Exit Full Screen\\r\\n#XTXT\\r\\nIcon.expand=Expand\\r\\n#XTXT\\r\\nIcon.expand-group=Expand Group\\r\\n#XTXT: Action to filter on a group of elements\\r\\nIcon.filter=Filter\\r\\n#XTXT: To flag or mark an item\\r\\nIcon.flag=Flag\\r\\n#XTXT: To forward an item to a recipients\\r\\nIcon.forward=Forward\\r\\n#XTXT\\r\\nIcon.full-screen=Enter Full Screen\\r\\n#XTXT\\r\\nIcon.generate-shortcut=Create Shortcut\\r\\n#XTXT: To group items\\r\\nIcon.group-2=Group\\r\\n#XTXT: To hide an element from display\\r\\nIcon.hide=Hide\\r\\n#XTXT\\r\\nIcon.ipad=Tablet\\r\\n#XTXT\\r\\nIcon.ipad-2=Tablet\\r\\n#XTXT\\r\\nIcon.iphone=Phone\\r\\n#XTXT\\r\\nIcon.iphone-2=Phone\\r\\n#XTXT\\r\\nIcon.laptop=Laptop\\r\\n#XTXT\\r\\nIcon.message-error=Error\\r\\n#XTXT\\r\\nIcon.message-information=Information\\r\\n#XTXT\\r\\nIcon.message-success=Successful\\r\\n#XTXT\\r\\nIcon.message-warning=Warning\\r\\n#XTXT: To manipulate the position of an element\\r\\nIcon.move=Move\\r\\n#XTXT\\r\\nIcon.multi-select=Multi Select\\r\\n#XTXT\\r\\nIcon.nav-back=Navigate Back\\r\\n#XTXT\\r\\nIcon.overflow=More\\r\\n#XTXT\\r\\nIcon.redo=Redo\\r\\n#XTXT\\r\\nIcon.refresh=Refresh\\r\\n#XTXT\\r\\nIcon.resize=Resize\\r\\n#XTXT\\r\\nIcon.resize-horizontal=Resize Horizontally\\r\\n#XTXT\\r\\nIcon.resize-vertical=Resize Vertically\\r\\n#XTXT\\r\\nIcon.response=Reply\\r\\n#XTXT\\r\\nIcon.save=Save\\r\\n#XTXT\\r\\nIcon.search=Search\\r\\n#XTXT\\r\\nIcon.settings=Settings\\r\\n#XTXT: To show an element previously hidden\\r\\nIcon.show=Show\\r\\n#XTXT\\r\\nIcon.sort=Sort\\r\\n#XTXT\\r\\nIcon.sort-ascending=Sort Ascending\\r\\n#XTXT\\r\\nIcon.sort-descending=Sort Descending\\r\\n#XTXT\\r\\nIcon.synchronize=Synchronize\\r\\n#XTXT\\r\\nIcon.undo=Undo\\r\\n#XTXT\\r\\nIcon.up=Up\\r\\n#XTXT\\r\\nIcon.upload=Upload\\r\\n#XTXT\\r\\nIcon.zoom-in=Zoom In\\r\\n#XTXT\\r\\nIcon.zoom-out=Zoom Out\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.debug.TechnicalInfo\\r\\n#########\\r\\n\\r\\n#XTIT: Title for the technical information dialog\\r\\nTechInfo.DialogTitle=Technical Information Dialog\\r\\n\\r\\n#XTOL: Tooltip for info button in header\\r\\nTechInfo.HelpButton.Tooltip=Open documentation\\r\\n\\r\\n#XTOL: Tooltip for version information link\\r\\nTechInfo.VersionLink.Tooltip=Open version information in a new tab\\r\\n\\r\\n#XTOL: Tooltip for copy to clipboard button\\r\\nTechInfo.CopyButton.Tooltip=Copy technical information to clipboard\\r\\n\\r\\n#XBUT: SAPUI5 Diagnostics button text\\r\\nTechnInfo.DiagnosticsButton.Text=Open Diagnostics\\r\\n\\r\\n#XBUT: Support assistant button text\\r\\nTechnInfo.AssistantButton.Text=Activate Support Assistant\\r\\n\\r\\n#XFLD: User agent field label\\r\\nTechInfo.UserAgent.Label=User Agent\\r\\n\\r\\n#XFLD: Application URL label\\r\\nTechInfo.AppUrl.Label=App URL\\r\\n\\r\\n#XFLD: Debug sources label\\r\\nTechInfo.DebugSources.Label=Use Debug Sources\\r\\n\\r\\n#XTOL: Debug sources tooltip\\r\\nTechInfo.DebugSources.Tooltip=Reloads the current page with unminified sources for debugging\\r\\n\\r\\n#XLNK: Debug sources select packages link\\r\\nTechInfo.DebugSourcesModules.Link=Select specific modules\\r\\n\\r\\n#XFLD: Text for the version build time string\\r\\nTechInfo.VersionBuildTime.Text=(built at {0})\\r\\n\\r\\n#YMSG: success message for copying to clipboard\\r\\nTechInfo.CopyToClipboard.Success=Technical information copied to clipboard\\r\\n\\r\\n#YMSG: error message for copying to clipboard\\r\\nTechInfo.CopyToClipboard.Error=Technical information could not be copied to clipboard\\r\\n\\r\\n#XTIT: Confirmation title for enabling/disabling debug sources\\r\\nTechInfo.DebugSources.ConfirmTitle=Reload App\\r\\n\\r\\n#YMSG: Confirmation message for enabling/disabling debug sources\\r\\nTechInfo.DebugSources.ConfirmMessage=Reload the app to enable or disable the debug sources\\r\\n\\r\\n#XTIT: Title for the custom bootstrap UPL configuration popup\\r\\nTechInfo.SupportAssistantConfigPopup.Title=Support Assistant Settings\\r\\n\\r\\n#XFLD: Standard bootstrap locations option for the custom bootstrap UPL configuration popup\\r\\nTechInfo.SupportAssistantConfigPopup.StandardLocation=Recommended Locations\\r\\n\\r\\n#XFLD: Custom bootstrap location option for the custom bootstrap UPL configuration popup\\r\\nTechInfo.SupportAssistantConfigPopup.CustomLocation=Custom Location\\r\\n\\r\\n#XFLD: Application version bootstrap location option for the custom bootstrap UPL configuration popup\\r\\nTechInfo.SupportAssistantConfigPopup.AppVersionOption=Application Version ({0})\\r\\n\\r\\n#YMSG: Custom bootstrap location validation error message\\r\\nTechInfo.SupportAssistantConfigPopup.URLValidationMessage=Incorrect syntax of the location address. Correct syntax should be http://<Valid custom URI>/resources/sap/ui/support.\\r\\n\\r\\n#YMSG: Error message when support Assistant is not found\\r\\nTechInfo.SupportAssistantConfigPopup.SupportAssistantNotFound=Support Assistant is not available in this location:\\r\\n\\r\\n#YMSG: Error message when protocols did not match\\r\\nTechInfo.SupportAssistantConfigPopup.ProtocolError=App protocol does not match the Support Assistant protocol (HTTP/HTTPS)\\r\\n\\r\\n#YMSG: Error message when Ajax return code is different than [200]\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorTryingToGetRecourse=Ajax return code is different than [200]\\r\\n\\r\\n#YMSG: Error message when file not Found [404]\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorNotFound=Not Found [404]\\r\\n\\r\\n#YMSG: Error message when internal server error occurs\\r\\nTechInfo.SupportAssistantConfigPopup.InternalServerError=Internal Server Error [500]\\r\\n\\r\\n#YMSG: Error message when request timeout.\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorOnTimeout=Time out error\\r\\n\\r\\n#YMSG: Error message when trying to parse JSON\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorOnJsonParse=Requested JSON parse failed\\r\\n\\r\\n#YMSG: Error message when uncaught Error occurs\\r\\nTechInfo.SupportAssistantConfigPopup.UncaughtError=Uncaught Error\\r\\n\\r\\n#YMSG: Error message when request is aborted\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorWhenAborted=Ajax request aborted\\r\\n\\r\\n#YMSG: Error message when default locations are not available\\r\\nTechInfo.SupportAssistantConfigPopup.NotAvailableAtTheMoment=This location is not available at the moment.\\r\\n\\r\\n#XFLD: Title for enabling Support Assistant to open in new window.\\r\\nTechInfo.SupportAssistantConfigPopup.OpenInNewWindow=Open Support Assistant in New Window\\r\\n\\r\\n#XFLD: Title for location section in support Assistant settings popover\\r\\nTechInfo.SupportAssistantConfigPopup.Locations=Resource Location\\r\\n\\r\\n#XFLD: Title for options section in support Assistant settings popover\\r\\nTechInfo.SupportAssistantConfigPopup.Options=Options\\r\\n\\r\\n#XTIT: Title for the debug modules configuration selection\\r\\nTechInfo.DebugModulesConfigPopup.SelectionCounter=Select Debug Modules ({0} Selected)\\r\\n\\r\\n#YMSG: sap-ui-debug mode custom value validation error message\\r\\nTechInfo.DebugModulesConfigPopup.ModeValidationMessage=Value for parameter sap-ui-debug is invalid\\r\\n\\r\\n#XTOL: Tooltip for copy to clipboard button\\r\\nTechInfo.DebugModulesCopy.Tooltip=Copy the sap-ui-debug value to clipboard\\r\\n\\r\\n#XTOL: Tooltip for copy to clipboard button\\r\\nTechInfo.DebugModulesReset.Tooltip=Reset the currently selected modules\\r\\n\\r\\n#YMSG: success message for copying to clipboard\\r\\nTechInfo.DebugModulesCopyToClipboard.Success=Custom sap-ui-debug value copied to clipboard\\r\\n\\r\\n#YMSG: error message for copying to clipboard\\r\\nTechInfo.DebugModulesCopyToClipboard.Error=Custom sap-ui-debug value could not be copied to clipboard\\r\\n\\r\\n#XTIT: Title for the debug modules configuration popup confirmation button\\r\\nTechInfo.DebugModulesConfigPopup.Confirm=Apply\\r\\n\"\n\n/***/ }),\n\n/***/ \"cm02\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"dg/n\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"djde\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"WL0V\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.DisplayListItem.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"E8Q9\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListItemBase, library, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t/**\n  * Constructor for a new DisplayListItem.\n  *\n  * @param {string} [sId] Id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * <code>sap.m.DisplayListItem</code> can be used to represent a label and a value.\n  * @extends sap.m.ListItemBase\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.DisplayListItem\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar DisplayListItem = ListItemBase.extend(\"sap.m.DisplayListItem\", /** @lends sap.m.DisplayListItem.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Defines the label of the list item.\n     */\n\t\t\t\tlabel: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the value of the list item.\n     */\n\t\t\t\tvalue: { type: \"string\", group: \"Data\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the <code>value</code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n     * @since 1.28.0\n     */\n\t\t\t\tvalueTextDirection: { type: \"sap.ui.core.TextDirection\", group: \"Appearance\", defaultValue: TextDirection.Inherit }\n\t\t\t}\n\t\t} });\n\n\tDisplayListItem.prototype.getContentAnnouncement = function () {\n\t\treturn this.getLabel() + \" \" + this.getValue();\n\t};\n\n\treturn DisplayListItem;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.DisplayListItemRenderer\", __webpack_require__(\"GPUP\"));\n\n/***/ }),\n\n/***/ \"dpi6\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"TITLE=Todos\\nINPUT_PLACEHOLDER=Was muss getan werden?\\nITEM_LEFT=Eintrag \\\\u00fcbrig\\nITEMS_LEFT=Eintr\\\\u00e4ge \\\\u00fcbrig\\nCLEAR_COMPLETED=Erledigte Eintr\\\\u00e4ge entfernen\\n\"\n\n/***/ }),\n\n/***/ \"groI\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t/**\n  * Segmented renderer.\n  * @namespace\n  */\n\tvar SegmentedButtonRenderer = {};\n\n\t/**\n  * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager} oRM the RenderManager that can be used for writing to the Render-Output-Buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tSegmentedButtonRenderer.render = function (oRM, oControl) {\n\t\tvar aButtons = oControl.getButtons(),\n\t\t    sSelectedButton = oControl.getSelectedButton(),\n\t\t    oButton,\n\t\t    sTooltip,\n\t\t    sButtonWidth,\n\t\t    sButtonTextDirection;\n\n\t\t// Select representation mockup\n\t\tif (oControl._bInOverflow) {\n\t\t\toRM.write(\"<div\");\n\t\t\toRM.writeControlData(oControl);\n\t\t\toRM.writeClasses();\n\t\t\toRM.write(\">\");\n\t\t\toRM.renderControl(oControl.getAggregation(\"_select\"));\n\t\t\toRM.write(\"</div>\");\n\t\t\treturn;\n\t\t}\n\n\t\t// write the HTML into the render manager\n\t\toRM.write(\"<ul\");\n\n\t\tif (SegmentedButtonRenderer._addAllIconsClass(aButtons)) {\n\t\t\toRM.addClass(\"sapMSegBIcons\");\n\t\t}\n\t\toRM.addClass(\"sapMSegB\");\n\t\toRM.writeClasses();\n\t\tif (oControl.getWidth() && oControl.getWidth() !== '') {\n\t\t\toRM.addStyle('width', oControl.getWidth());\n\t\t}\n\t\toRM.writeStyles();\n\t\toRM.writeControlData(oControl);\n\t\tsTooltip = oControl.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\toRM.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\t// ARIA\n\t\toRM.writeAccessibilityState(oControl, {\n\t\t\trole: \"radiogroup\"\n\t\t});\n\n\t\toRM.write(\">\");\n\n\t\tfor (var i = 0; i < aButtons.length; i++) {\n\t\t\toButton = aButtons[i];\n\n\t\t\t// instead of the button API we render a li element but with the id of the button\n\t\t\t// only the button properties enabled, width, icon, text, and tooltip are evaluated here\n\t\t\toRM.write(\"<li\");\n\n\t\t\tif (oButton.getVisible()) {\n\t\t\t\tvar sButtonText = oButton.getText(),\n\t\t\t\t    oButtonIcon = oButton.getIcon(),\n\t\t\t\t    sIconAriaLabel = \"\",\n\t\t\t\t    oImage;\n\n\t\t\t\tif (oButtonIcon) {\n\t\t\t\t\toImage = oButton._getImage(oButton.getId() + \"-img\", oButtonIcon);\n\t\t\t\t\tif (oImage instanceof sap.m.Image) {\n\t\t\t\t\t\toControl._overwriteImageOnload(oImage);\n\t\t\t\t\t} else if (!oButton.getTooltip()) {\n\t\t\t\t\t\t//BCP: 1670076777- Put aria-label only for icon or icon+text\n\t\t\t\t\t\tsIconAriaLabel = oControl._getIconAriaLabel(oImage);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toRM.writeControlData(oButton);\n\t\t\t\toRM.writeAttribute(\"aria-posinset\", i + 1);\n\t\t\t\toRM.writeAttribute(\"aria-setsize\", aButtons.length);\n\t\t\t\toRM.addClass(\"sapMSegBBtn\");\n\t\t\t\tif (oButton.aCustomStyleClasses !== undefined && oButton.aCustomStyleClasses instanceof Array) {\n\t\t\t\t\tfor (var j = 0; j < oButton.aCustomStyleClasses.length; j++) {\n\t\t\t\t\t\toRM.addClass(oButton.aCustomStyleClasses[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oButton.getEnabled()) {\n\t\t\t\t\toRM.addClass(\"sapMSegBBtnFocusable\");\n\t\t\t\t} else {\n\t\t\t\t\toRM.addClass(\"sapMSegBBtnDis\");\n\t\t\t\t}\n\t\t\t\tif (sSelectedButton === oButton.getId()) {\n\t\t\t\t\toRM.addClass(\"sapMSegBBtnSel\");\n\t\t\t\t}\n\t\t\t\tif (oButtonIcon && sButtonText !== '') {\n\t\t\t\t\toRM.addClass(\"sapMSegBBtnMixed\");\n\t\t\t\t}\n\t\t\t\toRM.writeClasses();\n\t\t\t\tsButtonWidth = oButton.getWidth();\n\t\t\t\tif (sButtonWidth) {\n\t\t\t\t\toRM.addStyle('width', sButtonWidth);\n\t\t\t\t\toRM.writeStyles();\n\t\t\t\t}\n\n\t\t\t\tsTooltip = oButton.getTooltip_AsString();\n\t\t\t\tif (sTooltip) {\n\t\t\t\t\toRM.writeAttributeEscaped(\"title\", sTooltip);\n\t\t\t\t}\n\t\t\t\toRM.writeAttribute(\"tabindex\", oButton.getEnabled() ? \"0\" : \"-1\");\n\n\t\t\t\tsButtonTextDirection = oButton.getTextDirection();\n\t\t\t\tif (sButtonTextDirection !== TextDirection.Inherit) {\n\t\t\t\t\toRM.writeAttribute(\"dir\", sButtonTextDirection.toLowerCase());\n\t\t\t\t}\n\n\t\t\t\t// ARIA\n\t\t\t\toRM.writeAccessibilityState(oButton, {\n\t\t\t\t\trole: \"radio\",\n\t\t\t\t\tchecked: sSelectedButton === oButton.getId()\n\t\t\t\t});\n\n\t\t\t\t// BCP:1570027826 If button has an icon add ARIA label containing the generic icon name\n\t\t\t\tif (oImage && sIconAriaLabel !== \"\") {\n\t\t\t\t\t// If there is text inside the button add it in the aria-label\n\t\t\t\t\tif (sButtonText !== \"\") {\n\t\t\t\t\t\tsIconAriaLabel += \" \" + sButtonText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if we have no text for the button set tooltip the name of the Icon\n\t\t\t\t\t\toRM.writeAttributeEscaped(\"title\", sIconAriaLabel);\n\t\t\t\t\t}\n\t\t\t\t\toRM.writeAttributeEscaped(\"aria-label\", sIconAriaLabel);\n\t\t\t\t}\n\n\t\t\t\toRM.write('>');\n\n\t\t\t\tif (oButtonIcon && oImage) {\n\t\t\t\t\toRM.renderControl(oImage);\n\t\t\t\t}\n\n\t\t\t\t// render text\n\t\t\t\tif (sButtonText !== '') {\n\t\t\t\t\toRM.writeEscaped(sButtonText, false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toRM.writeInvisiblePlaceholderData(oButton);\n\t\t\t\toRM.write('>');\n\t\t\t}\n\t\t\toRM.write(\"</li>\");\n\t\t}\n\t\toRM.write(\"</ul>\");\n\t};\n\n\tSegmentedButtonRenderer._addAllIconsClass = function (aButtons) {\n\t\tfor (var i = 0; i < aButtons.length; i++) {\n\t\t\tif (!aButtons[i].getIcon()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\n\treturn SegmentedButtonRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"hsfa\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"iJpc\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"xWKI\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.SegmentedButton.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"nPt9\"), __webpack_require__(\"20/6\"), __webpack_require__(\"Wjxd\"), __webpack_require__(\"qTcm\"), __webpack_require__(\"Px0v\"), __webpack_require__(\"dg/h\"), __webpack_require__(\"NZXE\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (library, Control, EnabledPropagator, ItemNavigation, ResizeHandler, Item, IconPool) {\n\t\"use strict\";\n\n\t/**\n  * Constructor for a new <code>SegmentedButton</code>.\n  *\n  * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * A horizontal control made of multiple buttons, which can display a title or an image.\n  *\n  * <h3>Overview</h3>\n  *\n  * The <code>SegmentedButton</code> shows a group of buttons. When the user clicks or taps\n  * one of the buttons, it stays in a pressed state. It automatically resizes the buttons\n  * to fit proportionally within the control. When no width is set, the control uses the available width.\n  *\n  * @extends sap.ui.core.Control\n  * @implements sap.ui.core.IFormContent\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.SegmentedButton\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\n\tvar SegmentedButton = Control.extend(\"sap.m.SegmentedButton\", /** @lends sap.m.SegmentedButton.prototype */{ metadata: {\n\n\t\t\tinterfaces: [\"sap.ui.core.IFormContent\"],\n\t\t\tlibrary: \"sap.m\",\n\t\t\tpublicMethods: [\"createButton\"],\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Defines the width of the SegmentedButton control. If not set, it uses the minimum required width to make all buttons inside of the same size (based on the biggest button).\n     *\n     */\n\t\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Disables all the buttons in the SegmentedButton control. When disabled all the buttons look grey and you cannot focus or click on them.\n     */\n\t\t\t\tenabled: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * Key of the selected item. If no item to this key is found in the items aggregation, no changes will apply. Only the items aggregation is affected. If duplicate keys exist, the first item matching the key is used.\n     * @since 1.28.0\n     */\n\t\t\t\tselectedKey: { type: \"string\", group: \"Data\", defaultValue: \"\", bindable: \"bindable\" }\n\t\t\t},\n\t\t\tdefaultAggregation: \"buttons\",\n\t\t\taggregations: {\n\n\t\t\t\t/**\n     * The buttons of the SegmentedButton control. The items set in this aggregation are used as an interface for the buttons displayed by the control. Only the properties ID, icon, text, enabled and textDirections of the Button control are evaluated. Setting other properties of the button will have no effect. Alternatively, you can use the createButton method to add buttons.\n     * @deprecated Since 1.28.0 Instead use the \"items\" aggregation.\n     */\n\t\t\t\tbuttons: { type: \"sap.m.Button\", multiple: true, singularName: \"button\" },\n\n\t\t\t\t/**\n     * Aggregation of items to be displayed. The items set in this aggregation are used as an interface for the buttons displayed by the control.\n     * The \"items\" and \"buttons\" aggregations should NOT be used simultaneously as it causes the control to work incorrectly.\n     * @since 1.28\n     */\n\t\t\t\titems: { type: \"sap.m.SegmentedButtonItem\", multiple: true, singularName: \"item\", bindable: \"bindable\" },\n\n\t\t\t\t/**\n     * Hidden aggregation that holds an instance of sap.m.Select to be used in some contexts as a representation of the segmented button (for example, in a popover with little space).\n     */\n\t\t\t\t_select: { type: \"sap.m.Select\", multiple: false, visibility: \"hidden\" }\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n     * A reference to the currently selected button control. By default or if the association is set to false (null, undefined, \"\", false), the first button will be selected.\n     * If the association is set to an invalid value (for example, an ID of a button that does not exist) the selection on the SegmentedButton will be removed.\n     * @deprecated As of version 1.52, use the <code>selectedItem</code> association instead.\n     */\n\t\t\t\tselectedButton: { deprecated: true, type: \"sap.m.Button\", multiple: false },\n\n\t\t\t\t/**\n     * A reference to the currently selected item control.\n     * @since 1.52\n     */\n\t\t\t\tselectedItem: { type: \"sap.m.SegmentedButtonItem\", multiple: false },\n\n\t\t\t\t/**\n     * Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby).\n     */\n\t\t\t\tariaDescribedBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaDescribedBy\" },\n\n\t\t\t\t/**\n     * Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby).\n     */\n\t\t\t\tariaLabelledBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaLabelledBy\" }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * Fires when the user selects a button, which returns the ID and button object.\n     * @deprecated As of version 1.52, use the <code>selectionChange</code> event instead.\n     */\n\t\t\t\tselect: {\n\t\t\t\t\tdeprecated: true,\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * Reference to the button, that has been selected.\n       */\n\t\t\t\t\t\tbutton: { type: \"sap.m.Button\" },\n\n\t\t\t\t\t\t/**\n       * ID of the button, which has been selected.\n       */\n\t\t\t\t\t\tid: { type: \"string\" },\n\n\t\t\t\t\t\t/**\n       * Key of the button, which has been selected. This property is only filled when the control is initiated with the items aggregation.\n       * @since 1.28.0\n       */\n\t\t\t\t\t\tkey: { type: \"string\" }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n     * Fires when the user selects an item, which returns the item object.\n     * @since 1.52\n     */\n\t\t\t\tselectionChange: {\n\t\t\t\t\tparameters: {\n\t\t\t\t\t\t/**\n       * Reference to the item, that has been selected.\n       */\n\t\t\t\t\t\titem: { type: \"sap.m.SegmentedButtonItem\" }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} });\n\n\tEnabledPropagator.call(SegmentedButton.prototype);\n\n\tSegmentedButton.prototype.init = function () {\n\t\t// Used to store individual button widths\n\t\tthis._aWidths = [];\n\n\t\t// Delegate keyboard processing to ItemNavigation, see commons.SegmentedButton\n\t\tthis._oItemNavigation = new ItemNavigation();\n\t\tthis._oItemNavigation.setCycling(false);\n\t\t//this way we do not hijack the browser back/forward navigation\n\t\tthis._oItemNavigation.setDisabledModifiers({\n\t\t\tsapnext: [\"alt\"],\n\t\t\tsapprevious: [\"alt\"]\n\t\t});\n\t\tthis.addDelegate(this._oItemNavigation);\n\n\t\t//Make sure when a button gets removed to reset the selected button\n\t\tthis.removeButton = function (sButton) {\n\t\t\tSegmentedButton.prototype.removeButton.call(this, sButton);\n\t\t\tthis.setSelectedButton(this.getButtons()[0]);\n\t\t};\n\t};\n\n\tSegmentedButton.prototype.onBeforeRendering = function () {\n\t\tvar aButtons = this._getVisibleButtons();\n\n\t\tthis._bCustomButtonWidth = aButtons.some(function (oButton) {\n\t\t\treturn oButton.getWidth();\n\t\t});\n\n\t\tif (this._sResizeListenerId) {\n\t\t\tResizeHandler.deregister(this._sResizeListenerId);\n\t\t\tthis._sResizeListenerId = null;\n\t\t}\n\n\t\t// Update the selectedKey because here we have all the aggregations loaded\n\t\tthis.setSelectedKey(this.getProperty(\"selectedKey\"));\n\n\t\tif (!this.getSelectedButton()) {\n\t\t\tthis._selectDefaultButton();\n\t\t}\n\t};\n\n\tSegmentedButton.prototype.onAfterRendering = function () {\n\t\tvar aButtons = this._getVisibleButtons(),\n\t\t    oParentDom;\n\n\t\t//register resize listener on parent\n\t\tif (!this._sResizeListenerId) {\n\t\t\toParentDom = this.getDomRef().parentNode;\n\t\t\tif (oParentDom) {\n\t\t\t\tthis._sResizeListenerId = ResizeHandler.register(oParentDom, this._handleContainerResize.bind(this));\n\t\t\t}\n\t\t}\n\n\t\t// Keyboard\n\t\tthis._setItemNavigation();\n\n\t\t// Calculate and apply widths\n\t\tthis._aWidths = this._getRenderedButtonWidths(aButtons);\n\t\tthis._updateWidth();\n\t};\n\n\t/**\n  * Method to handle container resize events and trigger needed reset/recalculation if needed.\n  * @private\n  */\n\tSegmentedButton.prototype._handleContainerResize = function () {\n\t\tvar aButtons = this._getVisibleButtons();\n\n\t\t// Needed to provide correct width recalculation\n\t\tthis._clearAutoWidthAppliedToControl();\n\n\t\t// Get new widths and apply to button\n\t\tthis._aWidths = this._getRenderedButtonWidths(aButtons);\n\t\tthis._updateWidth();\n\t};\n\n\t/**\n  * Clear width, previously calculated by the SegmentedButton and applied to the control\n  * @private\n  */\n\tSegmentedButton.prototype._clearAutoWidthAppliedToControl = function () {\n\t\tvar aButtons = this._getVisibleButtons(),\n\t\t    iButtonsLength = aButtons.length,\n\t\t    oButton,\n\t\t    i = 0;\n\n\t\tif (!this.getWidth()) {\n\t\t\tthis.$().css(\"width\", \"\");\n\t\t}\n\t\twhile (i < iButtonsLength) {\n\t\t\toButton = aButtons[i];\n\t\t\tif (!oButton.getWidth()) {\n\t\t\t\toButton.$().css(\"width\", \"\");\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t};\n\n\t/**\n  * Returns a new array with all rendered button widths.\n  * @param {array} aButtons with buttons\n  * @returns {array} The array of the widths\n  * @private\n  */\n\tSegmentedButton.prototype._getRenderedButtonWidths = function (aButtons) {\n\t\treturn aButtons.map(function (oButton) {\n\t\t\treturn oButton.$().outerWidth();\n\t\t});\n\t};\n\n\t/**\n  * Returns button width for button without pre-setted width depending on the other buttons in the control.\n  * @param {array} aButtons Array containing all visible buttons\n  * @returns {string|boolean} CSS Width or false\n  * @private\n  */\n\tSegmentedButton.prototype._getButtonWidth = function (aButtons) {\n\t\tvar iButtons = aButtons.length,\n\t\t    sWidth,\n\t\t    iNoWidths = 0,\n\t\t    iSumPercents = 0,\n\t\t    iSumPixels = 0,\n\t\t    iPercent,\n\t\t    iPixels,\n\t\t    i = 0;\n\n\t\tif (this._bCustomButtonWidth) {\n\t\t\twhile (i < iButtons) {\n\t\t\t\tsWidth = aButtons[i].getWidth();\n\t\t\t\tif (sWidth) {\n\t\t\t\t\tif (sWidth.indexOf(\"%\") !== -1) {\n\t\t\t\t\t\t// Width in Percent\n\t\t\t\t\t\tiSumPercents += parseInt(sWidth.slice(0, -1), 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Width in Pixels\n\t\t\t\t\t\tiSumPixels += parseInt(sWidth.slice(0, -2), 10);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tiNoWidths++;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\t// If there are no buttons without width setted return\n\t\t\tif (iNoWidths === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tiPercent = (100 - iSumPercents) / iNoWidths;\n\t\t\tiPixels = iSumPixels / iNoWidths;\n\n\t\t\t// Handle invalid negative numbers or other button occupying more than 100% of the width\n\t\t\tif (iPercent < 0) {\n\t\t\t\tiPercent = 0;\n\t\t\t}\n\t\t\tif (iPixels < 0) {\n\t\t\t\tiPixels = 0;\n\t\t\t}\n\n\t\t\tif (iPixels > 0) {\n\t\t\t\treturn \"calc(\" + iPercent + \"% - \" + iPixels + \"px)\";\n\t\t\t} else {\n\t\t\t\treturn iPercent + \"%\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn 100 / iButtons + \"%\";\n\t\t}\n\t};\n\n\t/**\n  * Recalculates and updates the width of the control and the rendered buttons\n  * @private\n  */\n\tSegmentedButton.prototype._updateWidth = function () {\n\t\t// If this method is called before the dom is rendered or sapUiSegmentedButtonNoAutoWidth style class is applied\n\t\t// we skip width calculations\n\t\tif (this.$().length === 0 || this.hasStyleClass(\"sapMSegmentedButtonNoAutoWidth\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sControlWidth = this.getWidth(),\n\t\t    aButtons = this._getVisibleButtons(),\n\t\t    iButtonsCount = aButtons.length,\n\t\t    iMaxWidth = this._aWidths.length > 0 ? Math.max.apply(Math, this._aWidths) : 0,\n\t\t    iButtonWidthPercent = 100 / iButtonsCount,\n\t\t    iParentWidth = this.$().parent().innerWidth(),\n\t\t    sWidth = this._getButtonWidth(aButtons),\n\t\t    oButton,\n\t\t    i;\n\n\t\tif (!sControlWidth) {\n\t\t\t// Modify whole control width if needed\n\t\t\tif (iMaxWidth * iButtonsCount > iParentWidth) {\n\t\t\t\tthis.$().css(\"width\", \"100%\");\n\t\t\t} else if (iMaxWidth > 0) {\n\t\t\t\t// Here we add 1px to compensate for the border which is taken within the calculation of max width\n\t\t\t\tthis.$().width(iMaxWidth * iButtonsCount + 1);\n\t\t\t}\n\t\t\t// Modify button widths\n\t\t\ti = 0;\n\t\t\twhile (i < iButtonsCount) {\n\t\t\t\toButton = aButtons[i];\n\t\t\t\toButton.$().css(\"width\", oButton.getWidth() ? oButton.getWidth() : sWidth);\n\t\t\t\ti++;\n\t\t\t}\n\t\t} else if (sControlWidth && !this._bCustomButtonWidth) {\n\t\t\t// Modify button widths\n\t\t\ti = 0;\n\t\t\twhile (i < iButtonsCount) {\n\t\t\t\taButtons[i].$().css(\"width\", iButtonWidthPercent + \"%\");\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t};\n\n\tSegmentedButton.prototype.exit = function () {\n\t\tif (this._sResizeListenerId) {\n\t\t\tResizeHandler.deregister(this._sResizeListenerId);\n\t\t\tthis._sResizeListenerId = null;\n\t\t}\n\t\tif (this._oItemNavigation) {\n\t\t\tthis.removeDelegate(this._oItemNavigation);\n\t\t\tthis._oItemNavigation.destroy();\n\t\t\tdelete this._oItemNavigation;\n\t\t}\n\t\tthis._bCustomButtonWidth = null;\n\t\tthis._aWidths = null;\n\t};\n\n\t/**\n  * @private\n  */\n\tSegmentedButton.prototype._setItemNavigation = function () {\n\t\tvar aButtons,\n\t\t    oDomRef = this.getDomRef();\n\n\t\tif (oDomRef) {\n\t\t\tthis._oItemNavigation.setRootDomRef(oDomRef);\n\t\t\taButtons = this.$().find(\".sapMSegBBtn:not(.sapMSegBBtnDis)\");\n\t\t\tthis._oItemNavigation.setItemDomRefs(aButtons);\n\t\t\tthis._focusSelectedButton();\n\t\t}\n\t};\n\n\t/**\n  * Adds a Button with a text as title, a URI for an icon, enabled and textDirection.\n  * Only one is allowed.\n  *\n  * @param {string} sText\n  *         Defines the title text of the newly created Button\n  * @param {sap.ui.core.URI} sURI\n  *         Icon to be displayed as graphical element within the Button.\n  *         Density related image will be loaded if image with density awareness name in format [imageName]@[densityValue].[extension] is provided.\n  * @param {boolean} bEnabled\n  *         Enables the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n  * @param {sap.ui.core.TextDirection} [sTextDirection]\n  *         Element's text directionality with enumerated options\n  *         @since 1.28.0\n  * @return {sap.m.Button} The created Button\n  * @public\n  * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tSegmentedButton.prototype.createButton = function (sText, sURI, bEnabled, sTextDirection) {\n\t\tvar oButton = new sap.m.Button();\n\n\t\tif (sText !== null) {\n\t\t\toButton.setText(sText);\n\t\t}\n\t\tif (sURI !== null) {\n\t\t\toButton.setIcon(sURI);\n\t\t}\n\t\tif (bEnabled || bEnabled === undefined) {\n\t\t\toButton.setEnabled(true);\n\t\t} else {\n\t\t\toButton.setEnabled(false);\n\t\t}\n\t\tif (sTextDirection) {\n\t\t\toButton.setTextDirection(sTextDirection);\n\t\t}\n\t\tthis.addButton(oButton);\n\n\t\treturn oButton;\n\t};\n\n\t(function () {\n\t\tSegmentedButton.prototype.addButton = function (oButton) {\n\t\t\tif (oButton) {\n\t\t\t\tprocessButton(oButton, this);\n\t\t\t\tthis.addAggregation('buttons', oButton);\n\t\t\t\tthis._syncSelect();\n\t\t\t\treturn this;\n\t\t\t}\n\t\t};\n\n\t\tSegmentedButton.prototype.insertButton = function (oButton, iIndex) {\n\t\t\tif (oButton) {\n\t\t\t\tprocessButton(oButton, this);\n\t\t\t\tthis.insertAggregation('buttons', oButton, iIndex);\n\t\t\t\tthis._syncSelect();\n\t\t\t\treturn this;\n\t\t\t}\n\t\t};\n\n\t\tfunction processButton(oButton, oParent) {\n\t\t\toButton.attachPress(function (oEvent) {\n\t\t\t\toParent._buttonPressed(oEvent);\n\t\t\t});\n\n\t\t\toButton.attachEvent(\"_change\", oParent._syncSelect, oParent);\n\t\t\toButton.attachEvent(\"_change\", oParent._forwardChangeEvent, oParent);\n\n\t\t\tvar fnOriginalSetEnabled = sap.m.Button.prototype.setEnabled;\n\t\t\toButton.setEnabled = function (bEnabled) {\n\t\t\t\toButton.$().toggleClass(\"sapMSegBBtnDis\", !bEnabled).toggleClass(\"sapMFocusable\", bEnabled);\n\n\t\t\t\tfnOriginalSetEnabled.apply(oButton, arguments);\n\t\t\t};\n\n\t\t\toButton.setVisible = function (bVisible) {\n\t\t\t\tsap.m.Button.prototype.setVisible.apply(this, arguments);\n\t\t\t\toParent.invalidate();\n\t\t\t};\n\t\t}\n\t})();\n\n\t/**\n  * Gets the <code>selectedKey</code> and is usable only when the control is initiated with the <code>items</code> aggregation.\n  *\n  * @return {string} Current selected key\n  * @public\n  * @override\n  * @since 1.28\n  */\n\tSegmentedButton.prototype.getSelectedKey = function () {\n\t\tvar aButtons = this.getButtons(),\n\t\t    aItems = this.getItems(),\n\t\t    sSelectedButtonId = this.getSelectedButton(),\n\t\t    i = 0;\n\n\t\tif (aItems.length > 0) {\n\t\t\tfor (; i < aButtons.length; i++) {\n\t\t\t\tif (aButtons[i] && aButtons[i].getId() === sSelectedButtonId) {\n\t\t\t\t\tthis.setProperty(\"selectedKey\", aItems[i].getKey(), true);\n\t\t\t\t\treturn aItems[i].getKey();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t/**\n  * Sets the <code>selectedKey</code> and is usable only when the control is initiated with the <code>items</code> aggregation.\n  *\n  * @param {string} sKey The key of the button to be selected\n  * @returns {sap.m.SegmentedButton} <code>this</code> pointer for chaining\n  * @public\n  * @override\n  * @since 1.28\n  */\n\tSegmentedButton.prototype.setSelectedKey = function (sKey) {\n\t\tvar aButtons = this.getButtons(),\n\t\t    aItems = this.getItems(),\n\t\t    i = 0;\n\n\t\t// If sKey is empty, undefined or falsy we don't select nothing\n\t\tif (!sKey) {\n\t\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (aItems.length > 0 && aButtons.length > 0) {\n\t\t\tfor (; i < aItems.length; i++) {\n\t\t\t\tif (aItems[i] && aItems[i].getKey() === sKey) {\n\t\t\t\t\tthis.setSelectedItem(aItems[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\t\treturn this;\n\t};\n\n\tSegmentedButton.prototype.removeButton = function (oButton) {\n\t\tvar oRemovedButton = this.removeAggregation(\"buttons\", oButton);\n\t\tif (oRemovedButton) {\n\t\t\tdelete oRemovedButton.setEnabled;\n\t\t\toRemovedButton.detachEvent(\"_change\", this._syncSelect, this);\n\t\t\toRemovedButton.detachEvent(\"_change\", this._forwardChangeEvent, this);\n\t\t\tthis._syncSelect();\n\t\t}\n\t};\n\n\tSegmentedButton.prototype.removeAllButtons = function () {\n\t\tvar aButtons = this.getButtons();\n\t\tif (aButtons) {\n\t\t\tfor (var i = 0; i < aButtons.length; i++) {\n\t\t\t\tvar oButton = aButtons[i];\n\t\t\t\tif (oButton) {\n\t\t\t\t\tdelete oButton.setEnabled;\n\t\t\t\t\tthis.removeAggregation(\"buttons\", oButton);\n\t\t\t\t\toButton.detachEvent(\"_change\", this._syncSelect, this);\n\t\t\t\t\toButton.detachEvent(\"_change\", this._forwardChangeEvent, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._syncSelect();\n\t\t}\n\t};\n\n\t/**\n  * Adds item to <code>items</code> aggregation.\n  * @param {sap.m.SegmentedButtonItem} oItem The item to be added\n  * @param {boolean} [bSuppressInvalidate=false] If <code>true</code> the control invalidation will be suppressed\n  * @public\n  * @override\n  */\n\tSegmentedButton.prototype.addItem = function (oItem, bSuppressInvalidate) {\n\t\tthis.addAggregation(\"items\", oItem, bSuppressInvalidate);\n\t\tthis.addButton(oItem.oButton);\n\t};\n\n\t/**\n  * Removes an item from <code>items</code> aggregation.\n  * @param {sap.m.SegmentedButtonItem} oItem The item to be removed\n  * @param {boolean} [bSuppressInvalidate=false] If <code>true</code> the control invalidation will be suppressed\n  * @public\n  * @override\n  */\n\tSegmentedButton.prototype.removeItem = function (oItem, bSuppressInvalidate) {\n\t\tif (oItem !== null && oItem !== undefined) {\n\t\t\tthis.removeAggregation(\"buttons\", oItem.oButton, true);\n\t\t\tthis.removeAggregation(\"items\", oItem, bSuppressInvalidate);\n\t\t}\n\t\t// Reset selected button if the removed button is the currently selected one\n\t\tif (oItem && oItem instanceof sap.m.SegmentedButtonItem && this.getSelectedButton() === oItem.oButton.getId()) {\n\t\t\tthis.setSelectedKey(\"\");\n\t\t\tthis.setSelectedButton(\"\");\n\t\t\tthis.setSelectedItem(\"\");\n\t\t}\n\n\t\tthis.setSelectedItem(this.getItems()[0]);\n\t};\n\n\t/**\n  * Inserts item into <code>items</code> aggregation.\n  * @param {sap.m.SegmentedButtonItem} oItem The item to be inserted\n  * @param {int} iIndex index the item should be inserted at\n  * @param {boolean} [bSuppressInvalidate=false] If <code>true</code> the control invalidation will be suppressed\n  * @public\n  * @override\n  */\n\tSegmentedButton.prototype.insertItem = function (oItem, iIndex, bSuppressInvalidate) {\n\t\tthis.insertAggregation(\"items\", oItem, iIndex, bSuppressInvalidate);\n\t\tthis.insertButton(oItem.oButton, iIndex);\n\t};\n\n\t/**\n  * Removes all items from <code>items</code> aggregation\n  * @param {boolean} [bSuppressInvalidate=false] If <code>true</code> the control invalidation will be suppressed\n  * @public\n  * @override\n  */\n\tSegmentedButton.prototype.removeAllItems = function (bSuppressInvalidate) {\n\t\tthis.removeAllAggregation(\"items\", bSuppressInvalidate);\n\t\tthis.removeAllButtons();\n\n\t\t// Reset selectedKey, selectedButton and selectedItem\n\t\tthis.setSelectedKey(\"\");\n\t\tthis.setSelectedButton(\"\");\n\t\tthis.setSelectedItem(\"\");\n\t};\n\n\t/** Event handler for the internal button press events.\n  * @param {Object} oEvent The event to be fired\n  * @private\n  */\n\tSegmentedButton.prototype._buttonPressed = function (oEvent) {\n\t\tvar oButtonPressed = oEvent.getSource(),\n\t\t    oItemPressed;\n\n\t\tif (this.getSelectedButton() !== oButtonPressed.getId()) {\n\t\t\t// CSN# 0001429454/2014: remove class for all other items\n\t\t\tthis.getButtons().forEach(function (oButton) {\n\t\t\t\toButton.$().removeClass(\"sapMSegBBtnSel\");\n\t\t\t\toButton.$().attr(\"aria-checked\", false);\n\t\t\t});\n\n\t\t\t//get the corresponding item regarding the pressed button\n\t\t\toItemPressed = this.getItems().filter(function (oItem) {\n\t\t\t\treturn oItem.oButton === oButtonPressed;\n\t\t\t})[0];\n\n\t\t\toButtonPressed.$().addClass(\"sapMSegBBtnSel\");\n\t\t\toButtonPressed.$().attr(\"aria-checked\", true);\n\n\t\t\tthis.setAssociation('selectedButton', oButtonPressed, true);\n\t\t\tthis.setProperty(\"selectedKey\", this.getSelectedKey(), true);\n\n\t\t\tthis.setAssociation('selectedItem', oItemPressed, true);\n\t\t\tthis.fireSelectionChange({\n\t\t\t\titem: oItemPressed\n\t\t\t});\n\n\t\t\t// support old API\n\t\t\tthis.fireSelect({\n\t\t\t\tbutton: oButtonPressed,\n\t\t\t\tid: oButtonPressed.getId(),\n\t\t\t\tkey: this.getSelectedKey()\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n  * Internal helper function that sets the association <code>selectedButton</code> to the first button.\n  * @private\n  */\n\tSegmentedButton.prototype._selectDefaultButton = function () {\n\t\tvar aButtons = this._getVisibleButtons();\n\n\t\t// CSN# 0001429454/2014: when the id evaluates to false (null, undefined, \"\") the first button should be selected\n\t\tif (aButtons.length > 0) {\n\t\t\tthis.setAssociation('selectedButton', aButtons[0], true);\n\n\t\t\tif (this.getItems().length > 0) {\n\t\t\t\tthis.setAssociation('selectedItem', this.getItems()[0], true);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Setter for association <code>selectedButton</code>.\n  *\n  * @param {string | sap.m.Button | null | undefined} vButton New value for association <code>setSelectedButton</code>\n  *    An sap.m.Button instance which becomes the new target of this <code>selectedButton</code> association.\n  *    Alternatively, the ID of an sap.m.Button instance may be given as a string.\n  *    If the value of null, undefined, or an empty string is provided the first item will be selected.\n  * @returns {sap.m.SegmentedButton} <code>this</code> this pointer for chaining\n  * @public\n  */\n\tSegmentedButton.prototype.setSelectedButton = function (vButton) {\n\t\tvar sSelectedButtonBefore = this.getSelectedButton(),\n\t\t    oSelectedButton,\n\t\t    aButtons = this.getButtons();\n\n\t\t// set the new value\n\t\tthis.setAssociation(\"selectedButton\", vButton, true);\n\n\t\t// CSN# 1143859/2014: update selection state in DOM when calling API method to change the selection\n\t\tif (sSelectedButtonBefore !== this.getSelectedButton()) {\n\t\t\t// CSN# 0001429454/2014: only update DOM when control is already rendered (otherwise it will be done in onBeforeRendering)\n\t\t\tif (this.$().length) {\n\t\t\t\t// Select default button if there is no selected button and if there is more than one button available\n\t\t\t\tif (!this.getSelectedButton() && aButtons.length > 1) {\n\t\t\t\t\tthis._selectDefaultButton();\n\t\t\t\t}\n\t\t\t\toSelectedButton = sap.ui.getCore().byId(this.getSelectedButton());\n\t\t\t\taButtons.forEach(function (oButton) {\n\t\t\t\t\toButton.$().removeClass(\"sapMSegBBtnSel\");\n\t\t\t\t\toButton.$().attr(\"aria-checked\", false);\n\t\t\t\t});\n\t\t\t\tif (oSelectedButton) {\n\t\t\t\t\toSelectedButton.$().addClass(\"sapMSegBBtnSel\");\n\t\t\t\t\toSelectedButton.$().attr(\"aria-checked\", true);\n\t\t\t\t}\n\t\t\t\tthis._focusSelectedButton();\n\t\t\t}\n\t\t}\n\n\t\tthis._syncSelect();\n\t\treturn this;\n\t};\n\n\t/**\n  * Setter for association <code>selectedItem</code>.\n  *\n  * @param {string | <code>sap.m.SegmentedButtonItem</code> | null | undefined} vItem New value for association <code>setSelectedItem</code>\n  *    An sap.m.SegmentedButtonItem instance which becomes the new target of this <code>selectedItem</code> association.\n  *    Alternatively, the ID of an <code>sap.m.SegmentedButtonItem</code> instance may be given as a string.\n  *    If the value of null, undefined, or an empty string is provided, the first item will be selected.\n  * @returns {sap.m.SegmentedButton} <code>this</code> pointer for chaining\n  * @public\n  * @override\n  */\n\tSegmentedButton.prototype.setSelectedItem = function (vItem) {\n\t\tvar oItem = typeof vItem === \"string\" && vItem !== \"\" ? sap.ui.getCore().byId(vItem) : vItem,\n\t\t    oItemInstanceOfSegBtnItem = oItem instanceof sap.m.SegmentedButtonItem,\n\t\t    vButton = oItemInstanceOfSegBtnItem ? oItem.oButton : vItem;\n\n\t\t// set the new value\n\t\tthis.setAssociation(\"selectedItem\", vItem, true);\n\t\tthis.setSelectedButton(vButton);\n\n\t\treturn this;\n\t};\n\n\tSegmentedButton.prototype._focusSelectedButton = function () {\n\t\tvar aButtons = this.getButtons(),\n\t\t    selectedButtonId = this.getSelectedButton(),\n\t\t    i = 0;\n\n\t\tfor (; i < aButtons.length; i++) {\n\t\t\tif (aButtons[i] && aButtons[i].getId() === selectedButtonId) {\n\t\t\t\tthis._oItemNavigation.setFocusedIndex(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tSegmentedButton.prototype.onsappagedown = function (oEvent) {\n\t\tthis._oItemNavigation.onsapend(oEvent);\n\t};\n\n\tSegmentedButton.prototype.onsappageup = function (oEvent) {\n\t\tthis._oItemNavigation.onsaphome(oEvent);\n\t};\n\n\t/** Select form function **/\n\n\t/**\n  * Lazy loader for the select hidden aggregation.\n  * @private\n  */\n\tSegmentedButton.prototype._lazyLoadSelectForm = function () {\n\t\tvar oSelect = this.getAggregation(\"_select\");\n\n\t\tif (!oSelect) {\n\t\t\toSelect = new sap.m.Select(this.getId() + \"-select\");\n\t\t\toSelect.attachChange(this._selectChangeHandler, this);\n\t\t\toSelect.addStyleClass(\"sapMSegBSelectWrapper\");\n\t\t\tthis.setAggregation(\"_select\", oSelect, true);\n\t\t}\n\t};\n\n\t/**\n  * Called when the select is changed so that the SegmentedButton internals stay in sync.\n  * @param {Object} oEvent The event fired\n  * @private\n  */\n\tSegmentedButton.prototype._selectChangeHandler = function (oEvent) {\n\t\tvar oSelectedItem = oEvent.getParameter(\"selectedItem\"),\n\t\t    sNewKey = parseInt(oSelectedItem.getKey(), 10),\n\t\t    oButton = this.getButtons()[sNewKey],\n\t\t    sButtonId = oButton.getId();\n\n\t\toButton.firePress();\n\t\tthis.setSelectedButton(sButtonId);\n\t};\n\n\tSegmentedButton.prototype._forwardChangeEvent = function () {\n\t\tthis.fireEvent(\"_change\");\n\t};\n\n\t/**\n  * Builds/rebuilds the select from the buttons in the SegmentedButton.\n  * @private\n  */\n\tSegmentedButton.prototype._syncSelect = function () {\n\t\tvar iKey = 0,\n\t\t    iSelectedKey = 0,\n\t\t    sButtonText,\n\t\t    oSelect = this.getAggregation(\"_select\");\n\n\t\tif (!oSelect) {\n\t\t\treturn;\n\t\t}\n\n\t\toSelect.destroyItems();\n\t\tthis._getVisibleButtons().forEach(function (oButton) {\n\t\t\tsButtonText = oButton.getText();\n\t\t\toSelect.addItem(new Item({\n\t\t\t\tkey: iKey.toString(),\n\t\t\t\ttext: sButtonText ? sButtonText : oButton.getTooltip_AsString(),\n\t\t\t\tenabled: oButton.getEnabled()\n\t\t\t}));\n\t\t\tif (oButton.getId() === this.getSelectedButton()) {\n\t\t\t\tiSelectedKey = iKey;\n\t\t\t}\n\t\t\tiKey++;\n\t\t}, this);\n\t\toSelect.setSelectedKey(iSelectedKey.toString());\n\t};\n\n\t/**\n  * To be called to make the control go to select mode.\n  * @private\n  */\n\tSegmentedButton.prototype._toSelectMode = function () {\n\t\tthis._bInOverflow = true;\n\t\tthis.addStyleClass(\"sapMSegBSelectWrapper\");\n\t\tthis._lazyLoadSelectForm();\n\t\tthis._syncSelect();\n\t};\n\n\t/**\n  * To be called to make the control go back to the default mode.\n  * @private\n  */\n\tSegmentedButton.prototype._toNormalMode = function () {\n\t\tdelete this._bInOverflow;\n\t\tthis.removeStyleClass(\"sapMSegBSelectWrapper\");\n\t\tthis.getAggregation(\"_select\").removeAllItems();\n\t\tthis.destroyAggregation(\"_select\");\n\t};\n\n\t/**\n  * Image does not have an onload event but we need to recalculate the button sizes - after the image is loaded\n  * we override the onload method once and call the calculation method after the original method is called.\n  * @param {sap.m.Image} oImage instance of the image\n  * @private\n  */\n\tSegmentedButton.prototype._overwriteImageOnload = function (oImage) {\n\t\tvar that = this;\n\n\t\tif (oImage.onload === sap.m.Image.prototype.onload) {\n\t\t\toImage.onload = function () {\n\t\t\t\tif (sap.m.Image.prototype.onload) {\n\t\t\t\t\tsap.m.Image.prototype.onload.apply(this, arguments);\n\t\t\t\t}\n\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\tthat._updateWidth();\n\t\t\t\t}, 20);\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n  * Gets native SAP icon name.\n  * @param {sap.ui.core.Icon} oIcon Icon object\n  * @returns {string} The generic name of the icon\n  * @private\n  */\n\tSegmentedButton.prototype._getIconAriaLabel = function (oIcon) {\n\t\tvar oIconInfo = IconPool.getIconInfo(oIcon.getSrc()),\n\t\t    sResult = \"\";\n\t\tif (oIconInfo && oIconInfo.name) {\n\t\t\tsResult = oIconInfo.name;\n\t\t}\n\t\treturn sResult;\n\t};\n\n\t/**\n  * Gets the visible buttons.\n  * @returns {*} Array of the visible buttons\n  * @private\n  */\n\tSegmentedButton.prototype._getVisibleButtons = function () {\n\t\treturn this.getButtons().filter(function (oButton) {\n\t\t\treturn oButton.getVisible();\n\t\t});\n\t};\n\n\tSegmentedButton.prototype.clone = function () {\n\t\tvar sSelectedButtonId = this.getSelectedButton(),\n\t\t    aButtons = this.removeAllAggregation(\"buttons\"),\n\t\t    oClone = Control.prototype.clone.apply(this, arguments),\n\t\t    iSelectedButtonIndex = aButtons.map(function (b) {\n\t\t\treturn b.getId();\n\t\t}).indexOf(sSelectedButtonId),\n\t\t    i;\n\n\t\tif (iSelectedButtonIndex > -1) {\n\t\t\toClone.setSelectedButton(oClone.getButtons()[iSelectedButtonIndex]);\n\t\t}\n\n\t\tfor (i = 0; i < aButtons.length; i++) {\n\t\t\tthis.addAggregation(\"buttons\", aButtons[i]);\n\t\t}\n\n\t\treturn oClone;\n\t};\n\n\treturn SegmentedButton;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.SegmentedButtonRenderer\", __webpack_require__(\"groI\"));\n\n/***/ }),\n\n/***/ \"ifZV\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"ix2f\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"#This is the resource bundle for the sap.ui.core library\\n#\\n\\n#NOTR\\nSAPUI5_FRIDAY=Friday\\n#NOTR\\nSAPUI5_GM_ZSTEP=Zoom step {0}\\n\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have an error\\nVALUE_STATE_ERROR=Ung\\\\u00FCltige Eingabe\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have a warning\\nVALUE_STATE_WARNING=Warnung liegt vor\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to be in success state\\nVALUE_STATE_SUCCESS=Eintrag erfolgreich validiert\\n\\n#XTOL: text that could be show if BusyIndicator is active\\nBUSY_TEXT=Bitte warten\\n\\n#########\\n# Texts for sap.ui.core.format.DateFormat\\n#########\\n\\n#XTXT: the long pattern for formatting a date using calendar week number\\ndate.week.calendarweek.wide=Kalenderwoche {0}\\n#XTXT: the short pattern for formatting a date using calendar week number\\ndate.week.calendarweek.narrow=KW {0}\\n\\n#########\\n# Texts for sap.ui.core.format.FileSizeFormat\\n#########\\n\\n#YMSG,20: File Size Unit one Byte\\nFileSize.Byte={0} Byte\\n#YMSG,20: File Size Unit Bytes\\nFileSize.Bytes={0} Bytes\\n\\n#YMSG,20: File Size Unit Kilobyte (short)\\nFileSize.Kilobyte={0} KB\\n#YMSG,20: File Size Unit Megabyte (short)\\nFileSize.Megabyte={0} MB\\n#YMSG,20: File Size Unit Gigabyte (short)\\nFileSize.Gigabyte={0} GB\\n#YMSG,20: File Size Unit Terabyte (short)\\nFileSize.Terabyte={0} TB\\n#YMSG,20: File Size Unit Petabyte (short)\\nFileSize.Petabyte={0} PB\\n#YMSG,20: File Size Unit Exabyte (short)\\nFileSize.Exabyte={0} EB\\n#YMSG,20: File Size Unit Zettabyte (short)\\nFileSize.Zettabyte={0} ZB\\n#YMSG,20: File Size Unit Yottabyte (short)\\nFileSize.Yottabyte={0} YB\\n\\n#YMSG,20: File Size Unit Kibibyte (short)\\nFileSize.Kibibyte={0} KiB\\n#YMSG,20: File Size Unit Mebibyte (short)\\nFileSize.Mebibyte={0} MiB\\n#YMSG,20: File Size Unit Gibibyte (short)\\nFileSize.Gibibyte={0} GiB\\n#YMSG,20: File Size Unit Tebibyte (short)\\nFileSize.Tebibyte={0} TiB\\n#YMSG,20: File Size Unit Pebibyte (short)\\nFileSize.Pebibyte={0} PiB\\n#YMSG,20: File Size Unit Exbibyte (short)\\nFileSize.Exbibyte={0} EiB\\n#YMSG,20: File Size Unit Zebibyte (short)\\nFileSize.Zebibyte={0} ZiB\\n#YMSG,20: File Size Unit Yobibyte (short)\\nFileSize.Yobibyte={0} YiB\\n\\n#########\\n# Texts for sap.ui.model.odata.AnnotationHelper\\n#########\\n\\n#XTOL: mathematical term for a number greater than anything else\\nINFINITY=Unendlich\\n#XTOL: mathematical term for a number smaller than anything else\\nMINUS_INFINITY=Minus unendlich\\n#XTOL\\nNAN=Keine Zahl\\n\\n#########\\n# Texts for sap.ui.model.odata.type.*\\n#########\\n\\n#XTOL: No\\nNO=Nein\\n#XTOL: Yes\\nYES=Ja\\n#YMSG: Enter \\\"{0}\\\" or \\\"{1}\\\"\\nEnterYesOrNo=Geben Sie \\\"{0}\\\" oder \\\"{1}\\\" ein.\\n#YMSG: Enter only digits\\nEnterDigitsOnly=Geben Sie nur Ziffern ein\\n#YMSG: Enter a maximum of {0} digits\\nEnterMaximumOfDigits=Geben Sie maximal {0} Ziffern an.\\n#YMSG: Enter a number\\nEnterNumber=Geben Sie eine Zahl ein\\n#YMSG: Enter a number with a maximum of {0} digits, including any decimal places\\nEnterNumberPrecision=Geben Sie eine Zahl mit maximal {0} Ziffern einschlie\\\\u00DFlich Dezimalstellen ein\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator\\nEnterNumberInteger=Geben Sie eine Zahl mit maximal {0} Ziffern links des Dezimaltrennzeichens ein\\n#YMSG: Enter a number with a maximum of {0} decimal places\\nEnterNumberFraction=Geben Sie eine Zahl mit maximal {0} Dezimalstellen ein\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\nEnterNumberIntegerFraction=Geben Sie eine Zahl mit maximal {0} Ziffern links des Dezimaltrennzeichens und maximal {1} Dezimalstellen ein\\n#YMSG: Enter a number with a minimum value of {0}\\nEnterNumberMin=Geben Sie eine Zahl von mindestens {0} ein\\n#YMSG: Enter a number greater than {0}\\nEnterNumberMinExclusive=Geben Sie eine Zahl gr\\\\u00F6\\\\u00DFer als {0} ein\\n#YMSG: Enter a number with a maximum value of {0}\\nEnterNumberMax=Geben Sie eine Zahl kleiner oder gleich {0} ein\\n#YMSG: Enter a number less than {0}\\nEnterNumberMaxExclusive=Geben Sie eine Zahl kleiner als {0} ein\\n#YMSG: Enter a text\\nEnterText=Geben Sie einen Text ein\\n#YMSG: Enter a text with a maximum of {0} characters and spaces\\nEnterTextMaxLength=Geben Sie einen Text mit maximal {0} Zeichen und Leerstellen ein\\n#YMSG: Enter a number with no decimal places\\nEnterInt=Geben Sie eine Zahl ohne Dezimalstellen ein\\n#YMSG: Enter a valid date and a valid time in the following format\\\\: {0}\\nEnterDateTime=Geben Sie ein g\\\\u00FCltiges Datum und eine g\\\\u00FCltige Uhrzeit im folgenden Format ein\\\\: {0}\\n#YMSG: Enter a valid date in the following format\\\\: {0}\\nEnterDate=Geben Sie ein g\\\\u00FCltiges Datum im folgenden Format ein\\\\: {0}\\n#YMSG: Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\nEnterGuid=Geben Sie eine GUID im folgenden Format ein\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\n#YMSG: Enter a valid time in the following format\\\\: {0}\\nEnterTime=Geben Sie eine g\\\\u00FCltige Zeit im folgenden Format ein\\\\: {0}\\n\\n#########\\n# Texts for sap.ui.model.type.*\\n#########\\n\\n#YMSG,100: Enter a valid boolean\\nBoolean.Invalid=Geben Sie einen g\\\\u00FCltigen Booleschen Ausdruck ein\\n\\n#YMSG,100: Enter a valid number\\nInteger.Invalid=Geben Sie eine g\\\\u00FCltige Zahl ein\\n#YMSG,100: Enter a number greater than or equal to {0}\\nInteger.Minimum=Geben Sie eine Zahl gr\\\\u00F6\\\\u00DFer oder gleich {0} ein\\n#YMSG,100: Enter a number lower than or equal to {0}\\nInteger.Maximum=Geben Sie eine Zahl kleiner oder gleich {0} ein\\n\\n#YMSG,100: Enter a valid number.\\nFloat.Invalid=Geben Sie eine g\\\\u00FCltige Zahl ein\\n#YMSG,100: Enter a number greater than or equal to {0}\\nFloat.Minimum=Geben Sie eine Zahl gr\\\\u00F6\\\\u00DFer oder gleich {0} ein\\n#YMSG,100: Enter a number lower than or equal to {0}\\nFloat.Maximum=Geben Sie eine Zahl kleiner oder gleich {0} ein\\n\\n#YMSG,100: Enter a valid currency amount\\nCurrency.Invalid=Geben Sie einen g\\\\u00FCltigen W\\\\u00E4hrungsbetrag ein\\n#YMSG,100: Enter an amount greater than or equal to {0}\\nCurrency.Minimum=Geben Sie eine Anzahl gr\\\\u00F6\\\\u00DFer oder gleich {0} ein\\n#YMSG,100: Enter an amount lower than or equal to {0}\\nCurrency.Maximum=Geben Sie eine Anzahl kleiner oder gleich {0} ein\\n\\n#YMSG,100: Enter a valid file size\\nFileSize.Invalid=Geben Sie eine g\\\\u00FCltige Dateigr\\\\u00F6\\\\u00DFe ein\\n#YMSG,100: EEnter a file size greater than or equal to {0}\\nFileSize.Minimum=Geben Sie eine Dateigr\\\\u00F6\\\\u00DFe gr\\\\u00F6\\\\u00DFer oder gleich {0} ein\\n#YMSG,100: Enter a file size lower than or equal to {0}\\nFileSize.Maximum=Geben Sie eine Dateigr\\\\u00F6\\\\u00DFe kleiner oder gleich {0} ein\\n\\n#YMSG,100: Enter a valid date\\nDate.Invalid=Geben Sie ein Datum ein\\n#YMSG,100: Enter a date after {0}\\nDate.Minimum=Geben Sie ein Datum nach dem {0} ein\\n#YMSG,100: Enter a date before {0}\\nDate.Maximum=Geben Sie ein Datum vor dem {0} ein\\n\\n#YMSG,100: Enter a valid time\\nTime.Invalid=Geben Sie eine g\\\\u00FCltige Zeit ein\\n#YMSG,100: Enter a time after {0}\\nTime.Minimum=Geben Sie eine Zeit nach {0} ein\\n#YMSG,100: Enter a time before {0}\\nTime.Maximum=Geben Sie eine Zeit vor {0} ein\\n\\n#YMSG,100: Enter a valid date and time\\nDateTime.Invalid=Geben Sie ein g\\\\u00FCltiges Datum und eine g\\\\u00FCltige Uhrzeit ein\\n#YMSG,100: Enter a date and time after {0}\\nDateTime.Minimum=Geben Sie ein Datum und eine Uhrzeit nach {0} ein\\n#YMSG,100: Enter a date and time before {0}\\nDateTime.Maximum=Geben Sie ein Datum und eine Uhrzeit vor {0} ein\\n\\n#YMSG,100: Enter a valid date interval\\nDateInterval.Invalid=Geben Sie ein g\\\\u00FCltiges Datumsintervall ein\\n\\n#YMSG,100: Enter a value with at least {0} characters\\nString.MinLength=Geben Sie einen Wert mit mindestens {0} Zeichen ein\\n#YMSG,100: Enter a value with no more than {0} characters\\nString.MaxLength=Geben Sie einen Wert mit maximal {0} Zeichen ein\\n#YMSG,100: Enter a value starting with \\\"{0}\\\"\\nString.StartsWith=Geben Sie einen Wert ein, der mit \\\"{0}\\\" beginnt\\n#YMSG,100: Enter a value ending with \\\"{0}\\\"\\nString.EndsWith=Geben Sie einen Wert ein, der mit \\\"{0}\\\" endet\\n#YMSG,100: Enter a value containing \\\"{0}\\\"\\nString.Contains=Geben Sie einen Wert ein, der \\\"{0}\\\" enth\\\\u00E4lt\\n#YMSG,100: Enter value \\\"{0}\\\"\\nString.Equals=Geben Sie den Wert \\\"{0}\\\" ein\\n#YMSG,100: Enter a value matching \\\"{0}\\\"\\nString.Search=Geben Sie einen Wert ein, der mit \\\"{0}\\\" \\\\u00FCbereinstimmt\\n\\n#XACT: ARIA announcement for the MessageStrip's \\\"Error\\\" state\\nMESSAGE_STRIP_ERROR=Nachrichtenzeile f\\\\u00FCr Fehler\\n#XACT: ARIA announcement for the MessageStrip's \\\"Warning\\\" state\\nMESSAGE_STRIP_WARNING=Nachrichtenzeile f\\\\u00FCr Warnung\\n#XACT: ARIA announcement for the MessageStrip's \\\"Success\\\" state\\nMESSAGE_STRIP_SUCCESS=Nachrichtenzeile f\\\\u00FCr Erfolg\\n#XACT: ARIA announcement for the MessageStrip's \\\"Information\\\" state\\nMESSAGE_STRIP_INFORMATION=Nachrichtenzeile f\\\\u00FCr Information\\n#XACT: ARIA announcement for the MessageStrip's closable state\\nMESSAGE_STRIP_CLOSABLE=Schlie\\\\u00DFbar\\n\\n#XACT: type of an UI control is an image\\nACC_CTR_TYPE_IMAGE=Bild\\n#XACT: type of an UI control is a button\\nACC_CTR_TYPE_BUTTON=Drucktaste\\n\\n#XFLD: Close\\nCLOSE=Schlie\\\\u00DFen\\n\\n#########\\n# Texts for sap-icon Font\\n#\\n# Update \\\"sap.ui.core.IconPool\\\" (mIconI18nKey)\\n# when adding a new key here\\n#########\\n\\n#XTXT\\nIcon.action-settings=Einstellungen\\n#XTXT\\nIcon.activate=Aktivieren\\n#XTXT\\nIcon.add=Hinzuf\\\\u00FCgen\\n#XTXT\\nIcon.add-contact=Kontakt hinzuf\\\\u00FCgen\\n#XTXT\\nIcon.add-filter=Filter hinzuf\\\\u00FCgen\\n#XTXT\\nIcon.add-photo=Foto hinzuf\\\\u00FCgen\\n#XTXT\\nIcon.back-to-top=Zum Anfang\\n#XTXT\\nIcon.collapse=Komprimieren\\n#XTXT\\nIcon.collapse-group=Gruppe komprimieren\\n#XTXT: Crop parts of an image\\nIcon.crop=Zuschneiden\\n#XTXT: To decline an offer\\nIcon.decline=Ablehnen\\n#XTXT\\nIcon.delete=L\\\\u00F6schen\\n#XTXT\\nIcon.display=Anzeigen\\n#XTXT\\nIcon.down=Nach unten\\n#XTXT\\nIcon.download=Herunterladen\\n#XTXT\\nIcon.drill-down=Eine Ebene tiefer\\n#XTXT\\nIcon.drill-up=Eine Ebene h\\\\u00F6her\\n#XTXT\\nIcon.error=Fehler\\n#XTXT\\nIcon.exit-full-screen=Vollbildmodus beenden\\n#XTXT\\nIcon.expand=Expandieren\\n#XTXT\\nIcon.expand-group=Gruppe expandieren\\n#XTXT: Action to filter on a group of elements\\nIcon.filter=Filtern\\n#XTXT: To flag or mark an item\\nIcon.flag=Markieren\\n#XTXT: To forward an item to a recipients\\nIcon.forward=Weiterleiten\\n#XTXT\\nIcon.full-screen=Vollbildmodus aktivieren\\n#XTXT\\nIcon.generate-shortcut=Verkn\\\\u00FCpfung anlegen\\n#XTXT: To group items\\nIcon.group-2=Gruppe\\n#XTXT: To hide an element from display\\nIcon.hide=Ausblenden\\n#XTXT\\nIcon.ipad=Tablet\\n#XTXT\\nIcon.ipad-2=Tablet\\n#XTXT\\nIcon.iphone=Telefon\\n#XTXT\\nIcon.iphone-2=Telefon\\n#XTXT\\nIcon.laptop=Laptop\\n#XTXT\\nIcon.message-error=Fehler\\n#XTXT\\nIcon.message-information=Information\\n#XTXT\\nIcon.message-success=Erfolgreich\\n#XTXT\\nIcon.message-warning=Warnung\\n#XTXT: To manipulate the position of an element\\nIcon.move=Verschieben\\n#XTXT\\nIcon.multi-select=Mehrfachauswahl\\n#XTXT\\nIcon.nav-back=Zur\\\\u00FCck navigieren\\n#XTXT\\nIcon.overflow=Mehr\\n#XTXT\\nIcon.redo=Wiederholen\\n#XTXT\\nIcon.refresh=Aktualisieren\\n#XTXT\\nIcon.resize=Gr\\\\u00F6\\\\u00DFe \\\\u00E4ndern\\n#XTXT\\nIcon.resize-horizontal=Gr\\\\u00F6\\\\u00DFe horizontal \\\\u00E4ndern\\n#XTXT\\nIcon.resize-vertical=Gr\\\\u00F6\\\\u00DFe vertikal \\\\u00E4ndern\\n#XTXT\\nIcon.response=Antworten\\n#XTXT\\nIcon.save=Sichern\\n#XTXT\\nIcon.search=Suchen\\n#XTXT\\nIcon.settings=Einstellungen\\n#XTXT: To show an element previously hidden\\nIcon.show=Einblenden\\n#XTXT\\nIcon.sort=Sortieren\\n#XTXT\\nIcon.sort-ascending=Aufsteigend sortieren\\n#XTXT\\nIcon.sort-descending=Absteigend sortieren\\n#XTXT\\nIcon.synchronize=Synchronisieren\\n#XTXT\\nIcon.undo=R\\\\u00FCckg\\\\u00E4ngig machen\\n#XTXT\\nIcon.up=Nach oben\\n#XTXT\\nIcon.upload=Hochladen\\n#XTXT\\nIcon.zoom-in=Vergr\\\\u00F6\\\\u00DFern\\n#XTXT\\nIcon.zoom-out=Verkleinern\\n\\n#########\\n# Texts for sap.ui.debug.TechnicalInfo\\n#########\\n\\n#XTIT: Title for the technical information dialog\\nTechInfo.DialogTitle=Dialog f\\\\u00FCr technische Daten\\n\\n#XTOL: Tooltip for info button in header\\nTechInfo.HelpButton.Tooltip=Dokumentation \\\\u00F6ffnen\\n\\n#XTOL: Tooltip for version information link\\nTechInfo.VersionLink.Tooltip=Versionsdaten in neuer Registerkarte \\\\u00F6ffnen\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.CopyButton.Tooltip=Technische Daten in Zwischenablage kopieren\\n\\n#XBUT: SAPUI5 Diagnostics button text\\nTechnInfo.DiagnosticsButton.Text=Diagnose \\\\u00F6ffnen\\n\\n#XBUT: Support assistant button text\\nTechnInfo.AssistantButton.Text=Support-Assistent aktivieren\\n\\n#XFLD: User agent field label\\nTechInfo.UserAgent.Label=Benutzeragent\\n\\n#XFLD: Application URL label\\nTechInfo.AppUrl.Label=App-URL\\n\\n#XFLD: Debug sources label\\nTechInfo.DebugSources.Label=Debug-Quellen verwenden\\n\\n#XTOL: Debug sources tooltip\\nTechInfo.DebugSources.Tooltip=L\\\\u00E4dt die derzeitige Seite mit unverkleinerten Quellen f\\\\u00FCr Debugging\\n\\n#XLNK: Debug sources select packages link\\nTechInfo.DebugSourcesModules.Link=Bestimmte Module ausw\\\\u00E4hlen\\n\\n#XFLD: Text for the version build time string\\nTechInfo.VersionBuildTime.Text=(Build von {0})\\n\\n#YMSG: success message for copying to clipboard\\nTechInfo.CopyToClipboard.Success=Technische Daten wurden in die Zwischenablage kopiert.\\n\\n#YMSG: error message for copying to clipboard\\nTechInfo.CopyToClipboard.Error=Technische Daten k\\\\u00F6nnen nicht in die Zwischenablage kopiert werden.\\n\\n#XTIT: Confirmation title for enabling/disabling debug sources\\nTechInfo.DebugSources.ConfirmTitle=App neu laden\\n\\n#YMSG: Confirmation message for enabling/disabling debug sources\\nTechInfo.DebugSources.ConfirmMessage=Laden Sie die App neu, um die Debug-Quellen zu aktivieren/deaktivieren.\\n\\n#XTIT: Title for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.Title=Einstellungen f\\\\u00FCr Support-Assistent\\n\\n#XFLD: Standard bootstrap locations option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.StandardLocation=Empfohlene Pfade\\n\\n#XFLD: Custom bootstrap location option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.CustomLocation=Eigener Pfad\\n\\n#XFLD: Application version bootstrap location option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.AppVersionOption=Anwendungsversion ({0})\\n\\n#YMSG: Custom bootstrap location validation error message\\nTechInfo.SupportAssistantConfigPopup.URLValidationMessage=Die Syntax der Adresse ist nicht korrekt. Die richtige Syntax lautet\\\\: http\\\\://<G\\\\u00FCltiger eigener URI>/resources/sap/ui/support.\\n\\n#YMSG: Error message when support Assistant is not found\\nTechInfo.SupportAssistantConfigPopup.SupportAssistantNotFound=Der Support-Assistent wurde unter folgender Adresse leider nicht gefunden\\\\:\\n\\n#YMSG: Error message when protocols did not match\\nTechInfo.SupportAssistantConfigPopup.ProtocolError=Das App-Protokoll entspricht nicht dem Protokoll des Support-Assistenten (HTTP/HTTPS).\\n\\n#YMSG: Error message when Ajax return code is different than [200]\\nTechInfo.SupportAssistantConfigPopup.ErrorTryingToGetRecourse=Der Ajax-R\\\\u00FCckgabewert ist nicht [200].\\n\\n#YMSG: Error message when file not Found [404]\\nTechInfo.SupportAssistantConfigPopup.ErrorNotFound=Datei nicht gefunden (404)\\n\\n#YMSG: Error message when internal server error occurs\\nTechInfo.SupportAssistantConfigPopup.InternalServerError=Interner Serverfehler\\\\: {500}\\n\\n#YMSG: Error message when request timeout.\\nTechInfo.SupportAssistantConfigPopup.ErrorOnTimeout=Zeit\\\\u00FCberschreitungsfehler\\n\\n#YMSG: Error message when trying to parse JSON\\nTechInfo.SupportAssistantConfigPopup.ErrorOnJsonParse=Beim angeforderten JSON-Parsen ist ein Fehler aufgetreten.\\n\\n#YMSG: Error message when uncaught Error occurs\\nTechInfo.SupportAssistantConfigPopup.UncaughtError=Fehler wurde nicht abgefangen.\\n\\n#YMSG: Error message when request is aborted\\nTechInfo.SupportAssistantConfigPopup.ErrorWhenAborted=Ajax-Anfrage wurde abgebrochen.\\n\\n#YMSG: Error message when default locations are not available\\nTechInfo.SupportAssistantConfigPopup.NotAvailableAtTheMoment=Diese Adresse ist momentan nicht erreichbar.\\n\\n#XFLD: Title for enabling Support Assistant to open in new window.\\nTechInfo.SupportAssistantConfigPopup.OpenInNewWindow=Support-Assistent in neuem Fenster \\\\u00F6ffnen\\n\\n#XFLD: Title for location section in support Assistant settings popover\\nTechInfo.SupportAssistantConfigPopup.Locations=Ressourcenpfad\\n\\n#XFLD: Title for options section in support Assistant settings popover\\nTechInfo.SupportAssistantConfigPopup.Options=Optionen\\n\\n#XTIT: Title for the debug modules configuration selection\\nTechInfo.DebugModulesConfigPopup.SelectionCounter=Auswahl der Debug-Module ({0} ausgew\\\\u00E4hlt)\\n\\n#YMSG: sap-ui-debug mode custom value validation error message\\nTechInfo.DebugModulesConfigPopup.ModeValidationMessage=Wert f\\\\u00FCr Parameter sap-ui-debug ist ung\\\\u00FCltig\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.DebugModulesCopy.Tooltip=Wert von sap-ui-debug in Zwischenablage kopieren\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.DebugModulesReset.Tooltip=Aktuell ausgew\\\\u00E4hlte Module zur\\\\u00FCcksetzen\\n\\n#YMSG: success message for copying to clipboard\\nTechInfo.DebugModulesCopyToClipboard.Success=Selbstdefinierter Wert f\\\\u00FCr sap-ui-debug wurde in die Zwischenablege kopiert\\n\\n#YMSG: error message for copying to clipboard\\nTechInfo.DebugModulesCopyToClipboard.Error=Selbstdefinierter Wert sap-ui-debug kann nicht in Zwischenablage kopiert werden\\n\\n#XTIT: Title for the debug modules configuration popup confirmation button\\nTechInfo.DebugModulesConfigPopup.Confirm=\\\\u00DCbernehmen\\n\"\n\n/***/ }),\n\n/***/ \"llbd\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"#This is the resource bundle for the SAPUI5 sap.m library\\r\\n#__ldi.translation.uuid=d5a6d4a0-e171-11e1-9b23-0800200c9a66\\r\\n\\r\\n#XACT: ARIA ColumnHeader control description\\r\\nCOLUMNHEADER_ACCESS_COLUMN_ACTIONS=Access column actions\\r\\n\\r\\n#XACT: ARIA ColumnHeader filtered state announcement\\r\\nCOLUMNHEADER_FILTERED=Filtered\\r\\n\\r\\n#XACT: ARIA ColumnHeader sorted state announcement\\r\\nCOLUMNHEADER_SORTED=Sorted\\r\\n\\r\\n#XACT: ARIA ColumnHeader sort ascending state announcement\\r\\nCOLUMNHEADER_SORTED_ASCENDING=Ascending\\r\\n\\r\\n#XACT: ARIA ColumnHeader sort descending state announcement\\r\\nCOLUMNHEADER_SORTED_DESCENDING=Descending\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the combo box arrow\\r\\nCOMBOBOX_BUTTON=Arrow Down\\r\\n\\r\\n#XACT: ARIA announcement for Combo Box available options\\r\\nCOMBOBOX_AVAILABLE_OPTIONS=Available Options\\r\\n\\r\\n#XBUT: Button text for ok button in the combo box (mobile version)\\r\\nCOMBOBOX_CLOSE_BUTTON=OK\\r\\n\\r\\n#XBUT: Default title text for picker in the combo box (mobile version)\\r\\nCOMBOBOX_PICKER_TITLE=Select\\r\\n\\r\\n#XBUT: Button text for cancel button in the select (mobile version)\\r\\nSELECT_CANCEL_BUTTON=Cancel\\r\\n\\r\\n#XBLI: List text for no data lists\\r\\nLIST_NO_DATA=No data\\r\\n\\r\\n#XACT: ARIA announcement for the controls which do not provide any accessibility info\\r\\nCONTROL_EMPTY=Empty\\r\\n\\r\\n#XACT: ARIA announcement for the disabled controls\\r\\nCONTROL_DISABLED=Disabled\\r\\n\\r\\n#XACT: ARIA announcement for the read-only controls\\r\\nCONTROL_READONLY=Read Only\\r\\n\\r\\n#XACT: ARIA announcement for the list which allows single selections\\r\\nLIST_SELECTABLE=Contains Selectable Items\\r\\n\\r\\n#XACT: ARIA announcement for the list which allows multiple selections\\r\\nLIST_MULTISELECTABLE=Contains Multi-Selectable Items\\r\\n\\r\\n#XACT: ARIA announcement for the list which has deletable items\\r\\nLIST_DELETABLE=Contains Deletable Items\\r\\n\\r\\n#XACT: ARIA announcement for the list which is grouped\\r\\nLIST_GROUPED=Grouped\\r\\n\\r\\n#XACT: ARIA announcement for the list when all items are selected\\r\\nLIST_ALL_SELECTED=All Selected\\r\\n\\r\\n#XACT: ARIA announcement for a required list (e.g. inside a form)\\r\\nLIST_REQUIRED=Required\\r\\n\\r\\n#XACT: ARIA announcement for the selected list item\\r\\nLIST_ITEM_SELECTED=Selected\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the unread state of the list items\\r\\nLIST_ITEM_UNREAD=Unread\\r\\n\\r\\n#XACT: ARIA announcement for the navigable list items\\r\\nLIST_ITEM_NAVIGATION=Has Details\\r\\n\\r\\n#XACT: ARIA announcement for the list item details with edit option\\r\\nLIST_ITEM_DETAIL=Is Editable\\r\\n\\r\\n#XACT: ARIA announcement for the active clickable list items\\r\\nLIST_ITEM_ACTIVE=Is Active\\r\\n\\r\\n#XACT: ARIA announcement for the group header list items\\r\\nLIST_ITEM_GROUP_HEADER=Group Header\\r\\n\\r\\n#XACT: ARIA announcement for the position of the list items in an entire list\\r\\nLIST_ITEM_POSITION={0} of {1}\\r\\n\\r\\n#XACT: ARIA announcement for the position of the list item\\r\\nLIST_ITEM_INDEX=Item {0}\\r\\n\\r\\n#XACT: ARIA announcement for the counter property of the list item\\r\\nLIST_ITEM_COUNTER=Counter {0}\\r\\n\\r\\n#XACT: ARIA announcement for the information state of the list item\\r\\nLIST_ITEM_STATE_INFORMATION=Information\\r\\n\\r\\n#XACT: ARIA announcement for the error state of the list item\\r\\nLIST_ITEM_STATE_ERROR=Error\\r\\n\\r\\n#XACT: ARIA announcement for the warning state of the list item\\r\\nLIST_ITEM_STATE_WARNING=Warning\\r\\n\\r\\n#XACT: ARIA announcement for the success state of the list item\\r\\nLIST_ITEM_STATE_SUCCESS=Success\\r\\n\\r\\n#XTOL: tooltip for the delete icon of the list item\\r\\nLIST_ITEM_DELETE=Delete\\r\\n\\r\\n#XTOL: tooltip for the edit icon of the list item\\r\\nLIST_ITEM_EDIT=Edit\\r\\n\\r\\n#XBUT: Button text for back button on page\\r\\nPAGE_NAVBUTTON_TEXT=Back\\r\\n\\r\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\r\\nSWITCH_ON=On\\r\\n\\r\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\r\\nSWITCH_OFF=Off\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the accept state in the Switch control\\r\\nSWITCH_ARIA_ACCEPT=Accept\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the reject state in the Switch control\\r\\nSWITCH_ARIA_REJECT=Reject\\r\\n\\r\\n#XBUT: Button text for cancel button in the action sheet\\r\\nACTIONSHEET_CANCELBUTTON_TEXT=Cancel\\r\\n\\r\\n#XACT: ARIA announcement for index of a button\\r\\nACTIONSHEET_BUTTON_INDEX={0} of {1}\\r\\n\\r\\n#XACT: ARIA announcement for Action Sheet available actions\\r\\nACTIONSHEET_AVAILABLE_ACTIONS=Available Actions\\r\\n\\r\\n#XBUT: Button text for cancel button in the busy dialog\\r\\nBUSYDIALOG_CANCELBUTTON_TEXT=Cancel\\r\\n\\r\\n#XBUT: Text for growing list - pull button to load more data\\r\\nLOAD_MORE_DATA=More\\r\\n\\r\\n#XBUT: Date Selection text for Date&Time Picker of MobiScroll\\r\\nMOBISCROLL_SET=OK\\r\\n\\r\\n#XBUT: Cancel/Close button of MobiScroll Date&Time Picker\\r\\nMOBISCROLL_CANCEL=Cancel\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Month Header\\r\\nMOBISCROLL_MONTH=Month\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Day Header\\r\\nMOBISCROLL_DAY=Day\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Year Header\\r\\nMOBISCROLL_YEAR=Year\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Hours Header\\r\\nMOBISCROLL_HOURS=Hours\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Minutes Header\\r\\nMOBISCROLL_MINUTES=Minutes\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Seconds Header\\r\\nMOBISCROLL_SECONDS=Seconds\\r\\n\\r\\n#XBUT: Show Now button of MobiScroll Date&Time Picker\\r\\nMOBISCROLL_NOW=Now\\r\\n\\r\\n#XBUT: The navigation button text in master area in SplitContainer\\r\\nSPLITCONTAINER_NAVBUTTON_TEXT=Navigation\\r\\n\\r\\n#XTOL: Tooltip for navigation button\\r\\nSPLITCONTAINER_NAVBUTTON_DEFAULT_TOOLTIP=Show Object List\\r\\n\\r\\n#XTOL: Tooltip for navigation button\\r\\nSPLITCONTAINER_NAVBUTTON_TOOLTIP=Show {0}\\r\\n\\r\\n#XBUT: MessageBox predefined text for OK action\\r\\nMSGBOX_OK=OK\\r\\n\\r\\n#XBUT: MessageBox predefined text for CANCEL action\\r\\nMSGBOX_CANCEL=Cancel\\r\\n\\r\\n#XBUT: MessageBox predefined text for YES action\\r\\nMSGBOX_YES=Yes\\r\\n\\r\\n#XBUT: MessageBox predefined text for No action\\r\\nMSGBOX_NO=No\\r\\n\\r\\n#XBUT: MessageBox predefined text for ABORT action\\r\\nMSGBOX_ABORT=Abort\\r\\n\\r\\n#XBUT: MessageBox predefined text for RETRY action\\r\\nMSGBOX_RETRY=Retry\\r\\n\\r\\n#XBUT: MessageBox predefined text for IGNORE action\\r\\nMSGBOX_IGNORE=Ignore\\r\\n\\r\\n#XBUT: MessageBox predefined text for CLOSE action\\r\\nMSGBOX_CLOSE=Close\\r\\n\\r\\n#XBUT: MessageBox predefined text for DELETE action\\r\\nMSGBOX_DELETE=Delete\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of alert dialog\\r\\nMSGBOX_TITLE_ALERT=Alert\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_CONFIRM=Confirmation\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_ERROR=Error\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_INFO=Information\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_WARNING=Warning\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_SUCCESS=Success\\r\\n\\r\\n#XLNK: MessageBox textLink\\r\\nMSGBOX_LINK_TITLE=Show Details\\r\\n\\r\\n#YINS,30: Pull down to refresh text in the hidden area of a scrolled area\\r\\nPULL2REFRESH_PULLDOWN=Pull Down to Refresh\\r\\n\\r\\n#YINS,30: Release dragged list to start update request\\r\\nPULL2REFRESH_RELEASE=Release to Refresh\\r\\n\\r\\n#YMSG,25: Refresh request is in process, short text, displayed on all platforms\\r\\nPULL2REFRESH_LOADING=Loading...\\r\\n\\r\\n#YMSG,32: Refresh request is in process, longer text, displayed smaller and only on certain platforms\\r\\nPULL2REFRESH_LOADING_LONG=Please wait, data is loading\\r\\n\\r\\n#XBUT: Button to trigger refresh of the displayed data\\r\\nPULL2REFRESH_REFRESH=Refresh\\r\\n\\r\\n#XBUT: Text displayed on the logout button in the top right corner of the Shell\\r\\nSHELL_LOGOUT=Logout\\r\\n\\r\\n#XBUT: Text for OK button in the personalization dialog\\r\\nPERSODIALOG_OK=OK\\r\\n\\r\\n#XBUT: Text for Cancel button in the personalization dialog\\r\\nPERSODIALOG_CANCEL=Cancel\\r\\n\\r\\n#XTOL: Tooltip for Reset Personalization toolbar button\\r\\nPERSODIALOG_UNDO=Reset Personalization\\r\\n\\r\\n#XTOL: Tooltip for Perso Dialog's 'Move Up' button (displays an 'up' arrow)\\r\\nPERSODIALOG_UP=Move Column Up\\r\\n\\r\\n#XTOL: Tooltip for Perso Dialog's 'Move Down' button (displays a 'down' arrow)\\r\\nPERSODIALOG_DOWN=Move Column Down\\r\\n\\r\\n#XTIT: Title text of personalization dialog for columns\\r\\nPERSODIALOG_COLUMNS_TITLE=Columns\\r\\n\\r\\n#XBUT: Text of personalization dialog for 'Select All' checkbox\\r\\nPERSODIALOG_SELECT_ALL=All\\r\\n\\r\\n#XTIT: Text of personalization dialog for its list to indicate no search hits\\r\\nPERSODIALOG_NO_DATA=No columns found\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title\\r\\nVIEWSETTINGS_TITLE=View\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title when in sort mode\\r\\nVIEWSETTINGS_TITLE_SORT=Sort By\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title when in group mode\\r\\nVIEWSETTINGS_TITLE_GROUP=Group By\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title when in filter mode\\r\\nVIEWSETTINGS_TITLE_FILTER=Filter By\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title when in filter detail mode (an item name is appended to this string)\\r\\nVIEWSETTINGS_TITLE_FILTERBY=Filter By\\\\:\\r\\n\\r\\n#YMSG: Start text for the text representation of the filter state\\r\\nVIEWSETTINGS_FILTERTEXT=Filtered by\\\\:\\r\\n\\r\\n#XBUT: Button to confirm the view settings dialog\\r\\nVIEWSETTINGS_ACCEPT=OK\\r\\n\\r\\n#XBUT: Button to cancel the view settings dialog\\r\\nVIEWSETTINGS_CANCEL=Cancel\\r\\n\\r\\n#XBLI: List item text in the view settings dialog that represents a \\\"none of the above\\\" or \\\"none\\\" selection in a single selection list\\r\\nVIEWSETTINGS_NONE_ITEM=None\\r\\n\\r\\n#XBLI: List item text in the view settings for sorting items in ascending order\\r\\nVIEWSETTINGS_ASCENDING_ITEM=Ascending\\r\\n\\r\\n#XBLI: List item text in the view settings for sorting items in descending order\\r\\nVIEWSETTINGS_DESCENDING_ITEM=Descending\\r\\n\\r\\n#XTOL: Tooltip for the clear filter button\\r\\nVIEWSETTINGS_CLEAR_FILTER_TOOLTIP=Clear All Filters\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog aria label for the sort list\\r\\nVIEWSETTINGS_SORT_DIRECTION=Sort Direction\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog aria label for the group list\\r\\nVIEWSETTINGS_GROUP_DIRECTION=Group Direction\\r\\n\\r\\n#XLST: Label for the select all checkbox used to select all facet filter items\\r\\nFACETFILTER_CHECKBOX_ALL=All\\r\\n\\r\\n#XLST: All Items in the list with the name of the list as a parameter: ex. Suppliers (All)\\r\\nFACETFILTER_ALL_SELECTED={0} (All)\\r\\n\\r\\n#XFLD: Search field prompt\\r\\nFACETFILTER_SEARCH=Search\\r\\n\\r\\n#XBUT: Either a single filter value or the number of selected values, displayed on facet filter button: ex. Suppliers (Dell) or Suppliers (6)\\r\\nFACETFILTER_ITEM_SELECTION={0} ({1})\\r\\n\\r\\n#XACT: ARIA announcement for facet filter itself\\r\\nFACETFILTER_ARIA_FACET_FILTER=Facet Filter\\r\\n\\r\\n#XTIT: Light flow facet filter dialog and facet add dialog title\\r\\nFACETFILTER_TITLE=Filter\\r\\n\\r\\n#XBUT: Button to confirm facet filter dialogs\\r\\nFACETFILTER_ACCEPT=OK\\r\\n\\r\\n#XSEL: Infobar filter summary: ex. Filtered by Suppliers (Supplier1, Supplier2)\\r\\nFACETFILTER_INFOBAR_FILTERED_BY=Filtered by {0} ({1})\\r\\n\\r\\n#XSEL: Infobar filter summary when no filters selected\\r\\nFACETFILTER_INFOBAR_NO_FILTERS=No filters selected\\r\\n\\r\\n#XSEL: Infobar filter add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\r\\nFACETFILTER_INFOBAR_AND=and\\r\\n\\r\\n#XSEL: Infobar filter after add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\r\\nFACETFILTER_INFOBAR_AFTER_AND={0} ({1})\\r\\n\\r\\n#XSEL: Alternate infobar filter summary\\r\\nFACETFILTER_INFOBAR_FILTERS_APPLIED=Several filters applied\\r\\n\\r\\n#YMSG: Filter bar msg shown when there are more filters available that cannot be displayed because there is not enough room: ex. 2 More...\\r\\nFACETFILTER_MORE_COUNT={0} more...\\r\\n\\r\\n#YMSG: Message displayed in filter dialog when there are many more filters available but not shown: ex. 76 more available\\r\\nFACETFILTER_FILTERS_HUGE={0} more available\\r\\n\\r\\n#XLNK: Link to allow searching additional filter values from the server\\r\\nFACETFILTER_SERVER_SEARCH=Search Further on Server\\r\\n\\r\\n#XBUT: Button to remove a filter from the filter bar\\r\\nFACETFILTER_REMOVE_FILTER=Remove Filter\\r\\n\\r\\n#XACT: ARIA announcement for the position of the list items in an entire list\\r\\nFACETFILTERLIST_ARIA_POSITION={0} of {1}\\r\\n\\r\\n#YMSG: Message displayed near the list of selection items in the SelectDialg and TableSelectDialog controls. It will be filled with the number of selected items\\r\\nTABLESELECTDIALOG_SELECTEDITEMS=Items selected\\\\: {0}\\r\\n\\r\\n#YMSG: Default placeholder for the input field of a feed\\r\\nFEEDINPUT_PLACEHOLDER=Post something here\\r\\n\\r\\n#XTOL: Tooltip for submit button of a feed input\\r\\nFEEDINPUT_SUBMIT=Submit\\r\\n\\r\\n#XBUT: A link that can be clicked to display more/all items\\r\\nINPUT_SUGGESTIONS_SHOW_ALL=Show All Items\\r\\n\\r\\n#XACT: ARIA announcement for the Input suggestion result if one hit\\r\\nINPUT_SUGGESTIONS_ONE_HIT=1 result available\\r\\n\\r\\n#XACT: ARIA announcement for the Input suggestion result if more than one hit ({0} is the number of hits)\\r\\nINPUT_SUGGESTIONS_MORE_HITS={0} results are available\\r\\n\\r\\n#XACT: ARIA announcement for the Input suggestion result if no hit\\r\\nINPUT_SUGGESTIONS_NO_HIT=No results\\r\\n\\r\\n#XACT: ARIA announcement for the value help\\r\\nINPUT_VALUEHELP=Value help available\\r\\n\\r\\n#XACT: ARIA announcement disabled input (e.g. for value help only)\\r\\nINPUT_DISABLED=Text input disabled\\r\\n\\r\\n#XACT: ARIA announcement for suggestions popup\\r\\nINPUT_AVALIABLE_VALUES=Available Values\\r\\n\\r\\n#XACT: ARIA announcement for the Input's value state \\\"Error\\\"\\r\\nINPUTBASE_VALUE_STATE_ERROR=Value State Error\\r\\n\\r\\n#XACT: ARIA announcement for the Input's value state \\\"Warning\\\"\\r\\nINPUTBASE_VALUE_STATE_WARNING=Value State Warning\\r\\n\\r\\n#XACT: ARIA announcement for the Input's value state \\\"Success\\\"\\r\\nINPUTBASE_VALUE_STATE_SUCCESS=Value State Success\\r\\n\\r\\n#XBUT,10: Tooltip for button to remove facet list\\r\\nFACETFILTER_REMOVE=Remove Facet List\\r\\n\\r\\n#XBUT: ARIA announcement for removable facet\\r\\nFACETFILTER_ARIA_REMOVE=Removable Facet\\\\: Press DELETE to Remove\\r\\n\\r\\n#XBUT: Tooltip for button to add facet filter list\\r\\nFACETFILTER_ADDFACET=Add Filter\\r\\n\\r\\n#XBUT: Tooltip for button to reset filter\\r\\nFACETFILTER_RESET=Reset Filter\\r\\n\\r\\n#XBUT: Tooltip for left scrolling arrow\\r\\nFACETFILTER_PREVIOUS=Previous\\r\\n\\r\\n#XBUT: Tooltip for right scrolling arrow\\r\\nFACETFILTER_NEXT=Next\\r\\n\\r\\n#XLNK: Link to allow the user to see complete feed post\\r\\nTEXT_SHOW_MORE=MORE\\r\\n\\r\\n#XLNK: This link allows the user to hide the complete feed post and display only the first lines\\r\\nTEXT_SHOW_LESS=LESS\\r\\n\\r\\n#XFLD: Label text for number of attachments in the UploadCollection control\\r\\nUPLOADCOLLECTION_ATTACHMENTS=Attachments ({0})\\r\\n\\r\\n#XMSG: Message text for deleting a file in the UploadCollection control\\r\\nUPLOADCOLLECTION_DELETE_TEXT=Are you sure you want to delete ''{0}''?\\r\\n\\r\\n#XMSG: Message text for deleting a file in the UploadCollection control without filename\\r\\nUPLOADCOLLECTION_DELETE_WITHOUT_FILENAME_TEXT=Are you sure you want to delete the file?\\r\\n\\r\\n#XMSG: Message title for deleting a file in the UploadCollection control\\r\\nUPLOADCOLLECTION_DELETE_TITLE=Delete File\\r\\n\\r\\n#XMSG: Message text for a popup to terminate a file uploading in the UploadCollection control\\r\\nUPLOADCOLLECTION_TERMINATE_TEXT=The upload for the following files will be terminated\\\\:\\r\\n\\r\\n#XMSG: Message title for a popup to terminate a file uploading in the UploadCollection control\\r\\nUPLOADCOLLECTION_TERMINATE_TITLE=Terminate upload\\r\\n\\r\\n#XMSG: Message text file name already exists in the UploadCollection control\\r\\nUPLOADCOLLECTION_EXISTS=File name already exists.\\r\\n\\r\\n#XMSG: Message text informing that a file name must be entered during edit file name in the UploadCollection control\\r\\nUPLOADCOLLECTION_TYPE_FILENAME=Please enter a file name.\\r\\n\\r\\n#XMSG: Message text for uploading status to the UploadCollection control\\r\\nUPLOADCOLLECTION_UPLOADING=Uploading\\\\: {0} %\\r\\n\\r\\n#XMSG: Message title for the Upload Failed message box\\r\\nUPLOADCOLLECTION_FAILED=Upload failed\\r\\n\\r\\n#XMSG: Message text informing that it is not allowed to upload the selected file(s) (MIME type or file extension not allowed)\\r\\nUPLOADCOLLECTION_MISMATCH=File type is not allowed.\\r\\n\\r\\n#XMSG: Message text informing that upload is completed\\r\\nUPLOADCOLLECTION_UPLOAD_COMPLETED=Upload completed. Please wait for the server to finish processing.\\r\\n\\r\\n#XMSG: Message text informing that only one file can be dropped if uploading multiple files is not allowed\\r\\nUPLOADCOLLECTION_MULTIPLE_FALSE=Please use single drag & drop here.\\r\\n\\r\\n#XBUT: Button text for cancel button in the upload collection\\r\\nUPLOADCOLLECTION_CANCELBUTTON_TEXT=Cancel\\r\\n\\r\\n#XBUT: Text for OK button in the upload collection in case of Delete Dialog\\r\\nUPLOADCOLLECTION_OKBUTTON_TEXT=OK\\r\\n\\r\\n#XBUT: Text for Rename button in the upload collection in case of renaming a file\\r\\nUPLOADCOLLECTION_RENAMEBUTTON_TEXT=Rename\\r\\n\\r\\n#XBUT: Text for DELETE button in the upload collection\\r\\nUPLOADCOLLECTION_DELETEBUTTON_TEXT=Delete\\r\\n\\r\\n#XBUT: Text for TERMINATE button in the upload collection\\r\\nUPLOADCOLLECTION_TERMINATEBUTTON_TEXT=Terminate\\r\\n\\r\\n#XBUT: Text for RENAME button in the upload collection\\r\\nUPLOADCOLLECTION_EDITBUTTON_TEXT=Rename\\r\\n\\r\\n#XBUT: Text for Add button in the upload collection\\r\\nUPLOADCOLLECTION_ADD=Add\\r\\n\\r\\n#XBUT: Text for Upload button in the upload collection\\r\\nUPLOADCOLLECTION_UPLOAD=Upload\\r\\n\\r\\n#XMSG: Message text for no data text in the upload collection\\r\\nUPLOADCOLLECTION_NO_DATA_TEXT=No files found.\\r\\n\\r\\n#XMSG: Message text for no data description in the upload collection\\r\\nUPLOADCOLLECTION_NO_DATA_DESCRIPTION=Drop files to upload, or use the \\\"+\\\" button.\\r\\n\\r\\n#XMSG: Message text indicating where to drag\\r\\nUPLOADCOLLECTION_DRAG_FILE_INDICATOR=Drag files here\\r\\n\\r\\n#XMSG: Message text indicating where to drop file and upload\\r\\nUPLOADCOLLECTION_DROP_FILE_INDICATOR=Drop files to upload\\r\\n\\r\\n#XTIT: Predefined text for title in the personalization dialog - Settings for the view ('view' here is a noun).\\r\\nP13NDIALOG_VIEW_SETTINGS=View Settings\\r\\n#XTIT: dialog title if the dialog contains only filter panel\\r\\nP13NDIALOG_TITLE_FILTER=Define Filters\\r\\n#XTIT: dialog title if the dialog contains only sort panel\\r\\nP13NDIALOG_TITLE_SORT=Define Sorting\\r\\n#XTIT: dialog title if the dialog contains only group panel\\r\\nP13NDIALOG_TITLE_GROUP=Define Groups\\r\\n#XTIT: dialog title if the dialog contains only columns panel\\r\\nP13NDIALOG_TITLE_COLUMNS=Define Column Properties\\r\\n#XTIT: dialog title if the dialog contains only panel for dimensions and measures\\r\\nP13NDIALOG_TITLE_DIMEASURE=Define Chart Properties\\r\\n#XBUT: Text for OK button in the personalization dialog\\r\\nP13NDIALOG_OK=OK\\r\\n#XBUT: Text for Cancel button in the personalization dialog\\r\\nP13NDIALOG_CANCEL=Cancel\\r\\n#XBUT: Text for Reset button in the personalization dialog\\r\\nP13NDIALOG_RESET=Restore\\r\\n#XTIT: Text for Fix button in ValidationDialog\\r\\nP13NDIALOG_VALIDATION_FIX=Fix\\r\\n#XTIT: personalization dialog ValidationDialog predefined title for warning\\r\\nP13NDIALOG_VALIDATION_TITLE=Warning\\r\\n#XTIT: personalization dialog ValidationDialog predefined title for error\\r\\nP13NDIALOG_VALIDATION_TITLE_ERROR=Error\\r\\n#XTIT: personalization dialog ValidationDialog predefined message\\r\\nP13NDIALOG_VALIDATION_MESSAGE=Some filter values are missing or incorrect\\r\\n#XTIT: personalization dialog ValidationDialog predefined message for columns panel\\r\\nP13NDIALOG_VISIBLE_ITEMS_THRESHOLD_MESSAGE=Selecting a large number of columns can slow down the performance\\r\\n#XTIT: personalization dialog ValidationDialog predefined message for P13nDimMeasure\\r\\nP13NDIALOG_VALIDATION_CHARTTYPE=The dimensions and measures you have selected cannot be used with this chart type\\r\\n#XTIT: personalization dialog ValidationDialog predefined question an the end\\r\\nP13NDIALOG_VALIDATION_MESSAGE_QUESTION=Do you want to correct your entries?\\r\\n\\r\\n#XTIT: on some personalization panels \\\"(none)\\\" as 'column key' means that no criteria was defined\\r\\nP13NDIALOG_SELECTION_NONE=(none)\\r\\n\\r\\n#XTIT: Filterpanel predefined title for Include filter\\r\\nFILTERPANEL_INCLUDES=Include\\r\\n#XTIT: Filterpanel predefined title for Exclude filter\\r\\nFILTERPANEL_EXCLUDES=Exclude\\r\\n#XTIT: Text for title 'Filter' in the personalization dialog\\r\\nFILTERPANEL_TITLE=Filter\\r\\n\\r\\n#XTIT: Text for title 'Sort' in the personalization dialog\\r\\nSORTPANEL_TITLE=Sort\\r\\n\\r\\n#XTIT: Text for title 'Group' in the personalization dialog\\r\\nGROUPPANEL_TITLE=Group\\r\\n\\r\\n#XFLD: Label text for combobox control\\r\\nCONDITIONPANEL_FIELD_LABEL=Field\\\\:\\r\\n#XFLD: Label text for select control\\r\\nCONDITIONPANEL_OPERATOR_LABEL=Operator\\\\:\\r\\n\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONBT=between\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONEQ=equal to\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONContains=contains\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONGT=greater than\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONGE=greater than or equal to\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONLT=less than\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONLE=less than or equal to\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONInitial=initial\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONStartsWith=starts with\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONEndsWith=ends with\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONAscending=Ascending\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONDescending=Descending\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONGroupAscending=Ascending\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONGroupDescending=Descending\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONTotal=Total\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONAverage=Average\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONMinimum=Minimum\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONMaximum=Maximum\\r\\n#XTIT: ConditionPanel Empty\\r\\nCONDITIONPANEL_OPTIONEmpty=empty\\r\\n#XTIT: ConditionPanel NotEmpty\\r\\nCONDITIONPANEL_OPTIONNotEmpty=not empty\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_BT=between\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_EQ=equal to\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_GT=after\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_GE=on or after\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_LT=before\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_LE=before or on\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_BT=between\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_EQ=equal to\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_GT=greater than\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_GE=greater than or equal to\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_LT=less than\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_LE=less than or equal to\\r\\n\\r\\n\\r\\n#XTIT: ConditionPanel Option Label\\r\\nCONDITIONPANEL_LABELFROM=from\\r\\n#XTIT: ConditionPanel Option Label\\r\\nCONDITIONPANEL_LABELTO=to\\r\\n#XTIT: ConditionPanel Option Label\\r\\nCONDITIONPANEL_LABELVALUE=Value\\r\\n#XTIT: ConditionPanel Option Label\\r\\nCONDITIONPANEL_LABELGROUPING=Show Field as Column\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_TOOLTIP=Add New Line\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_TOOLTIP=Remove line\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_FILTER_TOOLTIP=Add Filter\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_FILTER_TOOLTIP=Remove Filter\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_SORT_TOOLTIP=Add Sort Criterion\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_SORT_TOOLTIP=Remove Sort Criterion\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_GROUP_TOOLTIP=Add Grouping Criterion\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_GROUP_TOOLTIP=Remove Grouping Criterion\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_CONDITION_TOOLTIP=Add Condition\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_CONDITION_TOOLTIP=Remove Condition\\r\\n#XBUT: ConditionPanel predefined text for remove all button\\r\\nCONDITIONPANEL_REMOVE_ALL=Remove All\\r\\n#XTIT: ConditionPanel predefined field warning hint\\r\\nCONDITIONPANEL_FIELDMESSAGE=Enter valid value\\r\\n\\r\\n#XTIT: Text for title 'Chart' in the personalization dialog\\r\\nCHARTPANEL_TITLE=Chart\\r\\n\\r\\n#XTIT: Text for title 'Columns' in the personalization dialog\\r\\nCOLUMSPANEL_TITLE=Columns\\r\\n#XBUT: ColumnsPanel Show All button\\r\\nCOLUMNSPANEL_SHOW_ALL=Show All\\r\\n#XBUT: ColumnsPanel Show Selected button\\r\\nCOLUMNSPANEL_SHOW_SELECTED=Show Selected\\r\\n#XLST: ColumnsPanel Select All label\\r\\nCOLUMNSPANEL_SELECT_ALL=Select All\\r\\n#XLST: ColumnsPanel Select All label\\r\\nCOLUMNSPANEL_SELECT_ALL_WITH_COUNTER=Select all ({0}/{1})\\r\\n#XTOL: Tooltip for MOVE: ToStart button\\r\\nCOLUMNSPANEL_MOVE_TO_TOP=Move to Top\\r\\n#XTOL: Tooltip for MOVE: Up button\\r\\nCOLUMNSPANEL_MOVE_UP=Move Up\\r\\n#XTOL: Tooltip for MOVE: Down button\\r\\nCOLUMNSPANEL_MOVE_DOWN=Move Down\\r\\n#XTOL: Tooltip for MOVE: ToEnd button\\r\\nCOLUMNSPANEL_MOVE_TO_BOTTOM=Move to Bottom\\r\\n\\r\\n#XLST: ColumnsPanel Chart Type caption\\r\\nCOLUMNSPANEL_COLUMN_TYPE=Type\\r\\n#XLST: ColumnsPanel Chart Type\\r\\nCOLUMNSPANEL_TYPE_DIMENSION=Dimension\\r\\n#XLST: ColumnsPanel Chart Type\\r\\nCOLUMNSPANEL_TYPE_MEASURE=Measure\\r\\n#XLST: ColumnsPanel Chart Role caption\\r\\nCOLUMNSPANEL_COLUMN_ROLE=Role\\r\\n#XLST: ColumnsPanel Chart Role\\r\\nCOLUMNSPANEL_CHARTROLE_CATEGORY=Category\\r\\n#XLST: ColumnsPanel Chart Role\\r\\nCOLUMNSPANEL_CHARTROLE_SERIES=Series\\r\\n#XLST: ColumnsPanel Chart Role\\r\\nCOLUMNSPANEL_CHARTROLE_AXIS1=Axis 1\\r\\n#XLST: ColumnsPanel Chart Role\\r\\nCOLUMNSPANEL_CHARTROLE_AXIS2=Axis 2\\r\\n#XLST: ColumnsPanel Chart Type\\r\\nCOLUMNSPANEL_CHARTTYPE=Chart Type\\r\\n\\r\\n\\r\\n#XFLD: Subtle link description label\\r\\nLINK_SUBTLE=Subtle\\r\\n#XFLD: Emphasized link description label\\r\\nLINK_EMPHASIZED=Emphasized\\r\\n\\r\\n#XACT: ARIA announcement for the search field F5 keyboard shortcut\\r\\nSEARCHFIELD_ARIA_F5=Press F5 to refresh\\r\\n\\r\\n#XACT: ARIA announcement for the F4 value help keyboard shortcut\\r\\nVALUEHELP_ARIA_F4=Press F4 to open a value help dialog.\\r\\n\\r\\n#XTXT: Bar's ARIA description when it is a footer\\r\\nBAR_ARIA_DESCRIPTION_FOOTER=Footer\\r\\n#XTXT: Bar's ARIA description when it is a header\\r\\nBAR_ARIA_DESCRIPTION_HEADER=Header\\r\\n#XTXT: Bar's ARIA description when it is a subheader\\r\\nBAR_ARIA_DESCRIPTION_SUBHEADER=Subheader\\r\\n\\r\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Error\\\"\\r\\nOBJECTNUMBER_ARIA_VALUE_STATE_ERROR=Value State Error\\r\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Warning\\\"\\r\\nOBJECTNUMBER_ARIA_VALUE_STATE_WARNING=Value State Warning\\r\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Success\\\"\\r\\nOBJECTNUMBER_ARIA_VALUE_STATE_SUCCESS=Value State Success\\r\\n\\r\\n#XACT: ARIA text for tab separator icons\\r\\nICONTABBAR_NEXTSTEP=Next Step\\r\\n#XACT: ARIA text for positive icon color\\r\\nICONTABBAR_ICONCOLOR_POSITIVE=Positive\\r\\n#XACT: ARIA text for critical icon color\\r\\nICONTABBAR_ICONCOLOR_CRITICAL=Critical\\r\\n#XACT: ARIA text for negative icon color\\r\\nICONTABBAR_ICONCOLOR_NEGATIVE=Negative\\r\\n\\r\\n#XACT: ARIA text of current selected value vs. max. possible value of the RatingIndicator control\\r\\nRATING_VALUEARIATEXT={0} of {1}\\r\\n#XACT: ARIA description of the RatingIndicator control\\r\\nRATING_ARIA_NAME=Rating\\r\\n\\r\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s favorite property\\r\\nARIA_FAVORITE_MARK_VALUE=Favorite\\r\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s flag property\\r\\nARIA_FLAG_MARK_VALUE=Flag\\r\\n\\r\\n#XACT: ARIA description for ObjectHeader icon infront of the title when it's active\\r\\nOH_ARIA_ICON=Icon\\r\\n\\r\\n#XACT: ARIA description for Shell logo\\r\\nSHELL_ARIA_LOGO=Logo\\r\\n\\r\\n#XTXT: MessagePage text\\r\\nMESSAGE_PAGE_TEXT=No matching items found.\\r\\n#XTXT: MessagePage description\\r\\nMESSAGE_PAGE_DESCRIPTION=Check the filter settings\\r\\n\\r\\n#XFLD: Token number indicator which is used to show more tokens in MultiInput when the MultiInput it is in multi-line display mode\\r\\nMULTIINPUT_SHOW_MORE_TOKENS={0} More\\r\\n#XACT: ARIA announcement for multiinput containing label\\r\\nMULTIINPUT_ARIA_CONTAIN_TOKEN=May contain tokens\\r\\n#XACT: ARIA announcement for multiinput containing one token\\r\\nMULTIINPUT_ARIA_CONTAIN_ONE_TOKEN=Contains 1 token\\r\\n#XACT: ARIA announcement for multiinput containing several tokens\\r\\nMULTIINPUT_ARIA_CONTAIN_SEVERAL_TOKENS=Contains {0} tokens\\r\\n\\r\\n#XACT: ARIA announcement for tokenizer label\\r\\nTOKENIZER_ARIA_LABEL=Tokenizer\\r\\n\\r\\n#XACT: ARIA announcement for token label\\r\\nTOKEN_ARIA_LABEL=Token\\r\\n#XACT: ARIA announcement for token deletable\\r\\nTOKEN_ARIA_DELETABLE=Deletable\\r\\n\\r\\n#XACT: ARIA announcement for the ObjectListItem unread mark\\r\\nOBJECTLISTITEM_ARIA_UNREAD_VALUE=Unread\\r\\n#XACT: ARIA announcement for the ObjectListItem locked mark\\r\\nOBJECTLISTITEM_ARIA_LOCKED_MARK_VALUE=Locked\\r\\n\\r\\n#XBUT: MessagePopover predefined text for CLOSE action\\r\\nMESSAGEPOPOVER_CLOSE=Close\\r\\n#XBUT: MessagePopover predefined text for All Button\\r\\nMESSAGEPOPOVER_ALL=All\\r\\n#XACT: ARIA announcement for the MessagePopover back buttons tooltip\\r\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON_TOOLTIP=Back to Messages\\r\\n#XACT: ARIA announcement for the MessagePopover back buttons\\r\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON=Message Details\\r\\n#XACT: ARIA announcement for the MessagePopover heading\\r\\nMESSAGEPOPOVER_ARIA_HEADING=Messages\\r\\n\\r\\n#XACT: ARIA announcement for the accept button\\r\\nBUTTON_ARIA_TYPE_ACCEPT=Positive Action\\r\\n#XACT: ARIA announcement for the reject button\\r\\nBUTTON_ARIA_TYPE_REJECT=Negative Action\\r\\n#XACT: ARIA announcement for the emphasized button\\r\\nBUTTON_ARIA_TYPE_EMPHASIZED=Emphasized\\r\\n\\r\\n#XACT: ARIA text for position markers\\r\\nCAROUSEL_POSITION=Item {0} of {1} displayed\\r\\n\\r\\n#XTXT: Text between numbers in the numeric page indicator\\r\\nCAROUSEL_PAGE_INDICATOR_TEXT={0} of {1}\\r\\n\\r\\n#XTXT: colon separator\\r\\nCOLON=\\\\:\\r\\n\\r\\n#XBUT: sap.m.semantic.SemanticControl Edit button text\\r\\nSEMANTIC_CONTROL_EDIT=Edit\\r\\n#XBUT: sap.m.semantic.SemanticControl Save button text\\r\\nSEMANTIC_CONTROL_SAVE=Save\\r\\n#XBUT: sap.m.semantic.SemanticControl Delete button text\\r\\nSEMANTIC_CONTROL_DELETE=Delete\\r\\n#XBUT: sap.m.semantic.SemanticControl Cancel button text\\r\\nSEMANTIC_CONTROL_CANCEL=Cancel\\r\\n#XBUT: sap.m.semantic.SemanticControl Approve button text\\r\\nSEMANTIC_CONTROL_APPROVE=Approve\\r\\n#XBUT: sap.m.semantic.SemanticControl Reject button text\\r\\nSEMANTIC_CONTROL_REJECT=Reject\\r\\n#XBUT: sap.m.semantic.SemanticControl Forward button text\\r\\nSEMANTIC_CONTROL_FORWARD=Forward\\r\\n#XBUT: sap.m.semantic.SemanticControl Open in button text\\r\\nSEMANTIC_CONTROL_OPEN_IN=Open in...\\r\\n#XBUT: sap.m.semantic.SemanticControl Sort button text\\r\\nSEMANTIC_CONTROL_SORT=Sort\\r\\n#XBUT: sap.m.semantic.SemanticControl Filter button text\\r\\nSEMANTIC_CONTROL_FILTER=Filter\\r\\n#XBUT: sap.m.semantic.SemanticControl Group button text\\r\\nSEMANTIC_CONTROL_GROUP=Group\\r\\n#XBUT: sap.m.semantic.SemanticControl Flag button text\\r\\nSEMANTIC_CONTROL_FLAG=Flag\\r\\n#XBUT: sap.m.semantic.SemanticControl Favorite button text\\r\\nSEMANTIC_CONTROL_FAVORITE=Favorite\\r\\n#XBUT: sap.m.semantic.SemanticControl Add button text\\r\\nSEMANTIC_CONTROL_ADD=Add\\r\\n#XBUT: sap.m.semantic.SemanticControl Send Email button text\\r\\nSEMANTIC_CONTROL_SEND_EMAIL=Send E-Mail\\r\\n#XBUT: sap.m.semantic.SemanticControl Discuss in SAP Jam button text\\r\\nSEMANTIC_CONTROL_DISCUSS_IN_JAM=Discuss in SAP Jam\\r\\n#XBUT: sap.m.semantic.SemanticControl Share in SAP Jam button text\\r\\nSEMANTIC_CONTROL_SHARE_IN_JAM=Share on SAP Jam\\r\\n#XBUT: sap.m.semantic.SemanticControl Send Message button text\\r\\nSEMANTIC_CONTROL_SEND_MESSAGE=Send Message\\r\\n#XBUT: sap.m.semantic.SemanticControl Save as Tile button text\\r\\nSEMANTIC_CONTROL_SAVE_AS_TILE=Save as Tile\\r\\n#XBUT: sap.m.semantic.SemanticControl Print button text\\r\\nSEMANTIC_CONTROL_PRINT=Print\\r\\n#XBUT: sap.m.semantic.SemanticControl Multi select button text\\r\\nSEMANTIC_CONTROL_MULTI_SELECT=Multiple Selection\\r\\n#XBUT: sap.m.semantic.SemanticControl Multi select cancel button text\\r\\nSEMANTIC_CONTROL_MULTI_SELECT_CANCEL=Cancel Multiple Selection\\r\\n#XBUT: sap.m.semantic.SemanticControl Message indicator button text\\r\\nSEMANTIC_CONTROL_MESSAGES_INDICATOR=Messages\\r\\n#XBUT: sap.m.semantic.SemanticControl \\\"Action\\\" Share button text\\r\\nSEMANTIC_CONTROL_ACTION_SHARE=Share\\r\\n#XTXT: sap.m.semantic.DetailPage title\\r\\nSEMANTIC_DETAIL_PAGE_TITLE=Details\\r\\n#XTXT: sap.m.semantic.MasterPage title\\r\\nSEMANTIC_MASTER_PAGE_TITLE=Master\\r\\n\\r\\n#XFLD: sap.m.DraftIndicator Saving Draft indicator text\\r\\nDRAFT_INDICATOR_SAVING_DRAFT=Saving draft...\\r\\n#XFLD: sap.m.DraftIndicator Draft saved indicator text\\r\\nDRAFT_INDICATOR_DRAFT_SAVED=Draft saved\\r\\n\\r\\n#XBUT: Wizard predefined text for Cancel button\\r\\nWIZARD_CANCEL=Cancel\\r\\n#XBUT: Wizard predefined text for Next button\\r\\nWIZARD_NEXT=Next\\r\\n#XBUT: Wizard predefined text for Finish button\\r\\nWIZARD_FINISH=Review\\r\\n\\r\\n#XACT: Aria information for the Date Picker\\r\\nDATEPICKER_DATE_TYPE=Date\\r\\n\\r\\n#XACT: WizardProgressNavigator selected step\\r\\nWIZARD_PROG_NAV_SELECTED=Selected\\r\\n#XACT: WizardProgressNavigator processed step\\r\\nWIZARD_PROG_NAV_PROCESSED=Processed\\r\\n#XACT: WizardProgressNavigator predefined text for step\\r\\nWIZARD_PROG_NAV_STEP_TITLE=Step\\r\\n#XBUT: Wizard predefined text for Step button\\r\\nWIZARD_STEP=Step\\r\\n#XACT: Aria label for the wizard\\r\\nWIZARD_LABEL=Wizard\\r\\n\\r\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectHeader, showing that the item is flagged\\r\\nTOOLTIP_OH_FLAG_MARK_VALUE=Flagged\\r\\n\\r\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectHeader, showing that the item is favorite\\r\\nTOOLTIP_OH_FAVORITE_MARK_VALUE=Favorite\\r\\n\\r\\n#XTOL: Tooltip for the select title arrow inside sap.m.ObjectHeader\\r\\nOH_SELECT_ARROW_TOOLTIP=Related Options\\r\\n\\r\\n#XTXT: Text value for marker type Flag\\r\\nOM_FLAG=Flagged\\r\\n\\r\\n#XTXT: Text value for marker type Favorite\\r\\nOM_FAVORITE=Favorite\\r\\n\\r\\n#XTXT: Text value for marker type Draft\\r\\nOM_DRAFT=Draft\\r\\n\\r\\n#XTXT: Text value for marker type Locked\\r\\nOM_LOCKED=Locked\\r\\n\\r\\n#XTXT: Text value for marker type LockedBy that shows who has locked the object, e.g. Locked by {User name}\\r\\nOM_LOCKED_BY=Locked by {0}\\r\\n\\r\\n#XTXT: Text value for marker type Locked by another user\\r\\nOM_LOCKED_BY_ANOTHER_USER=Locked by another user\\r\\n\\r\\n#XTXT: Text value for marker type Unsaved Changes\\r\\nOM_UNSAVED=Unsaved Changes\\r\\n\\r\\n#XTXT: Text value for marker type UnsavedBy Changes that shows who has unsaved changes, e.g. Unsaved Changes by {User name}\\r\\nOM_UNSAVED_BY=Unsaved Changes by {0}\\r\\n\\r\\n#XTXT: Text value for marker type Unsaved by another user\\r\\nOM_UNSAVED_BY_ANOTHER_USER=Unsaved changes by another user\\r\\n\\r\\n#XTOL: Tooltip for \\\"Send SMS\\\" in QuickView\\r\\nQUICKVIEW_SEND_SMS=Send SMS\\r\\n\\r\\n#XTXT: Text for character left\\r\\nTEXTAREA_CHARACTER_LEFT={0} Character Left\\r\\n\\r\\n#XTXT: Text for characters left\\r\\nTEXTAREA_CHARACTERS_LEFT={0} Characters Left\\r\\n\\r\\n#XTXT: Text for character exceeded\\r\\nTEXTAREA_CHARACTER_EXCEEDED={0} Character Exceeded\\r\\n\\r\\n#XTXT: Text for characters exceeded\\r\\nTEXTAREA_CHARACTERS_EXCEEDED={0} Characters Exceeded\\r\\n\\r\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectListItem, showing that the item is flagged\\r\\nTOOLTIP_OLI_FLAG_MARK_VALUE=Flagged\\r\\n\\r\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectListItem, showing that the item is favorite\\r\\nTOOLTIP_OLI_FAVORITE_MARK_VALUE=Favorite\\r\\n\\r\\n#XTOL: Tooltip for the locked icon inside sap.m.ObjectListItem, showing that the item is locked\\r\\nTOOLTIP_OLI_LOCK_MARK_VALUE=Locked\\r\\n\\r\\n#XBUT: Time Selection button text of Time Picker control\\r\\nTIMEPICKER_SET=OK\\r\\n\\r\\n#XBUT: Cancel/Close button text of Time Picker control\\r\\nTIMEPICKER_CANCEL=Cancel\\r\\n\\r\\n#YACT: ARIA tag of Time Picker control\\r\\nTIMEPICKER_SCREENREADER_TAG=Time Picker\\r\\n\\r\\n#YACT: ARIA tag of Time Picker control with format as placeholder\\r\\nTIMEPICKER_WITH_PH_SCREENREADER_TAG=Time Picker in format {0}\\r\\n\\r\\n#XFLD: Label of the hours value slider inside a Time Picker control\\r\\nTIMEPICKER_LBL_HOURS=Hours\\r\\n\\r\\n#XFLD: Label of the minutes value slider inside a Time Picker control\\r\\nTIMEPICKER_LBL_MINUTES=Minutes\\r\\n\\r\\n#XFLD: Label of the seconds value slider inside a Time Picker control\\r\\nTIMEPICKER_LBL_SECONDS=Seconds\\r\\n\\r\\n#XFLD: Label of the am/pm value slider inside a Time Picker control\\r\\nTIMEPICKER_LBL_AMPM=AM/PM\\r\\n\\r\\n#XACT: ARIA label for Breadcrumbs\\r\\nBREADCRUMB_LABEL=Breadcrumb Trail\\r\\n\\r\\n#XTOL: Tooltip text for Breadcrumbs select\\r\\nBREADCRUMB_SELECT_TOOLTIP=More\\r\\n\\r\\n#XACT: Unread status of Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_UNREAD=Notification unread.\\r\\n\\r\\n#XACT: Read status of Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_READ=Notification read.\\r\\n\\r\\n#XACT: ARIA text for datetime and priority\\r\\nNOTIFICATION_LIST_ITEM_DATETIME_PRIORITY=Due in {0}, {1} Priority.\\r\\n\\r\\n#XFLD: text that will be displayed when tile failed to load\\r\\nINFOTILE_CANNOT_LOAD_TILE=Cannot load tile\\r\\n\\r\\n#XFLD: text that will be read while tile is loading\\r\\nINFOTILE_LOADING=Loading\\r\\n\\r\\n#XTXT: text for critical color\\r\\nSEMANTIC_COLOR_CRITICAL=Warning\\r\\n\\r\\n#XTXT: text for good color\\r\\nSEMANTIC_COLOR_GOOD=Good\\r\\n\\r\\n#XTXT: text for neutral color\\r\\nSEMANTIC_COLOR_NEUTRAL=Neutral\\r\\n\\r\\n#XTXT: text for error color\\r\\nSEMANTIC_COLOR_ERROR=Critical\\r\\n\\r\\n#XTOL:\\r\\nNUMERICCONTENT_DEVIATION_UP=Ascending\\r\\n\\r\\n#XTOL:\\r\\nNUMERICCONTENT_DEVIATION_DOWN=Descending\\r\\n\\r\\n#YACT: ARIA tag of MaskInput control\\r\\nMASKINPUT_SCREENREADER_TAG=Masked\\r\\n\\r\\n#YACT: ARIA description of MaskInput control\\r\\nMASKINPUT_SCREENREADER_DESCRIPTION=When focused, the masked input field is formatted and prefilled. The {0} symbol is reserved for a placeholder. The value that has to be entered in this field is in the following format {1} where every symbol corresponds to a rule. A rule is a set of characters that are allowed for their particular position. Symbols that do not have a rule are immutable characters and are part of the value formatting.\\r\\n\\r\\n#XACT: ARIA scroll back button for tabstrip\\r\\nTABSTRIP_SCROLL_BACK=Scroll Back\\r\\n\\r\\n#XACT: ARIA scroll forward button for tabstrip\\r\\nTABSTRIP_SCROLL_FORWARD=Scroll Forward\\r\\n\\r\\n#XACT: ARIA static text for modified tabstrip item\\r\\nTABSTRIP_ITEM_MODIFIED=Unsaved\\r\\n\\r\\n#XACT: ARIA static text for not-modified tabstrip item\\r\\nTABSTRIP_ITEM_NOT_MODIFIED=Saved\\r\\n\\r\\n#XACT: ARIA static text for closable tabstrip item\\r\\nTABSTRIP_ITEM_CLOSABLE=Closable\\r\\n#XFLD: Footer text for TileContent\\r\\nTILECONTENT_FOOTER_TEXT={0}, {1}\\r\\n\\r\\n#XBUT: Button text for collapsing the Notification List Group\\r\\nNOTIFICATION_LIST_GROUP_COLLAPSE=Collapse Group\\r\\n\\r\\n#XBUT: Button text for expanding the Notification List Group\\r\\nNOTIFICATION_LIST_GROUP_EXPAND=Expand Group\\r\\n\\r\\n#XACT: ARIA add new tab button for tabstrip\\r\\nTABCONTAINER_ADD_NEW_TAB=Add New Tab\\r\\n\\r\\n#XACT: ARIA dropdown button for tabstrip\\r\\nTABSTRIP_OPENED_TABS=Opened Tabs\\r\\n\\r\\n#XBUT: Button text for expanding a Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_SHOW_MORE=Show More\\r\\n\\r\\n#XBUT: Button text for collapsing a Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_SHOW_LESS=Show Less\\r\\n\\r\\n#XBUT: Date button of DateTimePicker on small screens\\r\\nDATETIMEPICKER_DATE=Date\\r\\n\\r\\n#XBUT: Time button of DateTimePicker on small screens\\r\\nDATETIMEPICKER_TIME=Time\\r\\n\\r\\n#XACT: Aria information for the Date Time Picker\\r\\nDATETIMEPICKER_TYPE=Date and Time\\r\\n\\r\\n#XACT: PlanningCalendar accessibility description\\r\\nPLANNINGCALENDAR=Planning calendar\\r\\n\\r\\n#XACT: PlanningCalendar view selector accessibility description\\r\\nPLANNINGCALENDAR_VIEW=View calendar by\\r\\n\\r\\n#XFLD: Name of the \\\"Hours\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_HOURS=Hours\\r\\n\\r\\n#XFLD: Name of the \\\"Days\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_DAYS=Days\\r\\n\\r\\n#XFLD: Name of the \\\"Months\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_MONTHS=Months\\r\\n\\r\\n#XFLD: Name of the \\\"Week\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_WEEK=1 Week\\r\\n\\r\\n#XFLD: Name of the \\\"OneMonth\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_ONE_MONTH=1 Month\\r\\n\\r\\n#XBUT: Today button of PlanningCalendar control\\r\\nPLANNINGCALENDAR_TODAY=Today\\r\\n\\r\\n#XFLD: Text for all day event\\r\\nPLANNINGCALENDAR_ALLDAY=All Day\\r\\n\\r\\n#XFLD: Text for event with no starting time\\r\\nPLANNINGCALENDAR_UNTIL=until {0}\\r\\n\\r\\n#XFLD: Text for a placeholder row when there are no appointments\\r\\nPLANNINGCALENDAR_ROW_NO_APPOINTMENTS=No Entries\\r\\n\\r\\n#XTOL: Tool tip for nextButton of the PagingButton\\r\\nPAGINGBUTTON_NEXT=Next Page\\r\\n\\r\\n#XTOL: Tool tip for nextButton of the PagingButton\\r\\nPAGINGBUTTON_PREVIOUS=Previous Page\\r\\n\\r\\n#XBUT: Text and number of selected items for toolbar button of SelectionDetails\\r\\nSELECTIONDETAILS_BUTTON_TEXT_WITH_NUMBER=Details ({0})\\r\\n\\r\\n#XBUT: Text for toolbar button of SelectionDetails\\r\\nSELECTIONDETAILS_BUTTON_TEXT=Details\\r\\n\\r\\n#############\\r\\n#Translatable Control Types and States for ACC\\r\\n#############\\r\\n\\r\\n#XACT: type of an UI control is an input field\\r\\nACC_CTR_TYPE_INPUT=Input\\r\\n\\r\\n#XACT: type of an UI control is a input field (which allows setting multiple values)\\r\\nACC_CTR_TYPE_MULTIINPUT=Multi Input\\r\\n\\r\\n#XACT: type of an UI control is a date input field\\r\\nACC_CTR_TYPE_DATEINPUT=Date Input\\r\\n\\r\\n#XACT: type of an UI control is a time input field\\r\\nACC_CTR_TYPE_TIMEINPUT=Time input\\r\\n\\r\\n#XACT: type of an UI control is a date and time input field\\r\\nACC_CTR_TYPE_DATETIMEINPUT=Date/time input\\r\\n\\r\\n#XACT: type of an UI control is a rating indicator\\r\\nACC_CTR_TYPE_RATING=Rating\\r\\n\\r\\n#XACT: type of an UI control is a button\\r\\nACC_CTR_TYPE_BUTTON=Button\\r\\n\\r\\n#XACT: type of an UI control is a link\\r\\nACC_CTR_TYPE_LINK=Link\\r\\n\\r\\n#XACT: type of an UI control is an image\\r\\nACC_CTR_TYPE_IMAGE=Image\\r\\n\\r\\n#XACT: type of an UI control is a checkbox\\r\\nACC_CTR_TYPE_CHECKBOX=Checkbox\\r\\n\\r\\n#XACT: type of of an UI control is a progess indicator\\r\\nACC_CTR_TYPE_PROGRESS=Progress\\r\\n\\r\\n#XACT: type of an UI control is a combobox\\r\\nACC_CTR_TYPE_COMBO=Combo Box\\r\\n\\r\\n#XACT: type of of an UI control is a combobox (which allows multi selection)\\r\\nACC_CTR_TYPE_MULTICOMBO=Multi Combo Box\\r\\n\\r\\n#XACT: type of of an UI control is a list\\r\\nACC_CTR_TYPE_LIST=List Box\\r\\n\\r\\n#XACT: type of of an UI control is a list item\\r\\nACC_CTR_TYPE_OPTION=List Item\\r\\n\\r\\n#XACT: type of of an UI control is a tree\\r\\nACC_CTR_TYPE_TREE=Tree\\r\\n\\r\\n#XACT: type of of an UI control is a tree item\\r\\nACC_CTR_TYPE_TREEITEM=Tree Item\\r\\n\\r\\n#XACT: type of of an UI control is a table\\r\\nACC_CTR_TYPE_TABLE=Table\\r\\n\\r\\n#XACT: type of of an UI control is a table row\\r\\nACC_CTR_TYPE_ROW=Row\\r\\n\\r\\n#XACT: ARIA announcement for the header row of the table\\r\\nACC_CTR_TYPE_HEADER_ROW=Header Row\\r\\n\\r\\n#XACT: ARIA announcement for the footer row of the table\\r\\nACC_CTR_TYPE_FOOTER_ROW=Footer Row\\r\\n\\r\\n#XACT: \\\"pressed\\\" state of e.g. a togglebutton which should be announced by screenreaders\\r\\nACC_CTR_STATE_PRESSED=Pressed\\r\\n\\r\\n#XACT: \\\"checked\\\" state of e.g. a checkbox which should be announced by screenreaders\\r\\nACC_CTR_STATE_CHECKED=Checked\\r\\n\\r\\n#XACT: state (current and max. value) of a rating indicator which should be announced by screenreaders\\r\\nACC_CTR_STATE_RATING={0} out of {1}\\r\\n\\r\\n#XACT: progress state of a progress indicator which should be announced by screenreaders\\r\\nACC_CTR_STATE_PROGRESS={0} %\\r\\n\\r\\n#############\\r\\n\\r\\n#XACT: Aria information for the Split Button\\r\\nSPLIT_BUTTON_DESCRIPTION=Split Button\\r\\n\\r\\n#XACT: Aria hint for the keyboard handling support of the Split Button\\r\\nSPLIT_BUTTON_KEYBOARD_HINT=Press Enter to trigger action and Arrow Down to open menu\\r\\n\\r\\n#XTOL: Tooltip text for back button inside a Menu Page\\r\\nMENU_PAGE_BACK_BUTTON=Back to\\r\\n\\r\\n#XBUT: Menu predefined text for CLOSE action\\r\\nMENU_CLOSE=Cancel\\r\\n\\r\\n#XBUT: Button text for closing a Notification List Base control\\r\\nNOTIFICATION_LIST_BASE_CLOSE=Close\\r\\n\\r\\n\\r\\n#XBUT: No grouping item in ViewSettingsPopover\\r\\nNO_GROUPING=No Grouping\\r\\n\\r\\n#XBUT: No filtering item in ViewSettingsPopover\\r\\nREMOVE_FILTER=Remove Filter\\r\\n\\r\\n#XBUT: ARIA-LabelledBy for ViewSettingsPopover\\r\\nARIA_LABELLED_BY_POPOVER=Column View Settings\\r\\n\\r\\n#XBUT: Show selected only for ViewSettingsPopover\\r\\nSHOW_SELECTED_ONLY=Show Selected Only\\r\\n\\r\\n#XBUT: No sorting item in ViewSettingsPopover\\r\\nNO_SORTING=No Sorting\\r\\n\\r\\n#YACT: ARIA information about multiple content within the SlideTile\\r\\nSLIDETILE_MULTIPLE_CONTENT=Element with multiple content\\r\\n\\r\\n#YACT: ARIA information about toggle sliding within the SlideTile\\r\\nSLIDETILE_TOGGLE_SLIDING=To toggle sliding, press space bar\\r\\n\\r\\n#YACT: ARIA information how to activate the SlideTile\\r\\nSLIDETILE_ACTIVATE=To activate, press enter\\r\\n\\r\\n#YACT: ARIA information how to scroll back in the SlideTile\\r\\nSLIDETILE_SCROLL_BACK=To scroll back, press B\\r\\n\\r\\n#YACT: ARIA information how to to scroll forward in the SlideTile\\r\\nSLIDETILE_SCROLL_FORWARD=To scroll forward, press F\\r\\n\\r\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\r\\nSLIDER_HANDLE=Slider Handle\\r\\n\\r\\n#XACT: ARIA announcement for the range in RangeSlider\\r\\nRANGE_SLIDER_RANGE_ANNOUNCEMENT=From {0} to {1}\\r\\n\\r\\n#XACT: ARIA ARIA-LabelledBy for the left handle and tooltip in RangeSlider\\r\\nRANGE_SLIDER_LEFT_HANDLE=Left Handle\\r\\n\\r\\n#XACT: ARIA ARIA-LabelledBy for the right handle and tooltip in RangeSlider\\r\\nRANGE_SLIDER_RIGHT_HANDLE=Right Handle\\r\\n\\r\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\r\\nRANGE_SLIDER_RANGE_HANDLE=Range\\r\\n\\r\\n#XBUT: Button text for close button in the LightBox\\r\\nLIGHTBOX_CLOSE_BUTTON=Close\\r\\n\\r\\n#XTOL: Tooltip on the button to allow to scroll back\\r\\nHEADERCONTAINER_BUTTON_PREV_SECTION=Previous\\r\\n\\r\\n#XTOL: Tooltip on the button to allow to scroll forward\\r\\nHEADERCONTAINER_BUTTON_NEXT_SECTION=Next\\r\\n\\r\\n#XTXT: Error message for LightBox image not loaded due to timeout.\\r\\nLIGHTBOX_IMAGE_TIMED_OUT=Image could not be loaded\\r\\n\\r\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\r\\nLIGHTBOX_IMAGE_TIMED_OUT_DETAILS=This image is too big to load right now. Please try again later.\\r\\n\\r\\n#XTXT: Error message for LightBox image not loaded.\\r\\nLIGHTBOX_IMAGE_ERROR=An error has occurred.\\r\\n\\r\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\r\\nLIGHTBOX_IMAGE_ERROR_DETAILS=We could not find the image at the specified location, or the server is not responding.\\r\\n\\r\\n#XACT: ARIA announcement for enlarged image\\r\\nLIGHTBOX_ARIA_ENLARGED=Enlarged image of {0}\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the DEL key for removing a tile\\r\\nTILE_REMOVE_BY_DEL_KEY=Press delete key to remove the item.\\r\\n\\r\\n#XACT: ARIA text for GenericTile in actions scope\\r\\nGENERICTILE_ACTIONS_ARIA_TEXT=Removable tile\\r\\n\\r\\n#XTOL: Tooltip for REMOVE button in the GenericTile\\r\\nGENERICTILE_REMOVEBUTTON_TEXT=Remove\\r\\n\\r\\n#XTXT: Reached maximum number of notifications in NotificationListGroup title\\r\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_TITLE=There are {0} more notifications\\r\\n\\r\\n#XTXT: Reached maximum number of notifications in NotificationListGroup\\r\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_BODY=You need to close or take action on the listed notifications to display more.\\r\\n\\r\\n#XTOL: Tooltip of the button for increasing for example the quantity of a product inside shopping-cart application\\r\\nSTEP_INPUT_INCREASE_BTN=Increase\\r\\n\\r\\n#XTOL: Tooltip of the button for decreasing for example the quantity of a product inside shopping-cart application\\r\\nSTEP_INPUT_DECREASE_BTN=Decrease\\r\\n\\r\\n#XMIT: Radio button control name caption\\r\\nRADIOBUTTON_NAME=Radio Button\\r\\n\\r\\n#XTIT: Radio button control name plural caption\\r\\nRADIOBUTTON_NAME_PLURAL=Radio Buttons\\r\\n\\r\\n#XMIT: Text control name caption\\r\\nTEXT_NAME=Text\\r\\n\\r\\n#XTIT: Text control name plural caption\\r\\nTEXT_NAME_PLURAL=Texts\\r\\n\\r\\n#XMIT: Date picker control name caption\\r\\nDATEPICKER_NAME=Date Picker\\r\\n\\r\\n#XACT: ARIA role for the control Object Identifier\\r\\nOI_ARIA_ROLE=Object Identifier\\r\\n\\r\\n#XTIT: Date picker control name plural caption\\r\\nDATEPICKER_NAME_PLURAL=Date Pickers\\r\\n\\r\\n#XMIT: Check Box control name caption\\r\\nCHECKBOX_NAME=Checkbox\\r\\n\\r\\n#XTIT: Check Box control name plural caption\\r\\nCHECKBOX_NAME_PLURAL=Checkboxes\\r\\n\\r\\n#XMIT: Rating Indicator control name caption\\r\\nRATINGINDICATOR_NAME=Rating Indicator\\r\\n\\r\\n#XTIT: Rating Indicator control name plural caption\\r\\nRATINGINDICATOR_NAME_PLURAL=Rating Indicators\\r\\n\\r\\n#XMIT: Page control name caption\\r\\nPAGE_NAME=Page\\r\\n\\r\\n#XTIT: Page control name plural caption\\r\\nPAGE_NAME_PLURAL=Pages\\r\\n\\r\\n#XMIT: Label control name caption\\r\\nLABEL_NAME=Label\\r\\n\\r\\n#XTIT: Label control name plural caption\\r\\nLABEL_NAME_PLURAL=Labels\\r\\n\\r\\n#XMIT: Link control name caption\\r\\nLINK_NAME=Link\\r\\n\\r\\n#XTIT: Link control name plural caption\\r\\nLINK_NAME_PLURAL=Links\\r\\n\\r\\n#XMIT: Scroll container control name caption\\r\\nSCROLL_CONTAINER_CONTROL_NAME=Container\\r\\n\\r\\n#XTIT: Scroll container control name plural caption\\r\\nSCROLL_CONTAINER_CONTROL_NAME_PLURAL=Containers\\r\\n\\r\\n#XMIT: Panel control name caption\\r\\nPANEL_NAME=Panel\\r\\n\\r\\n#XTIT: Panel control name plural caption\\r\\nPANEL_NAME_PLURAL=Panels\\r\\n\\r\\n#XMIT: ListItemBase control name caption\\r\\nLIST_ITEM_BASE_NAME=List Item\\r\\n\\r\\n#XTIT: ListItemBase control name plural caption\\r\\nLIST_ITEM_BASE_NAME_PLURAL=List Items\\r\\n\\r\\n#XACT:Author of Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_CREATED_BY=Created By\\r\\n\\r\\n#XACT: Unread status of Notification List Item\\r\\nNOTIFICATION_LIST_GROUP_UNREAD=Notification group unread.\\r\\n\\r\\n#XACT: Read status of Notification List Item\\r\\nNOTIFICATION_LIST_GROUP_READ=Notification group read.\\r\\n\\r\\n#XMIT: Image control name caption\\r\\nIMAGE_NAME=Image\\r\\n\\r\\n#XTIT: Image control name plural caption\\r\\nIMAGE_NAME_PLURAL=Images\\r\\n\\r\\n#XMIT: InputBase control name caption\\r\\nINPUT_BASE_NAME=Input\\r\\n\\r\\n#XTIT: InputBase control name plural caption\\r\\nINPUT_BASE_NAME_PLURAL=Inputs\\r\\n\\r\\n#XMIT: Title control name caption\\r\\nTITLE_NAME=Title\\r\\n\\r\\n#XTIT: Title control name plural caption\\r\\nTITLE_NAME_PLURAL=Titles\\r\\n\\r\\n#XMIT: Slider control name caption\\r\\nSLIDER_NAME=Slider\\r\\n\\r\\n#XTIT: Slider control name plural caption\\r\\nSLIDER_NAME_PLURAL=Sliders\\r\\n\\r\\n#XMIT: ListBase control name caption\\r\\nLIST_BASE_NAME=List\\r\\n\\r\\n#XTIT: ListBase control name plural caption\\r\\nLIST_BASE_NAME_PLURAL=Lists\\r\\n\\r\\n#XMIT: Responsive Table control name caption\\r\\nTABLE_NAME=Table\\r\\n\\r\\n#XTIT: Table control name plural caption\\r\\nTABLE_NAME_PLURAL=Tables\\r\\n\\r\\n#XACT: Aria label for Table select all CheckBox\\r\\nTABLE_CHECKBOX_SELECT_ALL=Select all rows\\r\\n\\r\\n#XTIT: Column control name caption\\r\\nCOLUMN_NAME=Column\\r\\n\\r\\n#XTIT: Column control name plural caption\\r\\nCOLUMN_NAME_PLURAL=Columns\\r\\n\\r\\n#XMIT: FlexBox control name caption\\r\\nFLEXBOX_CONTROL_NAME=Container\\r\\n\\r\\n#XTIT: FlexBox control name plural caption\\r\\nFLEXBOX_CONTROL_NAME_PLURAL=Containers\\r\\n\\r\\n#XBUT: Pdf viewer's popup close button\\r\\nPDF_VIEWER_POPUP_CLOSE_BUTTON=Close\\r\\n\\r\\n#XTXT: Pdf viewer's download link\\r\\nPDF_VIEWER_DOWNLOAD_TEXT=Download\\r\\n\\r\\n#XTXT: Text in error placeholder of pdf viewer\\r\\nPDF_VIEWER_PLACEHOLDER_ERROR_TEXT=The PDF file could not be loaded.\\r\\n\\r\\n#XACT: PDF viewer's accessibility label\\r\\nPDF_VIEWER_ACCESSIBILITY_LABEL=PDF Viewer\\r\\n\\r\\n#XTIT: PDF viewer's message box header for source validation error\\r\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_HEADER=Source Validation Error\\r\\n\\r\\n#XMSG: PDF viewer's message box text for source validation error\\r\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_TEXT=Could not validate the source of the file. Show the file anyway?\\r\\n\\r\\n#XBUT: MultiEditField prefilled Item keep\\r\\nMULTI_EDIT_KEEP_TEXT=Keep Existing Values\\r\\n\\r\\n#XBUT: MultiEditField prefilled Item blank\\r\\nMULTI_EDIT_BLANK_TEXT=Leave Blank\\r\\n\\r\\n#XBUT: MultiEditField prefilled Item new\\r\\nMULTI_EDIT_NEW_TEXT=Use Value Help\\r\\n\\r\\n#XTXT: Text representing the Select's picker title text\\r\\nSELECT_PICKER_TITLE_TEXT=Select\"\n\n/***/ }),\n\n/***/ \"lupY\":\n/***/ (function(module, exports) {\n\nmodule.exports = \"TITLE=todos\\nINPUT_PLACEHOLDER=What needs to be done?\\nITEM_LEFT=item left\\nITEMS_LEFT=items left\\nCLEAR_COMPLETED=Clear completed\\n\"\n\n/***/ }),\n\n/***/ \"p7Q0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _UIComponent = __webpack_require__(\"qfmZ\");\n\nvar _UIComponent2 = _interopRequireDefault(_UIComponent);\n\nvar _manifest = __webpack_require__(\"ZcXo\");\n\nvar _manifest2 = _interopRequireDefault(_manifest);\n\n__webpack_require__(\"6znR\");\n\n__webpack_require__(\"0IRU\");\n\n__webpack_require__(\"ybGW\");\n\n__webpack_require__(\"vhzV\");\n\n__webpack_require__(\"5lBc\");\n\n__webpack_require__(\"lupY\");\n\n__webpack_require__(\"dpi6\");\n\n__webpack_require__(\"vDSJ\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// require resources used in manifest\n\n\n// require classes used in manifest\nexports.default = _UIComponent2.default.extend('sap.ui.demo.todo.Component', {\n\tmetadata: {\n\t\tmanifest: _manifest2.default\n\t}\n});\n\n/***/ }),\n\n/***/ \"q8q5\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"X6ta\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.StandardListItem.\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"E8Q9\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"NZXE\"), __webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListItemBase, library, IconPool, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.ui.core.ValueState\n\tvar ValueState = coreLibrary.ValueState;\n\n\t/**\n  * Constructor for a new StandardListItem.\n  *\n  * @param {string} [sId] Id for the new control, generated automatically if no id is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * <code>sap.m.StandardListItem</code> is a list item providing the most common use cases, e.g. image, title and description.\n  * @extends sap.m.ListItemBase\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @alias sap.m.StandardListItem\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar StandardListItem = ListItemBase.extend(\"sap.m.StandardListItem\", /** @lends sap.m.StandardListItem.prototype */{ metadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Defines the title of the list item.\n     */\n\t\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the additional information for the title.\n     * <b>Note:</b> This is only visible when the <code>title</code> property is not empty.\n     */\n\t\t\t\tdescription: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the list item icon.\n     */\n\t\t\t\ticon: { type: \"sap.ui.core.URI\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the indentation of the icon. If set to <code>false</code>, the icon will not be shown as embedded. Instead it will take the full height of the list item.\n     */\n\t\t\t\ticonInset: { type: \"boolean\", group: \"Appearance\", defaultValue: true },\n\n\t\t\t\t/**\n     * By default, one or more requests are sent to get the density perfect version of the icon if the given version of the icon doesn't exist on the server.\n     * <b>Note:</b> If bandwidth is a key factor for the application, set this value to <code>false</code>.\n     */\n\t\t\t\ticonDensityAware: { type: \"boolean\", group: \"Misc\", defaultValue: true },\n\n\t\t\t\t/**\n     * Defines the icon that is shown while the list item is pressed.\n     */\n\t\t\t\tactiveIcon: { type: \"sap.ui.core.URI\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines an additional information text.\n     */\n\t\t\t\tinfo: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines the state of the information text, e.g. <code>Error</code>, <code>Warning</code>, <code>Success</code>.\n     */\n\t\t\t\tinfoState: { type: \"sap.ui.core.ValueState\", group: \"Misc\", defaultValue: ValueState.None },\n\n\t\t\t\t/**\n     * By default, the title size adapts to the available space and gets bigger if the description is empty. If you have list items with and without descriptions, this results in titles with different sizes. In this case, it can be better to switch the size adaption off by setting this property to <code>false</code>.\n     * @since 1.16.3\n     */\n\t\t\t\tadaptTitleSize: { type: \"boolean\", group: \"Appearance\", defaultValue: true },\n\n\t\t\t\t/**\n     * Defines the <code>title</code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n     * @since 1.28.0\n     */\n\t\t\t\ttitleTextDirection: { type: \"sap.ui.core.TextDirection\", group: \"Appearance\", defaultValue: TextDirection.Inherit },\n\n\t\t\t\t/**\n     * Defines the <code>info</code> directionality with enumerated options. By default, the control inherits text direction from the DOM.\n     * @since 1.28.0\n     */\n\t\t\t\tinfoTextDirection: { type: \"sap.ui.core.TextDirection\", group: \"Appearance\", defaultValue: TextDirection.Inherit }\n\t\t\t},\n\t\t\tdesignTime: true\n\t\t} });\n\n\tStandardListItem.prototype.exit = function () {\n\t\tif (this._oImage) {\n\t\t\tthis._oImage.destroy(\"KeepDom\");\n\t\t}\n\n\t\tListItemBase.prototype.exit.apply(this, arguments);\n\t};\n\n\tStandardListItem.prototype.setIcon = function (sIcon) {\n\t\tvar sOldIcon = this.getIcon();\n\t\tthis.setProperty(\"icon\", sIcon);\n\n\t\t// destroy the internal control if it is changed from Icon to Image or Image to Icon\n\t\tif (this._oImage && (!sIcon || IconPool.isIconURI(sIcon) != IconPool.isIconURI(sOldIcon))) {\n\t\t\tthis._oImage.destroy(\"KeepDom\");\n\t\t\tthis._oImage = undefined;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * @private\n  */\n\tStandardListItem.prototype._getImage = function () {\n\t\tvar oImage = this._oImage;\n\n\t\tif (oImage) {\n\t\t\toImage.setSrc(this.getIcon());\n\t\t\tif (oImage instanceof sap.m.Image) {\n\t\t\t\toImage.setDensityAware(this.getIconDensityAware());\n\t\t\t}\n\t\t} else {\n\t\t\toImage = IconPool.createControlByURI({\n\t\t\t\tid: this.getId() + \"-img\",\n\t\t\t\tsrc: this.getIcon(),\n\t\t\t\tdensityAware: this.getIconDensityAware(),\n\t\t\t\tuseIconTooltip: false\n\t\t\t}, sap.m.Image).setParent(this, null, true);\n\t\t}\n\n\t\tvar sImgStyle = this.getIconInset() ? \"sapMSLIImg\" : \"sapMSLIImgThumb\";\n\t\toImage.addStyleClass(oImage instanceof sap.m.Image ? sImgStyle : sImgStyle + \"Icon\", true);\n\n\t\tthis._oImage = oImage;\n\t\treturn this._oImage;\n\t};\n\n\t// overwrite base method to hook into the active handling\n\tStandardListItem.prototype._activeHandlingInheritor = function () {\n\t\tif (this._oImage) {\n\t\t\tvar sActiveIcon = this.getActiveIcon();\n\t\t\tsActiveIcon && this._oImage.setSrc(sActiveIcon);\n\t\t}\n\t};\n\n\t// overwrite base method to hook into the inactive handling\n\tStandardListItem.prototype._inactiveHandlingInheritor = function () {\n\t\tif (this._oImage) {\n\t\t\tthis._oImage.setSrc(this.getIcon());\n\t\t}\n\t};\n\n\tStandardListItem.prototype.getContentAnnouncement = function (oBundle) {\n\t\tvar sAnnouncement = \"\",\n\t\t    sInfoState = this.getInfoState(),\n\t\t    oIconInfo = IconPool.getIconInfo(this.getIcon()) || {};\n\n\t\tsAnnouncement += (oIconInfo.text || oIconInfo.name || \"\") + \" \";\n\t\tsAnnouncement += this.getTitle() + \" \" + this.getDescription() + \" \" + this.getInfo() + \" \";\n\n\t\tif (sInfoState != \"None\" && sInfoState != this.getHighlight()) {\n\t\t\tsAnnouncement += oBundle.getText(\"LIST_ITEM_STATE_\" + sInfoState.toUpperCase());\n\t\t}\n\n\t\treturn sAnnouncement;\n\t};\n\n\treturn StandardListItem;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.StandardListItemRenderer\", __webpack_require__(\"ANvT\"));\n\n/***/ }),\n\n/***/ \"qTcm\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n/**\n * @namespace\n * @name sap.ui.core.delegate\n * @public\n */\n\n// Provides class sap.ui.core.delegate.ItemNavigation\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"9KCw\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, EventProvider) {\n\t\"use strict\";\n\t/* eslint-disable no-lonely-if */\n\n\t/**\n  * Creates an <code>ItemNavigation</code> delegate that can be attached to controls requiring\n  * capabilities for keyboard navigation between items.\n  *\n  * @class Delegate for the navigation between DOM nodes with the keyboard.\n  *\n  * The <code>ItemNavigation</code> provides keyboard and mouse navigation between DOM nodes representing items.\n  * This means that controls rendering a list of items can attach this delegate to get a common keyboard and mouse support\n  * to navigate between these items.\n  * It is possible to navigate between the items via the arrow keys.\n  * If needed, paging using the Page Up and Page Down keys is possible. (To activate call <code>setPageSize</code> with a value &gt; 0.)\n  * HOME and END keys are also supported.\n  * Focusing an item via mouse also is also supported. For mouse navigation, the <code>mousedown</code> event is used.\n  *\n  * As the <code>ItemNavigation</code> works with DOM nodes, the items and the control area must be provided as\n  * DOM references. There is one root DOM reference (set via <code>setRootDomRef</code>).\n  * All item DOM references (set via <code>setItemDomRefs</code>) must be places somewhere inside of this root DOM reference.\n  * Only focusable items are used for the navigation, meaning disabled items or separator items are just ignored by navigating\n  * through the items. In some cases however, it makes sense to put the non-focusable items in the array of the DOM references to\n  * keep the indexes stable or like in the calling control.\n  * <b>Hint:</b> To make a DOM reference focusable a <code>tabindex</code> of -1 can be set.\n  *\n  * <b>Note</b> After re-rendering of the control or changing the DOM nodes of the control, the\n  * DOM references of the <code>ItemNavigation</code> must be updated. Then the same item\n  * (corresponding to the index) will get the focus.\n  *\n  * The <code>ItemNavigation</code> adjusts the <code>tabindex</code> of all DOM references relating to the current\n  * focused item. So if the control containing the items gets the focus (e.g. via tab navigation),\n  * it is always the focused items which will be focused.\n  *\n  * <b>Note:</b> If the <code>ItemNavigation</code> is nested in another <code>ItemNavigation</code>\n  * (e.g. <code>SegmentedButton</code> in <code>Toolbar</code>), the <code>RootDomRef</code> will always have <code>tabindex</code> -1.\n  *\n  * Per default the <code>ItemNavigation</code> cycles over the items.\n  * It navigates again to the first item if the Arrow Down or Arrow Right key is pressed while\n  * the last item has the focus. It navigates to the last item if arrow up or\n  * arrow left is pressed while the first item has the focus.\n  * If you want to stop the navigation at the first and last item,\n  * call the <code>setCycling</code> method with a value of <code>false</code>.\n  *\n  * It is possible to have multiple columns in the item navigation. If multiple columns\n  * are used, the keyboard navigation changes. The Arrow Right and Arrow Left keys will take the user to the next or previous\n  * item, and the Arrow Up and Arrow Down keys will navigate the same way but in a vertical direction.\n  *\n  * The <code>ItemNavigation</code> also allows setting a selected index that is used to identify\n  * the selected item. Initially, if no other focus is set, the selected item will be the focused one.\n  * Note that navigating through the items will not change the selected item, only the focus.\n  * (For example a radio group has one selected item.)\n  *\n  * @author SAP SE\n  *\n  * @extends sap.ui.base.EventProvider\n  *\n  * @param {Element} oDomRef The root DOM reference that includes all items\n  * @param {Element[]} aItemDomRefs Array of DOM references representing the items for the navigation\n  * @param {boolean} [bNotInTabChain=false] Whether the selected element should be in the tab chain or not\n  *\n  * @version 1.52.3\n  * @alias sap.ui.core.delegate.ItemNavigation\n  * @public\n  */\n\n\tvar ItemNavigation = EventProvider.extend(\"sap.ui.core.delegate.ItemNavigation\", /** @lends sap.ui.core.delegate.ItemNavigation.prototype */{\n\t\tconstructor: function constructor(oDomRef, aItemDomRefs, bNotInTabChain) {\n\n\t\t\tEventProvider.apply(this);\n\n\t\t\t// the surrounding dom ref that is focused initially\n\t\t\tthis.oDomRef = null;\n\n\t\t\tif (oDomRef) {\n\t\t\t\tthis.setRootDomRef(oDomRef);\n\t\t\t}\n\n\t\t\t// the array of dom refs representing the items\n\t\t\tthis.aItemDomRefs = [];\n\t\t\tif (aItemDomRefs) {\n\t\t\t\tthis.setItemDomRefs(aItemDomRefs);\n\t\t\t}\n\n\t\t\t// initialize Tabindex\n\t\t\tthis.iTabIndex = -1;\n\n\t\t\t// whether the active element should get a tabindex of 0 or -1\n\t\t\tthis.iActiveTabIndex = !!bNotInTabChain ? -1 : 0;\n\n\t\t\t// the initial focusedindex\n\t\t\tthis.iFocusedIndex = -1;\n\n\t\t\t// the initial selected index (if any)\n\t\t\tthis.iSelectedIndex = -1;\n\n\t\t\t// default for cycling\n\t\t\tthis.bCycling = true;\n\n\t\t\t// default for table mode\n\t\t\tthis.bTableMode = false;\n\n\t\t\t// the pagesize for pageup and down events\n\t\t\tthis.iPageSize = -1;\n\n\t\t\t// a marker to enable focusin to decide HOW the focus arrived\n\t\t\tthis._bMouseDownHappened = false;\n\n\t\t\t// default disabled modifiers these modifiers will not be handled by ItemNavigation\n\t\t\tthis.oDisabledModifiers = {\n\t\t\t\tsapend: [\"alt\", \"shift\"],\n\t\t\t\tsaphome: [\"alt\", \"shift\"]\n\t\t\t};\n\t\t}\n\t});\n\n\tItemNavigation.Events = {\n\t\tBeforeFocus: \"BeforeFocus\",\n\t\tAfterFocus: \"AfterFocus\",\n\t\tBorderReached: \"BorderReached\",\n\t\tFocusAgain: \"FocusAgain\",\n\t\tFocusLeave: \"FocusLeave\"\n\t};\n\n\t/**\n  * The 'beforeFocus' event is fired before the actual item is focused.\n  *\n  * @name sap.ui.core.delegate.ItemNavigation#beforeFocus\n  * @event\n  * @param {int} index Index of the item\n  * @param {jQuery.Event} event Event that leads to the focus change\n  * @public\n  */\n\n\t/**\n  * The 'afterFocus' event is fired after the actual item is focused.\n  * The control can register to this event and react on the focus change.\n  *\n  * @name sap.ui.core.delegate.ItemNavigation#afterFocus\n  * @event\n  * @param {int} index Index of the item\n  * @param {jQuery.Event} event Event that leads to the focus change\n  * @public\n  */\n\n\t/**\n  * The 'borderReached' event is fired if the border of the items is reached and\n  * no cycling is used, meaning an application can react on this.\n  *\n  * For example if the first item is focused and the Arrow Left key is pressed.\n  *\n  * @name sap.ui.core.delegate.ItemNavigation#borderReached\n  * @event\n  * @param {int} index Index of the item\n  * @param {jQuery.Event} event Event that leads to the focus change\n  * @public\n  */\n\n\t/**\n  * The 'focusAgain' event is fired if the current focused item is focused again\n  * (e.g. click again on focused item.)\n  *\n  * @name sap.ui.core.delegate.ItemNavigation#focusAgain\n  * @event\n  * @param {int} index Index of the item\n  * @param {jQuery.Event} event Event that leads to the focus change\n  * @public\n  */\n\n\t/**\n  * The 'focusLeave' event fired if the focus is set outside the control handled by the <code>ItemNavigation</code>.\n  *\n  * @name sap.ui.core.delegate.ItemNavigation#focusLeave\n  * @event\n  * @param {int} index Index of the item\n  * @param {jQuery.Event} event Event that leads to the focus change\n  * @public\n  */\n\n\t/**\n  * Sets the disabled modifiers\n  * These modifiers will not be handled by the <code>ItemNavigation</code>\n  *\n  * <pre>\n  * Example: Disable shift + up handling of the <code>ItemNavigation</code>\n  *\n  * oItemNavigation.setDisabledModifiers({\n  *     sapnext : [\"shift\"]\n  * });\n  *\n  * Possible keys are : \"shift\", \"alt\", \"ctrl\", \"meta\"\n  * Possible events are : \"sapnext\", \"sapprevious\", \"saphome\", \"sapend\"\n  * </pre>\n  *\n  * @param {Object} oDisabledModifiers Object that includes event type with disabled keys as an array\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @public\n  */\n\tItemNavigation.prototype.setDisabledModifiers = function (oDisabledModifiers) {\n\t\tthis.oDisabledModifiers = oDisabledModifiers;\n\t\treturn this;\n\t};\n\n\t/**\n  * Returns disabled modifiers\n  * These modifiers will not be handled by the <code>ItemNavigation</code>\n  *\n  * @param {object} oDisabledModifiers Object that includes event type with disabled keys as an array\n  * @return {object} Object that includes event type with disabled keys as an array\n  * @public\n  */\n\tItemNavigation.prototype.getDisabledModifiers = function (oDisabledModifiers) {\n\t\treturn this.oDisabledModifiers;\n\t};\n\n\t/**\n  * Check whether given event has disabled modifier or not\n  *\n  * @param {jQuery.Event} oEvent jQuery event\n  * @return {Boolean} Flag if disabled modifiers are set\n  * @public\n  */\n\tItemNavigation.prototype.hasDisabledModifier = function (oEvent) {\n\t\tvar aDisabledKeys = this.oDisabledModifiers[oEvent.type.replace(\"modifiers\", \"\")];\n\t\tif (Array.isArray(aDisabledKeys)) {\n\t\t\tfor (var i = 0; i < aDisabledKeys.length; i++) {\n\t\t\t\tif (oEvent[aDisabledKeys[i] + \"Key\"]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n  * Sets the root DOM reference surrounding the items\n  *\n  * @param {object} oDomRef Root DOM reference\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @public\n  */\n\tItemNavigation.prototype.setRootDomRef = function (oDomRef) {\n\t\tthis.oDomRef = oDomRef;\n\n\t\t// in nested ItemNavigation the tabindex must only be set at the root DOM from the parent ItemNavigation\n\t\tif (!jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\t\t\tif (this.iFocusedIndex >= 0) {\n\t\t\t\tjQuery(this.oDomRef).attr(\"tabIndex\", this.iTabIndex);\n\t\t\t} else {\n\t\t\t\tjQuery(this.oDomRef).attr(\"tabIndex\", this.iActiveTabIndex);\n\t\t\t}\n\t\t}\n\n\t\tjQuery(this.oDomRef).data(\"sap.INRoot\", this);\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Returns the root DOM reference surrounding the items\n  *\n  * @return {Element} Root DOM reference\n  * @public\n  */\n\tItemNavigation.prototype.getRootDomRef = function () {\n\t\treturn this.oDomRef;\n\t};\n\n\t/**\n  * Returns the array of item DOM references\n  *\n  * @return {Element[]} Array of item DOM references\n  * @public\n  */\n\tItemNavigation.prototype.getItemDomRefs = function () {\n\t\treturn this.aItemDomRefs;\n\t};\n\n\t/**\n  * Sets the item DOM references as an array for the items\n  *\n  * @param {Element[]} aItemDomRefs Array of DOM references or DOM node list object, representing the items\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @public\n  */\n\tItemNavigation.prototype.setItemDomRefs = function (aItemDomRefs) {\n\t\tjQuery.sap.assert((typeof aItemDomRefs === 'undefined' ? 'undefined' : _typeof(aItemDomRefs)) === \"object\" && typeof aItemDomRefs.length === \"number\", \"aItemDomRefs must be an array of DOM elements\");\n\t\tthis.aItemDomRefs = aItemDomRefs;\n\n\t\tif (this.iFocusedIndex > aItemDomRefs.length - 1) {\n\t\t\tthis.iFocusedIndex = aItemDomRefs.length - 1;\n\t\t}\n\n\t\t// in nested ItemNavigation the tabindex must only be set if it's the focused item of the parent ItemNavigation\n\t\tfor (var i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\tif (this.aItemDomRefs[i]) {\n\t\t\t\t// separators return null here\n\t\t\t\tvar $Item = jQuery(this.aItemDomRefs[i]);\n\n\t\t\t\t// as this code can be executed even if the items are not visible (e.g. Popup is closed)\n\t\t\t\t// no focusable check can be performed. So only for the currently focused item\n\t\t\t\t// the tabindex is set to 0. For all items with tabindex 0 the tabindex is set to -1\n\t\t\t\t// Items without tabindex are checked for focusable on the first focusin on the root.\n\t\t\t\tif (i == this.iFocusedIndex && !$Item.data(\"sap.INRoot\")) {\n\t\t\t\t\t$Item.attr(\"tabIndex\", this.iActiveTabIndex);\n\t\t\t\t} else if ($Item.attr(\"tabindex\") == \"0\") {\n\t\t\t\t\t// set tabindex to -1 only if already set to 0\n\t\t\t\t\t$Item.attr(\"tabIndex\", -1);\n\t\t\t\t}\n\n\t\t\t\t$Item.data(\"sap.INItem\", true);\n\t\t\t\t$Item.data(\"sap.InNavArea\", true); //Item is in navigation area - allow navigation mode and edit mode\n\n\t\t\t\tif ($Item.data(\"sap.INRoot\") && i != this.iFocusedIndex) {\n\n\t\t\t\t\t// item is root of a nested ItemNavigation -> set tabindexes from its items to -1\n\t\t\t\t\t$Item.data(\"sap.INRoot\").setNestedItemsTabindex();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the <code>tabindex</code> of the items.\n  *\n  * This cannot be done while setting items because at this point of time the items might\n  * be invisible (because e.g. a popup closed), meaning the focusable check will fail.\n  * So the items <code>tabindex</code>es are set if the rootDom is focused the first time.\n  *\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @private\n  */\n\tItemNavigation.prototype.setItemsTabindex = function () {\n\n\t\tfor (var i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\tif (this.aItemDomRefs[i]) {\n\t\t\t\t// separators return null here\n\t\t\t\tvar $Item = jQuery(this.aItemDomRefs[i]);\n\t\t\t\tif ($Item.is(\":sapFocusable\")) {\n\n\t\t\t\t\t// not focusable items (like labels) must not get a tabindex attribute\n\t\t\t\t\tif (i == this.iFocusedIndex && !$Item.data(\"sap.INRoot\")) {\n\t\t\t\t\t\t$Item.attr(\"tabIndex\", this.iActiveTabIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$Item.attr(\"tabIndex\", -1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets <code>tabindex</code> of item to -1\n  * if called from parent <code>ItemNavigation</code> if ItemNavigation is nested.\n  * In the nested case the <code>tabindex</code> is ruled by the parent <code>ItemNavigation</code>,\n  * only the top items can have <code>tabindex</code> = 0.\n  *\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @private\n  */\n\tItemNavigation.prototype.setNestedItemsTabindex = function () {\n\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\t\t\tfor (var i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\t\tif (this.aItemDomRefs[i] && jQuery(this.aItemDomRefs[i]).attr(\"tabindex\") == \"0\") {\n\t\t\t\t\t// separators return null here\n\t\t\t\t\tjQuery(this.aItemDomRefs[i]).attr(\"tabIndex\", -1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Destroys the delegate and releases all DOM references.\n  *\n  */\n\tItemNavigation.prototype.destroy = function () {\n\n\t\tif (this.oDomRef) {\n\t\t\tjQuery(this.oDomRef).removeData(\"sap.INRoot\");\n\t\t\tthis.oDomRef = null;\n\t\t}\n\n\t\tif (this.aItemDomRefs) {\n\t\t\tfor (var i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\t\tif (this.aItemDomRefs[i]) {\n\t\t\t\t\t// separators return null here\n\t\t\t\t\tjQuery(this.aItemDomRefs[i]).removeData(\"sap.INItem\");\n\t\t\t\t\tjQuery(this.aItemDomRefs[i]).removeData(\"sap.InNavArea\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.aItemDomRefs = null;\n\t\t}\n\n\t\tthis._bItemTabIndex = undefined;\n\t\tthis.iFocusedIndex = -1;\n\t};\n\n\t/**\n  * Sets whether the <code>ItemNavigation</code> should cycle through the items.\n  *\n  * If cycling is disabled the navigation stops at the first and last item, if the corresponding arrow keys are used.\n  *\n  * @param {boolean} bCycling Set to true if cycling should be done, else false\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @public\n  */\n\tItemNavigation.prototype.setCycling = function (bCycling) {\n\t\tthis.bCycling = bCycling;\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets whether the <code>ItemNavigation</code> should use the table mode to navigate through\n  * the items (navigation in a grid).\n  *\n  * @param {boolean} bTableMode Set to true if table mode should be used, else false\n  * @param {boolean} [bTableList] This sets a different behavior for table mode.\n  * In this mode we keep using table navigation but there are some differences. e.g.\n  * <ul>\n  * \t<li>Page-up moves focus to the first row, not to the first cell like in table mode</li>\n  * \t<li>Page-down moves focus to the last row, not to the last cell like in table mode</li>\n  * </ul>\n  *\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @public\n  */\n\tItemNavigation.prototype.setTableMode = function (bTableMode, bTableList) {\n\t\tthis.bTableMode = bTableMode;\n\t\tif (this.oConfiguration === undefined) {\n\t\t\tthis.oConfiguration = sap.ui.getCore().getConfiguration();\n\t\t}\n\t\tthis.bTableList = bTableMode ? bTableList : false;\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the page size of the item navigation to allow Page Up and Page Down keys.\n  *\n  * @param {int} iPageSize The page size, needs to be at least 1\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @public\n  */\n\tItemNavigation.prototype.setPageSize = function (iPageSize) {\n\t\tthis.iPageSize = iPageSize;\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the selected index if the used control supports selection.\n  *\n  * @param {int} iIndex Index of the first selected item\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @public\n  */\n\tItemNavigation.prototype.setSelectedIndex = function (iIndex) {\n\t\tthis.iSelectedIndex = iIndex;\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets whether the items are displayed in columns.\n  *\n  * If columns are used, the Arrow Up and Arrow Down keys navigate to the next or previous\n  * item of the column. If the first or last item of the column is reached, the next focused\n  * item is then in the next or previous column.\n  *\n  * @param {int} iColumns Count of columns for the table mode or cycling mode\n  * @param {boolean} bNoColumnChange Forbids jumping to an other column with Arrow Up and Arrow Down keys\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @public\n  */\n\tItemNavigation.prototype.setColumns = function (iColumns, bNoColumnChange) {\n\t\tthis.iColumns = iColumns;\n\t\tthis.bNoColumnChange = bNoColumnChange;\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets behavior of HOME and END keys if columns are used.\n  *\n  * @param {boolean} bStayInRow HOME -> go to first item in row; END -> go to last item in row\n  * @param {boolean} bCtrlEnabled HOME/END with CTRL -> go to first/last item of all\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @public\n  */\n\tItemNavigation.prototype.setHomeEndColumnMode = function (bStayInRow, bCtrlEnabled) {\n\n\t\tthis._bStayInRow = bStayInRow;\n\t\tthis._bCtrlEnabled = bCtrlEnabled;\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Sets the focus to the item with the given index.\n  *\n  * @param {int} iIndex Index of the item to focus\n  * @param {jQuery.Event} oEvent Event that leads to focus change\n  * @private\n  */\n\tItemNavigation.prototype.focusItem = function (iIndex, oEvent) {\n\n\t\tjQuery.sap.log.info(\"FocusItem: \" + iIndex + \" iFocusedIndex: \" + this.iFocusedIndex, \"focusItem\", \"ItemNavigation\");\n\n\t\tif (iIndex == this.iFocusedIndex && this.aItemDomRefs[this.iFocusedIndex] == document.activeElement) {\n\t\t\tthis.fireEvent(ItemNavigation.Events.FocusAgain, {\n\t\t\t\tindex: iIndex,\n\t\t\t\tevent: oEvent\n\t\t\t});\n\t\t\treturn; // item already focused -> nothing to do\n\t\t}\n\n\t\t// if there is no item to put the focus on, we don't even try it, if working in table mode we just focus the next item\n\t\tif (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\tif (this.bTableMode) {\n\t\t\t\tvar iCol = iIndex % this.iColumns;\n\t\t\t\tvar iOldIndex = iIndex;\n\t\t\t\tif (oEvent && oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_RIGHT) {\n\t\t\t\t\tif (iCol < this.iColumns - 1) {\n\t\t\t\t\t\tiIndex += this.oConfiguration.getRTL() ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (oEvent && oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_LEFT) {\n\t\t\t\t\tif (iCol > 1) {\n\t\t\t\t\t\tiIndex -= this.oConfiguration.getRTL() ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (iCol > 1) {\n\t\t\t\t\t\tiIndex -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (iIndex != iOldIndex) {\n\t\t\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireEvent(ItemNavigation.Events.BeforeFocus, {\n\t\t\tindex: iIndex,\n\t\t\tevent: oEvent\n\t\t});\n\n\t\tthis.setFocusedIndex(iIndex);\n\t\tthis.bISetFocus = true;\n\n\t\tif (oEvent && jQuery(this.aItemDomRefs[this.iFocusedIndex]).data(\"sap.INRoot\")) {\n\n\t\t\t// store event type for nested ItemNavigations\n\t\t\tvar oItemItemNavigation = jQuery(this.aItemDomRefs[this.iFocusedIndex]).data(\"sap.INRoot\");\n\t\t\toItemItemNavigation._sFocusEvent = oEvent.type;\n\t\t}\n\n\t\tjQuery.sap.log.info(\"Set Focus on ID: \" + this.aItemDomRefs[this.iFocusedIndex].id, \"focusItem\", \"ItemNavigation\");\n\t\tjQuery.sap.focus(this.aItemDomRefs[this.iFocusedIndex]);\n\n\t\tthis.fireEvent(ItemNavigation.Events.AfterFocus, {\n\t\t\tindex: iIndex,\n\t\t\tevent: oEvent\n\t\t});\n\t};\n\n\t/**\n  * Sets the focused index to the given index.\n  *\n  * @param {int} iIndex Index of the item\n  * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n  * @private\n  */\n\tItemNavigation.prototype.setFocusedIndex = function (iIndex) {\n\t\tvar $Item;\n\n\t\tif (this.aItemDomRefs.length < 0) {\n\t\t\t// no items -> don't change TabIndex\n\t\t\tthis.iFocusedIndex = -1;\n\t\t\treturn this;\n\t\t}\n\n\t\tif (iIndex < 0) {\n\t\t\tiIndex = 0;\n\t\t}\n\n\t\tif (iIndex > this.aItemDomRefs.length - 1) {\n\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t}\n\n\t\tjQuery(this.oDomRef).attr(\"tabIndex\", this.iTabIndex);\n\n\t\tif (this.iFocusedIndex !== -1 && this.aItemDomRefs.length > this.iFocusedIndex) {\n\t\t\tjQuery(this.aItemDomRefs[this.iFocusedIndex]).attr(\"tabIndex\", -1);\n\n\t\t\t// if focus is in nested ItemNavigation but is moved to an other item, remove tabindex from nested item\n\t\t\t$Item = jQuery(this.aItemDomRefs[this.iFocusedIndex]);\n\t\t\tif ($Item.data(\"sap.INRoot\") && iIndex != this.iFocusedIndex) {\n\t\t\t\tjQuery($Item.data(\"sap.INRoot\").aItemDomRefs[$Item.data(\"sap.INRoot\").iFocusedIndex]).attr(\"tabIndex\", -1);\n\t\t\t}\n\t\t}\n\n\t\tthis.iFocusedIndex = iIndex;\n\t\tvar oFocusItem = this.aItemDomRefs[this.iFocusedIndex];\n\n\t\t$Item = jQuery(this.aItemDomRefs[this.iFocusedIndex]);\n\t\tif (!$Item.data(\"sap.INRoot\")) {\n\n\t\t\t// in nested ItemNavigation the nested item gets the tabindex\n\t\t\tjQuery(oFocusItem).attr(\"tabIndex\", this.iActiveTabIndex);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Returns the focused DOM reference.\n  *\n  * @return {Element} Focused DOM reference\n  * @private\n  */\n\tItemNavigation.prototype.getFocusedDomRef = function () {\n\t\treturn this.aItemDomRefs[this.iFocusedIndex];\n\t};\n\n\t/**\n  * Returns index of the focused item.\n  *\n  * @return {int} focused index\n  * @private\n  */\n\tItemNavigation.prototype.getFocusedIndex = function () {\n\t\treturn this.iFocusedIndex;\n\t};\n\n\t/**\n  * Handles the onfocusin event.\n  *\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onfocusin = function (oEvent) {\n\n\t\tvar oSource = oEvent.target;\n\t\tvar i = 0;\n\n\t\tif (oSource == this.oDomRef) {\n\n\t\t\t// focus occured on the main dom ref\n\t\t\t// on first focus - set tabindex for items\n\t\t\tif (!this._bItemTabIndex) {\n\t\t\t\tthis.setItemsTabindex();\n\t\t\t\tthis._bItemTabIndex = true;\n\t\t\t}\n\n\t\t\t// if the focus came by clicking AND it did not target one of the elements, but the root element, do nothing\n\t\t\t// (otherwise clicking the scrollbar re-focuses the previously focused element, which causes the browser to scroll it into view)\n\t\t\tif (this._bMouseDownHappened) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar iIndex;\n\n\t\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\") && this._sFocusEvent && !jQuery(this.oDomRef).data(\"sap.InNavArea\")) {\n\n\t\t\t\t// if nested ItemNavigation need to know if focused by parent ItemNavigation (not in Navigation mode)\n\t\t\t\tswitch (this._sFocusEvent) {\n\t\t\t\t\tcase \"sapnext\":\n\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"sapprevious\":\n\t\t\t\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (this.iSelectedIndex != -1) {\n\t\t\t\t\t\t\tiIndex = this.iSelectedIndex;\n\t\t\t\t\t\t} else if (this.iFocusedIndex != -1) {\n\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis._sFocusEvent = undefined;\n\t\t\t} else {\n\t\t\t\tif (this.iSelectedIndex != -1) {\n\t\t\t\t\tiIndex = this.iSelectedIndex;\n\t\t\t\t} else if (this.iFocusedIndex != -1) {\n\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tiIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t\tif (this.iFocusedIndex == -1) {\n\n\t\t\t\t// no item focused, maybe not focusable -> try the next one\n\t\t\t\tfor (i = iIndex + 1; i < this.aItemDomRefs.length; i++) {\n\t\t\t\t\tthis.focusItem(i, oEvent);\n\t\t\t\t\tif (this.iFocusedIndex == i) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.iFocusedIndex == -1 && iIndex > 0) {\n\n\t\t\t\t\t// still no item selected, try to find a previous one\n\t\t\t\t\tfor (i = iIndex - 1; i >= 0; i--) {\n\t\t\t\t\t\tthis.focusItem(i, oEvent);\n\t\t\t\t\t\tif (this.iFocusedIndex == i) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// cancel the bubbling of event in this case\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t} else if (!this.bISetFocus) {\n\n\t\t\t// check if this is really the already focused item\n\t\t\t// in case of a click on a label this could be an other item\n\t\t\tif (this.aItemDomRefs && oEvent.target != this.aItemDomRefs[this.iFocusedIndex]) {\n\t\t\t\tfor (i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\t\t\tif (oEvent.target == this.aItemDomRefs[i]) {\n\t\t\t\t\t\tthis.focusItem(i, oEvent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// give focused item to registered application\n\t\t\t\tthis.fireEvent(ItemNavigation.Events.AfterFocus, { index: this.iFocusedIndex, event: oEvent });\n\t\t\t}\n\t\t}\n\n\t\tthis.bISetFocus = false;\n\t};\n\n\t/**\n  * Handles the onsapfocusleave event\n  *\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsapfocusleave = function (oEvent) {\n\t\tif (!oEvent.relatedControlId || !jQuery.sap.containsOrEquals(this.oDomRef, sap.ui.getCore().byId(oEvent.relatedControlId).getFocusDomRef())) {\n\n\t\t\t// entirely leaving the control handled by this ItemNavigation instance\n\t\t\tvar iIndex;\n\t\t\tif (this.iSelectedIndex != -1) {\n\t\t\t\tiIndex = this.iSelectedIndex;\n\t\t\t} else if (this.iFocusedIndex != -1) {\n\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t} else {\n\t\t\t\tiIndex = 0;\n\t\t\t}\n\t\t\tthis.setFocusedIndex(iIndex);\n\n\t\t\tvar $DomRef;\n\n\t\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\n\t\t\t\t// if in nested ItemNavigation and focus moves to item of parent ItemNavigation -> do not set Tabindex\n\t\t\t\tvar oParentDomRef;\n\t\t\t\t$DomRef = jQuery(this.oDomRef);\n\n\t\t\t\twhile (!oParentDomRef) {\n\t\t\t\t\t$DomRef = $DomRef.parent();\n\t\t\t\t\tif ($DomRef.data(\"sap.INRoot\")) {\n\t\t\t\t\t\toParentDomRef = $DomRef.get(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!oEvent.relatedControlId || jQuery.sap.containsOrEquals(oParentDomRef, sap.ui.getCore().byId(oEvent.relatedControlId).getFocusDomRef())) {\n\t\t\t\t\tjQuery(this.aItemDomRefs[this.iFocusedIndex]).attr(\"tabIndex\", -1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$DomRef = jQuery(this.oDomRef);\n\t\t\tif ($DomRef.data(\"sap.InNavArea\") === false) {\n\t\t\t\t// check for false to avoid undefinded\n\n\t\t\t\t// if in action mode switch back to navigation mode\n\t\t\t\t$DomRef.data(\"sap.InNavArea\", true);\n\t\t\t}\n\n\t\t\tthis.fireEvent(ItemNavigation.Events.FocusLeave, {\n\t\t\t\tindex: iIndex,\n\t\t\t\tevent: oEvent\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n  * Handles the onmousedown event\n  * Sets the focus to the item if it occured on an item\n  *\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onmousedown = function (oEvent) {\n\n\t\t// set the focus to the clicked element or back to the last\n\t\tvar oSource = oEvent.target;\n\n\t\tvar checkFocusableParent = function checkFocusableParent(oDomRef, oItem) {\n\n\t\t\t// as table cell might have focusable content that have not focusable DOM insinde\n\t\t\t// the table cell should not get the focus but the focusable element inside\n\t\t\tvar bFocusableParent = false;\n\t\t\tvar $CheckDom = jQuery(oDomRef);\n\t\t\twhile (!$CheckDom.is(\":sapFocusable\") && $CheckDom.get(0) != oItem) {\n\t\t\t\t$CheckDom = $CheckDom.parent();\n\t\t\t}\n\n\t\t\tif ($CheckDom.get(0) != oItem) {\n\t\t\t\t// focusable Dom found inside item\n\t\t\t\tbFocusableParent = true;\n\t\t\t}\n\n\t\t\treturn bFocusableParent;\n\t\t};\n\n\t\tif (jQuery.sap.containsOrEquals(this.oDomRef, oSource)) {\n\n\t\t\t// the mouse down occured inside the main dom ref\n\t\t\tfor (var i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\t\tvar oItem = this.aItemDomRefs[i];\n\t\t\t\tif (jQuery.sap.containsOrEquals(oItem, oSource)) {\n\t\t\t\t\tif (!this.bTableMode) {\n\n\t\t\t\t\t\t// the mousedown occured inside of an item\n\t\t\t\t\t\tthis.focusItem(i, oEvent);\n\n\t\t\t\t\t\t// no oEvent.preventDefault(); because cursor will not be set in Textfield\n\t\t\t\t\t\t// no oEvent.stopPropagation(); because e.g. DatePicker can not close popup\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// only focus the items if the click did not happen on a\n\t\t\t\t\t\t// focusable element!\n\t\t\t\t\t\tif (oItem === oSource || !checkFocusableParent(oSource, oItem)) {\n\t\t\t\t\t\t\tthis.focusItem(i, oEvent);\n\n\t\t\t\t\t\t\t// the table mode requires not to prevent the default\n\t\t\t\t\t\t\t// behavior on click since we want to allow text selection\n\t\t\t\t\t\t\t// click into the control, ...\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oSource == this.oDomRef) {\n\n\t\t\t\t// root DomRef of item navigation has been clicked\n\t\t\t\t// focus will also come in a moment - let it know that it was the mouse who caused the focus\n\t\t\t\tthis._bMouseDownHappened = true;\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\tthat._bMouseDownHappened = false;\n\t\t\t\t}, 20);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Handles the onsapnext event\n  * Sets the focus to the next item\n  *\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsapnext = function (oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\treturn;\n\t\t}\n\n\t\tif (jQuery(this.oDomRef).data(\"sap.InNavArea\")) {\n\n\t\t\t// control is in navigation mode -> no ItemNavigation\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus the next item\n\t\tvar iIndex = this.iFocusedIndex,\n\t\t    bFirstTime = true,\n\t\t    bBorderReached = false;\n\n\t\tif (iIndex > -1) {\n\t\t\tif (this.bTableMode) {\n\n\t\t\t\tvar iRowCount = this.aItemDomRefs.length / this.iColumns,\n\t\t\t\t    iRow = Math.floor(iIndex / this.iColumns),\n\t\t\t\t    iCol = iIndex % this.iColumns;\n\n\t\t\t\tif (oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_DOWN) {\n\t\t\t\t\tif (iRow < iRowCount - 1) {\n\t\t\t\t\t\tiIndex += this.iColumns;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (iCol < this.iColumns - 1) {\n\t\t\t\t\t\tiIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tif (this.iColumns > 1 && oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_DOWN) {\n\t\t\t\t\t\tif (iIndex + this.iColumns >= this.aItemDomRefs.length) {\n\t\t\t\t\t\t\tif (!this.bNoColumnChange) {\n\t\t\t\t\t\t\t\t// on bottom -> begin on top of next column\n\t\t\t\t\t\t\t\tif (iIndex % this.iColumns < this.iColumns - 1) {\n\t\t\t\t\t\t\t\t\tiIndex = iIndex % this.iColumns + 1;\n\t\t\t\t\t\t\t\t} else if (this.bCycling) {\n\t\t\t\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// do not go to an other item;\n\t\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex = iIndex + this.iColumns;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (iIndex == this.aItemDomRefs.length - 1) {\n\n\t\t\t\t\t\t\t// last item\n\t\t\t\t\t\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\n\t\t\t\t\t\t\t\t// if nested ItemNavigations leave here to ItemNavigation of parent\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if (this.bCycling) {\n\n\t\t\t\t\t\t\t\t// in cycling case focus first one, if not - don't change\n\t\t\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// last one, no next item, so leave focus on already focused item (to prevent endless loops)\n\t\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (iIndex === this.iFocusedIndex) {\n\t\t\t\t\t\tif (bFirstTime) {\n\t\t\t\t\t\t\tbFirstTime = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"ItemNavigation has no visible/existing items and is hence unable to select the next one\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if item is not visible or a dummy item go to the next one\n\t\t\t\t\t// !jQuery(this.aItemDomRefs[iIndex]).is(\":visible\") and jQuery(this.aItemDomRefs[iIndex]).css(\"visibility\") === \"hidden\"\n\t\t\t\t\t// - is not needed as .is(\":sapFocusable\") do these checks already\n\t\t\t\t} while (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\"));\n\t\t\t}\n\n\t\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t\tif (bBorderReached) {\n\t\t\t\tthis.fireEvent(ItemNavigation.Events.BorderReached, {\n\t\t\t\t\tindex: iIndex,\n\t\t\t\t\tevent: oEvent\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// cancel the event otherwise the browser will scroll\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\t/**\n  * Ensure the sapnext event with modifiers is also handled\n  *\n  * @see #onsapnext\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsapnextmodifiers = function (oEvent) {\n\t\tif (this.hasDisabledModifier(oEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onsapnext(oEvent);\n\t};\n\n\t/**\n  * Handles the onsapprevious event\n  * Sets the focus to the previous item\n  *\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsapprevious = function (oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\treturn;\n\t\t}\n\n\t\tif (jQuery(this.oDomRef).data(\"sap.InNavArea\")) {\n\n\t\t\t// control is in navigation mode -> no ItemNavigation\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus the previous item\n\t\tvar iIndex = this.iFocusedIndex,\n\t\t    bFirstTime = true,\n\t\t    bBorderReached = false;\n\t\tvar iCol = 0;\n\n\t\tif (iIndex > -1) {\n\t\t\tif (this.bTableMode) {\n\t\t\t\tvar iRow = Math.floor(iIndex / this.iColumns);\n\t\t\t\tiCol = iIndex % this.iColumns;\n\n\t\t\t\tif (oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_UP) {\n\t\t\t\t\tif (iRow > 0) {\n\t\t\t\t\t\tiIndex -= this.iColumns;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (iCol > 0) {\n\t\t\t\t\t\tiIndex -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tif (this.iColumns > 1 && oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_UP) {\n\t\t\t\t\t\tif (iIndex - this.iColumns < 0) {\n\t\t\t\t\t\t\tif (!this.bNoColumnChange) {\n\t\t\t\t\t\t\t\t// on top -> begin on end of previous column\n\t\t\t\t\t\t\t\tiCol = 0;\n\n\t\t\t\t\t\t\t\tif (iIndex % this.iColumns > 0) {\n\t\t\t\t\t\t\t\t\tiCol = iIndex % this.iColumns - 1;\n\t\t\t\t\t\t\t\t} else if (this.bCycling) {\n\t\t\t\t\t\t\t\t\tiCol = Math.min(this.iColumns - 1, this.aItemDomRefs.length - 1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (iIndex === 0 && iCol === 0) {\n\t\t\t\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar iRows = Math.ceil(this.aItemDomRefs.length / this.iColumns);\n\t\t\t\t\t\t\t\t\tiIndex = iCol + (iRows - 1) * this.iColumns;\n\n\t\t\t\t\t\t\t\t\tif (iIndex >= this.aItemDomRefs.length) {\n\t\t\t\t\t\t\t\t\t\tiIndex = iIndex - this.iColumns;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// do not go to an other item;\n\t\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex = iIndex - this.iColumns;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (iIndex == 0) {\n\n\t\t\t\t\t\t\t// first item\n\t\t\t\t\t\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\n\t\t\t\t\t\t\t\t// if nested ItemNavigations leave here to ItemNavigation of parent\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if (this.bCycling) {\n\n\t\t\t\t\t\t\t\t// in cycling case focus last one, if not - don't change\n\t\t\t\t\t\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// first one, no next item, so leave focus on already focused item (to prevent endless loops)\n\t\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (iIndex == this.iFocusedIndex) {\n\t\t\t\t\t\tif (bFirstTime) {\n\t\t\t\t\t\t\tbFirstTime = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"ItemNavigation has no visible/existing items and is hence unable to select the previous one\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if item is not visible or a dummy item go to the next one\n\t\t\t\t} while (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\"));\n\t\t\t}\n\n\t\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t\tif (bBorderReached) {\n\t\t\t\tthis.fireEvent(ItemNavigation.Events.BorderReached, {\n\t\t\t\t\tindex: iIndex,\n\t\t\t\t\tevent: oEvent\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// cancel the event otherwise the browser will scroll\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\t/**\n  * Ensure the sapprevious event with modifiers is also handled\n  *\n  * @see #onsapprevious\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsappreviousmodifiers = function (oEvent) {\n\t\tif (this.hasDisabledModifier(oEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onsapprevious(oEvent);\n\t};\n\n\t/**\n  * Handles the onsappageup event\n  * Sets the focus to the previous page item of <code>iPageSize</code> > 0\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsappageup = function (oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar iIndex = 0;\n\t\tvar bBorderReached = false;\n\n\t\tif (this.iPageSize > 0) {\n\t\t\tiIndex = this.iFocusedIndex;\n\n\t\t\tif (iIndex > -1) {\n\t\t\t\tiIndex = iIndex - this.iPageSize;\n\n\t\t\t\twhile (iIndex > 0 && !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\t\t\tiIndex--;\n\t\t\t\t}\n\n\t\t\t\tif (iIndex < 0) {\n\t\t\t\t\tif (!this.bNoColumnChange) {\n\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t\t}\n\t\t} else if (this.bTableMode) {\n\t\t\tiIndex = this.iFocusedIndex % this.iColumns;\n\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t}\n\n\t\tif (bBorderReached) {\n\t\t\tthis.fireEvent(ItemNavigation.Events.BorderReached, {\n\t\t\t\tindex: iIndex,\n\t\t\t\tevent: oEvent\n\t\t\t});\n\t\t}\n\n\t\t// cancel the event otherwise the browser will scroll\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\t};\n\n\t/**\n  * Handles the onsappagedown event.\n  *\n  * Sets the focus to the previous page item of <code>iPageSize</code> > 0\n  *\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsappagedown = function (oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar iIndex = 0;\n\t\tvar bBorderReached = false;\n\n\t\tif (this.iPageSize > 0) {\n\t\t\tiIndex = this.iFocusedIndex;\n\n\t\t\tif (iIndex > -1) {\n\t\t\t\tiIndex = iIndex + this.iPageSize;\n\n\t\t\t\twhile (iIndex < this.aItemDomRefs.length - 1 && !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\t\t\tiIndex++;\n\t\t\t\t}\n\n\t\t\t\tif (iIndex > this.aItemDomRefs.length - 1) {\n\t\t\t\t\tif (!this.bNoColumnChange) {\n\t\t\t\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t\t}\n\t\t} else if (this.bTableMode) {\n\t\t\tvar iRowCount = this.aItemDomRefs.length / this.iColumns,\n\t\t\t    iCol = this.iFocusedIndex % this.iColumns;\n\n\t\t\tiIndex = (iRowCount - 1) * this.iColumns + iCol;\n\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t}\n\n\t\tif (bBorderReached) {\n\t\t\tthis.fireEvent(ItemNavigation.Events.BorderReached, {\n\t\t\t\tindex: iIndex,\n\t\t\t\tevent: oEvent\n\t\t\t});\n\t\t}\n\n\t\t// cancel the event otherwise the browser will scroll\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\t};\n\n\t/**\n  * Handles the onsaphome event\n  *\n  * Sets the focus to first visible and focusable item\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsaphome = function (oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\t// or shift or alt key is pressed\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar iIndex = 0;\n\t\tvar iRow = 0;\n\t\tif (this.bTableMode) {\n\n\t\t\tif (!this.bTableList && !(oEvent.metaKey || oEvent.ctrlKey)) {\n\t\t\t\tiRow = Math.floor(this.iFocusedIndex / this.iColumns);\n\t\t\t\tiIndex = iRow * this.iColumns;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!!(oEvent.metaKey || oEvent.ctrlKey) && !this._bCtrlEnabled) {\n\n\t\t\t\t// do not handle ctrl\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._bStayInRow && !(this._bCtrlEnabled && (oEvent.metaKey || oEvent.ctrlKey)) && this.iColumns > 0) {\n\t\t\t\tiRow = Math.floor(this.iFocusedIndex / this.iColumns);\n\t\t\t\tiIndex = iRow * this.iColumns;\n\t\t\t} else {\n\t\t\t\twhile (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\t\t\tiIndex++;\n\n\t\t\t\t\tif (iIndex == this.aItemDomRefs.length) {\n\n\t\t\t\t\t\t// no visible item -> no new focus\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t// cancel the event otherwise the browser will scroll\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\t};\n\n\t/**\n  * Ensure the sapprevious event with modifiers is also handled\n  *\n  * @see #onsaphome\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsaphomemodifiers = function (oEvent) {\n\t\tif (this.hasDisabledModifier(oEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onsaphome(oEvent);\n\t};\n\n\t/**\n  * Handles the onsapend event\n  *\n  * Sets the focus to last visible and focusable item\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsapend = function (oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\t// or shift or alt key is pressed\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar iIndex = this.aItemDomRefs.length - 1;\n\t\tvar iRow = 0;\n\n\t\tif (this.bTableMode) {\n\t\t\tif (!this.bTableList && !(oEvent.metaKey || oEvent.ctrlKey)) {\n\t\t\t\tiRow = Math.floor(this.iFocusedIndex / this.iColumns);\n\t\t\t\tiIndex = iRow * this.iColumns + this.iColumns - 1;\n\t\t\t}\n\t\t} else {\n\n\t\t\tif (!!(oEvent.metaKey || oEvent.ctrlKey) && !this._bCtrlEnabled) {\n\n\t\t\t\t// do not handle ctrl\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._bStayInRow && !(this._bCtrlEnabled && (oEvent.metaKey || oEvent.ctrlKey)) && this.iColumns > 0) {\n\t\t\t\tiRow = Math.floor(this.iFocusedIndex / this.iColumns);\n\t\t\t\tiIndex = (iRow + 1) * this.iColumns - 1;\n\t\t\t\tif (iIndex >= this.aItemDomRefs.length) {\n\t\t\t\t\t// item not exist -> use last one\n\t\t\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\t\t\tiIndex--;\n\n\t\t\t\t\tif (iIndex < 0) {\n\n\t\t\t\t\t\t// no visible item -> no new focus\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t// cancel the event otherwise the browser will scroll\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\t};\n\n\t/**\n  * Ensure the sapprevious event with modifiers is also handled.\n  *\n  * @see #onsapend\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onsapendmodifiers = function (oEvent) {\n\t\tif (this.hasDisabledModifier(oEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onsapend(oEvent);\n\t};\n\n\t/**\n  * Sets <code>tabindex</code> of the root DOM reference to 0.\n  * Is used, for example in image map for IE browser in order to avoid <code>tabindex</code> -1 on image\n  * with which it would not be tabable at all.\n  *\n  * @private\n  */\n\tItemNavigation.prototype.setTabIndex0 = function () {\n\t\tthis.iTabIndex = 0;\n\t\tthis.iActiveTabIndex = 0;\n\t};\n\n\t/**\n  * toggle navigation/action mode on F2\n  *\n  * @param {jQuery.Event} oEvent the browser event\n  * @private\n  */\n\tItemNavigation.prototype.onkeyup = function (oEvent) {\n\n\t\tif (oEvent.keyCode == jQuery.sap.KeyCodes.F2) {\n\n\t\t\tvar $DomRef = jQuery(this.oDomRef);\n\n\t\t\tif ($DomRef.data(\"sap.InNavArea\")) {\n\t\t\t\t$DomRef.data(\"sap.InNavArea\", false);\n\t\t\t} else if ($DomRef.data(\"sap.InNavArea\") === false) {\n\t\t\t\t// check for false to avoid undefined\n\t\t\t\t$DomRef.data(\"sap.InNavArea\", true);\n\t\t\t}\n\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\treturn ItemNavigation;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"qW8B\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"s5vy\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"BRbz\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (ListItemBaseRenderer, library, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListGrowingDirection\n\n\tvar ListGrowingDirection = library.ListGrowingDirection;\n\n\t// shortcut for sap.m.ListKeyboardMode\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\t// shortcut for sap.m.ToolbarDesign\n\tvar ToolbarDesign = library.ToolbarDesign;\n\n\t/**\n  * List renderer.\n  * @namespace\n  */\n\tvar ListBaseRenderer = {};\n\n\t/**\n  * Determines the order of the mode for the renderer\n  * -1 is for the beginning of the content\n  * +1 is for the end of the content\n  *  0 is to ignore this mode\n  * @static\n  */\n\tListBaseRenderer.ModeOrder = {\n\t\tNone: 0,\n\t\tDelete: 1,\n\t\tMultiSelect: -1,\n\t\tSingleSelect: 1,\n\t\tSingleSelectLeft: -1,\n\t\tSingleSelectMaster: 0\n\t};\n\n\t/**\n  * Renders the HTML for the given control, using the provided\n  * {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager}\n  *          oRenderManager the RenderManager that can be used for writing to the\n  *          Render-Output-Buffer\n  * @param {sap.ui.core.Control}\n  *          oControl an object representation of the control that should be\n  *          rendered\n  */\n\tListBaseRenderer.render = function (rm, oControl) {\n\t\t// container\n\t\trm.write(\"<div\");\n\t\trm.addClass(\"sapMList\");\n\t\trm.writeControlData(oControl);\n\n\t\tif (oControl.getInset()) {\n\t\t\trm.addClass(\"sapMListInsetBG\");\n\t\t}\n\t\tif (oControl.getWidth()) {\n\t\t\trm.addStyle(\"width\", oControl.getWidth());\n\t\t}\n\n\t\t// background\n\t\tif (oControl.getBackgroundDesign) {\n\t\t\trm.addClass(\"sapMListBG\" + oControl.getBackgroundDesign());\n\t\t}\n\n\t\t// tooltip\n\t\tvar sTooltip = oControl.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\t// run hook method\n\t\tthis.renderContainerAttributes(rm, oControl);\n\n\t\trm.writeStyles();\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\t// render header\n\t\tvar sHeaderText = oControl.getHeaderText();\n\t\tvar oHeaderTBar = oControl.getHeaderToolbar();\n\t\tif (oHeaderTBar) {\n\t\t\toHeaderTBar.setDesign(ToolbarDesign.Transparent, true);\n\t\t\toHeaderTBar.addStyleClass(\"sapMListHdrTBar\");\n\t\t\trm.renderControl(oHeaderTBar);\n\t\t} else if (sHeaderText) {\n\t\t\trm.write(\"<header class='sapMListHdr'\");\n\t\t\trm.writeAttribute(\"id\", oControl.getId(\"header\"));\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(sHeaderText);\n\t\t\trm.write(\"</header>\");\n\t\t}\n\n\t\t// render info bar\n\t\tvar oInfoTBar = oControl.getInfoToolbar();\n\t\tif (oInfoTBar) {\n\t\t\toInfoTBar.setDesign(ToolbarDesign.Info, true);\n\t\t\toInfoTBar.addStyleClass(\"sapMListInfoTBar\");\n\t\t\trm.renderControl(oInfoTBar);\n\t\t}\n\n\t\t// determine items rendering\n\t\tvar aItems = oControl.getItems(),\n\t\t    bShowNoData = oControl.getShowNoData(),\n\t\t    bRenderItems = oControl.shouldRenderItems() && aItems.length,\n\t\t    iTabIndex = oControl.getKeyboardMode() == ListKeyboardMode.Edit ? -1 : 0,\n\t\t    bUpwardGrowing = oControl.getGrowingDirection() == ListGrowingDirection.Upwards && oControl.getGrowing();\n\n\t\t// render top growing\n\t\tif (bUpwardGrowing) {\n\t\t\tthis.renderGrowing(rm, oControl);\n\t\t}\n\n\t\t// dummy keyboard handling area\n\t\tif (bRenderItems || bShowNoData) {\n\t\t\tthis.renderDummyArea(rm, oControl, \"before\", -1);\n\t\t}\n\n\t\t// run hook method to start building list\n\t\tthis.renderListStartAttributes(rm, oControl);\n\n\t\t// write accessibility state\n\t\trm.writeAccessibilityState(oControl, this.getAccessibilityState(oControl));\n\n\t\t// list attributes\n\t\trm.addClass(\"sapMListUl\");\n\t\tif (oControl._iItemNeedsHighlight) {\n\t\t\trm.addClass(\"sapMListHighlight\");\n\t\t}\n\n\t\trm.writeAttribute(\"id\", oControl.getId(\"listUl\"));\n\t\tif (bRenderItems || bShowNoData) {\n\t\t\trm.writeAttribute(\"tabindex\", iTabIndex);\n\t\t}\n\n\t\t// separators\n\t\trm.addClass(\"sapMListShowSeparators\" + oControl.getShowSeparators());\n\n\t\t// modes\n\t\trm.addClass(\"sapMListMode\" + oControl.getMode());\n\n\t\t// inset\n\t\toControl.getInset() && rm.addClass(\"sapMListInset\");\n\n\t\t// write inserted styles and classes\n\t\trm.writeClasses();\n\t\trm.writeStyles();\n\t\trm.write(\">\");\n\n\t\t// run hook method to render list head attributes\n\t\tthis.renderListHeadAttributes(rm, oControl);\n\n\t\t// render child controls\n\t\tif (bRenderItems) {\n\t\t\tif (bUpwardGrowing) {\n\t\t\t\taItems.reverse();\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\t\trm.renderControl(aItems[i]);\n\t\t\t}\n\t\t}\n\n\t\t// render no-data if needed\n\t\tif (!bRenderItems && bShowNoData) {\n\t\t\tthis.renderNoData(rm, oControl);\n\t\t}\n\n\t\t// run hook method to finish building list\n\t\tthis.renderListEndAttributes(rm, oControl);\n\n\t\t// dummy keyboard handling area\n\t\tif (bRenderItems || bShowNoData) {\n\t\t\tthis.renderDummyArea(rm, oControl, \"after\", iTabIndex);\n\t\t}\n\n\t\t// render bottom growing\n\t\tif (!bUpwardGrowing) {\n\t\t\tthis.renderGrowing(rm, oControl);\n\t\t}\n\n\t\t// footer\n\t\tif (oControl.getFooterText()) {\n\t\t\trm.write(\"<footer class='sapMListFtr'\");\n\t\t\trm.writeAttribute(\"id\", oControl.getId(\"footer\"));\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(oControl.getFooterText());\n\t\t\trm.write(\"</footer>\");\n\t\t}\n\n\t\t// done\n\t\trm.write(\"</div>\");\n\t};\n\n\t/**\n  * This hook method is called to render container attributes\n  *\n  * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tListBaseRenderer.renderContainerAttributes = function (rm, oControl) {};\n\n\t/**\n  * This hook method is called after <ul> and before first <li>\n  *\n  * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tListBaseRenderer.renderListHeadAttributes = function (rm, oControl) {};\n\n\t/**\n  * This hook method is called to render list tag\n  *\n  * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tListBaseRenderer.renderListStartAttributes = function (rm, oControl) {\n\t\trm.write(\"<ul\");\n\t\toControl.addNavSection(oControl.getId(\"listUl\"));\n\t};\n\n\t/**\n  * Returns aria accessibility role\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control\n  * @returns {String}\n  */\n\tListBaseRenderer.getAriaRole = function (oControl) {\n\t\treturn \"listbox\";\n\t};\n\n\t/**\n  * Returns the inner aria labelledby ids for the accessibility\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control\n  * @returns {String|undefined}\n  */\n\tListBaseRenderer.getAriaLabelledBy = function (oControl) {};\n\n\t/**\n  * Returns the inner aria describedby ids for the accessibility\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control\n  * @returns {String|undefined}\n  */\n\tListBaseRenderer.getAriaDescribedBy = function (oControl) {\n\t\tif (oControl.getFooterText()) {\n\t\t\treturn oControl.getId(\"footer\");\n\t\t}\n\t};\n\n\t/**\n  * Returns the accessibility state of the control\n  *\n  * @param {sap.ui.core.Control} oControl an object representation of the control\n  */\n\tListBaseRenderer.getAccessibilityState = function (oControl) {\n\t\treturn {\n\t\t\trole: this.getAriaRole(oControl),\n\t\t\tlabelledby: {\n\t\t\t\tvalue: this.getAriaLabelledBy(oControl),\n\t\t\t\tappend: true\n\t\t\t},\n\t\t\tdescribedby: {\n\t\t\t\tvalue: this.getAriaDescribedBy(oControl),\n\t\t\t\tappend: true\n\t\t\t}\n\t\t};\n\t};\n\n\t/**\n  * This hook method is called to finish list rendering\n  *\n  * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tListBaseRenderer.renderListEndAttributes = function (rm, oControl) {\n\t\trm.write(\"</ul>\");\n\t};\n\n\t/**\n  * This hook method is called to render no data field\n  *\n  * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n  * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n  */\n\tListBaseRenderer.renderNoData = function (rm, oControl) {\n\t\trm.write(\"<li\");\n\t\trm.writeAttribute(\"tabindex\", oControl.getKeyboardMode() == ListKeyboardMode.Navigation ? -1 : 0);\n\t\trm.writeAttribute(\"id\", oControl.getId(\"nodata\"));\n\t\trm.addClass(\"sapMLIB sapMListNoData sapMLIBTypeInactive\");\n\t\tListItemBaseRenderer.addFocusableClasses.call(ListItemBaseRenderer, rm);\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\trm.write(\"<div\");\n\t\trm.addClass(\"sapMListNoDataText\");\n\t\trm.writeAttribute(\"id\", oControl.getId(\"nodata-text\"));\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\t\trm.writeEscaped(oControl.getNoDataText(true));\n\t\trm.write(\"</div>\");\n\n\t\trm.write(\"</li>\");\n\t};\n\n\tListBaseRenderer.renderDummyArea = function (rm, oControl, sAreaId, iTabIndex) {\n\t\trm.write(\"<div\");\n\t\trm.writeAttribute(\"id\", oControl.getId(sAreaId));\n\t\trm.writeAttribute(\"tabindex\", iTabIndex);\n\n\t\tif (Device.system.desktop) {\n\t\t\trm.addClass(\"sapMListDummyArea\").writeClasses();\n\t\t}\n\n\t\trm.write(\"></div>\");\n\t};\n\n\tListBaseRenderer.renderGrowing = function (rm, oControl) {\n\t\tvar oGrowingDelegate = oControl._oGrowingDelegate;\n\t\tif (!oGrowingDelegate) {\n\t\t\treturn;\n\t\t}\n\n\t\toGrowingDelegate.render(rm);\n\t};\n\n\treturn ListBaseRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"r+Rv\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"rMbf\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n__webpack_require__(\"0XQ1\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"BZb2\"), __webpack_require__(\"nPt9\"), __webpack_require__(\"20/6\"), __webpack_require__(\"Wjxd\"), __webpack_require__(\"NZXE\"), __webpack_require__(\"Osx1\"), __webpack_require__(\"VC4D\"), __webpack_require__(\"wTGv\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"8WGD\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (jQuery, library, Control, EnabledPropagator, IconPool, ValueStateMessage, MessageMixin, coreLibrary, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.ui.core.TextAlign\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.ui.core.ValueState\n\tvar ValueState = coreLibrary.ValueState;\n\n\t/**\n  * Constructor for a new <code>sap.m.InputBase</code>.\n  *\n  * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n  * @param {object} [mSettings] Initial settings for the new control\n  *\n  * @class\n  * The <code>sap.m.InputBase</code> control provides a basic functionality for input controls.\n  *\n  * @extends sap.ui.core.Control\n  * @implements sap.ui.core.IFormContent\n  *\n  * @author SAP SE\n  * @version 1.52.3\n  *\n  * @constructor\n  * @public\n  * @since 1.12.0\n  * @alias sap.m.InputBase\n  * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n  */\n\tvar InputBase = Control.extend(\"sap.m.InputBase\", /** @lends sap.m.InputBase.prototype */{ metadata: {\n\n\t\t\tinterfaces: [\"sap.ui.core.IFormContent\"],\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n     * Defines the value of the control.\n     */\n\t\t\t\tvalue: { type: \"string\", group: \"Data\", defaultValue: null, bindable: \"bindable\" },\n\n\t\t\t\t/**\n     * Defines the width of the control.\n     */\n\t\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: null },\n\n\t\t\t\t/**\n     * Indicates whether the user can interact with the control or not.\n     * <b>Note:</b> Disabled controls cannot be focused and they are out of the tab-chain.\n     */\n\t\t\t\tenabled: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * Visualizes the validation state of the control, e.g. <code>Error</code>, <code>Warning</code>, <code>Success</code>.\n     */\n\t\t\t\tvalueState: { type: \"sap.ui.core.ValueState\", group: \"Appearance\", defaultValue: ValueState.None },\n\n\t\t\t\t/**\n     * Defines the name of the control for the purposes of form submission.\n     */\n\t\t\t\tname: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines a short hint intended to aid the user with data entry when the control has no value.\n     */\n\t\t\t\tplaceholder: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Defines whether the control can be modified by the user or not.\n     * <b>Note:</b> A user can tab to non-editable control, highlight it, and copy the text from it.\n     * @since 1.12.0\n     */\n\t\t\t\teditable: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t\t/**\n     * Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.\n     * @since 1.26.0\n     */\n\t\t\t\tvalueStateText: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t\t/**\n     * Indicates whether the value state message should be shown or not.\n     * @since 1.26.0\n     */\n\t\t\t\tshowValueStateMessage: { type: \"boolean\", group: \"Misc\", defaultValue: true },\n\n\t\t\t\t/**\n     * Defines the horizontal alignment of the text that is shown inside the input field.\n     * @since 1.26.0\n     */\n\t\t\t\ttextAlign: { type: \"sap.ui.core.TextAlign\", group: \"Appearance\", defaultValue: TextAlign.Initial },\n\n\t\t\t\t/**\n     * Defines the text directionality of the input field, e.g. <code>RTL</code>, <code>LTR</code>\n     * @since 1.28.0\n     */\n\t\t\t\ttextDirection: { type: \"sap.ui.core.TextDirection\", group: \"Appearance\", defaultValue: TextDirection.Inherit },\n\n\t\t\t\t/**\n     * Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\n     * the field and a label (see aggregation <code>labelFor</code> of <code>sap.m.Label</code>) cannot be established\n     * (e.g. one label should label multiple fields).\n     * @since 1.38.4\n     */\n\t\t\t\trequired: { type: \"boolean\", group: \"Misc\", defaultValue: false }\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n     * Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby).\n     * @since 1.27.0\n     */\n\t\t\t\tariaLabelledBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaLabelledBy\" }\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n     * Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed.\n     */\n\t\t\t\tchange: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n       * The new <code>value</code> of the <code>control</code>.\n       */\n\t\t\t\t\t\tvalue: { type: \"string\" }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdesignTime: true\n\t\t} });\n\n\tEnabledPropagator.call(InputBase.prototype);\n\tIconPool.insertFontFaceStyle();\n\t// apply the message mixin so all message on the input will get the associated label-texts injected\n\tMessageMixin.call(InputBase.prototype);\n\n\t/* =========================================================== */\n\t/* Private methods and properties                              */\n\t/* =========================================================== */\n\n\t/* ----------------------------------------------------------- */\n\t/* Private properties                                          */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n  * Use labels as placeholder configuration.\n  * It can be necessary for the subclasses to overwrite this when\n  * native placeholder usage causes undesired input events or when\n  * placeholder attribute is not supported for the specified type.\n  * https://html.spec.whatwg.org/multipage/forms.html#input-type-attr-summary\n  *\n  * @see sap.m.InputBase#oninput\n  * @protected\n  */\n\tInputBase.prototype.bShowLabelAsPlaceholder = !Device.support.input.placeholder;\n\n\t/* ----------------------------------------------------------- */\n\t/* Private methods                                             */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n  * To allow setting of default placeholder e.g. in DatePicker\n  *\n  * FIXME: Remove this workaround\n  * What is the difference between _getPlaceholder and getPlaceholder\n  */\n\tInputBase.prototype._getPlaceholder = function () {\n\t\treturn this.getPlaceholder();\n\t};\n\n\t/**\n  * Update the synthetic placeholder visibility.\n  */\n\tInputBase.prototype._setLabelVisibility = function () {\n\t\tif (!this.bShowLabelAsPlaceholder) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sValue = this.$(\"inner\").val();\n\t\tthis.$(\"placeholder\").css(\"display\", sValue ? \"none\" : \"inline\");\n\t};\n\n\t/**\n  * Returns the DOM value respect to maxLength\n  * When parameter is set chops the given parameter\n  *\n  * TODO: write two different functions for two different behaviour\n  */\n\tInputBase.prototype._getInputValue = function (sValue) {\n\t\tsValue = sValue === undefined ? this.$(\"inner\").val() || \"\" : sValue.toString();\n\n\t\tif (this.getMaxLength && this.getMaxLength() > 0) {\n\t\t\tsValue = sValue.substring(0, this.getMaxLength());\n\t\t}\n\n\t\treturn sValue;\n\t};\n\n\t/**\n  * Returns the name of the tag element used for the input.\n  */\n\tInputBase.prototype._getInputElementTagName = function () {\n\t\tif (!this._sInputTagElementName) {\n\t\t\tthis._sInputTagElementName = this._$input && this._$input.get(0) && this._$input.get(0).tagName;\n\t\t}\n\n\t\treturn this._sInputTagElementName;\n\t};\n\n\t/* =========================================================== */\n\t/* Lifecycle methods                                           */\n\t/* =========================================================== */\n\n\t/*\n  * Initialization hook.\n  *\n  * TODO: respect hungarian notation for variables\n  */\n\tInputBase.prototype.init = function () {\n\n\t\t// last changed value\n\t\tthis._lastValue = \"\";\n\n\t\t/**\n   * Indicates whether the input field is in the rendering phase.\n   *\n   * @protected\n   */\n\t\tthis.bRenderingPhase = false;\n\n\t\t/**\n   * Indicates whether the <code>focusout</code> event is triggered due a rendering.\n   */\n\t\tthis.bFocusoutDueRendering = false;\n\n\t\t/**\n   * Internal variable used to handle html input firing input events when value contains accented characters in IE10+\n   * @private\n   */\n\t\tthis._bIgnoreNextInputEventNonASCII = false;\n\n\t\tthis._oValueStateMessage = new ValueStateMessage(this);\n\t};\n\n\tInputBase.prototype.onBeforeRendering = function () {\n\n\t\tif (this._bCheckDomValue && !this.bRenderingPhase) {\n\n\t\t\t// remember dom value in case of invalidation during keystrokes\n\t\t\t// so the following should only be used onAfterRendering\n\t\t\tthis._sDomValue = this._getInputValue();\n\t\t}\n\n\t\t// mark the rendering phase\n\t\tthis.bRenderingPhase = true;\n\t};\n\n\tInputBase.prototype.onAfterRendering = function () {\n\n\t\t// maybe control is invalidated on keystrokes and\n\t\t// even the value property did not change\n\t\t// dom value is still the old value\n\t\t// FIXME: This is very ugly to implement this because of the binding\n\t\tif (this._bCheckDomValue && this._sDomValue !== this._getInputValue()) {\n\n\t\t\t// so we should keep the dom up-to-date\n\t\t\tthis.$(\"inner\").val(this._sDomValue);\n\t\t}\n\n\t\t// now dom value is up-to-date\n\t\tthis._bCheckDomValue = false;\n\n\t\t// handle synthetic placeholder visibility\n\t\tthis._setLabelVisibility();\n\n\t\t// rendering phase is finished\n\t\tthis.bRenderingPhase = false;\n\t};\n\n\tInputBase.prototype.exit = function () {\n\n\t\tif (this._oValueStateMessage) {\n\t\t\tthis._oValueStateMessage.destroy();\n\t\t}\n\n\t\tthis._oValueStateMessage = null;\n\t};\n\n\t/* =========================================================== */\n\t/* Event handlers                                              */\n\t/* =========================================================== */\n\n\t/**\n  * Handles the touch start event of the Input.\n  *\n  * @param {jQuery.Event} oEvent The event object.\n  * @private\n  */\n\tInputBase.prototype.ontouchstart = function (oEvent) {\n\n\t\t// mark the event for components that needs to know if the event was handled\n\t\toEvent.setMarked();\n\t};\n\n\t/**\n  * Sets up at focus a touch listener on mobile devices.\n  *\n  * @private\n  */\n\tInputBase.prototype.onfocusin = function (oEvent) {\n\t\t// iE10+ fires the input event when an input field with a native placeholder is focused\n\t\tthis._bIgnoreNextInput = !this.bShowLabelAsPlaceholder && Device.browser.msie && Device.browser.version > 9 && !!this.getPlaceholder() && !this._getInputValue() && this._getInputElementTagName() === \"INPUT\"; // Make sure that we are applying this fix only for input html elements\n\t\tthis.$().toggleClass(\"sapMFocus\", true);\n\n\t\tif (this.shouldValueStateMessageBeOpened()) {\n\n\t\t\t// open value state message popup when focus is in the input\n\t\t\tthis.openValueStateMessage();\n\t\t}\n\t};\n\n\t/**\n  * Handles the <code>focusout</code> event of the Input.\n  *\n  * @param {jQuery.Event} oEvent The event object.\n  * @private\n  */\n\tInputBase.prototype.onfocusout = function (oEvent) {\n\t\tthis.bFocusoutDueRendering = this.bRenderingPhase;\n\t\tthis.$().toggleClass(\"sapMFocus\", false);\n\n\t\t// because dom is replaced during the rendering\n\t\t// onfocusout event is triggered probably focus goes to the document\n\t\t// so we ignore this event that comes during the rendering\n\t\tif (this.bRenderingPhase) {\n\t\t\treturn;\n\t\t}\n\n\t\t// close value state message popup when focus is out of the input\n\t\tthis.closeValueStateMessage();\n\t};\n\n\t/**\n  * Handles the <code>sapfocusleave</code> event of the input.\n  *\n  * @param {jQuery.Event} oEvent The event object.\n  */\n\tInputBase.prototype.onsapfocusleave = function (oEvent) {\n\n\t\tif (!this.preventChangeOnFocusLeave(oEvent)) {\n\t\t\tthis.onChange(oEvent);\n\t\t}\n\t};\n\n\t/**\n  * Hook method to prevent the change event from being fired when the text input field loses focus.\n  *\n  * @param {jQuery.Event} [oEvent] The event object.\n  * @returns {boolean} Whether or not the change event should be prevented.\n  * @protected\n  * @since 1.46\n  */\n\tInputBase.prototype.preventChangeOnFocusLeave = function (oEvent) {\n\t\treturn this.bFocusoutDueRendering;\n\t};\n\n\t/*\n  * Gets the change event additional parameters.\n  *\n  * @returns {object} A map object with the parameters\n  * @protected\n  * @since 1.48\n  */\n\tInputBase.prototype.getChangeEventParams = function () {\n\t\treturn {};\n\t};\n\n\t/**\n  * Handle when input is tapped.\n  *\n  * @param {jQuery.Event} oEvent The event object.\n  * @private\n  */\n\tInputBase.prototype.ontap = function (oEvent) {\n\t\t// put the focus to the editable input when synthetic placeholder is tapped\n\t\t// label for attribute breaks the screen readers labelledby announcement\n\t\tif (this.getEnabled() && this.getEditable() && this.bShowLabelAsPlaceholder && oEvent.target.id === this.getId() + \"-placeholder\") {\n\t\t\tthis.focus();\n\t\t}\n\t};\n\n\t/**\n  * Handles the change event.\n  *\n  * @protected\n  * @param {object} oEvent\n  * @param {object} [mParameters] Additional event parameters to be passed in to the change event handler if the\n  * value has changed\n  * @param {string} sNewValue Passed value on change\n  * @returns {true|undefined} true when change event is fired\n  */\n\tInputBase.prototype.onChange = function (oEvent, mParameters, sNewValue) {\n\n\t\tmParameters = mParameters || this.getChangeEventParams();\n\n\t\t// check the control is editable or not\n\t\tif (!this.getEditable() || !this.getEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get the dom value respect to max length if there is no passed value onChange\n\t\tvar sValue = this._getInputValue(sNewValue);\n\n\t\t// compare with the old known value\n\t\tif (sValue !== this._lastValue) {\n\n\t\t\t// save the value on change\n\t\t\tthis.setValue(sValue);\n\n\t\t\tif (oEvent) {\n\t\t\t\t//IE10+ fires Input event when Non-ASCII characters are used. As this is a real change\n\t\t\t\t// event shouldn't be ignored.\n\t\t\t\tthis._bIgnoreNextInputEventNonASCII = false;\n\t\t\t}\n\n\t\t\t// get the value back maybe formatted\n\t\t\tsValue = this.getValue();\n\n\t\t\t// remember the last value on change\n\t\t\tthis._lastValue = sValue;\n\n\t\t\t// fire change event\n\t\t\tthis.fireChangeEvent(sValue, mParameters);\n\n\t\t\t// inform change detection\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// same value as before --> ignore Dom update\n\t\t\tthis._bCheckDomValue = false;\n\t\t}\n\t};\n\n\t/**\n  * Fires the change event for the listeners\n  *\n  * @protected\n  * @param {String} sValue value of the input.\n  * @param {Object} [oParams] extra event parameters.\n  * @since 1.22.1\n  */\n\tInputBase.prototype.fireChangeEvent = function (sValue, oParams) {\n\t\t// generate event parameters\n\t\tvar oChangeEvent = jQuery.extend({\n\t\t\tvalue: sValue,\n\n\t\t\t// backwards compatibility\n\t\t\tnewValue: sValue\n\t\t}, oParams);\n\n\t\t// fire change event\n\t\tthis.fireChange(oChangeEvent);\n\t};\n\n\t/**\n  * Hook method that gets called when the input value is reverted with hitting escape.\n  * It may require to re-implement this method from sub classes for control specific behaviour.\n  *\n  * @protected\n  * @param {String} sValue Reverted value of the input.\n  * @since 1.26\n  */\n\tInputBase.prototype.onValueRevertedByEscape = function (sValue, sPreviousValue) {\n\n\t\t// fire private live change event\n\t\tthis.fireEvent(\"liveChange\", {\n\t\t\tvalue: sValue,\n\n\t\t\t//indicate that ESC key is trigger\n\t\t\tescPressed: true,\n\n\t\t\t//the value that was before pressing ESC key\n\t\t\tpreviousValue: sPreviousValue,\n\n\t\t\t// backwards compatibility\n\t\t\tnewValue: sValue\n\t\t});\n\t};\n\n\t/* ----------------------------------------------------------- */\n\t/* Keyboard handling                                           */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n  * Handle when enter is pressed.\n  *\n  * @param {jQuery.Event} oEvent The event object.\n  * @private\n  */\n\tInputBase.prototype.onsapenter = function (oEvent) {\n\n\t\t// handle change event on enter\n\t\tthis.onChange(oEvent);\n\t};\n\n\t/**\n  * Handle when escape is pressed.\n  *\n  * @param {jQuery.Event} oEvent The event object.\n  * @private\n  */\n\tInputBase.prototype.onsapescape = function (oEvent) {\n\n\t\t// get the dom value that respect to max length\n\t\tvar sValue = this._getInputValue();\n\n\t\t// compare last known value and dom value\n\t\tif (sValue !== this._lastValue) {\n\n\t\t\t// mark the event that it is handled\n\t\t\toEvent.setMarked();\n\t\t\toEvent.preventDefault();\n\n\t\t\t// revert to the old dom value\n\t\t\tthis.updateDomValue(this._lastValue);\n\n\t\t\t// value is reverted, now call the hook to inform\n\t\t\tthis.onValueRevertedByEscape(this._lastValue, sValue);\n\t\t}\n\t};\n\n\t/**\n  * Handle DOM input event.\n  *\n  * This event is fired synchronously when the value of an <code><input></code> or <code><textarea></code> element is changed.\n  * IE9 does not fire an input event when the user removes characters via BACKSPACE / DEL / CUT\n  * InputBase normalize this behaviour for IE9 and calls oninput for the subclasses\n  *\n  * When the input event is buggy the input event is marked as \"invalid\".\n  * - IE10+ fires the input event when an input field with a native placeholder is focused.\n  * - IE11 fires input event from read-only fields.\n  * - IE11 fires input event after rendering when value contains an accented character\n  * - IE11 fires input event whenever placeholder attribute is changed\n  *\n  * @param {jQuery.Event} oEvent The event object.\n  */\n\tInputBase.prototype.oninput = function (oEvent) {\n\n\t\t// ie 10+ fires the input event when an input field with a native placeholder is focused\n\t\tif (this._bIgnoreNextInput) {\n\t\t\tthis._bIgnoreNextInput = false;\n\t\t\toEvent.setMarked(\"invalid\");\n\t\t\treturn;\n\t\t}\n\n\t\t// ie11 fires input event from read-only fields\n\t\tif (!this.getEditable()) {\n\t\t\toEvent.setMarked(\"invalid\");\n\t\t\treturn;\n\t\t}\n\n\t\t//IE10+ fires the input event when attribute \"value\" is set with Non-ASCII characters\n\t\tif (this._bIgnoreNextInputEventNonASCII && this.getValue() === this._lastValue) {\n\t\t\tthis._bIgnoreNextInputEventNonASCII = false;\n\t\t\toEvent.setMarked(\"invalid\");\n\t\t\treturn;\n\t\t}\n\n\t\t// ie11 fires input event after rendering when value contains an accented character\n\t\t// ie11 fires input event whenever placeholder attribute is changed\n\t\tif (document.activeElement !== oEvent.target && Device.browser.msie && this.getValue() === this._lastValue) {\n\t\t\toEvent.setMarked(\"invalid\");\n\t\t\treturn;\n\t\t}\n\n\t\t// dom value updated other than value property\n\t\tthis._bCheckDomValue = true;\n\n\t\t// update the synthetic placeholder visibility\n\t\tthis._setLabelVisibility();\n\t};\n\n\t/**\n  * Handle keydown event.\n  *\n  * @param {jQuery.Event} oEvent The event object.\n  * @private\n  */\n\tInputBase.prototype.onkeydown = function (oEvent) {\n\n\t\t// Prevents browser back to previous page in IE\n\t\tif (this.getDomRef(\"inner\").getAttribute(\"readonly\") && oEvent.keyCode == jQuery.sap.KeyCodes.BACKSPACE) {\n\t\t\toEvent.preventDefault();\n\t\t}\n\t};\n\n\t/**\n  * Handle cut event.\n  *\n  * @param {jQuery.Event} oEvent The event object.\n  * @private\n  */\n\tInputBase.prototype.oncut = function (oEvent) {};\n\n\t/* =========================================================== */\n\t/* API methods                                                 */\n\t/* =========================================================== */\n\n\t/* ----------------------------------------------------------- */\n\t/* protected methods                                           */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n  * Selects the text within the input field between the specified start and end positions.\n  * Only supported for input control's type of Text, Url, Tel and Password.\n  *\n  * @param {int} iSelectionStart The index into the text at which the first selected character is located.\n  * @param {int} iSelectionEnd The index into the text at which the last selected character is located.\n  * @returns {sap.m.InputBase} <code>this</code> to allow method chaining.\n  * @protected\n  * @since 1.22.1\n  */\n\tInputBase.prototype.selectText = function (iSelectionStart, iSelectionEnd) {\n\t\tthis.$(\"inner\").selectText(iSelectionStart, iSelectionEnd);\n\t\treturn this;\n\t};\n\n\t/**\n  * Retrieves the selected text.\n  * Only supported for input control's type of Text, Url, Tel and Password.\n  *\n  * @returns {string} The selected text.\n  * @protected\n  * @since 1.32\n  */\n\tInputBase.prototype.getSelectedText = function () {\n\t\treturn this.$(\"inner\").getSelectedText();\n\t};\n\n\t/**\n  * Overwrite setProperty function to know value property changes via API\n  * @overwrite\n  */\n\tInputBase.prototype.setProperty = function (sPropertyName, oValue, bSuppressInvalidate) {\n\t\tif (sPropertyName == \"value\") {\n\n\t\t\t// dom value will be updated with value property\n\t\t\tthis._bCheckDomValue = false;\n\t\t}\n\n\t\treturn Control.prototype.setProperty.apply(this, arguments);\n\t};\n\n\t/**\n  * Returns an object representing the serialized focus information.\n  * To be overwritten by subclasses.\n  *\n  * @returns {object} An object representing the serialized focus information.\n  * @protected\n  */\n\tInputBase.prototype.getFocusInfo = function () {\n\t\tvar oFocusInfo = Control.prototype.getFocusInfo.call(this),\n\t\t    oFocusDomRef = this.getFocusDomRef();\n\n\t\t// extend the serialized focus information with the current text selection and the cursor position\n\t\tjQuery.extend(oFocusInfo, {\n\t\t\tcursorPos: 0,\n\t\t\tselectionStart: 0,\n\t\t\tselectionEnd: 0\n\t\t});\n\n\t\tif (oFocusDomRef) {\n\t\t\toFocusInfo.cursorPos = jQuery(oFocusDomRef).cursorPos();\n\n\t\t\ttry {\n\t\t\t\toFocusInfo.selectionStart = oFocusDomRef.selectionStart;\n\t\t\t\toFocusInfo.selectionEnd = oFocusDomRef.selectionEnd;\n\t\t\t} catch (e) {\n\t\t\t\t// note: chrome fail to read the \"selectionStart\" property from HTMLInputElement: The input element's type \"number\" does not support selection.\n\t\t\t}\n\t\t}\n\n\t\treturn oFocusInfo;\n\t};\n\n\t/**\n  * Applies the focus info.\n  * To be overwritten by subclasses.\n  *\n  * @param {object} oFocusInfo\n  * @protected\n  */\n\tInputBase.prototype.applyFocusInfo = function (oFocusInfo) {\n\t\tControl.prototype.applyFocusInfo.call(this, oFocusInfo);\n\t\tthis.$(\"inner\").cursorPos(oFocusInfo.cursorPos);\n\t\tthis.selectText(oFocusInfo.selectionStart, oFocusInfo.selectionEnd);\n\t\treturn this;\n\t};\n\n\t/**\n  * Registers an event listener to the browser input event.\n  *\n  * @param {function} fnCallback Function to be called when the value of the input element is changed.\n  * @deprecated Since 1.22. Instead, use event delegation(oninput) to listen input event.\n  * @return {sap.m.InputBase} <code>this</code> to allow method chaining.\n  * @protected\n  */\n\tInputBase.prototype.bindToInputEvent = function (fnCallback) {\n\n\t\t// remove the previous event delegate\n\t\tif (this._oInputEventDelegate) {\n\t\t\tthis.removeEventDelegate(this._oInputEventDelegate);\n\t\t}\n\n\t\t// generate new input event delegate\n\t\tthis._oInputEventDelegate = {\n\t\t\toninput: fnCallback\n\t\t};\n\n\t\t// add the input event delegate\n\t\treturn this.addEventDelegate(this._oInputEventDelegate);\n\t};\n\n\t/**\n  * Sets the DOM value of the input field and handles placeholder visibility.\n  *\n  * @param {string} sValue value of the input field.\n  * @return {sap.m.InputBase} <code>this</code> to allow method chaining.\n  * @since 1.22\n  * @protected\n  */\n\tInputBase.prototype.updateDomValue = function (sValue) {\n\n\t\tif (!this.isActive()) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// respect to max length\n\t\tsValue = this._getInputValue(sValue);\n\n\t\t//Ignore the input event which is raised by MS Internet Explorer when non-ASCII characters are typed in\n\t\tif (Device.browser.msie && Device.browser.version > 9 && !/^[\\x00-\\x7F]*$/.test(sValue)) {\n\t\t\tthis._bIgnoreNextInput = true;\n\t\t}\n\n\t\t// update the DOM value when necessary\n\t\t// otherwise cursor can goto end of text unnecessarily\n\t\tif (this._getInputValue() !== sValue) {\n\t\t\tthis.$(\"inner\").val(sValue);\n\n\t\t\t// dom value updated other than value property\n\t\t\tthis._bCheckDomValue = true;\n\t\t}\n\n\t\t// update synthetic placeholder visibility\n\t\tthis._setLabelVisibility();\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Close value state message popup.\n  *\n  * @since 1.26\n  * @protected\n  */\n\tInputBase.prototype.closeValueStateMessage = function () {\n\t\tif (this._oValueStateMessage) {\n\t\t\tthis._oValueStateMessage.close();\n\t\t}\n\t};\n\n\t/**\n  * Gets the DOM element reference where the message popup is attached.\n  *\n  * @returns {object} The DOM element reference where the message popup is attached\n  * @since 1.26\n  * @protected\n  */\n\tInputBase.prototype.getDomRefForValueStateMessage = function () {\n\t\treturn this.getFocusDomRef();\n\t};\n\n\tInputBase.prototype.iOpenMessagePopupDuration = 0;\n\n\t/**\n  * Gets the ID of the value state message.\n  *\n  * @returns {string} The ID of the value state message\n  * @since 1.42\n  */\n\tInputBase.prototype.getValueStateMessageId = function () {\n\t\treturn this.getId() + \"-message\";\n\t};\n\n\t/**\n  * Gets the labels referencing this control.\n  *\n  * @returns {sap.m.Label[]} Array of objects which are the current targets of the <code>ariaLabelledBy</code>\n  * association and the labels referencing this control.\n  * @since 1.48\n  * @protected\n  */\n\tInputBase.prototype.getLabels = function () {\n\t\tvar aLabelIDs = this.getAriaLabelledBy().map(function (sLabelID) {\n\t\t\treturn sap.ui.getCore().byId(sLabelID);\n\t\t});\n\n\t\tvar oLabelEnablement = __webpack_require__(\"LFMt\");\n\n\t\tif (oLabelEnablement) {\n\t\t\taLabelIDs = aLabelIDs.concat(oLabelEnablement.getReferencingLabels(this).map(function (sLabelID) {\n\t\t\t\treturn sap.ui.getCore().byId(sLabelID);\n\t\t\t}));\n\t\t}\n\n\t\treturn aLabelIDs;\n\t};\n\n\t/**\n  * Open value state message popup.\n  *\n  * @since 1.26\n  * @protected\n  */\n\tInputBase.prototype.openValueStateMessage = function () {\n\t\tif (this._oValueStateMessage) {\n\t\t\tthis._oValueStateMessage.open();\n\t\t}\n\t};\n\n\tInputBase.prototype.updateValueStateClasses = function (sValueState, sOldValueState) {\n\t\tvar $This = this.$(),\n\t\t    $Input = this.$(\"inner\"),\n\t\t    mValueState = ValueState;\n\n\t\tif (sOldValueState !== mValueState.None) {\n\t\t\t$This.removeClass(\"sapMInputBaseState sapMInputBase\" + sOldValueState);\n\t\t\t$Input.removeClass(\"sapMInputBaseStateInner sapMInputBase\" + sOldValueState + \"Inner\");\n\t\t}\n\n\t\tif (sValueState !== mValueState.None) {\n\t\t\t$This.addClass(\"sapMInputBaseState sapMInputBase\" + sValueState);\n\t\t\t$Input.addClass(\"sapMInputBaseStateInner sapMInputBase\" + sValueState + \"Inner\");\n\t\t}\n\t};\n\n\tInputBase.prototype.shouldValueStateMessageBeOpened = function () {\n\t\treturn this.getValueState() !== ValueState.None && this.getEditable() && this.getEnabled() && this.getShowValueStateMessage();\n\t};\n\n\t/* ----------------------------------------------------------- */\n\t/* public methods                                              */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n  * Setter for property <code>valueState</code>.\n  *\n  * Default value is <code>None</code>.\n  *\n  * @param {sap.ui.core.ValueState} sValueState New value for property <code>valueState</code>.\n  * @return {sap.m.InputBase} <code>this</code> to allow method chaining.\n  * @public\n  */\n\tInputBase.prototype.setValueState = function (sValueState) {\n\t\tvar sOldValueState = this.getValueState();\n\t\tthis.setProperty(\"valueState\", sValueState, true);\n\n\t\t// get the value back in case of invalid value\n\t\tsValueState = this.getValueState();\n\t\tif (sValueState === sOldValueState) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar oDomRef = this.getDomRef();\n\n\t\tif (!oDomRef) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar $Input = this.$(\"inner\"),\n\t\t    mValueState = ValueState;\n\n\t\tif (sValueState === mValueState.Error) {\n\t\t\t$Input.attr(\"aria-invalid\", \"true\");\n\t\t} else {\n\t\t\t$Input.removeAttr(\"aria-invalid\");\n\t\t}\n\n\t\tthis.updateValueStateClasses(sValueState, sOldValueState);\n\n\t\tif ($Input[0] === document.activeElement) {\n\t\t\tif (sValueState === mValueState.None) {\n\t\t\t\tthis.closeValueStateMessage();\n\t\t\t} else if (this.shouldValueStateMessageBeOpened()) {\n\t\t\t\tthis.openValueStateMessage();\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * Setter for property <code>valueStateText</code>.\n  *\n  * Default value is empty/<code>undefined</code>.\n  *\n  * @param {string} sText New value for property <code>valueStateText</code>.\n  * @returns {sap.m.InputBase} <code>this</code> to allow method chaining\n  * @since 1.26\n  * @public\n  */\n\tInputBase.prototype.setValueStateText = function (sText) {\n\t\tthis.setProperty(\"valueStateText\", sText, true);\n\t\tthis.$(\"message\").text(this.getValueStateText());\n\t\treturn this;\n\t};\n\n\t/**\n  * Setter for property <code>value</code>.\n  *\n  * Default value is empty/<code>undefined</code>.\n  *\n  * @param {string} sValue New value for property <code>value</code>.\n  * @return {sap.m.InputBase} <code>this</code> to allow method chaining.\n  * @public\n  */\n\tInputBase.prototype.setValue = function (sValue) {\n\n\t\t// validate given value\n\t\tsValue = this.validateProperty(\"value\", sValue);\n\n\t\t// get the value respect to the max length\n\t\tsValue = this._getInputValue(sValue);\n\n\t\t// update the dom value when necessary\n\t\tthis.updateDomValue(sValue);\n\n\t\t//Ignore the input event which is raised by MS Internet Explorer when non-ASCII characters are typed in\n\t\tif (Device.browser.msie && Device.browser.version > 9 && !/^[\\x00-\\x7F]*$/.test(sValue)) {\n\t\t\tthis._bIgnoreNextInputEventNonASCII = true;\n\t\t}\n\n\t\t// check if we need to update the last value because\n\t\t// when setProperty(\"value\") called setValue is called again via binding\n\t\tif (sValue !== this.getProperty(\"value\")) {\n\t\t\tthis._lastValue = sValue;\n\t\t}\n\n\t\t// update value property\n\t\tthis.setProperty(\"value\", sValue, true);\n\n\t\treturn this;\n\t};\n\n\tInputBase.prototype.getFocusDomRef = function () {\n\t\treturn this.getDomRef(\"inner\");\n\t};\n\n\tInputBase.prototype.getIdForLabel = function () {\n\t\treturn this.getId() + \"-inner\";\n\t};\n\n\tInputBase.prototype.setTooltip = function (vTooltip) {\n\t\tvar oDomRef = this.getDomRef();\n\n\t\tthis._refreshTooltipBaseDelegate(vTooltip);\n\t\tthis.setAggregation(\"tooltip\", vTooltip, true);\n\n\t\tif (!oDomRef) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar sTooltip = this.getTooltip_AsString();\n\n\t\tif (sTooltip) {\n\t\t\toDomRef.setAttribute(\"title\", sTooltip);\n\t\t} else {\n\t\t\toDomRef.removeAttribute(\"title\");\n\t\t}\n\n\t\tif (sap.ui.getCore().getConfiguration().getAccessibility()) {\n\n\t\t\tvar oDescribedByDomRef = this.getDomRef(\"describedby\"),\n\t\t\t    sAnnouncement = this.getRenderer().getDescribedByAnnouncement(this),\n\t\t\t    sDescribedbyId = this.getId() + \"-describedby\",\n\t\t\t    sAriaDescribedByAttr = \"aria-describedby\",\n\t\t\t    oFocusDomRef = this.getFocusDomRef(),\n\t\t\t    sAriaDescribedby = oFocusDomRef.getAttribute(sAriaDescribedByAttr);\n\n\t\t\tif (!oDescribedByDomRef && sAnnouncement) {\n\t\t\t\toDescribedByDomRef = document.createElement(\"span\");\n\t\t\t\toDescribedByDomRef.id = sDescribedbyId;\n\t\t\t\toDescribedByDomRef.setAttribute(\"aria-hidden\", \"true\");\n\t\t\t\toDescribedByDomRef.className = \"sapUiInvisibleText\";\n\n\t\t\t\tif (this.getAriaDescribedBy) {\n\t\t\t\t\toFocusDomRef.setAttribute(sAriaDescribedByAttr, (this.getAriaDescribedBy().join(\" \") + \" \" + sDescribedbyId).trim());\n\t\t\t\t} else {\n\t\t\t\t\toFocusDomRef.setAttribute(sAriaDescribedByAttr, sDescribedbyId);\n\t\t\t\t}\n\n\t\t\t\toDomRef.appendChild(oDescribedByDomRef);\n\t\t\t} else if (oDescribedByDomRef && !sAnnouncement) {\n\t\t\t\toDomRef.removeChild(oDescribedByDomRef);\n\t\t\t\tvar sDescribedByDomRefId = oDescribedByDomRef.id;\n\n\t\t\t\tif (sAriaDescribedby && sDescribedByDomRefId) {\n\t\t\t\t\toFocusDomRef.setAttribute(sAriaDescribedByAttr, sAriaDescribedby.replace(sDescribedByDomRefId, \"\").trim());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oDescribedByDomRef) {\n\t\t\t\toDescribedByDomRef.textContent = sAnnouncement;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n  * @see sap.ui.core.Control#getAccessibilityInfo\n  * @protected\n  */\n\tInputBase.prototype.getAccessibilityInfo = function () {\n\t\tvar sRequired = this.getRequired() ? 'Required' : '',\n\t\t    oRenderer = this.getRenderer();\n\n\t\treturn {\n\t\t\trole: oRenderer.getAriaRole(this),\n\t\t\ttype: sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"ACC_CTR_TYPE_INPUT\"),\n\t\t\tdescription: [this.getValue() || \"\", oRenderer.getLabelledByAnnouncement(this), oRenderer.getDescribedByAnnouncement(this), sRequired].join(\" \").trim(),\n\t\t\tfocusable: this.getEnabled(),\n\t\t\tenabled: this.getEnabled(),\n\t\t\teditable: this.getEnabled() && this.getEditable()\n\t\t};\n\t};\n\n\t// do not cache jQuery object and define _$input for compatibility reasons\n\tObject.defineProperty(InputBase.prototype, \"_$input\", {\n\t\tget: function get() {\n\t\t\treturn this.$(\"inner\");\n\t\t}\n\t});\n\n\treturn InputBase;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\njQuery.sap.setObject(\"sap.m.InputBaseRenderer\", __webpack_require__(\"JTcp\"));\n\n/***/ }),\n\n/***/ \"s5vy\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"nPt9\"), __webpack_require__(\"BRbz\"), __webpack_require__(\"Uj8/\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (library, Device, InvisibleText) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListType\n\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.m.ListMode\n\tvar ListMode = library.ListMode;\n\n\t/**\n  * ListitemBase renderer.\n  *\n  * @namespace\n  */\n\tvar ListItemBaseRenderer = {};\n\n\t// create ARIA announcements\n\tvar mAriaAnnouncements = {};\n\n\tListItemBaseRenderer.renderInvisible = function (rm, oLI) {\n\t\tthis.openItemTag(rm, oLI);\n\t\trm.writeInvisiblePlaceholderData(oLI);\n\t\trm.write(\">\");\n\t\tthis.closeItemTag(rm, oLI);\n\t};\n\n\t/**\n  * Renders the highlight state.\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI An object representation of the control that is rendered.\n  * @protected\n  */\n\tListItemBaseRenderer.renderHighlight = function (rm, oLI) {\n\t\tvar sHighlight = oLI.getHighlight();\n\t\tif (sHighlight == \"None\") {\n\t\t\treturn;\n\t\t}\n\n\t\trm.write(\"<div\");\n\t\trm.addClass(\"sapMLIBHighlight\");\n\t\trm.addClass(\"sapMLIBHighlight\" + sHighlight);\n\t\trm.writeClasses();\n\t\trm.write(\"></div>\");\n\t};\n\n\tListItemBaseRenderer.isModeMatched = function (sMode, iOrder) {\n\t\tvar mOrderConfig = (sap.m.ListBaseRenderer || {}).ModeOrder || {};\n\t\treturn mOrderConfig[sMode] == iOrder;\n\t};\n\n\t/**\n  * Renders the mode when item mode is in correct order\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n  * @param {int} [iOrder] expected order for the rendering\n  * @protected\n  */\n\tListItemBaseRenderer.renderMode = function (rm, oLI, iOrder) {\n\t\tvar sMode = oLI.getMode();\n\t\tif (!this.isModeMatched(sMode, iOrder)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar oModeControl = oLI.getModeControl(true);\n\t\tif (oModeControl) {\n\t\t\tthis.renderModeContent(rm, oLI, oModeControl);\n\t\t}\n\t};\n\n\tListItemBaseRenderer.renderModeContent = function (rm, oLI, oModeControl) {\n\t\tthis.decorateMode(oModeControl, oLI);\n\t\trm.renderControl(oModeControl);\n\t};\n\n\tListItemBaseRenderer.decorateMode = function (oModeControl, oLI) {\n\n\t\t/* Remove animation classes to avoid unexpected re-rendering bahavior */\n\t\toModeControl.removeStyleClass(\"sapMLIBSelectAnimation sapMLIBUnselectAnimation\");\n\n\t\t// determine whether animation is necessary or not\n\t\tif (!sap.ui.getCore().getConfiguration().getAnimation() || !oLI.getListProperty(\"modeAnimationOn\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sMode = oLI.getMode(),\n\t\t    sLastListMode = oLI.getListProperty(\"lastMode\");\n\n\t\t// determine whether list mode is changed or not\n\t\tif (!sLastListMode || sLastListMode == sMode) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (sMode == ListMode.None) {\n\t\t\toModeControl.addStyleClass(\"sapMLIBUnselectAnimation\");\n\t\t} else {\n\t\t\toModeControl.addStyleClass(\"sapMLIBSelectAnimation\");\n\t\t}\n\t};\n\n\t/**\n  * Renders counter if it is not empty\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI An object representation of the control that is rendered.\n  * @protected\n  */\n\tListItemBaseRenderer.renderCounter = function (rm, oLI) {\n\t\tvar iCounter = oLI.getCounter();\n\t\tif (iCounter) {\n\t\t\tthis.renderCounterContent(rm, oLI, iCounter);\n\t\t}\n\t};\n\n\tListItemBaseRenderer.renderCounterContent = function (rm, oLI, iCounter) {\n\t\trm.write(\"<div\");\n\t\trm.writeAttribute(\"id\", oLI.getId() + \"-counter\");\n\t\tvar sAriaLabel = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LIST_ITEM_COUNTER\", iCounter);\n\t\trm.writeAttribute(\"aria-label\", sAriaLabel);\n\t\trm.addClass(\"sapMLIBCounter\");\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\t\trm.write(iCounter);\n\t\trm.write(\"</div>\");\n\t};\n\n\t/**\n  * Renders type for the list item\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n  * @protected\n  */\n\tListItemBaseRenderer.renderType = function (rm, oLI) {\n\t\tvar oTypeControl = oLI.getTypeControl();\n\t\tif (oTypeControl) {\n\t\t\trm.renderControl(oTypeControl);\n\t\t}\n\t};\n\n\t/**\n  * Renders list item HTML starting tag\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n  * @protected\n  */\n\tListItemBaseRenderer.openItemTag = function (rm, oLI) {\n\t\trm.write(\"<\" + oLI.TagName);\n\t};\n\n\t/**\n  * Renders list item HTML closing tag\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n  * @protected\n  */\n\tListItemBaseRenderer.closeItemTag = function (rm, oLI) {\n\t\trm.write(\"</\" + oLI.TagName + \">\");\n\t};\n\n\tListItemBaseRenderer.renderTabIndex = function (rm, oLI) {\n\t\trm.writeAttribute(\"tabindex\", \"-1\");\n\t};\n\n\tListItemBaseRenderer.renderTooltip = function (rm, oLI) {\n\t\tvar sTooltip = oLI.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\t};\n\n\t/**\n  * Adds the classes needed to recognize the element as focusable.\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer\n  * @param {sap.ui.core.Control} [oLI] an object representation of the control that should be rendered\n  * @protected\n  */\n\tListItemBaseRenderer.addFocusableClasses = function (rm, oLI) {\n\t\tif (Device.system.desktop) {\n\t\t\trm.addClass(\"sapMLIBFocusable\");\n\t\t\tthis.addLegacyOutlineClass(rm, oLI);\n\t\t}\n\t};\n\n\t/**\n  * Adds the classes for legacy browsers, which do not support normal outlines.\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer\n  * @param {sap.ui.core.Control} [oLI] an object representation of the control that should be rendered\n  * @protected\n  */\n\tListItemBaseRenderer.addLegacyOutlineClass = function (rm, oLI) {\n\t\tif (Device.browser.msie || Device.browser.edge) {\n\t\t\trm.addClass(\"sapMLIBLegacyOutline\");\n\t\t}\n\t};\n\n\t/**\n  * Creates an invisible aria node for the given message bundle text\n  * in the static UIArea and returns its id for ARIA announcements\n  *\n  * This method should be used when text is reached frequently.\n  *\n  * @param {String} sKey key of the announcement\n  * @param {String} [sBundleText] key of the announcement\n  * @returns {String} id of the generated invisible aria node\n  * @protected\n  */\n\tListItemBaseRenderer.getAriaAnnouncement = function (sKey, sBundleText) {\n\t\tif (mAriaAnnouncements[sKey]) {\n\t\t\treturn mAriaAnnouncements[sKey];\n\t\t}\n\n\t\tsBundleText = sBundleText || \"LIST_ITEM_\" + sKey.toUpperCase();\n\t\tmAriaAnnouncements[sKey] = new InvisibleText({\n\t\t\ttext: sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(sBundleText)\n\t\t}).toStatic().getId();\n\n\t\treturn mAriaAnnouncements[sKey];\n\t};\n\n\t/**\n  * Returns aria accessibility role\n  *\n  * @param {sap.ui.core.Control} oLI an object representation of the control\n  * @returns {String}\n  * @protected\n  */\n\tListItemBaseRenderer.getAriaRole = function (oLI) {\n\t\treturn \"option\";\n\t};\n\n\t/**\n  * Returns the inner aria labelledby ids for the accessibility\n  *\n  * @param {sap.ui.core.Control} oLI an object representation of the control\n  * @returns {String|undefined}\n  * @protected\n  */\n\tListItemBaseRenderer.getAriaLabelledBy = function (oLI) {\n\t\tif (!oLI.getContentAnnouncement && oLI.getAriaLabelledBy().length) {\n\t\t\treturn oLI.getId();\n\t\t}\n\t};\n\n\t/**\n  * Returns the inner aria describedby ids for the accessibility\n  *\n  * @param {sap.ui.core.Control} oLI an object representation of the control\n  * @returns {String|undefined}\n  * @protected\n  */\n\tListItemBaseRenderer.getAriaDescribedBy = function (oLI) {\n\t\tif (oLI.getContentAnnouncement) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tvar aDescribedBy = [],\n\t\t    sType = oLI.getType(),\n\t\t    mType = ListType;\n\n\t\tif (oLI.getListProperty(\"showUnread\") && oLI.getUnread()) {\n\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"unread\"));\n\t\t}\n\n\t\tif (oLI.getMode() == ListMode.Delete) {\n\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"deletable\"));\n\t\t}\n\n\t\tif (sType == mType.Navigation) {\n\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"navigation\"));\n\t\t} else {\n\t\t\tif (sType == mType.Detail || sType == mType.DetailAndActive) {\n\t\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"detail\"));\n\t\t\t}\n\t\t\tif (sType == mType.Active || sType == mType.DetailAndActive) {\n\t\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"active\"));\n\t\t\t}\n\t\t}\n\n\t\treturn aDescribedBy.join(\" \");\n\t};\n\n\t/**\n  * Returns the accessibility state of the control\n  *\n  * @param {sap.ui.core.Control} oLI an object representation of the control\n  * @protected\n  */\n\tListItemBaseRenderer.getAccessibilityState = function (oLI) {\n\t\tvar sAriaLabelledBy = this.getAriaLabelledBy(oLI),\n\t\t    sAriaDescribedBy = this.getAriaDescribedBy(oLI),\n\t\t    mAccessibilityState = {\n\t\t\trole: this.getAriaRole(oLI)\n\t\t};\n\n\t\tif (oLI.isSelectable()) {\n\t\t\tmAccessibilityState.selected = oLI.getProperty(\"selected\");\n\t\t}\n\n\t\tif (sAriaLabelledBy) {\n\t\t\tmAccessibilityState.labelledby = {\n\t\t\t\tvalue: sAriaLabelledBy.trim(),\n\t\t\t\tappend: true\n\t\t\t};\n\t\t}\n\n\t\tif (sAriaDescribedBy) {\n\t\t\tmAccessibilityState.describedby = {\n\t\t\t\tvalue: sAriaDescribedBy.trim(),\n\t\t\t\tappend: true\n\t\t\t};\n\t\t}\n\n\t\treturn mAccessibilityState;\n\t};\n\n\t/**\n  * Hook for rendering list item contents\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n  * @protected\n  */\n\tListItemBaseRenderer.renderLIContent = function (rm, oLI) {};\n\n\t/**\n  * Hook for changing list item attributes\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n  * @protected\n  */\n\tListItemBaseRenderer.renderLIAttributes = function (rm, oLI) {};\n\n\t/**\n  * Renders the former part of the item.\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI An object representation of the control that is rendered.\n  * @protected\n  */\n\tListItemBaseRenderer.renderContentFormer = function (rm, oLI) {\n\t\tthis.renderHighlight(rm, oLI);\n\t\tthis.renderMode(rm, oLI, -1);\n\t};\n\n\t/**\n  * Renders the latter part of the item.\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI An object representation of the control that is rendered.\n  * @protected\n  */\n\tListItemBaseRenderer.renderContentLatter = function (rm, oLI) {\n\t\tthis.renderCounter(rm, oLI);\n\t\tthis.renderType(rm, oLI);\n\t\tthis.renderMode(rm, oLI, 1);\n\t};\n\n\tListItemBaseRenderer.renderLIContentWrapper = function (rm, oLI) {\n\t\trm.write('<div class=\"sapMLIBContent\"');\n\t\trm.writeAttribute(\"id\", oLI.getId() + \"-content\");\n\t\trm.write(\">\");\n\t\tthis.renderLIContent(rm, oLI);\n\t\trm.write('</div>');\n\t};\n\n\t/**\n  * Renders the HTML for the given control, using the provided.\n  *\n  * {@link sap.ui.core.RenderManager}.\n  *\n  * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n  * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n  * @public\n  */\n\tListItemBaseRenderer.render = function (rm, oLI) {\n\n\t\t// render invisible placeholder\n\t\tif (!oLI.getVisible()) {\n\t\t\tthis.renderInvisible(rm, oLI);\n\t\t\treturn false;\n\t\t}\n\n\t\t// start\n\t\tthis.openItemTag(rm, oLI);\n\t\trm.writeControlData(oLI);\n\n\t\t// classes\n\t\trm.addClass(\"sapMLIB\");\n\t\trm.addClass(\"sapMLIB-CTX\");\n\t\trm.addClass(\"sapMLIBShowSeparator\");\n\t\trm.addClass(\"sapMLIBType\" + oLI.getType());\n\n\t\tif (Device.system.desktop && oLI.isActionable()) {\n\t\t\trm.addClass(\"sapMLIBActionable\");\n\t\t\trm.addClass(\"sapMLIBHoverable\");\n\t\t}\n\n\t\tif (oLI.getSelected()) {\n\t\t\trm.addClass(\"sapMLIBSelected\");\n\t\t}\n\n\t\tif (oLI.getListProperty(\"showUnread\") && oLI.getUnread()) {\n\t\t\trm.addClass(\"sapMLIBUnread\");\n\t\t}\n\n\t\tthis.addFocusableClasses(rm, oLI);\n\n\t\t// attributes\n\t\tthis.renderTooltip(rm, oLI);\n\t\tthis.renderTabIndex(rm, oLI);\n\n\t\t// handle accessibility states\n\t\tif (sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\trm.writeAccessibilityState(oLI, this.getAccessibilityState(oLI));\n\t\t}\n\n\t\t// item attributes hook\n\t\tthis.renderLIAttributes(rm, oLI);\n\n\t\trm.writeClasses();\n\t\trm.writeStyles();\n\t\trm.write(\">\");\n\n\t\tthis.renderContentFormer(rm, oLI);\n\t\tthis.renderLIContentWrapper(rm, oLI);\n\t\tthis.renderContentLatter(rm, oLI);\n\n\t\tthis.closeItemTag(rm, oLI);\n\t};\n\n\treturn ListItemBaseRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"tsD2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides default renderer for control sap.m.Title\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"wTGv\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextAlign\n\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.ui.core.TitleLevel\n\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\t/**\n  * @class Title renderer.\n  * @static\n  */\n\tvar TitleRenderer = {};\n\n\t/**\n  * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n  * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the Render-Output-Buffer\n  * @param {sap.ui.core.Control} oShell an object representation of the control that should be rendered\n  */\n\tTitleRenderer.render = function (oRm, oTitle) {\n\t\tvar oAssoTitle = oTitle._getTitle(),\n\t\t    sLevel = (oAssoTitle ? oAssoTitle.getLevel() : oTitle.getLevel()) || TitleLevel.Auto,\n\t\t    bAutoLevel = sLevel == TitleLevel.Auto,\n\t\t    sTag = bAutoLevel ? \"div\" : sLevel;\n\n\t\toRm.write(\"<\", sTag);\n\t\toRm.writeControlData(oTitle);\n\t\toRm.addClass(\"sapMTitle\");\n\t\toRm.addClass(\"sapMTitleStyle\" + (oTitle.getTitleStyle() || TitleLevel.Auto));\n\t\toRm.addClass(oTitle.getWrapping() ? \"sapMTitleWrap\" : \"sapMTitleNoWrap\");\n\t\toRm.addClass(\"sapUiSelectable\");\n\n\t\tvar sWidth = oTitle.getWidth();\n\t\tif (!sWidth) {\n\t\t\toRm.addClass(\"sapMTitleMaxWidth\");\n\t\t} else {\n\t\t\toRm.addStyle(\"width\", sWidth);\n\t\t}\n\n\t\tvar sTextAlign = oTitle.getTextAlign();\n\t\tif (sTextAlign && sTextAlign != TextAlign.Initial) {\n\t\t\toRm.addClass(\"sapMTitleAlign\" + sTextAlign);\n\t\t}\n\n\t\tif (oTitle.getParent() instanceof sap.m.Toolbar) {\n\t\t\toRm.addClass(\"sapMTitleTB\");\n\t\t}\n\n\t\tvar sTooltip = oAssoTitle ? oAssoTitle.getTooltip_AsString() : oTitle.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\toRm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\tif (bAutoLevel) {\n\t\t\toRm.writeAttribute(\"role\", \"heading\");\n\t\t}\n\n\t\toRm.writeClasses();\n\t\toRm.writeStyles();\n\n\t\toRm.write(\"><span\");\n\t\toRm.writeAttribute(\"id\", oTitle.getId() + \"-inner\");\n\t\toRm.write(\">\");\n\t\toRm.writeEscaped(oAssoTitle ? oAssoTitle.getText() : oTitle.getText());\n\t\toRm.write(\"</span></\", sTag, \">\");\n\t};\n\n\treturn TitleRenderer;\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ }),\n\n/***/ \"vDSJ\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"vhzV\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n      jQuery.sap.registerPreloadedModules({\n        version: \"2.0\",\n        url: '.',\n        modules: {\n          \"sap/m/Shell.js\": function(){__webpack_require__(\"FYwE\")},\n\"sap/m/App.js\": function(){__webpack_require__(\"BgZA\")},\n\"sap/m/Page.js\": function(){__webpack_require__(\"accj\")},\n\"sap/m/Toolbar.js\": function(){__webpack_require__(\"D3v/\")},\n\"sap/m/SearchField.js\": function(){__webpack_require__(\"gbSk\")},\n\"sap/m/Input.js\": function(){__webpack_require__(\"YrK0\")},\n\"sap/m/List.js\": function(){__webpack_require__(\"RL+X\")},\n\"sap/m/Label.js\": function(){__webpack_require__(\"ACjf\")},\n\"sap/m/CustomListItem.js\": function(){__webpack_require__(\"WEwg\")},\n\"sap/m/Bar.js\": function(){__webpack_require__(\"tzTi\")},\n\"sap/m/SegmentedButton.js\": function(){__webpack_require__(\"iJpc\")},\n\"sap/m/SegmentedButtonItem.js\": function(){__webpack_require__(\"OZLB\")},\n\"sap/m/Button.js\": function(){__webpack_require__(\"XYhA\")},\n\n        }\n      });\n      var parser = new DOMParser();\n      var xml = parser.parseFromString(\"<mvc:View xmlns:mvc=\\\"sap.ui.core.mvc\\\" xmlns=\\\"sap.m\\\" controllerName=\\\"sap.ui.demo.todo.controller.App\\\" displayBlock=\\\"true\\\">\\n\\t<Shell>\\n\\t\\t<App>\\n\\t\\t\\t<Page title=\\\"{i18n>TITLE}\\\" backgroundDesign=\\\"Solid\\\">\\n\\t\\t\\t\\t<subHeader>\\n\\t\\t\\t\\t\\t<Toolbar>\\n\\t\\t\\t\\t\\t\\t<SearchField\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"searchTodoItemsInput\\\"\\n\\t\\t\\t\\t\\t\\t\\tliveChange=\\\"onSearch\\\"\\n\\t\\t\\t\\t\\t\\t\\twidth=\\\"100%\\\" />\\n\\t\\t\\t\\t\\t</Toolbar>\\n\\t\\t\\t\\t</subHeader>\\n\\t\\t\\t\\t<content>\\n\\t\\t\\t\\t\\t<Input class=\\\"todoInput\\\" id=\\\"addTodoItemInput\\\" value=\\\"{/newTodo}\\\" placeholder=\\\"{i18n>INPUT_PLACEHOLDER}\\\" change=\\\"addTodo\\\" />\\n\\t\\t\\t\\t\\t<List id=\\\"todoList\\\"\\n\\t\\t\\t\\t\\t\\titems=\\\"{ path: '/todos', events: { change: '.updateItemsLeftCount' } }\\\"\\n\\t\\t\\t\\t\\t\\tmode=\\\"MultiSelect\\\"\\n\\t\\t\\t\\t\\t\\tgrowing=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\tgrowingScrollToLoad=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\tshowNoData=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\tshowSeparators=\\\"None\\\"\\n\\t\\t\\t\\t\\t\\trememberSelections=\\\"false\\\">\\n\\t\\t\\t\\t\\t\\t<infoToolbar>\\n\\t\\t\\t\\t\\t\\t\\t<Toolbar>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Label id=\\\"itemsLeftLabel\\\" text=\\\"{= ${/itemsLeftCount} === 1 ? ${/itemsLeftCount} + ' ' + ${i18n>ITEM_LEFT} : ${/itemsLeftCount} + ' ' + ${i18n>ITEMS_LEFT} }\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t</Toolbar>\\n\\t\\t\\t\\t\\t\\t</infoToolbar>\\n\\t\\t\\t\\t\\t\\t<CustomListItem class=\\\"todoListItem\\\" selected=\\\"{completed}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<Input enabled=\\\"{=!${completed}}\\\" value=\\\"{title}\\\"/>\\n\\t\\t\\t\\t\\t\\t</CustomListItem>\\n\\t\\t\\t\\t\\t</List>\\n\\t\\t\\t\\t</content>\\n\\t\\t\\t\\t<footer>\\n\\t\\t\\t\\t\\t<Bar>\\n\\t\\t\\t\\t\\t\\t<contentMiddle>\\n\\t\\t\\t\\t\\t\\t\\t<SegmentedButton selectedKey=\\\"all\\\" select=\\\"onFilter\\\" class=\\\"sapMSegmentedButtonNoAutoWidth\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<items>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<SegmentedButtonItem id=\\\"filterButton-all\\\" text=\\\"All\\\" key=\\\"all\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<SegmentedButtonItem id=\\\"filterButton-active\\\" text=\\\"Active\\\" key=\\\"active\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<SegmentedButtonItem id=\\\"filterButton-completed\\\" text=\\\"Completed\\\" key=\\\"completed\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t</items>\\n\\t\\t\\t\\t\\t\\t\\t</SegmentedButton>\\n\\t\\t\\t\\t\\t\\t</contentMiddle>\\n\\t\\t\\t\\t\\t\\t<contentRight>\\n\\t\\t\\t\\t\\t\\t\\t<Button id=\\\"clearCompleted\\\" enabled=\\\"{/itemsRemovable}\\\" icon=\\\"sap-icon://delete\\\" text=\\\"{i18n>CLEAR_COMPLETED}\\\" press=\\\"clearCompleted\\\" />\\n\\t\\t\\t\\t\\t\\t</contentRight>\\n\\t\\t\\t\\t\\t</Bar>\\n\\t\\t\\t\\t</footer>\\n\\t\\t\\t</Page>\\n\\t\\t</App>\\n\\t</Shell>\\n</mvc:View>\\n\", \"text/xml\");\n      module.exports = xml;\n    \n\n/***/ }),\n\n/***/ \"xWKI\":\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ \"ybGW\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_UI5_DEFINE_ARRAY__, __WEBPACK_UI5_DEFINE_RESULT__;\n\n!(__WEBPACK_UI5_DEFINE_ARRAY__ = [__webpack_require__(\"VCRw\"), __webpack_require__(\"6znR\"), __webpack_require__(\"I/bN\"), __webpack_require__(\"mn6T\")], __WEBPACK_UI5_DEFINE_RESULT__ = function (Controller, JSONModel, Filter, FilterOperator) {\n\t'use strict';\n\n\treturn Controller.extend('sap.ui.demo.todo.controller.App', {\n\n\t\tonInit: function onInit() {\n\t\t\tthis.aSearchFilters = [];\n\t\t\tthis.aTabFilters = [];\n\t\t},\n\n\t\t/**\n   * Adds a new todo item to the bottom of the list.\n   */\n\t\taddTodo: function addTodo() {\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar aTodos = jQuery.extend(true, [], oModel.getProperty('/todos'));\n\n\t\t\taTodos.push({\n\t\t\t\ttitle: oModel.getProperty('/newTodo'),\n\t\t\t\tcompleted: false\n\t\t\t});\n\n\t\t\toModel.setProperty('/todos', aTodos);\n\t\t\toModel.setProperty('/newTodo', '');\n\t\t},\n\n\t\t/**\n   * Removes all completed items from the todo list.\n   */\n\t\tclearCompleted: function clearCompleted() {\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar aTodos = jQuery.extend(true, [], oModel.getProperty('/todos'));\n\n\t\t\tvar i = aTodos.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar oTodo = aTodos[i];\n\t\t\t\tif (oTodo.completed) {\n\t\t\t\t\taTodos.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toModel.setProperty('/todos', aTodos);\n\t\t},\n\n\t\t/**\n   * Updates the number of items not yet completed\n   */\n\t\tupdateItemsLeftCount: function updateItemsLeftCount() {\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar aTodos = oModel.getProperty('/todos') || [];\n\n\t\t\tvar iItemsLeft = aTodos.filter(function (oTodo) {\n\t\t\t\treturn oTodo.completed !== true;\n\t\t\t}).length;\n\n\t\t\toModel.setProperty('/itemsLeftCount', iItemsLeft);\n\t\t},\n\n\t\t/**\n   * Trigger search for specific items. The removal of items is disable as long as the search is used.\n   * @param {sap.ui.base.Event} oEvent Input changed event\n   */\n\t\tonSearch: function onSearch(oEvent) {\n\t\t\tvar oModel = this.getView().getModel();\n\n\t\t\t// First reset current filters\n\t\t\tthis.aSearchFilters = [];\n\n\t\t\t// add filter for search\n\t\t\tvar sQuery = oEvent.getSource().getValue();\n\t\t\tif (sQuery && sQuery.length > 0) {\n\t\t\t\toModel.setProperty('/itemsRemovable', false);\n\t\t\t\tvar filter = new Filter(\"title\", FilterOperator.Contains, sQuery);\n\t\t\t\tthis.aSearchFilters.push(filter);\n\t\t\t} else {\n\t\t\t\toModel.setProperty('/itemsRemovable', true);\n\t\t\t}\n\n\t\t\tthis._applyListFilters();\n\t\t},\n\n\t\tonFilter: function onFilter(oEvent) {\n\n\t\t\t// First reset current filters\n\t\t\tthis.aTabFilters = [];\n\n\t\t\t// add filter for search\n\t\t\tvar sFilterKey = oEvent.getParameter(\"key\");\n\n\t\t\t// eslint-disable-line default-case\n\t\t\tswitch (sFilterKey) {\n\t\t\t\tcase \"active\":\n\t\t\t\t\tthis.aTabFilters.push(new Filter(\"completed\", FilterOperator.EQ, false));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"completed\":\n\t\t\t\t\tthis.aTabFilters.push(new Filter(\"completed\", FilterOperator.EQ, true));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"all\":\n\t\t\t\tdefault:\n\t\t\t\t// Don't use any filter\n\t\t\t}\n\n\t\t\tthis._applyListFilters();\n\t\t},\n\n\t\t_applyListFilters: function _applyListFilters() {\n\t\t\tvar oList = this.byId(\"todoList\");\n\t\t\tvar oBinding = oList.getBinding(\"items\");\n\n\t\t\toBinding.filter(this.aSearchFilters.concat(this.aTabFilters), \"todos\");\n\t\t}\n\n\t});\n}.apply(exports, __WEBPACK_UI5_DEFINE_ARRAY__),\n        __WEBPACK_UI5_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_UI5_DEFINE_RESULT__));\n\n/***/ })\n\n},[\"2O6T\"]);\n\n\n// WEBPACK FOOTER //\n// app.be6e4994e955340465d9.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['./ListItemBaseRenderer', 'sap/ui/core/Renderer', 'sap/ui/core/library'],\n\tfunction(ListItemBaseRenderer, Renderer, coreLibrary) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\n\t/**\n\t * GroupHeaderListItem renderer.\n\t * @namespace\n\t */\n\tvar GroupHeaderListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\tGroupHeaderListItemRenderer.renderType = function(rm, oLI) {\n\t\tvar oTable = oLI.getTable();\n\n\t\t// for table render navigation column always\n\t\toTable && rm.write('<td class=\"sapMListTblNavCol\">');\n\t\tListItemBaseRenderer.renderType.apply(this, arguments);\n\t\toTable && rm.write('</td>');\n\t};\n\n\t// GroupHeaderListItem does not respect counter property of the LIB\n\tGroupHeaderListItemRenderer.renderCounter = function(rm, oLI) {\n\t};\n\n\t/**\n\t * Renders the attributes for the given list item, using the provided\n\t * {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager}\n\t *          rm the RenderManager that can be used for writing to the\n\t *          Render-Output-Buffer\n\t * @param {sap.ui.core.Control}\n\t *          oLI an object representation of the list item that should be\n\t *          rendered\n\t */\n\tGroupHeaderListItemRenderer.renderLIAttributes = function(rm, oLI) {\n\t\trm.addClass(\"sapMGHLI\");\n\t\tif (oLI.getUpperCase()) {\n\t\t\trm.addClass(\"sapMGHLIUpperCase\");\n\t\t}\n\t};\n\n\n\t/**\n\t * Renders the List item content\n\t *\n\t * @param {sap.ui.core.RenderManager}\n\t *          rm the RenderManager that can be used for writing to the\n\t *          Render-Output-Buffer\n\t * @param {sap.ui.core.Control}\n\t *          oLI an object representation of the list item that should be\n\t *          rendered\n\t */\n\tGroupHeaderListItemRenderer.renderLIContentWrapper = function(rm, oLI) {\n\t\tvar oTable = oLI.getTable();\n\n\t\tif (oTable) {\n\t\t\trm.write('<td class=\"sapMGHLICell\"');\n\t\t\trm.writeAttribute(\"colspan\", oTable.getColSpan());\n\t\t\trm.write(\">\");\n\t\t}\n\n\t\tListItemBaseRenderer.renderLIContentWrapper.apply(this, arguments);\n\n\t\tif (oTable) {\n\t\t\trm.write(\"</td>\");\n\t\t}\n\t};\n\n\tGroupHeaderListItemRenderer.renderLIContent = function(rm, oLI) {\n\t\tvar sTextDir = oLI.getTitleTextDirection();\n\t\trm.write(\"<span class='sapMGHLITitle'\");\n\n\t\tif (sTextDir != TextDirection.Inherit) {\n\t\t\trm.writeAttribute(\"dir\", sTextDir.toLowerCase());\n\t\t}\n\n\t\trm.write(\">\");\n\t\trm.writeEscaped(oLI.getTitle());\n\t\trm.write(\"</span>\");\n\n\t\tvar iCount = oLI.getCount() || oLI.getCounter();\n\t\tif (iCount) {\n\t\t\trm.write(\"<span class='sapMGHLICounter'>\");\n\t\t\trm.writeEscaped(\" (\" + iCount + \")\");\n\t\t\trm.write(\"</span>\");\n\t\t}\n\t};\n\n\tGroupHeaderListItemRenderer.addLegacyOutlineClass = function(rm, oLI) {\n\t\tif (!oLI.getTable()) {\n\t\t\tListItemBaseRenderer.addLegacyOutlineClass.apply(this, arguments);\n\t\t}\n\t};\n\n\tGroupHeaderListItemRenderer.getAriaRole = function(oLI) {\n\t\tif (oLI.getTable()) {\n\t\t\treturn \"row\";\n\t\t}\n\n\t\treturn ListItemBaseRenderer.getAriaRole.apply(this, arguments);\n\t};\n\n\treturn GroupHeaderListItemRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/GroupHeaderListItemRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define([],\n\tfunction() {\n\t\"use strict\";\n\n\n\t/**\n\t * NavContainer renderer.\n\t * @namespace\n\t */\n\tvar NavContainerRenderer = {\n\t};\n\n\n\t/**\n\t * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRenderManager the RenderManager that can be used for writing to the Render-Output-Buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tNavContainerRenderer.render = function(rm, oControl) {\n\n\t\toControl._bRenderingInProgress = true;\n\n\t\t// return immediately if control is invisible\n\t\tif (!oControl.getVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\trm.write(\"<div\");\n\t\trm.writeControlData(oControl);\n\n\t\trm.addClass(\"sapMNav\");\n\t\tif (oControl.getWidth()) {\n\t\t\trm.addStyle(\"width\", oControl.getWidth());\n\t\t}\n\t\tvar sHeight = oControl.getHeight();\n\t\tif (sHeight && sHeight != \"100%\") {\n\t\t\trm.addStyle(\"height\", sHeight);\n\t\t}\n\n\t\tif (this.renderAttributes) {\n\t\t\tthis.renderAttributes(rm, oControl); // may be used by inheriting renderers, but DO NOT write class or style attributes! Instead, call addClass/addStyle.\n\t\t}\n\n\t\trm.writeClasses();\n\t\trm.writeStyles();\n\n\t\tvar sTooltip = oControl.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\t\trm.write(\">\"); // div element\n\n\t\tif (this.renderBeforeContent) {\n\t\t\tthis.renderBeforeContent(rm, oControl); // may be used by inheriting renderers\n\t\t}\n\n\t\tvar oContent = oControl.getCurrentPage();\n\t\tif (oContent) {\n\t\t\toContent.removeStyleClass(\"sapMNavItemHidden\"); // In case the current page was hidden (the previous current page got removed)\n\t\t\trm.renderControl(oContent);\n\t\t}\n\n\t\trm.write(\"</div>\");\n\n\t\toControl._bRenderingInProgress = false;\n\t};\n\n\n\treturn NavContainerRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/NavContainerRenderer.js","// Load UI5 Core\nimport \"script-loader!sap/ui/thirdparty/URI\";\nimport \"sap/ui/thirdparty/jquery\";\nimport \"sap/ui/thirdparty/jqueryui/jquery-ui-position\";\nimport \"sap/ui/Device\";\nimport \"jquery.sap.global\";\nimport \"sap/ui/core/Core\";\n\n// Load libraries\nimport \"sap/ui/core/library\";\nimport \"sap/ui/core/messagebundle.properties\";\nimport \"sap/ui/core/messagebundle_en.properties\";\nimport \"sap/ui/core/messagebundle_de.properties\";\n\nimport \"sap/m/library\";\nimport \"sap/m/messagebundle.properties\";\nimport \"sap/m/messagebundle_en.properties\";\nimport \"sap/m/messagebundle_de.properties\";\n\n// Load component, controllers & views\nimport ComponentContainer from \"sap/ui/core/ComponentContainer\";\nimport AppComponent from \"./Component\";\n\nsap.ui.getCore().boot();\n\nnew ComponentContainer({\n\tcomponent: new AppComponent(),\n}).placeAt(\"root\");\n\n\n\n// WEBPACK FOOTER //\n// ./app.js","module.exports = \"#This is the resource bundle for the SAPUI5 sap.m library\\n#\\n\\n#XACT: ARIA ColumnHeader control description\\nCOLUMNHEADER_ACCESS_COLUMN_ACTIONS=Access column actions\\n\\n#XACT: ARIA ColumnHeader filtered state announcement\\nCOLUMNHEADER_FILTERED=Filtered\\n\\n#XACT: ARIA ColumnHeader sorted state announcement\\nCOLUMNHEADER_SORTED=Sorted\\n\\n#XACT: ARIA ColumnHeader sort ascending state announcement\\nCOLUMNHEADER_SORTED_ASCENDING=Ascending\\n\\n#XACT: ARIA ColumnHeader sort descending state announcement\\nCOLUMNHEADER_SORTED_DESCENDING=Descending\\n\\n#XACT: ARIA keyboard announcement for the combo box arrow\\nCOMBOBOX_BUTTON=Arrow Down\\n\\n#XACT: ARIA announcement for Combo Box available options\\nCOMBOBOX_AVAILABLE_OPTIONS=Available Options\\n\\n#XBUT: Button text for ok button in the combo box (mobile version)\\nCOMBOBOX_CLOSE_BUTTON=OK\\n\\n#XBUT: Default title text for picker in the combo box (mobile version)\\nCOMBOBOX_PICKER_TITLE=Select\\n\\n#XBUT: Button text for cancel button in the select (mobile version)\\nSELECT_CANCEL_BUTTON=Cancel\\n\\n#XBLI: List text for no data lists\\nLIST_NO_DATA=No data\\n\\n#XACT: ARIA announcement for the controls which do not provide any accessibility info\\nCONTROL_EMPTY=Empty\\n\\n#XACT: ARIA announcement for the disabled controls\\nCONTROL_DISABLED=Disabled\\n\\n#XACT: ARIA announcement for the read-only controls\\nCONTROL_READONLY=Read Only\\n\\n#XACT: ARIA announcement for the list which allows single selections\\nLIST_SELECTABLE=Contains Selectable Items\\n\\n#XACT: ARIA announcement for the list which allows multiple selections\\nLIST_MULTISELECTABLE=Contains Multi-Selectable Items\\n\\n#XACT: ARIA announcement for the list which has deletable items\\nLIST_DELETABLE=Contains Deletable Items\\n\\n#XACT: ARIA announcement for the list which is grouped\\nLIST_GROUPED=Grouped\\n\\n#XACT: ARIA announcement for the list when all items are selected\\nLIST_ALL_SELECTED=All Selected\\n\\n#XACT: ARIA announcement for a required list (e.g. inside a form)\\nLIST_REQUIRED=Required\\n\\n#XACT: ARIA announcement for the selected list item\\nLIST_ITEM_SELECTED=Selected\\n\\n#XACT: ARIA keyboard announcement for the unread state of the list items\\nLIST_ITEM_UNREAD=Unread\\n\\n#XACT: ARIA announcement for the navigable list items\\nLIST_ITEM_NAVIGATION=Has Details\\n\\n#XACT: ARIA announcement for the list item details with edit option\\nLIST_ITEM_DETAIL=Is Editable\\n\\n#XACT: ARIA announcement for the active clickable list items\\nLIST_ITEM_ACTIVE=Is Active\\n\\n#XACT: ARIA announcement for the group header list items\\nLIST_ITEM_GROUP_HEADER=Group Header\\n\\n#XACT: ARIA announcement for the position of the list items in an entire list\\nLIST_ITEM_POSITION={0} of {1}\\n\\n#XACT: ARIA announcement for the position of the list item\\nLIST_ITEM_INDEX=Item {0}\\n\\n#XACT: ARIA announcement for the counter property of the list item\\nLIST_ITEM_COUNTER=Counter {0}\\n\\n#XACT: ARIA announcement for the information state of the list item\\nLIST_ITEM_STATE_INFORMATION=Information\\n\\n#XACT: ARIA announcement for the error state of the list item\\nLIST_ITEM_STATE_ERROR=Error\\n\\n#XACT: ARIA announcement for the warning state of the list item\\nLIST_ITEM_STATE_WARNING=Warning\\n\\n#XACT: ARIA announcement for the success state of the list item\\nLIST_ITEM_STATE_SUCCESS=Success\\n\\n#XTOL: tooltip for the delete icon of the list item\\nLIST_ITEM_DELETE=Delete\\n\\n#XTOL: tooltip for the edit icon of the list item\\nLIST_ITEM_EDIT=Edit\\n\\n#XBUT: Button text for back button on page\\nPAGE_NAVBUTTON_TEXT=Back\\n\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\nSWITCH_ON=On\\n\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\nSWITCH_OFF=Off\\n\\n#XACT: ARIA keyboard announcement for the accept state in the Switch control\\nSWITCH_ARIA_ACCEPT=Accept\\n\\n#XACT: ARIA keyboard announcement for the reject state in the Switch control\\nSWITCH_ARIA_REJECT=Reject\\n\\n#XBUT: Button text for cancel button in the action sheet\\nACTIONSHEET_CANCELBUTTON_TEXT=Cancel\\n\\n#XACT: ARIA announcement for index of a button\\nACTIONSHEET_BUTTON_INDEX={0} of {1}\\n\\n#XACT: ARIA announcement for Action Sheet available actions\\nACTIONSHEET_AVAILABLE_ACTIONS=Available Actions\\n\\n#XBUT: Button text for cancel button in the busy dialog\\nBUSYDIALOG_CANCELBUTTON_TEXT=Cancel\\n\\n#XBUT: Text for growing list - pull button to load more data\\nLOAD_MORE_DATA=More\\n\\n#XBUT: Date Selection text for Date&Time Picker of MobiScroll\\nMOBISCROLL_SET=OK\\n\\n#XBUT: Cancel/Close button of MobiScroll Date&Time Picker\\nMOBISCROLL_CANCEL=Cancel\\n\\n#XBUT: MobiScroll Date&Time Picker Month Header\\nMOBISCROLL_MONTH=Month\\n\\n#XBUT: MobiScroll Date&Time Picker Day Header\\nMOBISCROLL_DAY=Day\\n\\n#XBUT: MobiScroll Date&Time Picker Year Header\\nMOBISCROLL_YEAR=Year\\n\\n#XBUT: MobiScroll Date&Time Picker Hours Header\\nMOBISCROLL_HOURS=Hours\\n\\n#XBUT: MobiScroll Date&Time Picker Minutes Header\\nMOBISCROLL_MINUTES=Minutes\\n\\n#XBUT: MobiScroll Date&Time Picker Seconds Header\\nMOBISCROLL_SECONDS=Seconds\\n\\n#XBUT: Show Now button of MobiScroll Date&Time Picker\\nMOBISCROLL_NOW=Now\\n\\n#XBUT: The navigation button text in master area in SplitContainer\\nSPLITCONTAINER_NAVBUTTON_TEXT=Navigation\\n\\n#XTOL: Tooltip for navigation button\\nSPLITCONTAINER_NAVBUTTON_DEFAULT_TOOLTIP=Show Object List\\n\\n#XTOL: Tooltip for navigation button\\nSPLITCONTAINER_NAVBUTTON_TOOLTIP=Show {0}\\n\\n#XBUT: MessageBox predefined text for OK action\\nMSGBOX_OK=OK\\n\\n#XBUT: MessageBox predefined text for CANCEL action\\nMSGBOX_CANCEL=Cancel\\n\\n#XBUT: MessageBox predefined text for YES action\\nMSGBOX_YES=Yes\\n\\n#XBUT: MessageBox predefined text for No action\\nMSGBOX_NO=No\\n\\n#XBUT: MessageBox predefined text for ABORT action\\nMSGBOX_ABORT=Abort\\n\\n#XBUT: MessageBox predefined text for RETRY action\\nMSGBOX_RETRY=Retry\\n\\n#XBUT: MessageBox predefined text for IGNORE action\\nMSGBOX_IGNORE=Ignore\\n\\n#XBUT: MessageBox predefined text for CLOSE action\\nMSGBOX_CLOSE=Close\\n\\n#XBUT: MessageBox predefined text for DELETE action\\nMSGBOX_DELETE=Delete\\n\\n#XTIT: MessageBox predefined text for title of alert dialog\\nMSGBOX_TITLE_ALERT=Alert\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_CONFIRM=Confirmation\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_ERROR=Error\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_INFO=Information\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_WARNING=Warning\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_SUCCESS=Success\\n\\n#XLNK: MessageBox textLink\\nMSGBOX_LINK_TITLE=Show Details\\n\\n#YINS,30: Pull down to refresh text in the hidden area of a scrolled area\\nPULL2REFRESH_PULLDOWN=Pull Down to Refresh\\n\\n#YINS,30: Release dragged list to start update request\\nPULL2REFRESH_RELEASE=Release to Refresh\\n\\n#YMSG,25: Refresh request is in process, short text, displayed on all platforms\\nPULL2REFRESH_LOADING=Loading...\\n\\n#YMSG,32: Refresh request is in process, longer text, displayed smaller and only on certain platforms\\nPULL2REFRESH_LOADING_LONG=Please wait, data is loading\\n\\n#XBUT: Button to trigger refresh of the displayed data\\nPULL2REFRESH_REFRESH=Refresh\\n\\n#XBUT: Text displayed on the logout button in the top right corner of the Shell\\nSHELL_LOGOUT=Logout\\n\\n#XBUT: Text for OK button in the personalization dialog\\nPERSODIALOG_OK=OK\\n\\n#XBUT: Text for Cancel button in the personalization dialog\\nPERSODIALOG_CANCEL=Cancel\\n\\n#XTOL: Tooltip for Reset Personalization toolbar button\\nPERSODIALOG_UNDO=Reset personalization\\n\\n#XTOL: Tooltip for Perso Dialog's 'Move Up' button (displays an 'up' arrow)\\nPERSODIALOG_UP=Move column up\\n\\n#XTOL: Tooltip for Perso Dialog's 'Move Down' button (displays a 'down' arrow)\\nPERSODIALOG_DOWN=Move column down\\n\\n#XTIT: Title text of personalization dialog for columns\\nPERSODIALOG_COLUMNS_TITLE=Columns\\n\\n#XBUT: Text of personalization dialog for 'Select All' checkbox\\nPERSODIALOG_SELECT_ALL=All\\n\\n#XTIT: Text of personalization dialog for its list to indicate no search hits\\nPERSODIALOG_NO_DATA=No columns found\\n\\n#XTIT: Predefined text for the view settings dialog title\\nVIEWSETTINGS_TITLE=View\\n\\n#XTIT: Predefined text for the view settings dialog title when in sort mode\\nVIEWSETTINGS_TITLE_SORT=Sort By\\n\\n#XTIT: Predefined text for the view settings dialog title when in group mode\\nVIEWSETTINGS_TITLE_GROUP=Group By\\n\\n#XTIT: Predefined text for the view settings dialog title when in filter mode\\nVIEWSETTINGS_TITLE_FILTER=Filter By\\n\\n#XTIT: Predefined text for the view settings dialog title when in filter detail mode (an item name is appended to this string)\\nVIEWSETTINGS_TITLE_FILTERBY=Filter By\\\\:\\n\\n#YMSG: Start text for the text representation of the filter state\\nVIEWSETTINGS_FILTERTEXT=Filtered by\\\\:\\n\\n#XBUT: Button to confirm the view settings dialog\\nVIEWSETTINGS_ACCEPT=OK\\n\\n#XBUT: Button to cancel the view settings dialog\\nVIEWSETTINGS_CANCEL=Cancel\\n\\n#XBLI: List item text in the view settings dialog that represents a \\\"none of the above\\\" or \\\"none\\\" selection in a single selection list\\nVIEWSETTINGS_NONE_ITEM=None\\n\\n#XBLI: List item text in the view settings for sorting items in ascending order\\nVIEWSETTINGS_ASCENDING_ITEM=Ascending\\n\\n#XBLI: List item text in the view settings for sorting items in descending order\\nVIEWSETTINGS_DESCENDING_ITEM=Descending\\n\\n#XTOL: Tooltip for the clear filter button\\nVIEWSETTINGS_CLEAR_FILTER_TOOLTIP=Clear All Filters\\n\\n#XTIT: Predefined text for the view settings dialog aria label for the sort list\\nVIEWSETTINGS_SORT_DIRECTION=Sort Direction\\n\\n#XTIT: Predefined text for the view settings dialog aria label for the group list\\nVIEWSETTINGS_GROUP_DIRECTION=Group Direction\\n\\n#XLST: Label for the select all checkbox used to select all facet filter items\\nFACETFILTER_CHECKBOX_ALL=All\\n\\n#XLST: All Items in the list with the name of the list as a parameter: ex. Suppliers (All)\\nFACETFILTER_ALL_SELECTED={0} (All)\\n\\n#XFLD: Search field prompt\\nFACETFILTER_SEARCH=Search\\n\\n#XBUT: Either a single filter value or the number of selected values, displayed on facet filter button: ex. Suppliers (Dell) or Suppliers (6)\\nFACETFILTER_ITEM_SELECTION={0} ({1})\\n\\n#XACT: ARIA announcement for facet filter itself\\nFACETFILTER_ARIA_FACET_FILTER=Facet Filter\\n\\n#XTIT: Light flow facet filter dialog and facet add dialog title\\nFACETFILTER_TITLE=Filter\\n\\n#XBUT: Button to confirm facet filter dialogs\\nFACETFILTER_ACCEPT=OK\\n\\n#XSEL: Infobar filter summary: ex. Filtered by Suppliers (Supplier1, Supplier2)\\nFACETFILTER_INFOBAR_FILTERED_BY=Filtered by {0} ({1})\\n\\n#XSEL: Infobar filter summary when no filters selected\\nFACETFILTER_INFOBAR_NO_FILTERS=No filters selected\\n\\n#XSEL: Infobar filter add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\nFACETFILTER_INFOBAR_AND=and\\n\\n#XSEL: Infobar filter after add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\nFACETFILTER_INFOBAR_AFTER_AND={0} ({1})\\n\\n#XSEL: Alternate infobar filter summary\\nFACETFILTER_INFOBAR_FILTERS_APPLIED=Several filters applied\\n\\n#YMSG: Filter bar msg shown when there are more filters available that cannot be displayed because there is not enough room: ex. 2 More...\\nFACETFILTER_MORE_COUNT={0} more...\\n\\n#YMSG: Message displayed in filter dialog when there are many more filters available but not shown: ex. 76 more available\\nFACETFILTER_FILTERS_HUGE={0} more available\\n\\n#XLNK: Link to allow searching additional filter values from the server\\nFACETFILTER_SERVER_SEARCH=Search Further on Server\\n\\n#XBUT: Button to remove a filter from the filter bar\\nFACETFILTER_REMOVE_FILTER=Remove Filter\\n\\n#XACT: ARIA announcement for the position of the list items in an entire list\\nFACETFILTERLIST_ARIA_POSITION={0} of {1}\\n\\n#YMSG: Message displayed near the list of selection items in the SelectDialg and TableSelectDialog controls. It will be filled with the number of selected items\\nTABLESELECTDIALOG_SELECTEDITEMS=Items selected\\\\: {0}\\n\\n#YMSG: Default placeholder for the input field of a feed\\nFEEDINPUT_PLACEHOLDER=Post something here\\n\\n#XTOL: Tooltip for submit button of a feed input\\nFEEDINPUT_SUBMIT=Submit\\n\\n#XBUT: A link that can be clicked to display more/all items\\nINPUT_SUGGESTIONS_SHOW_ALL=Show All Items\\n\\n#XACT: ARIA announcement for the Input suggestion result if one hit\\nINPUT_SUGGESTIONS_ONE_HIT=1 result available\\n\\n#XACT: ARIA announcement for the Input suggestion result if more than one hit ({0} is the number of hits)\\nINPUT_SUGGESTIONS_MORE_HITS={0} results are available\\n\\n#XACT: ARIA announcement for the Input suggestion result if no hit\\nINPUT_SUGGESTIONS_NO_HIT=No results\\n\\n#XACT: ARIA announcement for the value help\\nINPUT_VALUEHELP=Value help available\\n\\n#XACT: ARIA announcement disabled input (e.g. for value help only)\\nINPUT_DISABLED=Text input disabled\\n\\n#XACT: ARIA announcement for suggestions popup\\nINPUT_AVALIABLE_VALUES=Available Values\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Error\\\"\\nINPUTBASE_VALUE_STATE_ERROR=Value State Error\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Warning\\\"\\nINPUTBASE_VALUE_STATE_WARNING=Value State Warning\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Success\\\"\\nINPUTBASE_VALUE_STATE_SUCCESS=Value State Success\\n\\n#XBUT,10: Tooltip for button to remove facet list\\nFACETFILTER_REMOVE=Remove Facet List\\n\\n#XBUT: ARIA announcement for removable facet\\nFACETFILTER_ARIA_REMOVE=Removable Facet\\\\: Press DELETE to Remove\\n\\n#XBUT: Tooltip for button to add facet filter list\\nFACETFILTER_ADDFACET=Add Filter\\n\\n#XBUT: Tooltip for button to reset filter\\nFACETFILTER_RESET=Reset Filter\\n\\n#XBUT: Tooltip for left scrolling arrow\\nFACETFILTER_PREVIOUS=Previous\\n\\n#XBUT: Tooltip for right scrolling arrow\\nFACETFILTER_NEXT=Next\\n\\n#XLNK: Link to allow the user to see complete feed post\\nTEXT_SHOW_MORE=MORE\\n\\n#XLNK: This link allows the user to hide the complete feed post and display only the first lines\\nTEXT_SHOW_LESS=LESS\\n\\n#XFLD: Label text for number of attachments in the UploadCollection control\\nUPLOADCOLLECTION_ATTACHMENTS=Attachments ({0})\\n\\n#XMSG: Message text for deleting a file in the UploadCollection control\\nUPLOADCOLLECTION_DELETE_TEXT=Are you sure you want to delete ''{0}''?\\n\\n#XMSG: Message text for deleting a file in the UploadCollection control without filename\\nUPLOADCOLLECTION_DELETE_WITHOUT_FILENAME_TEXT=Are you sure you want to delete the file?\\n\\n#XMSG: Message title for deleting a file in the UploadCollection control\\nUPLOADCOLLECTION_DELETE_TITLE=Delete File\\n\\n#XMSG: Message text for a popup to terminate a file uploading in the UploadCollection control\\nUPLOADCOLLECTION_TERMINATE_TEXT=The upload for the following files will be terminated\\\\:\\n\\n#XMSG: Message title for a popup to terminate a file uploading in the UploadCollection control\\nUPLOADCOLLECTION_TERMINATE_TITLE=Terminate upload\\n\\n#XMSG: Message text file name already exists in the UploadCollection control\\nUPLOADCOLLECTION_EXISTS=File name already exists.\\n\\n#XMSG: Message text informing that a file name must be entered during edit file name in the UploadCollection control\\nUPLOADCOLLECTION_TYPE_FILENAME=Please enter a file name.\\n\\n#XMSG: Message text for uploading status to the UploadCollection control\\nUPLOADCOLLECTION_UPLOADING=Uploading\\\\: {0} %\\n\\n#XMSG: Message title for the Upload Failed message box\\nUPLOADCOLLECTION_FAILED=Upload failed\\n\\n#XMSG: Message text informing that it is not allowed to upload the selected file(s) (MIME type or file extension not allowed)\\nUPLOADCOLLECTION_MISMATCH=File type is not allowed.\\n\\n#XMSG: Message text informing that upload is completed\\nUPLOADCOLLECTION_UPLOAD_COMPLETED=Upload completed. Please wait for the server to finish processing.\\n\\n#XMSG: Message text informing that only one file can be dropped if uploading multiple files is not allowed\\nUPLOADCOLLECTION_MULTIPLE_FALSE=Please use single drag & drop here.\\n\\n#XBUT: Button text for cancel button in the upload collection\\nUPLOADCOLLECTION_CANCELBUTTON_TEXT=Cancel\\n\\n#XBUT: Text for OK button in the upload collection in case of Delete Dialog\\nUPLOADCOLLECTION_OKBUTTON_TEXT=OK\\n\\n#XBUT: Text for Rename button in the upload collection in case of renaming a file\\nUPLOADCOLLECTION_RENAMEBUTTON_TEXT=Rename\\n\\n#XBUT: Text for DELETE button in the upload collection\\nUPLOADCOLLECTION_DELETEBUTTON_TEXT=Delete\\n\\n#XBUT: Text for TERMINATE button in the upload collection\\nUPLOADCOLLECTION_TERMINATEBUTTON_TEXT=Terminate\\n\\n#XBUT: Text for RENAME button in the upload collection\\nUPLOADCOLLECTION_EDITBUTTON_TEXT=Rename\\n\\n#XBUT: Text for Add button in the upload collection\\nUPLOADCOLLECTION_ADD=Add\\n\\n#XBUT: Text for Upload button in the upload collection\\nUPLOADCOLLECTION_UPLOAD=Upload\\n\\n#XMSG: Message text for no data text in the upload collection\\nUPLOADCOLLECTION_NO_DATA_TEXT=No files found.\\n\\n#XMSG: Message text for no data description in the upload collection\\nUPLOADCOLLECTION_NO_DATA_DESCRIPTION=Drop files to upload, or use the \\\"+\\\" button.\\n\\n#XMSG: Message text indicating where to drag\\nUPLOADCOLLECTION_DRAG_FILE_INDICATOR=Drag files here\\n\\n#XMSG: Message text indicating where to drop file and upload\\nUPLOADCOLLECTION_DROP_FILE_INDICATOR=Drop files to upload\\n\\n#XTIT: Predefined text for title in the personalization dialog - Settings for the view ('view' here is a noun).\\nP13NDIALOG_VIEW_SETTINGS=View Settings\\n#XTIT: dialog title if the dialog contains only filter panel\\nP13NDIALOG_TITLE_FILTER=Define Filters\\n#XTIT: dialog title if the dialog contains only sort panel\\nP13NDIALOG_TITLE_SORT=Define Sorting\\n#XTIT: dialog title if the dialog contains only group panel\\nP13NDIALOG_TITLE_GROUP=Define Groups\\n#XTIT: dialog title if the dialog contains only columns panel\\nP13NDIALOG_TITLE_COLUMNS=Define Column Properties\\n#XTIT: dialog title if the dialog contains only panel for dimensions and measures\\nP13NDIALOG_TITLE_DIMEASURE=Define Chart Properties\\n#XBUT: Text for OK button in the personalization dialog\\nP13NDIALOG_OK=OK\\n#XBUT: Text for Cancel button in the personalization dialog\\nP13NDIALOG_CANCEL=Cancel\\n#XBUT: Text for Reset button in the personalization dialog\\nP13NDIALOG_RESET=Restore\\n#XTIT: Text for Fix button in ValidationDialog\\nP13NDIALOG_VALIDATION_FIX=Fix\\n#XTIT: personalization dialog ValidationDialog predefined title for warning\\nP13NDIALOG_VALIDATION_TITLE=Warning\\n#XTIT: personalization dialog ValidationDialog predefined title for error\\nP13NDIALOG_VALIDATION_TITLE_ERROR=Error\\n#XTIT: personalization dialog ValidationDialog predefined message\\nP13NDIALOG_VALIDATION_MESSAGE=Some filter values are missing or incorrect\\n#XTIT: personalization dialog ValidationDialog predefined message for columns panel\\nP13NDIALOG_VISIBLE_ITEMS_THRESHOLD_MESSAGE=Selecting a large number of columns can slow down the performance\\n#XTIT: personalization dialog ValidationDialog predefined message for P13nDimMeasure\\nP13NDIALOG_VALIDATION_CHARTTYPE=The dimensions and measures you have selected cannot be used with this chart type\\n#XTIT: personalization dialog ValidationDialog predefined question an the end\\nP13NDIALOG_VALIDATION_MESSAGE_QUESTION=Do you want to correct your entries?\\n\\n#XTIT: on some personalization panels \\\"(none)\\\" as 'column key' means that no criteria was defined\\nP13NDIALOG_SELECTION_NONE=(none)\\n\\n#XTIT: Filterpanel predefined title for Include filter\\nFILTERPANEL_INCLUDES=Include\\n#XTIT: Filterpanel predefined title for Exclude filter\\nFILTERPANEL_EXCLUDES=Exclude\\n#XTIT: Text for title 'Filter' in the personalization dialog\\nFILTERPANEL_TITLE=Filter\\n\\n#XTIT: Text for title 'Sort' in the personalization dialog\\nSORTPANEL_TITLE=Sort\\n\\n#XTIT: Text for title 'Group' in the personalization dialog\\nGROUPPANEL_TITLE=Group\\n\\n#XFLD: Label text for combobox control\\nCONDITIONPANEL_FIELD_LABEL=Field\\\\:\\n#XFLD: Label text for select control\\nCONDITIONPANEL_OPERATOR_LABEL=Operator\\\\:\\n\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONBT=between\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONEQ=equal to\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONContains=contains\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGT=greater than\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGE=greater than or equal to\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONLT=less than\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONLE=less than or equal to\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONInitial=initial\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONStartsWith=starts with\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONEndsWith=ends with\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONAscending=Ascending\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONDescending=Descending\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGroupAscending=Ascending\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGroupDescending=Descending\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONTotal=Total\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONAverage=Average\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONMinimum=Minimum\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONMaximum=Maximum\\n#XTIT: ConditionPanel Empty\\nCONDITIONPANEL_OPTIONEmpty=empty\\n#XTIT: ConditionPanel NotEmpty\\nCONDITIONPANEL_OPTIONNotEmpty=not empty\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_BT=between\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_EQ=equal to\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_GT=after\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_GE=on or after\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_LT=before\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_LE=before or on\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_BT=between\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_EQ=equal to\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_GT=greater than\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_GE=greater than or equal to\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_LT=less than\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_LE=less than or equal to\\n\\n\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELFROM=from\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELTO=to\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELVALUE=Value\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELGROUPING=Show Field as Column\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_TOOLTIP=Add New Line\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_TOOLTIP=Remove line\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_FILTER_TOOLTIP=Add Filter\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_FILTER_TOOLTIP=Remove Filter\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_SORT_TOOLTIP=Add Sort Criterion\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_SORT_TOOLTIP=Remove Sort Criterion\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_GROUP_TOOLTIP=Add Grouping Criterion\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_GROUP_TOOLTIP=Remove Grouping Criterion\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_CONDITION_TOOLTIP=Add Condition\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_CONDITION_TOOLTIP=Remove Condition\\n#XBUT: ConditionPanel predefined text for remove all button\\nCONDITIONPANEL_REMOVE_ALL=Remove All\\n#XTIT: ConditionPanel predefined field warning hint\\nCONDITIONPANEL_FIELDMESSAGE=Enter valid value\\n\\n#XTIT: Text for title 'Chart' in the personalization dialog\\nCHARTPANEL_TITLE=Chart\\n\\n#XTIT: Text for title 'Columns' in the personalization dialog\\nCOLUMSPANEL_TITLE=Columns\\n#XBUT: ColumnsPanel Show All button\\nCOLUMNSPANEL_SHOW_ALL=Show All\\n#XBUT: ColumnsPanel Show Selected button\\nCOLUMNSPANEL_SHOW_SELECTED=Show Selected\\n#XLST: ColumnsPanel Select All label\\nCOLUMNSPANEL_SELECT_ALL=Select All\\n#XLST: ColumnsPanel Select All label\\nCOLUMNSPANEL_SELECT_ALL_WITH_COUNTER=Select all ({0}/{1})\\n#XTOL: Tooltip for MOVE: ToStart button\\nCOLUMNSPANEL_MOVE_TO_TOP=Move to Top\\n#XTOL: Tooltip for MOVE: Up button\\nCOLUMNSPANEL_MOVE_UP=Move Up\\n#XTOL: Tooltip for MOVE: Down button\\nCOLUMNSPANEL_MOVE_DOWN=Move Down\\n#XTOL: Tooltip for MOVE: ToEnd button\\nCOLUMNSPANEL_MOVE_TO_BOTTOM=Move to Bottom\\n\\n#XLST: ColumnsPanel Chart Type caption\\nCOLUMNSPANEL_COLUMN_TYPE=Type\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_TYPE_DIMENSION=Dimension\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_TYPE_MEASURE=Measure\\n#XLST: ColumnsPanel Chart Role caption\\nCOLUMNSPANEL_COLUMN_ROLE=Role\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_CATEGORY=Category\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_SERIES=Series\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_AXIS1=Axis 1\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_AXIS2=Axis 2\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_CHARTTYPE=Chart Type\\n\\n\\n#XFLD: Subtle link description label\\nLINK_SUBTLE=Subtle\\n#XFLD: Emphasized link description label\\nLINK_EMPHASIZED=Emphasized\\n\\n#XACT: ARIA announcement for the search field F5 keyboard shortcut\\nSEARCHFIELD_ARIA_F5=Press F5 to refresh\\n\\n#XACT: ARIA announcement for the F4 value help keyboard shortcut\\nVALUEHELP_ARIA_F4=Press F4 to open a value help dialog.\\n\\n#XTXT: Bar's ARIA description when it is a footer\\nBAR_ARIA_DESCRIPTION_FOOTER=Footer\\n#XTXT: Bar's ARIA description when it is a header\\nBAR_ARIA_DESCRIPTION_HEADER=Header\\n#XTXT: Bar's ARIA description when it is a subheader\\nBAR_ARIA_DESCRIPTION_SUBHEADER=Subheader\\n\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Error\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_ERROR=Value State Error\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Warning\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_WARNING=Value State Warning\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Success\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_SUCCESS=Value State Success\\n\\n#XACT: ARIA text for tab separator icons\\nICONTABBAR_NEXTSTEP=Next Step\\n#XACT: ARIA text for positive icon color\\nICONTABBAR_ICONCOLOR_POSITIVE=Positive\\n#XACT: ARIA text for critical icon color\\nICONTABBAR_ICONCOLOR_CRITICAL=Critical\\n#XACT: ARIA text for negative icon color\\nICONTABBAR_ICONCOLOR_NEGATIVE=Negative\\n\\n#XACT: ARIA text of current selected value vs. max. possible value of the RatingIndicator control\\nRATING_VALUEARIATEXT={0} of {1}\\n#XACT: ARIA description of the RatingIndicator control\\nRATING_ARIA_NAME=Rating\\n\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s favorite property\\nARIA_FAVORITE_MARK_VALUE=Favorite\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s flag property\\nARIA_FLAG_MARK_VALUE=Flag\\n\\n#XACT: ARIA description for ObjectHeader icon infront of the title when it's active\\nOH_ARIA_ICON=Icon\\n\\n#XACT: ARIA description for Shell logo\\nSHELL_ARIA_LOGO=Logo\\n\\n#XTXT: MessagePage text\\nMESSAGE_PAGE_TEXT=No matching items found.\\n#XTXT: MessagePage description\\nMESSAGE_PAGE_DESCRIPTION=Check the filter settings\\n\\n#XFLD: Token number indicator which is used to show more tokens in MultiInput when the MultiInput it is in multi-line display mode\\nMULTIINPUT_SHOW_MORE_TOKENS={0} More\\n#XACT: ARIA announcement for multiinput containing label\\nMULTIINPUT_ARIA_CONTAIN_TOKEN=May contain tokens\\n#XACT: ARIA announcement for multiinput containing one token\\nMULTIINPUT_ARIA_CONTAIN_ONE_TOKEN=Contains 1 token\\n#XACT: ARIA announcement for multiinput containing several tokens\\nMULTIINPUT_ARIA_CONTAIN_SEVERAL_TOKENS=Contains {0} tokens\\n\\n#XACT: ARIA announcement for tokenizer label\\nTOKENIZER_ARIA_LABEL=Tokenizer\\n\\n#XACT: ARIA announcement for token label\\nTOKEN_ARIA_LABEL=Token\\n#XACT: ARIA announcement for token deletable\\nTOKEN_ARIA_DELETABLE=Deletable\\n\\n#XACT: ARIA announcement for the ObjectListItem unread mark\\nOBJECTLISTITEM_ARIA_UNREAD_VALUE=Unread\\n#XACT: ARIA announcement for the ObjectListItem locked mark\\nOBJECTLISTITEM_ARIA_LOCKED_MARK_VALUE=Locked\\n\\n#XBUT: MessagePopover predefined text for CLOSE action\\nMESSAGEPOPOVER_CLOSE=Close\\n#XBUT: MessagePopover predefined text for All Button\\nMESSAGEPOPOVER_ALL=All\\n#XACT: ARIA announcement for the MessagePopover back buttons tooltip\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON_TOOLTIP=Back to Messages\\n#XACT: ARIA announcement for the MessagePopover back buttons\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON=Message Details\\n#XACT: ARIA announcement for the MessagePopover heading\\nMESSAGEPOPOVER_ARIA_HEADING=Messages\\n\\n#XACT: ARIA announcement for the accept button\\nBUTTON_ARIA_TYPE_ACCEPT=Positive Action\\n#XACT: ARIA announcement for the reject button\\nBUTTON_ARIA_TYPE_REJECT=Negative Action\\n#XACT: ARIA announcement for the emphasized button\\nBUTTON_ARIA_TYPE_EMPHASIZED=Emphasized\\n\\n#XACT: ARIA text for position markers\\nCAROUSEL_POSITION=Item {0} of {1} displayed\\n\\n#XTXT: Text between numbers in the numeric page indicator\\nCAROUSEL_PAGE_INDICATOR_TEXT={0} of {1}\\n\\n#XTXT: colon separator\\nCOLON=\\\\:\\n\\n#XBUT: sap.m.semantic.SemanticControl Edit button text\\nSEMANTIC_CONTROL_EDIT=Edit\\n#XBUT: sap.m.semantic.SemanticControl Save button text\\nSEMANTIC_CONTROL_SAVE=Save\\n#XBUT: sap.m.semantic.SemanticControl Delete button text\\nSEMANTIC_CONTROL_DELETE=Delete\\n#XBUT: sap.m.semantic.SemanticControl Cancel button text\\nSEMANTIC_CONTROL_CANCEL=Cancel\\n#XBUT: sap.m.semantic.SemanticControl Approve button text\\nSEMANTIC_CONTROL_APPROVE=Approve\\n#XBUT: sap.m.semantic.SemanticControl Reject button text\\nSEMANTIC_CONTROL_REJECT=Reject\\n#XBUT: sap.m.semantic.SemanticControl Forward button text\\nSEMANTIC_CONTROL_FORWARD=Forward\\n#XBUT: sap.m.semantic.SemanticControl Open in button text\\nSEMANTIC_CONTROL_OPEN_IN=Open in...\\n#XBUT: sap.m.semantic.SemanticControl Sort button text\\nSEMANTIC_CONTROL_SORT=Sort\\n#XBUT: sap.m.semantic.SemanticControl Filter button text\\nSEMANTIC_CONTROL_FILTER=Filter\\n#XBUT: sap.m.semantic.SemanticControl Group button text\\nSEMANTIC_CONTROL_GROUP=Group\\n#XBUT: sap.m.semantic.SemanticControl Flag button text\\nSEMANTIC_CONTROL_FLAG=Flag\\n#XBUT: sap.m.semantic.SemanticControl Favorite button text\\nSEMANTIC_CONTROL_FAVORITE=Favorite\\n#XBUT: sap.m.semantic.SemanticControl Add button text\\nSEMANTIC_CONTROL_ADD=Add\\n#XBUT: sap.m.semantic.SemanticControl Send Email button text\\nSEMANTIC_CONTROL_SEND_EMAIL=Send E-Mail\\n#XBUT: sap.m.semantic.SemanticControl Discuss in SAP Jam button text\\nSEMANTIC_CONTROL_DISCUSS_IN_JAM=Discuss in SAP Jam\\n#XBUT: sap.m.semantic.SemanticControl Share in SAP Jam button text\\nSEMANTIC_CONTROL_SHARE_IN_JAM=Share on SAP Jam\\n#XBUT: sap.m.semantic.SemanticControl Send Message button text\\nSEMANTIC_CONTROL_SEND_MESSAGE=Send Message\\n#XBUT: sap.m.semantic.SemanticControl Save as Tile button text\\nSEMANTIC_CONTROL_SAVE_AS_TILE=Save as Tile\\n#XBUT: sap.m.semantic.SemanticControl Print button text\\nSEMANTIC_CONTROL_PRINT=Print\\n#XBUT: sap.m.semantic.SemanticControl Multi select button text\\nSEMANTIC_CONTROL_MULTI_SELECT=Multiple Selection\\n#XBUT: sap.m.semantic.SemanticControl Multi select cancel button text\\nSEMANTIC_CONTROL_MULTI_SELECT_CANCEL=Cancel Multiple Selection\\n#XBUT: sap.m.semantic.SemanticControl Message indicator button text\\nSEMANTIC_CONTROL_MESSAGES_INDICATOR=Messages\\n#XBUT: sap.m.semantic.SemanticControl \\\"Action\\\" Share button text\\nSEMANTIC_CONTROL_ACTION_SHARE=Share\\n#XTXT: sap.m.semantic.DetailPage title\\nSEMANTIC_DETAIL_PAGE_TITLE=Details\\n#XTXT: sap.m.semantic.MasterPage title\\nSEMANTIC_MASTER_PAGE_TITLE=Master\\n\\n#XFLD: sap.m.DraftIndicator Saving Draft indicator text\\nDRAFT_INDICATOR_SAVING_DRAFT=Saving draft...\\n#XFLD: sap.m.DraftIndicator Draft saved indicator text\\nDRAFT_INDICATOR_DRAFT_SAVED=Draft saved\\n\\n#XBUT: Wizard predefined text for Cancel button\\nWIZARD_CANCEL=Cancel\\n#XBUT: Wizard predefined text for Next button\\nWIZARD_NEXT=Next\\n#XBUT: Wizard predefined text for Finish button\\nWIZARD_FINISH=Review\\n\\n#XACT: Aria information for the Date Picker\\nDATEPICKER_DATE_TYPE=Date\\n\\n#XACT: WizardProgressNavigator selected step\\nWIZARD_PROG_NAV_SELECTED=Selected\\n#XACT: WizardProgressNavigator processed step\\nWIZARD_PROG_NAV_PROCESSED=Processed\\n#XACT: WizardProgressNavigator predefined text for step\\nWIZARD_PROG_NAV_STEP_TITLE=Step\\n#XBUT: Wizard predefined text for Step button\\nWIZARD_STEP=Step\\n#XACT: Aria label for the wizard\\nWIZARD_LABEL=Wizard\\n\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectHeader, showing that the item is flagged\\nTOOLTIP_OH_FLAG_MARK_VALUE=Flagged\\n\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectHeader, showing that the item is favorite\\nTOOLTIP_OH_FAVORITE_MARK_VALUE=Favorite\\n\\n#XTOL: Tooltip for the select title arrow inside sap.m.ObjectHeader\\nOH_SELECT_ARROW_TOOLTIP=Related Options\\n\\n#XTXT: Text value for marker type Flag\\nOM_FLAG=Flagged\\n\\n#XTXT: Text value for marker type Favorite\\nOM_FAVORITE=Favorite\\n\\n#XTXT: Text value for marker type Draft\\nOM_DRAFT=Draft\\n\\n#XTXT: Text value for marker type Locked\\nOM_LOCKED=Locked\\n\\n#XTXT: Text value for marker type LockedBy that shows who has locked the object, e.g. Locked by {User name}\\nOM_LOCKED_BY=Locked by {0}\\n\\n#XTXT: Text value for marker type Locked by another user\\nOM_LOCKED_BY_ANOTHER_USER=Locked by another user\\n\\n#XTXT: Text value for marker type Unsaved Changes\\nOM_UNSAVED=Unsaved Changes\\n\\n#XTXT: Text value for marker type UnsavedBy Changes that shows who has unsaved changes, e.g. Unsaved Changes by {User name}\\nOM_UNSAVED_BY=Unsaved Changes by {0}\\n\\n#XTXT: Text value for marker type Unsaved by another user\\nOM_UNSAVED_BY_ANOTHER_USER=Unsaved changes by another user\\n\\n#XTOL: Tooltip for \\\"Send SMS\\\" in QuickView\\nQUICKVIEW_SEND_SMS=Send SMS\\n\\n#XTXT: Text for character left\\nTEXTAREA_CHARACTER_LEFT={0} Character Left\\n\\n#XTXT: Text for characters left\\nTEXTAREA_CHARACTERS_LEFT={0} Characters Left\\n\\n#XTXT: Text for character exceeded\\nTEXTAREA_CHARACTER_EXCEEDED={0} Character Exceeded\\n\\n#XTXT: Text for characters exceeded\\nTEXTAREA_CHARACTERS_EXCEEDED={0} Characters Exceeded\\n\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectListItem, showing that the item is flagged\\nTOOLTIP_OLI_FLAG_MARK_VALUE=Flagged\\n\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectListItem, showing that the item is favorite\\nTOOLTIP_OLI_FAVORITE_MARK_VALUE=Favorite\\n\\n#XTOL: Tooltip for the locked icon inside sap.m.ObjectListItem, showing that the item is locked\\nTOOLTIP_OLI_LOCK_MARK_VALUE=Locked\\n\\n#XBUT: Time Selection button text of Time Picker control\\nTIMEPICKER_SET=OK\\n\\n#XBUT: Cancel/Close button text of Time Picker control\\nTIMEPICKER_CANCEL=Cancel\\n\\n#YACT: ARIA tag of Time Picker control\\nTIMEPICKER_SCREENREADER_TAG=Time Picker\\n\\n#YACT: ARIA tag of Time Picker control with format as placeholder\\nTIMEPICKER_WITH_PH_SCREENREADER_TAG=Time Picker in format {0}\\n\\n#XFLD: Label of the hours value slider inside a Time Picker control\\nTIMEPICKER_LBL_HOURS=Hours\\n\\n#XFLD: Label of the minutes value slider inside a Time Picker control\\nTIMEPICKER_LBL_MINUTES=Minutes\\n\\n#XFLD: Label of the seconds value slider inside a Time Picker control\\nTIMEPICKER_LBL_SECONDS=Seconds\\n\\n#XFLD: Label of the am/pm value slider inside a Time Picker control\\nTIMEPICKER_LBL_AMPM=AM/PM\\n\\n#XACT: ARIA label for Breadcrumbs\\nBREADCRUMB_LABEL=Breadcrumb Trail\\n\\n#XTOL: Tooltip text for Breadcrumbs select\\nBREADCRUMB_SELECT_TOOLTIP=More\\n\\n#XACT: Unread status of Notification List Item\\nNOTIFICATION_LIST_ITEM_UNREAD=Notification unread.\\n\\n#XACT: Read status of Notification List Item\\nNOTIFICATION_LIST_ITEM_READ=Notification read.\\n\\n#XACT: ARIA text for datetime and priority\\nNOTIFICATION_LIST_ITEM_DATETIME_PRIORITY=Due in {0}, {1} Priority.\\n\\n#XFLD: text that will be displayed when tile failed to load\\nINFOTILE_CANNOT_LOAD_TILE=Cannot load tile\\n\\n#XFLD: text that will be read while tile is loading\\nINFOTILE_LOADING=Loading\\n\\n#XTXT: text for critical color\\nSEMANTIC_COLOR_CRITICAL=Warning\\n\\n#XTXT: text for good color\\nSEMANTIC_COLOR_GOOD=Good\\n\\n#XTXT: text for neutral color\\nSEMANTIC_COLOR_NEUTRAL=Neutral\\n\\n#XTXT: text for error color\\nSEMANTIC_COLOR_ERROR=Critical\\n\\n#XTOL:\\nNUMERICCONTENT_DEVIATION_UP=Ascending\\n\\n#XTOL:\\nNUMERICCONTENT_DEVIATION_DOWN=Descending\\n\\n#YACT: ARIA tag of MaskInput control\\nMASKINPUT_SCREENREADER_TAG=Masked\\n\\n#YACT: ARIA description of MaskInput control\\nMASKINPUT_SCREENREADER_DESCRIPTION=When focused, the masked input field is formatted and prefilled. The {0} symbol is reserved for a placeholder. The value that has to be entered in this field is in the following format {1} where every symbol corresponds to a rule. A rule is a set of characters that are allowed for their particular position. Symbols that do not have a rule are immutable characters and are part of the value formatting.\\n\\n#XACT: ARIA scroll back button for tabstrip\\nTABSTRIP_SCROLL_BACK=Scroll Back\\n\\n#XACT: ARIA scroll forward button for tabstrip\\nTABSTRIP_SCROLL_FORWARD=Scroll Forward\\n\\n#XACT: ARIA static text for modified tabstrip item\\nTABSTRIP_ITEM_MODIFIED=Unsaved\\n\\n#XACT: ARIA static text for not-modified tabstrip item\\nTABSTRIP_ITEM_NOT_MODIFIED=Saved\\n\\n#XACT: ARIA static text for closable tabstrip item\\nTABSTRIP_ITEM_CLOSABLE=Closable\\n#XFLD: Footer text for TileContent\\nTILECONTENT_FOOTER_TEXT={0}, {1}\\n\\n#XBUT: Button text for collapsing the Notification List Group\\nNOTIFICATION_LIST_GROUP_COLLAPSE=Collapse Group\\n\\n#XBUT: Button text for expanding the Notification List Group\\nNOTIFICATION_LIST_GROUP_EXPAND=Expand Group\\n\\n#XACT: ARIA add new tab button for tabstrip\\nTABCONTAINER_ADD_NEW_TAB=Add New Tab\\n\\n#XACT: ARIA dropdown button for tabstrip\\nTABSTRIP_OPENED_TABS=Opened Tabs\\n\\n#XBUT: Button text for expanding a Notification List Item\\nNOTIFICATION_LIST_ITEM_SHOW_MORE=Show More\\n\\n#XBUT: Button text for collapsing a Notification List Item\\nNOTIFICATION_LIST_ITEM_SHOW_LESS=Show Less\\n\\n#XBUT: Date button of DateTimePicker on small screens\\nDATETIMEPICKER_DATE=Date\\n\\n#XBUT: Time button of DateTimePicker on small screens\\nDATETIMEPICKER_TIME=Time\\n\\n#XACT: Aria information for the Date Time Picker\\nDATETIMEPICKER_TYPE=Date and Time\\n\\n#XACT: PlanningCalendar accessibility description\\nPLANNINGCALENDAR=Planning calendar\\n\\n#XACT: PlanningCalendar view selector accessibility description\\nPLANNINGCALENDAR_VIEW=View calendar by\\n\\n#XFLD: Name of the \\\"Hours\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_HOURS=Hours\\n\\n#XFLD: Name of the \\\"Days\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_DAYS=Days\\n\\n#XFLD: Name of the \\\"Months\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_MONTHS=Months\\n\\n#XFLD: Name of the \\\"Week\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_WEEK=1 Week\\n\\n#XFLD: Name of the \\\"OneMonth\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_ONE_MONTH=1 Month\\n\\n#XBUT: Today button of PlanningCalendar control\\nPLANNINGCALENDAR_TODAY=Today\\n\\n#XFLD: Text for all day event\\nPLANNINGCALENDAR_ALLDAY=All Day\\n\\n#XFLD: Text for event with no starting time\\nPLANNINGCALENDAR_UNTIL=until {0}\\n\\n#XFLD: Text for a placeholder row when there are no appointments\\nPLANNINGCALENDAR_ROW_NO_APPOINTMENTS=No Entries\\n\\n#XTOL: Tool tip for nextButton of the PagingButton\\nPAGINGBUTTON_NEXT=Next Page\\n\\n#XTOL: Tool tip for nextButton of the PagingButton\\nPAGINGBUTTON_PREVIOUS=Previous Page\\n\\n#XBUT: Text and number of selected items for toolbar button of SelectionDetails\\nSELECTIONDETAILS_BUTTON_TEXT_WITH_NUMBER=Details ({0})\\n\\n#XBUT: Text for toolbar button of SelectionDetails\\nSELECTIONDETAILS_BUTTON_TEXT=Details\\n\\n#############\\n#Translatable Control Types and States for ACC\\n#############\\n\\n#XACT: type of an UI control is an input field\\nACC_CTR_TYPE_INPUT=Input\\n\\n#XACT: type of an UI control is a input field (which allows setting multiple values)\\nACC_CTR_TYPE_MULTIINPUT=Multi Input\\n\\n#XACT: type of an UI control is a date input field\\nACC_CTR_TYPE_DATEINPUT=Date Input\\n\\n#XACT: type of an UI control is a time input field\\nACC_CTR_TYPE_TIMEINPUT=Time input\\n\\n#XACT: type of an UI control is a date and time input field\\nACC_CTR_TYPE_DATETIMEINPUT=Date/time input\\n\\n#XACT: type of an UI control is a rating indicator\\nACC_CTR_TYPE_RATING=Rating\\n\\n#XACT: type of an UI control is a button\\nACC_CTR_TYPE_BUTTON=Button\\n\\n#XACT: type of an UI control is a link\\nACC_CTR_TYPE_LINK=Link\\n\\n#XACT: type of an UI control is an image\\nACC_CTR_TYPE_IMAGE=Image\\n\\n#XACT: type of an UI control is a checkbox\\nACC_CTR_TYPE_CHECKBOX=Checkbox\\n\\n#XACT: type of of an UI control is a progess indicator\\nACC_CTR_TYPE_PROGRESS=Progress\\n\\n#XACT: type of an UI control is a combobox\\nACC_CTR_TYPE_COMBO=Combo Box\\n\\n#XACT: type of of an UI control is a combobox (which allows multi selection)\\nACC_CTR_TYPE_MULTICOMBO=Multi Combo Box\\n\\n#XACT: type of of an UI control is a list\\nACC_CTR_TYPE_LIST=List Box\\n\\n#XACT: type of of an UI control is a list item\\nACC_CTR_TYPE_OPTION=List Item\\n\\n#XACT: type of of an UI control is a tree\\nACC_CTR_TYPE_TREE=Tree\\n\\n#XACT: type of of an UI control is a tree item\\nACC_CTR_TYPE_TREEITEM=Tree Item\\n\\n#XACT: type of of an UI control is a table\\nACC_CTR_TYPE_TABLE=Table\\n\\n#XACT: type of of an UI control is a table row\\nACC_CTR_TYPE_ROW=Row\\n\\n#XACT: ARIA announcement for the header row of the table\\nACC_CTR_TYPE_HEADER_ROW=Header Row\\n\\n#XACT: ARIA announcement for the footer row of the table\\nACC_CTR_TYPE_FOOTER_ROW=Footer Row\\n\\n#XACT: \\\"pressed\\\" state of e.g. a togglebutton which should be announced by screenreaders\\nACC_CTR_STATE_PRESSED=Pressed\\n\\n#XACT: \\\"checked\\\" state of e.g. a checkbox which should be announced by screenreaders\\nACC_CTR_STATE_CHECKED=Checked\\n\\n#XACT: state (current and max. value) of a rating indicator which should be announced by screenreaders\\nACC_CTR_STATE_RATING={0} out of {1}\\n\\n#XACT: progress state of a progress indicator which should be announced by screenreaders\\nACC_CTR_STATE_PROGRESS={0} %\\n\\n#############\\n\\n#XACT: Aria information for the Split Button\\nSPLIT_BUTTON_DESCRIPTION=Split Button\\n\\n#XACT: Aria hint for the keyboard handling support of the Split Button\\nSPLIT_BUTTON_KEYBOARD_HINT=Press Enter to trigger action and Arrow Down to open menu\\n\\n#XTOL: Tooltip text for back button inside a Menu Page\\nMENU_PAGE_BACK_BUTTON=Back to\\n\\n#XBUT: Menu predefined text for CLOSE action\\nMENU_CLOSE=Cancel\\n\\n#XBUT: Button text for closing a Notification List Base control\\nNOTIFICATION_LIST_BASE_CLOSE=Close\\n\\n\\n#XBUT: No grouping item in ViewSettingsPopover\\nNO_GROUPING=No Grouping\\n\\n#XBUT: No filtering item in ViewSettingsPopover\\nREMOVE_FILTER=Remove Filter\\n\\n#XBUT: ARIA-LabelledBy for ViewSettingsPopover\\nARIA_LABELLED_BY_POPOVER=Column View Settings\\n\\n#XBUT: Show selected only for ViewSettingsPopover\\nSHOW_SELECTED_ONLY=Show Selected Only\\n\\n#XBUT: No sorting item in ViewSettingsPopover\\nNO_SORTING=No Sorting\\n\\n#YACT: ARIA information about multiple content within the SlideTile\\nSLIDETILE_MULTIPLE_CONTENT=Element with multiple content\\n\\n#YACT: ARIA information about toggle sliding within the SlideTile\\nSLIDETILE_TOGGLE_SLIDING=To toggle sliding, press space bar\\n\\n#YACT: ARIA information how to activate the SlideTile\\nSLIDETILE_ACTIVATE=To activate, press enter\\n\\n#YACT: ARIA information how to scroll back in the SlideTile\\nSLIDETILE_SCROLL_BACK=To scroll back, press B\\n\\n#YACT: ARIA information how to to scroll forward in the SlideTile\\nSLIDETILE_SCROLL_FORWARD=To scroll forward, press F\\n\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\nSLIDER_HANDLE=Slider Handle\\n\\n#XACT: ARIA announcement for the range in RangeSlider\\nRANGE_SLIDER_RANGE_ANNOUNCEMENT=From {0} to {1}\\n\\n#XACT: ARIA ARIA-LabelledBy for the left handle and tooltip in RangeSlider\\nRANGE_SLIDER_LEFT_HANDLE=Left Handle\\n\\n#XACT: ARIA ARIA-LabelledBy for the right handle and tooltip in RangeSlider\\nRANGE_SLIDER_RIGHT_HANDLE=Right Handle\\n\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\nRANGE_SLIDER_RANGE_HANDLE=Range\\n\\n#XBUT: Button text for close button in the LightBox\\nLIGHTBOX_CLOSE_BUTTON=Close\\n\\n#XTOL: Tooltip on the button to allow to scroll back\\nHEADERCONTAINER_BUTTON_PREV_SECTION=Previous\\n\\n#XTOL: Tooltip on the button to allow to scroll forward\\nHEADERCONTAINER_BUTTON_NEXT_SECTION=Next\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout.\\nLIGHTBOX_IMAGE_TIMED_OUT=Image could not be loaded\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\nLIGHTBOX_IMAGE_TIMED_OUT_DETAILS=This image is too big to load right now. Please try again later.\\n\\n#XTXT: Error message for LightBox image not loaded.\\nLIGHTBOX_IMAGE_ERROR=An error has occurred.\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\nLIGHTBOX_IMAGE_ERROR_DETAILS=We could not find the image at the specified location, or the server is not responding.\\n\\n#XACT: ARIA announcement for enlarged image\\nLIGHTBOX_ARIA_ENLARGED=Enlarged image of {0}\\n\\n#XACT: ARIA keyboard announcement for the DEL key for removing a tile\\nTILE_REMOVE_BY_DEL_KEY=Press delete key to remove the item.\\n\\n#XACT: ARIA text for GenericTile in actions scope\\nGENERICTILE_ACTIONS_ARIA_TEXT=Removable tile\\n\\n#XTOL: Tooltip for REMOVE button in the GenericTile\\nGENERICTILE_REMOVEBUTTON_TEXT=Remove\\n\\n#XTXT: Reached maximum number of notifications in NotificationListGroup title\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_TITLE=There are {0} more notifications\\n\\n#XTXT: Reached maximum number of notifications in NotificationListGroup\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_BODY=You need to close or take action on the listed notifications to display more.\\n\\n#XTOL: Tooltip of the button for increasing for example the quantity of a product inside shopping-cart application\\nSTEP_INPUT_INCREASE_BTN=Increase\\n\\n#XTOL: Tooltip of the button for decreasing for example the quantity of a product inside shopping-cart application\\nSTEP_INPUT_DECREASE_BTN=Decrease\\n\\n#XMIT: Radio button control name caption\\nRADIOBUTTON_NAME=Radio Button\\n\\n#XTIT: Radio button control name plural caption\\nRADIOBUTTON_NAME_PLURAL=Radio Buttons\\n\\n#XMIT: Text control name caption\\nTEXT_NAME=Text\\n\\n#XTIT: Text control name plural caption\\nTEXT_NAME_PLURAL=Texts\\n\\n#XMIT: Date picker control name caption\\nDATEPICKER_NAME=Date Picker\\n\\n#XACT: ARIA role for the control Object Identifier\\nOI_ARIA_ROLE=Object Identifier\\n\\n#XTIT: Date picker control name plural caption\\nDATEPICKER_NAME_PLURAL=Date Pickers\\n\\n#XMIT: Check Box control name caption\\nCHECKBOX_NAME=Checkbox\\n\\n#XTIT: Check Box control name plural caption\\nCHECKBOX_NAME_PLURAL=Checkboxes\\n\\n#XMIT: Rating Indicator control name caption\\nRATINGINDICATOR_NAME=Rating Indicator\\n\\n#XTIT: Rating Indicator control name plural caption\\nRATINGINDICATOR_NAME_PLURAL=Rating Indicators\\n\\n#XMIT: Page control name caption\\nPAGE_NAME=Page\\n\\n#XTIT: Page control name plural caption\\nPAGE_NAME_PLURAL=Pages\\n\\n#XMIT: Label control name caption\\nLABEL_NAME=Label\\n\\n#XTIT: Label control name plural caption\\nLABEL_NAME_PLURAL=Labels\\n\\n#XMIT: Link control name caption\\nLINK_NAME=Link\\n\\n#XTIT: Link control name plural caption\\nLINK_NAME_PLURAL=Links\\n\\n#XMIT: Scroll container control name caption\\nSCROLL_CONTAINER_CONTROL_NAME=Container\\n\\n#XTIT: Scroll container control name plural caption\\nSCROLL_CONTAINER_CONTROL_NAME_PLURAL=Containers\\n\\n#XMIT: Panel control name caption\\nPANEL_NAME=Panel\\n\\n#XTIT: Panel control name plural caption\\nPANEL_NAME_PLURAL=Panels\\n\\n#XMIT: ListItemBase control name caption\\nLIST_ITEM_BASE_NAME=List Item\\n\\n#XTIT: ListItemBase control name plural caption\\nLIST_ITEM_BASE_NAME_PLURAL=List Items\\n\\n#XACT:Author of Notification List Item\\nNOTIFICATION_LIST_ITEM_CREATED_BY=Created By\\n\\n#XACT: Unread status of Notification List Item\\nNOTIFICATION_LIST_GROUP_UNREAD=Notification group unread.\\n\\n#XACT: Read status of Notification List Item\\nNOTIFICATION_LIST_GROUP_READ=Notification group read.\\n\\n#XMIT: Image control name caption\\nIMAGE_NAME=Image\\n\\n#XTIT: Image control name plural caption\\nIMAGE_NAME_PLURAL=Images\\n\\n#XMIT: InputBase control name caption\\nINPUT_BASE_NAME=Input\\n\\n#XTIT: InputBase control name plural caption\\nINPUT_BASE_NAME_PLURAL=Inputs\\n\\n#XMIT: Title control name caption\\nTITLE_NAME=Title\\n\\n#XTIT: Title control name plural caption\\nTITLE_NAME_PLURAL=Titles\\n\\n#XMIT: Slider control name caption\\nSLIDER_NAME=Slider\\n\\n#XTIT: Slider control name plural caption\\nSLIDER_NAME_PLURAL=Sliders\\n\\n#XMIT: ListBase control name caption\\nLIST_BASE_NAME=List\\n\\n#XTIT: ListBase control name plural caption\\nLIST_BASE_NAME_PLURAL=Lists\\n\\n#XMIT: Responsive Table control name caption\\nTABLE_NAME=Table\\n\\n#XTIT: Table control name plural caption\\nTABLE_NAME_PLURAL=Tables\\n\\n#XACT: Aria label for Table select all CheckBox\\nTABLE_CHECKBOX_SELECT_ALL=Select all rows\\n\\n#XTIT: Column control name caption\\nCOLUMN_NAME=Column\\n\\n#XTIT: Column control name plural caption\\nCOLUMN_NAME_PLURAL=Columns\\n\\n#XMIT: FlexBox control name caption\\nFLEXBOX_CONTROL_NAME=Container\\n\\n#XTIT: FlexBox control name plural caption\\nFLEXBOX_CONTROL_NAME_PLURAL=Containers\\n\\n#XBUT: Pdf viewer's popup close button\\nPDF_VIEWER_POPUP_CLOSE_BUTTON=Close\\n\\n#XTXT: Pdf viewer's download link\\nPDF_VIEWER_DOWNLOAD_TEXT=Download\\n\\n#XTXT: Text in error placeholder of pdf viewer\\nPDF_VIEWER_PLACEHOLDER_ERROR_TEXT=The PDF file could not be loaded.\\n\\n#XACT: PDF viewer's accessibility label\\nPDF_VIEWER_ACCESSIBILITY_LABEL=PDF Viewer\\n\\n#XTIT: PDF viewer's message box header for source validation error\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_HEADER=Source Validation Error\\n\\n#XMSG: PDF viewer's message box text for source validation error\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_TEXT=Could not validate the source of the file. Show the file anyway?\\n\\n#XBUT: MultiEditField prefilled Item keep\\nMULTI_EDIT_KEEP_TEXT=Keep Existing Values\\n\\n#XBUT: MultiEditField prefilled Item blank\\nMULTI_EDIT_BLANK_TEXT=Leave Blank\\n\\n#XBUT: MultiEditField prefilled Item new\\nMULTI_EDIT_NEW_TEXT=Use Value Help \\n\\n#XTXT: Text representing the Select's picker title text\\nSELECT_PICKER_TITLE_TEXT=Select\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/openui5-sap.m/resources/sap/m/messagebundle_en.properties\n// module id = 3Use\n// module chunks = 1","/*\n * !UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\nsap.ui.define([], function() {\n\t\"use strict\";\n\n\t/**\n\t * ColumnHeader renderer.\n\t * @namespace\n\t */\n\tvar ColumnHeaderRenderer = {};\n\n\tColumnHeaderRenderer.render = function(oRm, oControl) {\n\t\tvar sControlId = oControl.getId();\n\t\tvar bInteractive = oControl._isInteractive();\n\t\t// container\n\t\toRm.write(\"<div\");\n\t\toRm.writeControlData(oControl);\n\t\tif (bInteractive) {\n\t\t\t// add control in tab chain only if it is interactive\n\t\t\toRm.writeAttribute(\"tabindex\", 0);\n\t\t\toRm.writeAttribute(\"role\", \"button\");\n\t\t\toRm.addClass(\"sapMColumnHeaderFocusable\");\n\t\t\toRm.writeAttributeEscaped(\"aria-labelledby\", sControlId + \"-info\");\n\t\t\toRm.addClass(\"sapMColumnHeaderActive\");\n\t\t}\n\t\toRm.addClass(\"sapMColumnHeader\");\n\t\toRm.writeClasses();\n\t\toRm.write(\">\");\n\n\t\t// render title for control\n\t\tthis.renderText(oRm, oControl);\n\n\t\t// render icons for control\n\t\tthis.renderIcons(oRm, oControl);\n\n\t\t// no special screen reader support for Grid Table\n\t\tif (bInteractive && sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\t// hidden span\n\t\t\toRm.write(\"<span\");\n\t\t\toRm.writeAttributeEscaped(\"id\", sControlId + \"-info\");\n\t\t\toRm.addClass(\"sapUiInvisibleText\");\n\t\t\toRm.writeClasses();\n\t\t\toRm.writeAttributeEscaped(\"aria-hidden\", \"true\");\n\t\t\toRm.write(\">\");\n\t\t\toRm.writeEscaped(oControl.getAccessibilityInfo().description);\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\n\t\t// container end\n\t\toRm.write(\"</div>\");\n\t};\n\n\t// render title\n\tColumnHeaderRenderer.renderText = function(oRm, oControl) {\n\t\t// title container\n\t\toRm.write(\"<div\");\n\t\toRm.addClass(\"sapMColumnHeaderText\");\n\t\toRm.writeClasses();\n\t\toRm.write(\">\");\n\t\toRm.writeEscaped(oControl.getText());\n\n\t\t// title container end\n\t\toRm.write(\"</div>\");\n\t};\n\n\t// render icons\n\tColumnHeaderRenderer.renderIcons = function(oRm, oControl) {\n\t\t// container for control icon(s)\n\t\toRm.write(\"<div\");\n\t\toRm.addClass(\"sapMColumnHeaderIcons\");\n\t\toRm.writeClasses();\n\t\toRm.write(\">\");\n\n\t\tthis.renderSortIcon(oRm, oControl);\n\t\tthis.renderFilterIcon(oRm, oControl);\n\n\t\t// icons container end\n\t\toRm.write(\"</div>\");\n\t};\n\n\tColumnHeaderRenderer.renderSortIcon = function(oRm, oControl) {\n\t\tvar oSortIcon = oControl.getAggregation(\"_sortIcon\");\n\n\t\tif (!oSortIcon) {\n\t\t\treturn;\n\t\t}\n\n\t\toRm.renderControl(oSortIcon);\n\t};\n\n\tColumnHeaderRenderer.renderFilterIcon = function(oRm, oControl) {\n\t\tvar oFilterIcon = oControl.getAggregation(\"_filterIcon\");\n\n\t\tif (!oFilterIcon) {\n\t\t\treturn;\n\t\t}\n\n\t\toRm.renderControl(oFilterIcon);\n\t};\n\n\treturn ColumnHeaderRenderer;\n}, /* bExport= */true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ColumnHeaderRenderer.js","require(\"sap/m/themes/sap_belize/Table.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Table.\nsap.ui.define(['jquery.sap.global', './ListBase', './ListItemBase', './library', 'sap/ui/Device'],\n\tfunction(jQuery, ListBase, ListItemBase, library, Device) {\n\t\"use strict\";\n\n\n\n\t// shortcut for sap.m.ListKeyboardMode\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\t// shortcut for sap.m.ListGrowingDirection\n\tvar ListGrowingDirection = library.ListGrowingDirection;\n\n\t// shortcut for sap.m.BackgroundDesign\n\tvar BackgroundDesign = library.BackgroundDesign;\n\n\t// shortcut for sap.m.PopinLayout\n\tvar PopinLayout = library.PopinLayout;\n\n\n\n\t/**\n\t * Constructor for a new Table.\n\t *\n\t * @param {string} [sId] Id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * <code>sap.m.Table</code> control provides a set of sophisticated and convenience functions for responsive table design.\n\t * To render the <code>sap.m.Table</code> properly, the order of the <code>columns</code> aggregation should match with the order of the items <code>cells</code> aggregation. Also <code>sap.m.Table</code> requires at least one visible <code>sap.m.Column</code> in <code>columns</code> aggregation.\n\t * For mobile devices, the recommended limit of table rows is 100 (based on 4 columns) to assure proper performance. To improve initial rendering on large tables, use the <code>growing</code> feature.\n\t *\n\t * See section \"{@link topic:5eb6f63e0cc547d0bdc934d3652fdc9b Creating Tables}\" and \"{@link topic:38855e06486f4910bfa6f4485f7c2bac Configuring Responsive Behavior of a Table}\"\n\t * in the documentation for an introduction to <code>sap.m.Table</code> control.\n\t *\n\t *\n\t * @extends sap.m.ListBase\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @since 1.16\n\t * @alias sap.m.Table\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar Table = ListBase.extend(\"sap.m.Table\", /** @lends sap.m.Table.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Sets the background style of the table. Depending on the theme, you can change the state of the background from <code>Solid</code> to <code>Translucent</code> or to <code>Transparent</code>.\n\t\t\t */\n\t\t\tbackgroundDesign : {type : \"sap.m.BackgroundDesign\", group : \"Appearance\", defaultValue : BackgroundDesign.Translucent},\n\n\t\t\t/**\n\t\t\t * Defines the algorithm to be used to layout the table cells, rows, and columns.\n\t\t\t * By default, a table is rendered with fixed layout algorithm. This means the horizontal layout only depends on the table's width and the width of the columns, not the contents of the cells. Cells in subsequent rows do not affect column widths. This allows a browser to layout the table faster than the auto table layout since the browser can begin to display the table once the first row has been analyzed.\n\t\t\t *\n\t\t\t * When this property is set to <code>false</code>, <code>sap.m.Table</code> is rendered with auto layout algorithm. This means, the width of the table and its cells depends on the contents of the cells. The column width is set by the widest unbreakable content inside the cells. This can make the rendering slow, since the browser needs to read through all the content in the table before determining the final layout.\n\t\t\t * <b>Note:</b> Since <code>sap.m.Table</code> does not have its own scrollbars, setting <code>fixedLayout</code> to false can force the table to overflow, which may cause visual problems. It is suggested to use this property when a table has a few columns in wide screens or within the horizontal scroll container (e.g <code>sap.m.Dialog</code>) to handle overflow.\n\t\t\t * In auto layout mode the <code>width</code> property of <code>sap.m.Column</code> is taken into account as a minimum width.\n\t\t\t * @since 1.22\n\t\t\t */\n\t\t\tfixedLayout : {type : \"boolean\", group : \"Behavior\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Setting this property to <code>true</code> will show an overlay on top of the table content and prevents the user interaction with it.\n\t\t\t * @since 1.22.1\n\t\t\t */\n\t\t\tshowOverlay : {type : \"boolean\", group : \"Appearance\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Enables alternating table row colors.\n\t\t\t * <b>Note:</b> This property can only be used with the Belize and Belize Deep themes.\n\t\t\t * Alternate row coloring is not available for the High Contrast Black/White themes.\n\t\t\t * @since 1.52\n\t\t\t */\n\t\t\talternateRowColors : {type : \"boolean\", group : \"Appearance\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Defines the layout in which the table pop-in rows are rendered.\n\t\t\t * <b>Note:</b> The <code>demandPopin</code> and <code>minScreenWidth</code> properties of the <code>Column</code> control must be configured appropriately.\n\t\t\t * @since 1.52\n\t\t\t */\n\t\t\tpopinLayout : {type : \"sap.m.PopinLayout\", group : \"Appearance\", defaultValue : PopinLayout.Block}\n\t\t},\n\t\taggregations : {\n\n\t\t\t/**\n\t\t\t * Defines the columns of the table.\n\t\t\t */\n\t\t\tcolumns : {type : \"sap.m.Column\", multiple : true, singularName : \"column\"}\n\t\t},\n\t\tdesignTime: true\n\t}});\n\n\t// class name for the navigation items\n\tTable.prototype.sNavItemClass = \"sapMListTblRow\";\n\n\tTable.prototype.init = function() {\n\t\tthis._iItemNeedsColumn = 0;\n\t\tListBase.prototype.init.call(this);\n\t};\n\n\tTable.prototype.onBeforeRendering = function() {\n\t\tListBase.prototype.onBeforeRendering.call(this);\n\t\tthis._ensureColumnsMedia();\n\t\tthis._notifyColumns(\"ItemsRemoved\");\n\t};\n\n\tTable.prototype._ensureColumnsMedia = function() {\n\t\tthis.getColumns().forEach(function (oColumn) {\n\t\t\tif (oColumn._bShouldAddMedia) {\n\t\t\t\toColumn._addMedia();\n\t\t\t}\n\t\t});\n\t};\n\n\tTable.prototype.onAfterRendering = function() {\n\t\tListBase.prototype.onAfterRendering.call(this);\n\t\tthis.updateSelectAllCheckbox();\n\t\tthis._renderOverlay();\n\t};\n\n\tTable.prototype._renderOverlay = function() {\n\t\tvar $this = this.$(),\n\t\t\t$overlay = $this.find(\".sapMTableOverlay\"),\n\t\t\tbShowOverlay = this.getShowOverlay();\n\t\tif (bShowOverlay && $overlay.length === 0) {\n\t\t\t$overlay = jQuery(\"<div>\").addClass(\"sapUiOverlay sapMTableOverlay\").css(\"z-index\", \"1\");\n\t\t\t$this.append($overlay);\n\t\t} else if (!bShowOverlay) {\n\t\t\t$overlay.remove();\n\t\t}\n\t};\n\n\tTable.prototype.setShowOverlay = function(bShow) {\n\t\tthis.setProperty(\"showOverlay\", bShow, true);\n\t\tthis._renderOverlay();\n\t\treturn this;\n\t};\n\n\tTable.prototype.exit = function () {\n\t\tListBase.prototype.exit.call(this);\n\t\tif (this._selectAllCheckBox) {\n\t\t\tthis._selectAllCheckBox.destroy();\n\t\t\tthis._selectAllCheckBox = null;\n\t\t}\n\t};\n\n\tTable.prototype.destroyItems = function() {\n\t\tthis._notifyColumns(\"ItemsRemoved\");\n\t\treturn ListBase.prototype.destroyItems.apply(this, arguments);\n\t};\n\n\tTable.prototype.removeAllItems = function() {\n\t\tthis._notifyColumns(\"ItemsRemoved\");\n\t\treturn ListBase.prototype.removeAllItems.apply(this, arguments);\n\t};\n\n\tTable.prototype.removeSelections = function() {\n\t\tListBase.prototype.removeSelections.apply(this, arguments);\n\t\tthis.updateSelectAllCheckbox();\n\t\treturn this;\n\t};\n\n\tTable.prototype.selectAll = function () {\n\t\tListBase.prototype.selectAll.apply(this, arguments);\n\t\tthis.updateSelectAllCheckbox();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Getter for aggregation columns.\n\t *\n\t * @param {Boolean} [bSort] set true to get the columns in an order that respects personalization settings\n\t * @returns {sap.m.Column[]} columns of the Table\n\t * @public\n\t */\n\tTable.prototype.getColumns = function(bSort) {\n\t\tvar aColumns = this.getAggregation(\"columns\", []);\n\t\tif (bSort) {\n\t\t\taColumns.sort(function(c1, c2) {\n\t\t\t\treturn c1.getOrder() - c2.getOrder();\n\t\t\t});\n\t\t}\n\t\treturn aColumns;\n\t};\n\n\t/*\n\t * This hook method is called if growing feature is enabled and after new page loaded\n\t * @overwrite\n\t */\n\tTable.prototype.onAfterPageLoaded = function() {\n\t\tthis.updateSelectAllCheckbox();\n\t\tif (this.getAlternateRowColors()) {\n\t\t\tvar $tblBody = this.$(\"tblBody\").removeClass();\n\t\t\t$tblBody.addClass(this._getAlternateRowColorsClass());\n\t\t}\n\t\tListBase.prototype.onAfterPageLoaded.apply(this, arguments);\n\t};\n\n\t/*\n\t * This hook method is called from renderer to determine whether items should render or not\n\t * @overwrite\n\t */\n\tTable.prototype.shouldRenderItems = function() {\n\t\tvar bHasVisibleColumns = this.getColumns().some(function(oColumn) {\n\t\t\treturn oColumn.getVisible();\n\t\t});\n\n\t\tif (!bHasVisibleColumns) {\n\t\t\tjQuery.sap.log.warning(\"No visible columns found in \" + this);\n\t\t}\n\n\t\treturn bHasVisibleColumns;\n\t};\n\n\t// this gets called when item type column requirement is changed\n\tTable.prototype.onItemTypeColumnChange = function(oItem, bNeedsTypeColumn) {\n\t\tthis._iItemNeedsColumn += (bNeedsTypeColumn ? 1 : -1);\n\n\t\t// update type column visibility\n\t\tif (this._iItemNeedsColumn == 1 && bNeedsTypeColumn) {\n\t\t\tthis._setTypeColumnVisibility(true);\n\t\t} else if (this._iItemNeedsColumn == 0) {\n\t\t\tthis._setTypeColumnVisibility(false);\n\t\t}\n\t};\n\n\t// this gets called when selected property of the item is changed\n\tTable.prototype.onItemSelectedChange = function(oItem, bSelect) {\n\t\tListBase.prototype.onItemSelectedChange.apply(this, arguments);\n\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\tthis.updateSelectAllCheckbox();\n\t\t});\n\t};\n\n\t/*\n\t * Returns the <table> DOM reference\n\t * @protected\n\t */\n\tTable.prototype.getTableDomRef = function() {\n\t\treturn this.getDomRef(\"listUl\");\n\t};\n\n\t/*\n\t * Returns items container DOM reference\n\t * @overwrite\n\t */\n\tTable.prototype.getItemsContainerDomRef = function() {\n\t\treturn this.getDomRef(\"tblBody\");\n\t};\n\n\t/*\n\t * Sets DOM References for keyboard navigation\n\t * @overwrite\n\t */\n\tTable.prototype.setNavigationItems = function(oItemNavigation) {\n\t\tvar $Header = this.$(\"tblHeader\");\n\t\tvar $Footer = this.$(\"tblFooter\");\n\t\tvar $Rows = this.$(\"tblBody\").children(\".sapMLIB\");\n\n\t\tvar aItemDomRefs = $Header.add($Rows).add($Footer).get();\n\t\toItemNavigation.setItemDomRefs(aItemDomRefs);\n\n\t\t// header and footer are in the item navigation but\n\t\t// initial focus should be at the first item row\n\t\tif (oItemNavigation.getFocusedIndex() == -1) {\n\t\t\tif (this.getGrowing() && this.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\toItemNavigation.setFocusedIndex(aItemDomRefs.length - 1);\n\t\t\t} else {\n\t\t\t\toItemNavigation.setFocusedIndex($Header[0] ? 1 : 0);\n\t\t\t}\n\t\t}\n\t};\n\n\t/*\n\t * Determines for growing feature to handle all data from scratch\n\t * if column merging and growing feature are active at the same time\n\t * it is complicated to remerge or demerge columns when we\n\t * insert or delete items from the table with growing diff logic\n\t *\n\t * @protected\n\t */\n\tTable.prototype.checkGrowingFromScratch = function() {\n\t\t// no merging for popin case\n\t\tif (this.hasPopin()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check visibility and merge feature of columns\n\t\treturn this.getColumns().some(function(oColumn) {\n\t\t\treturn oColumn.getVisible() && oColumn.getMergeDuplicates();\n\t\t});\n\t};\n\n\t/*\n\t * This method is called asynchronously if resize event comes from column\n\t * @protected\n\t */\n\tTable.prototype.onColumnResize = function(oColumn) {\n\t\t// if list did not have pop-in and will not have pop-in\n\t\t// then we do not need re-render, we can just change display of column\n\t\tif (!this.hasPopin() && !this._mutex) {\n\t\t\tvar hasPopin = this.getColumns().some(function(col) {\n\t\t\t\treturn col.isPopin();\n\t\t\t});\n\n\t\t\tif (!hasPopin) {\n\t\t\t\toColumn.setDisplayViaMedia(this.getTableDomRef());\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._dirty = this._getMediaContainerWidth() || window.innerWidth;\n\t\tif (!this._mutex) {\n\t\t\tvar clean = this._getMediaContainerWidth() || window.innerWidth;\n\t\t\tthis._mutex = true;\n\t\t\tthis.rerender();\n\n\t\t\t// do not re-render if resize event comes so frequently\n\t\t\tjQuery.sap.delayedCall(200, this, function() {\n\t\t\t\t// but check if any event come during the wait-time\n\t\t\t\tif (this._dirty != clean) {\n\t\t\t\t\tthis._dirty = 0;\n\t\t\t\t\tthis.rerender();\n\t\t\t\t}\n\t\t\t\tthis._mutex = false;\n\t\t\t});\n\t\t}\n\t};\n\n\t/*\n\t * This method is called from Column control when column visibility is changed via CSS media query\n\t *\n\t * @param {boolean} bColVisible whether column is now visible or not\n\t * @protected\n\t */\n\tTable.prototype.setTableHeaderVisibility = function(bColVisible) {\n\t\tif (!this.getDomRef()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// find first visible column\n\t\tvar $headRow = this.$(\"tblHeader\"),\n\t\t\tbHeaderVisible = !$headRow.hasClass(\"sapMListTblHeaderNone\"),\n\t\t\taVisibleColumns = $headRow.find(\".sapMListTblCell:visible\"),\n\t\t\t$firstVisibleCol = aVisibleColumns.eq(0);\n\n\t\t// check if only one column is visible\n\t\tif (aVisibleColumns.length == 1) {\n\t\t\t$firstVisibleCol.width(\"\");\t// cover the space\n\t\t} else {\n\t\t\t// set original width of columns\n\t\t\taVisibleColumns.each(function() {\n\t\t\t\tthis.style.width = this.getAttribute(\"data-sap-width\") || \"\";\n\t\t\t});\n\t\t}\n\n\t\t// update the visible column count and colspan\n\t\t// highlight and navigation columns are getting rendered always\n\t\tthis._colCount = aVisibleColumns.length + 2 + !!sap.m.ListBaseRenderer.ModeOrder[this.getMode()];\n\t\tthis.$(\"tblBody\").find(\".sapMGHLICell\").attr(\"colspan\", this.getColSpan());\n\t\tthis.$(\"nodata-text\").attr(\"colspan\", this.getColCount());\n\n\t\t// force IE to repaint in fixed layout mode\n\t\tif (this.getFixedLayout()) {\n\t\t\tthis._forceStyleChange();\n\t\t}\n\n\t\t// remove or show column header row(thead) according to column visibility value\n\t\tif (!bColVisible && bHeaderVisible) {\n\t\t\t$headRow[0].className = \"sapMListTblRow sapMListTblHeader\";\n\t\t\tthis._headerHidden = false;\n\t\t} else if (bColVisible && !bHeaderVisible && !aVisibleColumns.length) {\n\t\t\t$headRow[0].className = \"sapMListTblHeaderNone\";\n\t\t\tthis._headerHidden = true;\n\t\t}\n\t};\n\n\t// force IE to repaint\n\tTable.prototype._forceStyleChange = function() {\n\t\tif (Device.browser.msie) {\n\t\t\tvar oTableStyle = this.getTableDomRef().style;\n\t\t\toTableStyle.listStyleType = \"circle\";\n\t\t\twindow.setTimeout(function() { oTableStyle.listStyleType = \"none\"; }, 0);\n\t\t}\n\t};\n\n\t// updates the type column visibility and sets the aria flag\n\tTable.prototype._setTypeColumnVisibility = function(bVisible) {\n\t\tjQuery(this.getTableDomRef()).toggleClass(\"sapMListTblHasNav\", bVisible);\n\t};\n\n\t// notify all columns with given action and param\n\tTable.prototype._notifyColumns = function(sAction, vParam1, vParam2) {\n\t\tthis.getColumns().forEach(function(oColumn) {\n\t\t\toColumn[\"on\" + sAction](vParam1, vParam2);\n\t\t});\n\t};\n\n\t/**\n\t * This method takes care of the select all checkbox for table lists. It\n\t * will automatically be created on demand and returned when needed\n\t *\n\t * @private\n\t * @return {sap.m.CheckBox} reference to the internal select all checkbox\n\t */\n\tTable.prototype._getSelectAllCheckbox = function() {\n\t\treturn this._selectAllCheckBox || (this._selectAllCheckBox = new sap.m.CheckBox({\n\t\t\tid: this.getId(\"sa\"),\n\t\t\tactiveHandling: false\n\t\t}).addStyleClass('sapMLIBSelectM').setParent(this, null, true).attachSelect(function () {\n\t\t\tif (this._selectAllCheckBox.getSelected()) {\n\t\t\t\tthis.selectAll(true);\n\t\t\t} else {\n\t\t\t\tthis.removeSelections(false, true);\n\t\t\t}\n\t\t}, this).setTabIndex(-1));\n\t};\n\n\t/*\n\t * Internal public function to update the selectAll checkbox\n\t * according to the current selection on the list items.\n\t *\n\t * @protected\n\t */\n\tTable.prototype.updateSelectAllCheckbox = function () {\n\t\t// checks if the list is in multi select mode and has selectAll checkbox\n\t\tif (this._selectAllCheckBox && this.getMode() === \"MultiSelect\") {\n\t\t\tvar aItems = this.getItems(),\n\t\t\t\tiSelectedItemCount = this.getSelectedItems().length,\n\t\t\t\tiSelectableItemCount = aItems.filter(function(oItem) {\n\t\t\t\t\treturn oItem.isSelectable();\n\t\t\t\t}).length;\n\n\t\t\t// set state of the checkbox by comparing item length and selected item length\n\t\t\tthis._selectAllCheckBox.setSelected(aItems.length > 0 && iSelectedItemCount == iSelectableItemCount);\n\t\t}\n\t};\n\n\t/**\n\t * This method is a hook for the RenderManager that gets called\n\t * during the rendering of child Controls. It allows to add,\n\t * remove and update existing accessibility attributes (ARIA) of\n\t * those controls.\n\t *\n\t * @param {sap.ui.core.Control} oElement - The Control that gets rendered by the RenderManager\n\t * @param {Object} mAriaProps - The mapping of \"aria-\" prefixed attributes\n\t * @protected\n\t */\n\tTable.prototype.enhanceAccessibilityState = function(oElement, mAriaProps) {\n\t\tif (oElement == this._selectAllCheckBox) {\n\t\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\t\tmAriaProps.label = oBundle.getText(\"TABLE_CHECKBOX_SELECT_ALL\");\n\t\t}\n\t};\n\n\t/*\n\t * Returns colspan for all columns except navigation\n\t * Because we render navigation always even it is empty\n\t * @protected\n\t */\n\tTable.prototype.getColSpan = function() {\n\t\treturn (this._colCount || 1 ) - 1;\n\t};\n\n\t/*\n\t * Returns the number of total columns\n\t * @protected\n\t */\n\tTable.prototype.getColCount = function() {\n\t\treturn (this._colCount || 0);\n\t};\n\n\t/*\n\t * Returns whether or not the table is in pop-in mode\n\t * @protected\n\t */\n\tTable.prototype.hasPopin = function() {\n\t\treturn !!this._hasPopin;\n\t};\n\n\t/*\n\t * Returns whether given event is initialized within header row or not\n\t * @protected\n\t */\n\tTable.prototype.isHeaderRowEvent = function(oEvent) {\n\t\tvar $Header = this.$(\"tblHeader\");\n\t\treturn !!jQuery(oEvent.target).closest($Header, this.getTableDomRef()).length;\n\t};\n\n\t/*\n\t * Returns whether give event is initialized within footer row or not\n\t * @protected\n\t */\n\tTable.prototype.isFooterRowEvent = function(oEvent) {\n\t\tvar $Footer = this.$(\"tblFooter\");\n\t\treturn !!jQuery(oEvent.target).closest($Footer, this.getTableDomRef()).length;\n\t};\n\n\t// returns accessibility role\n\tTable.prototype.getAccessibilityType = function() {\n\t\treturn sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"ACC_CTR_TYPE_TABLE\");\n\t};\n\n\tTable.prototype._setHeaderAnnouncement = function() {\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\"),\n\t\t\tsAnnouncement = oBundle.getText(\"ACC_CTR_TYPE_HEADER_ROW\") + \" \";\n\n\t\tif (this.isAllSelectableSelected()) {\n\t\t\tsAnnouncement += oBundle.getText(\"LIST_ALL_SELECTED\");\n\t\t}\n\n\t\tthis.getColumns(true).forEach(function(oColumn, i) {\n\t\t\t// only set the header announcement for visible columns\n\t\t\tif (!oColumn.getVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oHeader = oColumn.getHeader();\n\t\t\tif (oHeader && oHeader.getVisible()) {\n\t\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oHeader) + \" \";\n\t\t\t}\n\t\t});\n\n\t\tthis.updateInvisibleText(sAnnouncement);\n\t};\n\n\tTable.prototype._setFooterAnnouncement = function() {\n\t\tvar sAnnouncement = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"ACC_CTR_TYPE_FOOTER_ROW\") + \" \";\n\t\tthis.getColumns(true).forEach(function(oColumn, i) {\n\t\t\t// only set the footer announcement for visible columns\n\t\t\tif (!oColumn.getVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oFooter = oColumn.getFooter();\n\t\t\tif (oFooter && oFooter.getVisible()) {\n\t\t\t\t// announce header as well\n\t\t\t\tvar oHeader = oColumn.getHeader();\n\t\t\t\tif (oHeader && oHeader.getVisible()) {\n\t\t\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oHeader) + \" \";\n\t\t\t\t}\n\n\t\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oFooter) + \" \";\n\t\t\t}\n\t\t});\n\n\t\tthis.updateInvisibleText(sAnnouncement);\n\t};\n\n\t// keyboard handling\n\tTable.prototype.onsapspace = function(oEvent) {\n\t\tif (oEvent.isMarked()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// toggle select all header checkbox and fire its event\n\t\tif (this._selectAllCheckBox && oEvent.target === this.getDomRef(\"tblHeader\")) {\n\t\t\tthis._selectAllCheckBox.setSelected(!this._selectAllCheckBox.getSelected()).fireSelect();\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// Handle tab key\n\tTable.prototype.onsaptabnext = function(oEvent) {\n\t\tif (oEvent.isMarked() || this.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $Row = jQuery();\n\t\tif (oEvent.target.id == this.getId(\"nodata\")) {\n\t\t\t$Row = this.$(\"nodata\");\n\t\t} else if (this.isHeaderRowEvent(oEvent)) {\n\t\t\t$Row = this.$(\"tblHeader\");\n\t\t} else if (this.isFooterRowEvent(oEvent)) {\n\t\t\t$Row = this.$(\"tblFooter\");\n\t\t}\n\n\t\tvar oLastTabbableDomRef = $Row.find(\":sapTabbable\").get(-1) || $Row[0];\n\t\tif (oEvent.target === oLastTabbableDomRef) {\n\t\t\tthis.forwardTab(true);\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// Handle shift-tab key\n\tTable.prototype.onsaptabprevious = function(oEvent) {\n\t\tif (oEvent.isMarked() || this.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sTargetId = oEvent.target.id;\n\t\tif (sTargetId == this.getId(\"nodata\") ||\n\t\t\tsTargetId == this.getId(\"tblHeader\") ||\n\t\t\tsTargetId == this.getId(\"tblFooter\")) {\n\t\t\tthis.forwardTab(false);\n\t\t} else if (sTargetId == this.getId(\"trigger\")) {\n\t\t\tthis.focusPrevious();\n\t\t\toEvent.preventDefault();\n\t\t}\n\t};\n\n\tTable.prototype.onfocusin = function(oEvent) {\n\t\tvar oTarget = oEvent.target;\n\t\tif (oTarget.id === this.getId(\"tblHeader\")) {\n\t\t\tthis._setHeaderAnnouncement();\n\t\t} else if (oTarget.id === this.getId(\"tblFooter\")) {\n\t\t\tthis._setFooterAnnouncement();\n\t\t}\n\n\t\tif (this._bThemeChanged) {\n\t\t\t// force IE to repaint if theme changed\n\t\t\tthis._bThemeChanged = false;\n\t\t\tthis._forceStyleChange();\n\t\t}\n\n\t\tListBase.prototype.onfocusin.call(this, oEvent);\n\t};\n\n\t// event listener for theme changed\n\tTable.prototype.onThemeChanged = function() {\n\t\tthis._bThemeChanged = true;\n\t};\n\n\t// returns the class that should be added to tbody element\n\tTable.prototype._getAlternateRowColorsClass = function() {\n\t\tif (this.isGrouped()) {\n\t\t\treturn \"sapMListTblAlternateRowColorsGrouped\";\n\t\t}\n\n\t\tif (this.hasPopin()) {\n\t\t\treturn \"sapMListTblAlternateRowColorsPopin\";\n\t\t}\n\n\t\treturn \"sapMListTblAlternateRowColors\";\n\t};\n\n\treturn Table;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.TableRenderer\", require(\"sap/m/TableRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/Table.js","require(\"sap/m/themes/base/NavContainer.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.NavContainer.\nsap.ui.define([\n\t'jquery.sap.global',\n\t'./library',\n\t'sap/ui/core/Control',\n\t'sap/ui/core/RenderManager',\n\t'sap/ui/Device',\n\t'jquery.sap.events'\n], function (jQuery, library, Control, RenderManager, Device) {\n\t\"use strict\";\n\n\n\t/**\n\t * Constructor for a new NavContainer.\n\t *\n\t * @param {string} [sId] id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] initial settings for the new control\n\t *\n\t * @class\n\t * The NavContainer control handles hierarchic navigation between Pages or other fullscreen controls.\n\t *\n\t * All children of this control will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}\n\t * @extends sap.ui.core.Control\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.NavContainer\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar NavContainer = Control.extend(\"sap.m.NavContainer\", /** @lends sap.m.NavContainer.prototype */ {\n\t\tmetadata: {\n\n\t\t\tlibrary: \"sap.m\",\n\t\t\tproperties: {\n\n\t\t\t\t/**\n\t\t\t\t * Determines whether the initial focus is set automatically on first rendering and after navigating to a new page.\n\t\t\t\t * This is useful when on touch devices the keyboard pops out due to the focus being automatically set on an input field.\n\t\t\t\t * If necessary the \"afterShow\" event can be used to focus another element.\n\t\t\t\t *\n\t\t\t\t * <b>Note:</b>  The following scenarios are possible, depending on where the focus\n\t\t\t\t * was before navigation to a new page:\n\t\t\t\t * <ul><li>If <code>autoFocus</code> is set to <code>true</code> and the focus was\n\t\t\t\t * inside the current page, the focus will be moved automatically on the new page.</li>\n\t\t\t\t * <li>If <code>autoFocus</code> is set to <code>false</code> and the focus was inside\n\t\t\t\t * the current page, the focus will disappear.\n\t\t\t\t * <li>If the focus was outside the current page, after the navigation it will remain\n\t\t\t\t * unchanged regardless of what is set to the <code>autoFocus</code> property.</li></ul>\n\t\t\t\t *\n\t\t\t\t * @since 1.30\n\t\t\t\t */\n\t\t\t\tautoFocus: {type: \"boolean\", group: \"Behavior\", defaultValue: true},\n\n\t\t\t\t/**\n\t\t\t\t * The height of the NavContainer. Can be changed when the NavContainer should not cover the whole available area.\n\t\t\t\t */\n\t\t\t\theight: {type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: '100%'},\n\n\t\t\t\t/**\n\t\t\t\t * The width of the NavContainer. Can be changed when the NavContainer should not cover the whole available area.\n\t\t\t\t */\n\t\t\t\twidth: {type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: '100%'},\n\n\t\t\t\t/**\n\t\t\t\t * Whether the NavContainer is visible.\n\t\t\t\t */\n\t\t\t\tvisible: {type: \"boolean\", group: \"Appearance\", defaultValue: true},\n\n\t\t\t\t/**\n\t\t\t\t * The type of the transition/animation to apply when \"to()\" is called without defining a transition type to use. The default is \"slide\". Other options are: \"fade\", \"flip\" and \"show\" - and the names of any registered custom transitions.\n\t\t\t\t * @since 1.7.1\n\t\t\t\t */\n\t\t\t\tdefaultTransitionName: {type: \"string\", group: \"Appearance\", defaultValue: \"slide\"}\n\t\t\t},\n\t\t\tdefaultAggregation: \"pages\",\n\t\t\taggregations: {\n\n\t\t\t\t/**\n\t\t\t\t * The content entities between which this NavContainer navigates. These can be of type sap.m.Page, sap.ui.core.View, sap.m.Carousel or any other control with fullscreen/page semantics.\n\t\t\t\t *\n\t\t\t\t * These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}\n\t\t\t\t */\n\t\t\t\tpages: {type: \"sap.ui.core.Control\", multiple: true, singularName: \"page\"}\n\t\t\t},\n\t\t\tassociations: {\n\n\t\t\t\t/**\n\t\t\t\t * This association can be used to define which page is displayed initially. If the given page does not exist or no page is given, the first page which has been added is considered as initial page.\n\t\t\t\t * This value should be set initially and not set/modified while the application is running.\n\t\t\t\t *\n\t\t\t\t * This could be used not only for the initial display, but also if the user wants to navigate \"up to top\", so this page serves as a sort of \"home/root page\".\n\t\t\t\t */\n\t\t\t\tinitialPage: {type: \"sap.ui.core.Control\", multiple: false}\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n\t\t\t\t * The event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet.\n\t\t\t\t * This event can be aborted by the application with preventDefault(), which means that there will be no navigation.\n\t\t\t\t * @since 1.7.1\n\t\t\t\t */\n\t\t\t\tnavigate: {\n\t\t\t\t\tallowPreventDefault: true,\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The page which was shown before the current navigation.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tfrom: {type: \"sap.ui.core.Control\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The ID of the page which was shown before the current navigation.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tfromId: {type: \"string\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The page which will be shown after the current navigation.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tto: {type: \"sap.ui.core.Control\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The ID of the page which will be shown after the current navigation.\n\t\t\t\t\t\t */\n\t\t\t\t\t\ttoId: {type: \"string\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether the \"to\" page (more precisely: a control with the ID of the page which is currently navigated to) has not been shown/navigated to before.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tfirstTime: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether this is a forward navigation, triggered by \"to()\".\n\t\t\t\t\t\t */\n\t\t\t\t\t\tisTo: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether this is a back navigation, triggered by \"back()\".\n\t\t\t\t\t\t */\n\t\t\t\t\t\tisBack: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether this is a navigation to the root page, triggered by \"backToTop()\".\n\t\t\t\t\t\t */\n\t\t\t\t\t\tisBackToTop: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether this was a navigation to a specific page, triggered by \"backToPage()\".\n\t\t\t\t\t\t * @since 1.7.2\n\t\t\t\t\t\t */\n\t\t\t\t\t\tisBackToPage: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * How the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".\n\t\t\t\t\t\t */\n\t\t\t\t\t\tdirection: {type: \"string\"}\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * The event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event.\n\t\t\t\t * @since 1.7.1\n\t\t\t\t */\n\t\t\t\tafterNavigate: {\n\t\t\t\t\tparameters: {\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The page which had been shown before navigation.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tfrom: {type: \"sap.ui.core.Control\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The ID of the page which had been shown before navigation.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tfromId: {type: \"string\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The page which is now shown after navigation.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tto: {type: \"sap.ui.core.Control\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The ID of the page which is now shown after navigation.\n\t\t\t\t\t\t */\n\t\t\t\t\t\ttoId: {type: \"string\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether the \"to\" page (more precisely: a control with the ID of the page which has been navigated to) had not been shown/navigated to before.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tfirstTime: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether was a forward navigation, triggered by \"to()\".\n\t\t\t\t\t\t */\n\t\t\t\t\t\tisTo: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether this was a back navigation, triggered by \"back()\".\n\t\t\t\t\t\t */\n\t\t\t\t\t\tisBack: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether this was a navigation to the root page, triggered by \"backToTop()\".\n\t\t\t\t\t\t */\n\t\t\t\t\t\tisBackToTop: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Whether this was a navigation to a specific page, triggered by \"backToPage()\".\n\t\t\t\t\t\t * @since 1.7.2\n\t\t\t\t\t\t */\n\t\t\t\t\t\tisBackToPage: {type: \"boolean\"},\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * How the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".\n\t\t\t\t\t\t */\n\t\t\t\t\t\tdirection: {type: \"string\"}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tvar bUseAnimations = sap.ui.getCore().getConfiguration().getAnimation(),\n\t\tfnGetDelay = function (iDelay) {\n\t\t\treturn bUseAnimations ? iDelay : 0;\n\t\t};\n\n\tvar fnIsPageParentActive = function(oPage) {\n\t\tvar oParent = oPage && oPage.getParent();\n\t\treturn oParent && oParent.isActive();\n\t};\n\n\tNavContainer.prototype.init = function () {\n\t\tthis._pageStack = [];\n\t\tthis._aQueue = [];\n\t\tthis._mVisitedPages = {};\n\t\tthis._mFocusObject = {};\n\t\tthis._iTransitionsCompleted = 0; // to track proper callback at the end of transitions\n\t\tthis._bNeverRendered = true;\n\t\tthis._bNavigating = false;\n\t\tthis._bRenderingInProgress = false;\n\t};\n\n\n\tNavContainer.prototype.exit = function () {\n\t\tthis._mFocusObject = null; // allow partial garbage collection when app code leaks the NavContainer (based on a real scenario)\n\t};\n\n\n\tNavContainer.prototype.onBeforeRendering = function () {\n\t\tvar pageToRenderFirst = this.getCurrentPage();\n\t\t// for the very first rendering\n\t\tif (this._bNeverRendered && pageToRenderFirst) { // will be set to false after rendering\n\n\t\t\t// special handling for the page which is the first one which is rendered in this NavContainer\n\t\t\tvar pageId = pageToRenderFirst.getId();\n\n\t\t\tif (!this._mVisitedPages[pageId]) { // events could already be fired by initial \"to()\" call\n\t\t\t\tthis._mVisitedPages[pageId] = true;\n\n\t\t\t\tvar oNavInfo = {\n\t\t\t\t\tfrom: null,\n\t\t\t\t\tfromId: null,\n\t\t\t\t\tto: pageToRenderFirst,\n\t\t\t\t\ttoId: pageId,\n\t\t\t\t\tfirstTime: true,\n\t\t\t\t\tisTo: false,\n\t\t\t\t\tisBack: false,\n\t\t\t\t\tisBackToPage: false,\n\t\t\t\t\tisBackToTop: false,\n\t\t\t\t\tdirection: \"initial\"\n\t\t\t\t};\n\n\t\t\t\tvar oEvent = jQuery.Event(\"BeforeFirstShow\", oNavInfo);\n\t\t\t\toEvent.srcControl = this;\n\t\t\t\toEvent.data = this._oToDataBeforeRendering || {};\n\t\t\t\toEvent.backData = {};\n\t\t\t\tpageToRenderFirst._handleEvent(oEvent);\n\n\t\t\t\toEvent = jQuery.Event(\"BeforeShow\", oNavInfo);\n\t\t\t\toEvent.srcControl = this;\n\t\t\t\toEvent.data = this._oToDataBeforeRendering || {};\n\t\t\t\toEvent.backData = {};\n\t\t\t\tpageToRenderFirst._handleEvent(oEvent);\n\t\t\t}\n\t\t}\n\t};\n\n\tNavContainer.prototype.onAfterRendering = function () {\n\t\tvar pageToRenderFirst = this.getCurrentPage(),\n\t\t\tfocusObject, oNavInfo, pageId, oEvent;\n\n\t\t// for the very first rendering\n\t\tif (this._bNeverRendered && pageToRenderFirst) {\n\t\t\tthis._bNeverRendered = false;\n\t\t\tdelete this._bNeverRendered;\n\n\t\t\t// special handling for the page which is the first one which is rendered in this NavContainer\n\t\t\tpageId = pageToRenderFirst.getId();\n\n\t\t\t// set focus to first focusable object\n\t\t\t// when NavContainer is inside a popup, the focus is managed by the popup and shouldn't be set here\n\t\t\tif (!this._isInsideAPopup() && this.getAutoFocus()) {\n\t\t\t\tfocusObject = NavContainer._applyAutoFocusTo(pageId);\n\t\t\t\tif (focusObject) {\n\t\t\t\t\tthis._mFocusObject[pageId] = focusObject;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toNavInfo = {\n\t\t\t\tfrom: null,\n\t\t\t\tfromId: null,\n\t\t\t\tto: pageToRenderFirst,\n\t\t\t\ttoId: pageId,\n\t\t\t\tfirstTime: true,\n\t\t\t\tisTo: false,\n\t\t\t\tisBack: false,\n\t\t\t\tisBackToTop: false,\n\t\t\t\tisBackToPage: false,\n\t\t\t\tdirection: \"initial\"\n\t\t\t};\n\n\t\t\toEvent = jQuery.Event(\"AfterShow\", oNavInfo);\n\t\t\toEvent.srcControl = this;\n\t\t\toEvent.data = this._oToDataBeforeRendering || {};\n\t\t\toEvent.backData = {};\n\t\t\tpageToRenderFirst._handleEvent(oEvent);\n\t\t}\n\t};\n\n\t/**\n\t * Returns the page that should act as initial page - either the one designated as such, or, if it does not exist,\n\t * the first page (index 0 in the aggregation). Returns null if no page is aggregated.\n\t *\n\t * @private\n\t */\n\tNavContainer.prototype._getActualInitialPage = function () {\n\t\tvar pageId = this.getInitialPage();\n\t\tif (pageId) {\n\t\t\tvar page = sap.ui.getCore().byId(pageId);\n\t\t\tif (page) {\n\t\t\t\treturn page;\n\t\t\t} else {\n\t\t\t\tjQuery.sap.log.error(\"NavContainer: control with ID '\" + pageId + \"' was set as 'initialPage' but was not found as a DIRECT child of this NavContainer (number of current children: \" + this.getPages().length + \").\");\n\t\t\t}\n\t\t}\n\t\tvar pages = this.getPages();\n\t\treturn (pages.length > 0 ? pages[0] : null);\n\t};\n\n\n\t//*** API methods ***\n\n\n\t/**\n\t * Returns the control with the given ID from the \"pages\" aggregation (if available).\n\t *\n\t * @param {string} sId\n\t *         The ID of the aggregated control to find.\n\t * @type sap.ui.core.Control\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.getPage = function (pageId) {\n\t\tvar aPages = this.getPages();\n\t\tfor (var i = 0; i < aPages.length; i++) {\n\t\t\tif (aPages[i] && (aPages[i].getId() == pageId)) {\n\t\t\t\treturn aPages[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tNavContainer.prototype._ensurePageStackInitialized = function (data) {\n\t\tif (this._pageStack.length === 0) {\n\t\t\tvar page = this._getActualInitialPage(); // TODO: with bookmarking / deep linking this is the initial, but not the \"home\"/root page\n\t\t\tif (page) {\n\t\t\t\tthis._pageStack.push({id: page.getId(), isInitial: true, data: data || {}});\n\t\t\t}\n\t\t}\n\t\treturn this._pageStack;\n\t};\n\n\n\t/**\n\t * Returns the currently displayed page-level control. Note: it is not necessarily an instance of sap.m.Page, but it could also be an sap.ui.core.View, sap.m.Carousel, or whatever is aggregated.\n\t *\n\t * Returns undefined if no page has been added yet.\n\t *\n\t * @type sap.ui.core.Control\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.getCurrentPage = function () {\n\t\tvar stack = this._ensurePageStackInitialized();\n\n\t\tif (stack.length >= 1) {\n\t\t\treturn this.getPage(stack[stack.length - 1].id);\n\t\t} else {\n\t\t\tjQuery.sap.log.warning(this + \": page stack is empty but should have been initialized - application failed to provide a page to display\");\n\t\t\treturn undefined;\n\t\t}\n\t};\n\n\n\t/**\n\t * Returns the previous page (the page from which the user drilled down to the current page with \"to()\").\n\t * Note: this is not the page which the user has seen before, but the page which is the target of the next \"back()\" navigation.\n\t * If there is no previous page, \"undefined\" is returned.\n\t *\n\t * @type sap.ui.core.Control\n\t * @public\n\t * @since 1.7.1\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.getPreviousPage = function () {\n\t\tvar stack = this._ensurePageStackInitialized();\n\n\t\tif (stack.length > 1) {\n\t\t\treturn this.getPage(stack[stack.length - 2].id);\n\n\t\t} else if (stack.length == 1) { // the current one is the only page on the stack\n\t\t\treturn undefined;\n\n\t\t} else {\n\t\t\tjQuery.sap.log.warning(this + \": page stack is empty but should have been initialized - application failed to provide a page to display\");\n\t\t}\n\t};\n\n\n\t/**\n\t * Returns whether the current page is the top/initial page.\n\t *\n\t * Note: going to the initial page again with a row of \"to\" navigations causes the initial page to be displayed again, but logically one is not at the top level, so this method returns \"false\" in this case.\n\t *\n\t * @type boolean\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.currentPageIsTopPage = function () {\n\t\tvar stack = this._ensurePageStackInitialized();\n\t\treturn (stack.length === 1);\n\t};\n\n\n\t/**\n\t * Inserts the page/control with the specified ID into the navigation history stack of the NavContainer.\n\t *\n\t * This can be used for deep-linking when the user directly reached a drilldown detail page using a bookmark and then wants to navigate up in the drilldown hierarchy. Normally such a back navigation would not be possible because there is no previous page in the NavContainer's history stack.\n\t *\n\t * @param {string} sPageId\n\t *         The ID of the control/page/screen which is inserted into the history stack. The respective control must be aggregated by the NavContainer, otherwise this will cause an error.\n\t * @param {string} [sTransitionName]\n\t *         The type of the transition/animation which would have been used to navigate from the (inserted) previous page to the current page. When navigating back, the inverse animation will be applied.\n\t *         This parameter can be omitted; then the default is \"slide\" (horizontal movement from the right).\n\t * @param {object} [oData]\n\t *         This optional object can carry any payload data which would have been given to the inserted previous page if the user would have done a normal forward navigation to it.\n\t * @type sap.m.NavContainer\n\t * @public\n\t * @since 1.16.1\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.insertPreviousPage = function (pageId, transitionName, data) {\n\t\tvar stack = this._ensurePageStackInitialized();\n\t\tif (this._pageStack.length > 0) {\n\t\t\tvar index = stack.length - 1;\n\t\t\tvar pageInfo = {id: pageId, transition: transitionName, data: data};\n\t\t\tif (index === 0) {\n\t\t\t\tpageInfo.isInitial = true;\n\t\t\t\tdelete stack[stack.length - 1].isInitial;\n\t\t\t}\n\t\t\tstack.splice(index, 0, pageInfo);\n\t\t} else {\n\t\t\tjQuery.sap.log.warning(this + \": insertPreviousPage called with empty page stack; ignoring\");\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tNavContainer._applyAutoFocusTo = function (sId) {\n\t\tvar focusSubjectDomRef = jQuery.sap.byId(sId).firstFocusableDomRef();\n\t\tif (focusSubjectDomRef) {\n\t\t\tjQuery.sap.focus(focusSubjectDomRef);\n\t\t}\n\n\t\treturn focusSubjectDomRef;\n\t};\n\n\tNavContainer.prototype._applyAutoFocus = function (oNavInfo) {\n\t\tvar sPageId = oNavInfo.toId,\n\t\t\tdomRefRememberedFocusSubject,\n\t\t\tbAutoFocus = this.getAutoFocus(),\n\t\t\tbNavigatingBackToPreviousLocation = oNavInfo.isBack || oNavInfo.isBackToPage || oNavInfo.isBackToTop;\n\n\t\t// BCP: 1780071998 - If focus is not inside the From page we don't do any focus manipulation\n\t\tif (!oNavInfo.bFocusInsideFromPage) {\n\t\t\treturn;\n\t\t}\n\n\t\t// check navigation type (backward or forward)\n\t\tif (bNavigatingBackToPreviousLocation) {\n\t\t\t// set focus to the remembered focus object if available\n\t\t\t// if no focus was set set focus to first focusable object in \"to page\"\n\t\t\tdomRefRememberedFocusSubject = this._mFocusObject != null ? this._mFocusObject[sPageId] : null;\n\t\t\tif (domRefRememberedFocusSubject) {\n\t\t\t\tjQuery.sap.focus(domRefRememberedFocusSubject);\n\t\t\t} else if (bAutoFocus) {\n\t\t\t\tNavContainer._applyAutoFocusTo(sPageId);\n\t\t\t}\n\t\t} else if (oNavInfo.isTo && bAutoFocus) {\n\t\t\t// set focus to first focusable object in \"to page\"\n\t\t\tNavContainer._applyAutoFocusTo(sPageId);\n\t\t}\n\t};\n\n\tNavContainer.prototype._afterTransitionCallback = function (oNavInfo, oData, oBackData) {\n\t\tvar oEvent = jQuery.Event(\"AfterShow\", oNavInfo);\n\t\toEvent.data = oData || {};\n\t\toEvent.backData = oBackData || {};\n\t\toEvent.srcControl = this; // store the element on the event (aligned with jQuery syntax)\n\t\toNavInfo.to._handleEvent(oEvent);\n\n\t\toEvent = jQuery.Event(\"AfterHide\", oNavInfo);\n\t\toEvent.srcControl = this; // store the element on the event (aligned with jQuery syntax)\n\t\toNavInfo.from._handleEvent(oEvent);\n\n\t\tthis._iTransitionsCompleted++;\n\t\tthis._bNavigating = false;\n\t\tthis._applyAutoFocus(oNavInfo);\n\t\tthis.fireAfterNavigate(oNavInfo);\n\t\t// TODO: destroy HTML? Remember to destroy ALL HTML of several pages when backToTop has been called\n\n\t\tjQuery.sap.log.info(this + \": _afterTransitionCallback called, to: \" + oNavInfo.toId);\n\n\t\tif (oNavInfo.to.hasStyleClass(\"sapMNavItemHidden\")) {\n\t\t\tjQuery.sap.log.warning(this.toString() + \": target page '\" + oNavInfo.toId + \"' still has CSS class 'sapMNavItemHidden' after transition. This should not be the case, please check the preceding log statements.\");\n\t\t\toNavInfo.to.removeStyleClass(\"sapMNavItemHidden\");\n\t\t}\n\n\t\tthis._dequeueNavigation();\n\t};\n\n\tNavContainer.prototype._dequeueNavigation = function () {\n\t\tvar fnNavigate = this._aQueue.shift();\n\n\t\tif (typeof fnNavigate === \"function\") {\n\t\t\tfnNavigate();\n\t\t}\n\t};\n\n\t/**\n\t * Checks whether a page is in the history stack or not\n\t * @param pageId\n\t * @returns {boolean}\n\t * @private\n\t */\n\tNavContainer.prototype._isInPageStack = function (pageId) {\n\t\treturn this._pageStack.some(function (oPage) {\n\t\t\treturn oPage.id === pageId;\n\t\t});\n\t};\n\n\t/**\n\t * Navigates back to a page, if the page is in the history stack. Otherwise, navigates to it.\n\t *\n\t * This method can be used to navigate to previously visited pages which are however not in the stack any more.\n\t * Such a situation can be observed when navigating back to a page several levels back.\n\t * @param pageId\n\t * @param transitionName\n\t * @param data\n\t * @param oTransitionParameters\n\t * @private\n\t */\n\tNavContainer.prototype._safeBackToPage = function (pageId, transitionName, data, oTransitionParameters) {\n\t\tvar oCurrentPage;\n\n\t\tif (!this.getPage(pageId)) {\n\t\t\treturn this;\n\t\t}\n\n\t\toCurrentPage = this.getCurrentPage();\n\t\tif (oCurrentPage && oCurrentPage.getId() === pageId) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this._isInPageStack(pageId)) {\n\t\t\treturn this.backToPage(pageId, data, oTransitionParameters);\n\t\t} else {\n\t\t\treturn this.to(pageId, transitionName, data, oTransitionParameters);\n\t\t}\n\t};\n\n\t/**\n\t * Check if the current focused element is a HTML child element of the control passed.\n\t * @param {sap.ui.core.Control} oControl instance of control\n\t * @returns {boolean} If the focus is in one of the control's child HTML elements\n\t * @private\n\t */\n\tNavContainer.prototype._isFocusInControl = function (oControl) {\n\t\treturn jQuery(document.activeElement).closest(oControl.$()).length > 0;\n\t};\n\n\t/**\n\t * Navigates to the next page (with drill-down semantic) with the given (or default) animation. This creates a new history item inside the NavContainer and allows going back.\n\t *\n\t * Note that any modifications to the target page (like setting its title, or anything else that could cause a re-rendering) should be done BEFORE calling to(), in order to avoid unwanted side effects, e.g. related to the page animation.\n\t *\n\t * Available transitions currently include \"slide\" (default), \"fade\", \"flip\", and \"show\". None of these is currently making use of any given transitionParameters.\n\t *\n\t * Calling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given data object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property.\n\t *\n\t * @param {string} sPageId\n\t *         The screen to which drilldown should happen. The ID or the control itself can be given.\n\t * @param {string} [sTransitionName]\n\t *         The type of the transition/animation to apply. This parameter can be omitted; then the default is \"slide\" (horizontal movement from the right).\n\t *         Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\t *\n\t *         None of the standard transitions is currently making use of any given transition parameters.\n\t * @param {object} [oData]\n\t *         Since version 1.7.1. This optional object can carry any payload data which should be made available to the target page. The \"beforeShow\" event on the target page will contain this data object as \"data\" property.\n\t *\n\t *         Use case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\t *\n\t *         When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.\n\t * @param {object} [oTransitionParameters]\n\t *         Since version 1.7.1. This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\t *\n\t *         For a proper parameter order, the \"data\" parameter must be given when the \"transitionParameters\" parameter is used. (it can be given as \"null\")\n\t *\n\t *         NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n\t *         The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.\n\t * @type sap.m.NavContainer\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.to = function (pageId, transitionName, data, oTransitionParameters, bFromQueue) {\n\t\tif (pageId instanceof Control) {\n\t\t\tpageId = pageId.getId();\n\t\t}\n\n\t\t// fix parameters\n\t\tif (typeof (transitionName) !== \"string\") {\n\t\t\t// transitionName is omitted, shift parameters\n\t\t\toTransitionParameters = data;\n\t\t\tdata = transitionName;\n\t\t}\n\t\ttransitionName = transitionName || this.getDefaultTransitionName();\n\t\toTransitionParameters = oTransitionParameters || {};\n\t\tdata = data || {};\n\t\tvar oFromPageInfo = {id: pageId, transition: transitionName, data: data};\n\n\t\t// make sure the initial page is on the stack\n\t\tthis._ensurePageStackInitialized(data);\n\n\t\t//add to the queue before checking the current page, because this might change\n\t\tif (this._bNavigating) {\n\t\t\tjQuery.sap.log.info(this.toString() + \": Cannot navigate to page \" + pageId + \" because another navigation is already in progress. - navigation will be executed after the previous one\");\n\n\t\t\tthis._aQueue.push(jQuery.proxy(function () {\n\t\t\t\tthis.to(pageId, transitionName, data, oTransitionParameters, true);\n\t\t\t}, this));\n\n\t\t\treturn this;\n\t\t}\n\n\t\t// If to is called before rendering, remember the data so we can pass it to the events as soon as the navContainer gets rendered\n\t\tif (this._bNeverRendered) {\n\t\t\tthis._oToDataBeforeRendering = data;\n\t\t}\n\n\t\tvar oFromPage = this.getCurrentPage();\n\t\tif (oFromPage && (oFromPage.getId() === pageId)) { // cannot navigate to the page that is already current\n\t\t\tjQuery.sap.log.warning(this.toString() + \": Cannot navigate to page \" + pageId + \" because this is the current page.\");\n\t\t\tif (bFromQueue) {\n\t\t\t\tthis._dequeueNavigation();\n\t\t\t}\n\n\t\t\t// In an application when the first page is loaded its transition is not set and we set it here.\n\t\t\tif (this._pageStack.length === 1) {\n\t\t\t\tthis._pageStack[0].transition = oFromPageInfo.transition;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvar oToPage = this.getPage(pageId);\n\n\t\tif (oToPage) {\n\t\t\tif (!oFromPage) {\n\t\t\t\tjQuery.sap.log.warning(\"Navigation triggered to page with ID '\" + pageId + \"', but the current page is not known/aggregated by \" + this);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar oNavInfo = {\n\t\t\t\tfrom: oFromPage,\n\t\t\t\tfromId: oFromPage.getId(),\n\t\t\t\tto: oToPage,\n\t\t\t\ttoId: pageId,\n\t\t\t\tfirstTime: !this._mVisitedPages[pageId],\n\t\t\t\tisTo: true,\n\t\t\t\tisBack: false,\n\t\t\t\tisBackToTop: false,\n\t\t\t\tisBackToPage: false,\n\t\t\t\tdirection: \"to\",\n\t\t\t\tbFocusInsideFromPage: this._isFocusInControl(oFromPage)\n\t\t\t};\n\n\t\t\tif (oNavInfo.bFocusInsideFromPage) {\n\t\t\t\t// remember the focused object in \"from page\"\n\t\t\t\tthis._mFocusObject[oFromPage.getId()] = document.activeElement;\n\t\t\t}\n\n\t\t\tvar bContinue = this.fireNavigate(oNavInfo);\n\t\t\tif (bContinue) { // ok, let's do the navigation\n\n\t\t\t\tlibrary.closeKeyboard();\n\n\t\t\t\t// TODO: let one of the pages also cancel navigation?\n\t\t\t\tvar oEvent = jQuery.Event(\"BeforeHide\", oNavInfo);\n\t\t\t\toEvent.srcControl = this; // store the element on the event (aligned with jQuery syntax)\n\t\t\t\t// no data needed for hiding\n\t\t\t\toFromPage._handleEvent(oEvent);\n\n\t\t\t\tif (!this._mVisitedPages[pageId]) { // if this page has not been shown before\n\t\t\t\t\toEvent = jQuery.Event(\"BeforeFirstShow\", oNavInfo);\n\t\t\t\t\toEvent.srcControl = this;\n\t\t\t\t\toEvent.data = data || {};\n\t\t\t\t\toEvent.backData = {};\n\t\t\t\t\toToPage._handleEvent(oEvent);\n\t\t\t\t}\n\n\t\t\t\toEvent = jQuery.Event(\"BeforeShow\", oNavInfo);\n\t\t\t\toEvent.srcControl = this;\n\t\t\t\toEvent.data = data || {};\n\t\t\t\toEvent.backData = {};\n\t\t\t\toToPage._handleEvent(oEvent);\n\n\n\t\t\t\tthis._pageStack.push(oFromPageInfo); // this actually causes/is the navigation\n\t\t\t\tjQuery.sap.log.info(this.toString() + \": navigating to page '\" + pageId + \"': \" + oToPage.toString());\n\t\t\t\tthis._mVisitedPages[pageId] = true;\n\n\t\t\t\tif (!this.getDomRef()) { // the wanted animation has been recorded, but when the NavContainer is not rendered, we cannot animate, so just return\n\t\t\t\t\tjQuery.sap.log.info(\"'Hidden' 'to' navigation in not-rendered NavContainer \" + this.toString());\n\n\t\t\t\t\t// BCP: 1680140633 - Firefox issue\n\t\t\t\t\tif (this._bRenderingInProgress) {\n\t\t\t\t\t\tjQuery.sap.delayedCall(0, this, this.invalidate);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\t// render the page that should get visible\n\t\t\t\tvar oToPageDomRef;\n\n\t\t\t\tif (!(oToPageDomRef = oToPage.getDomRef()) || oToPageDomRef.parentNode != this.getDomRef() || RenderManager.isPreservedContent(oToPageDomRef)) {\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemRendering\");\n\t\t\t\t\tjQuery.sap.log.debug(\"Rendering 'to' page '\" + oToPage.toString() + \"' for 'to' navigation\");\n\t\t\t\t\tvar rm = sap.ui.getCore().createRenderManager();\n\t\t\t\t\trm.render(oToPage, this.getDomRef());\n\t\t\t\t\trm.destroy();\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemRendering\");\n\t\t\t\t}\n\n\t\t\t\tvar oTransition = NavContainer.transitions[transitionName] || NavContainer.transitions[\"slide\"];\n\n\t\t\t\t// Track proper invocation of the callback  TODO: only do this during development?\n\t\t\t\tvar iCompleted = this._iTransitionsCompleted;\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\tif (that && (that._iTransitionsCompleted < iCompleted + 1)) {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Transition '\" + transitionName + \"' 'to' was triggered five seconds ago, but has not yet invoked the end-of-transition callback.\");\n\t\t\t\t\t}\n\t\t\t\t}, fnGetDelay(5000));\n\n\t\t\t\tthis._bNavigating = true;\n\t\t\t\toTransition.to.call(this, oFromPage, oToPage, jQuery.proxy(function () {\n\t\t\t\t\tthis._afterTransitionCallback(oNavInfo, data);\n\t\t\t\t}, this), oTransitionParameters); // trigger the transition\n\n\t\t\t} else {\n\t\t\t\tjQuery.sap.log.info(\"Navigation to page with ID '\" + pageId + \"' has been aborted by the application\");\n\t\t\t}\n\n\t\t} else {\n\t\t\tjQuery.sap.log.warning(\"Navigation triggered to page with ID '\" + pageId + \"', but this page is not known/aggregated by \" + this);\n\t\t}\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Navigates back one level. If already on the initial page and there is no place to go back, nothing happens.\n\t *\n\t * Calling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given backData object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property. The original \"data\" object from the \"to\" navigation is also available in these event objects.\n\t *\n\t * @param {object} [oBackData]\n\t *         Since version 1.7.1. This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\t *\n\t *         In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\t *         For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\t *\n\t *         When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.\n\t * @param {object} [oTransitionParameters]\n\t *         Since version 1.7.1. This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\t *         The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\t *\n\t *         In order to use the \"transitionParameters\" property, the \"data\" property must be used (at least \"null\" must be given) for a proper parameter order.\n\t *\n\t *         NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n\t * @type sap.m.NavContainer\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.back = function (backData, oTransitionParameters) {\n\t\tthis._backTo(\"back\", backData, oTransitionParameters);\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Navigates back to the nearest previous page in the NavContainer history with the given ID. If there is no such page among the previous pages, nothing happens.\n\t * The transition effect which had been used to get to the current page is inverted and used for this navigation.\n\t *\n\t * Calling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given backData object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property. The original \"data\" object from the \"to\" navigation is also available in these event objects.\n\t *\n\t * @param {string} sPageId\n\t *         The ID of the screen to which back navigation should happen. The ID or the control itself can be given. The nearest such page among the previous pages in the history stack will be used.\n\t * @param {object} [oBackData]\n\t *         This optional object can carry any payload data which should be made available to the target page of the \"backToPage\" navigation. The event on the target page will contain this data object as \"backData\" property.\n\t *\n\t *         When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.\n\t * @param {object} [oTransitionParameters]\n\t *         This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\t *         The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\t *\n\t *         In order to use the \"transitionParameters\" property, the \"data\" property must be used (at least \"null\" must be given) for a proper parameter order.\n\t *\n\t *         NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n\t * @type sap.m.NavContainer\n\t * @public\n\t * @since 1.7.2\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.backToPage = function (pageId, backData, oTransitionParameters) {\n\t\tthis._backTo(\"backToPage\", backData, oTransitionParameters, pageId);\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Navigates back to the initial/top level (this is the element aggregated as \"initialPage\", or the first added element). If already on the initial page, nothing happens.\n\t * The transition effect which had been used to get to the current page is inverted and used for this navigation.\n\t *\n\t * Calling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given backData object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property.\n\t *\n\t * @param {object} [oBackData]\n\t *         This optional object can carry any payload data which should be made available to the target page of the \"backToTop\" navigation. The event on the target page will contain this data object as \"backData\" property.\n\t *\n\t *         When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.\n\t * @param {object} [oTransitionParameters]\n\t *         This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\t *         The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\t *\n\t *         In order to use the \"transitionParameters\" property, the \"data\" property must be used (at least \"null\" must be given) for a proper parameter order.\n\t *\n\t *         NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n\t * @type sap.m.NavContainer\n\t * @public\n\t * @since 1.7.1\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.backToTop = function (backData, oTransitionParameters) {\n\t\tthis._backTo(\"backToTop\", backData, oTransitionParameters);\n\t\treturn this;\n\t};\n\n\n\tNavContainer.prototype._backTo = function (sType, backData, oTransitionParameters, sRequestedPageId) {\n\t\tif (this._bNavigating) {\n\t\t\tjQuery.sap.log.warning(this.toString() + \": Cannot navigate back because another navigation is already in progress. - navigation will be executed after the previous one\");\n\n\n\t\t\tthis._aQueue.push(jQuery.proxy(function () {\n\t\t\t\tthis._backTo(sType, backData, oTransitionParameters, sRequestedPageId);\n\t\t\t}, this));\n\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this._pageStack.length <= 1) {\n\t\t\t// there is no place to go back\n\n\t\t\t// but then the assumption is that the only page on the stack is the initial one and has not been navigated to. Check this:\n\t\t\tif (this._pageStack.length === 1 && !this._pageStack[0].isInitial) {\n\t\t\t\tthrow new Error(\"Initial page not found on the stack. How did this happen?\");\n\t\t\t}\n\t\t\treturn this;\n\n\t\t} else { // normal back navigation\n\n\t\t\tif (sRequestedPageId instanceof Control) {\n\t\t\t\tsRequestedPageId = sRequestedPageId.getId();\n\t\t\t}\n\n\t\t\tvar oFromPageInfo = this._pageStack[this._pageStack.length - 1];\n\t\t\tvar transition = oFromPageInfo.transition;\n\t\t\tvar oFromPage = this.getPage(oFromPageInfo.id);\n\t\t\tvar oToPage;\n\t\t\tvar oToPageData;\n\n\t\t\tif (sType === \"backToTop\") {\n\t\t\t\toToPage = this._getActualInitialPage();\n\t\t\t\toToPageData = null;\n\n\t\t\t} else if (sType === \"backToPage\") {\n\t\t\t\tvar info = this._findClosestPreviousPageInfo(sRequestedPageId);\n\t\t\t\tif (!info) {\n\t\t\t\t\tjQuery.sap.log.error(this.toString() + \": Cannot navigate backToPage('\" + sRequestedPageId + \"') because target page was not found among the previous pages.\");\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\toToPage = sap.ui.getCore().byId(info.id);\n\t\t\t\tif (!oToPage) {\n\t\t\t\t\tjQuery.sap.log.error(this.toString() + \": Cannot navigate backToPage('\" + sRequestedPageId + \"') because target page does not exist anymore.\");\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\toToPageData = info.data;\n\n\t\t\t} else { // normal \"back\"\n\t\t\t\toToPage = this.getPreviousPage();\n\t\t\t\toToPageData = this._pageStack[this._pageStack.length - 2].data;\n\t\t\t}\n\n\t\t\tif (!oToPage) {\n\t\t\t\tjQuery.sap.log.error(\"NavContainer back navigation: target page is not defined or not aggregated by this NavContainer. Aborting navigation.\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oToPageId = oToPage.getId();\n\t\t\tbackData = backData || {};\n\t\t\toTransitionParameters = oTransitionParameters || {};\n\n\t\t\tvar oNavInfo = {\n\t\t\t\tfrom: oFromPage,\n\t\t\t\tfromId: oFromPage.getId(),\n\t\t\t\tto: oToPage,\n\t\t\t\ttoId: oToPageId,\n\t\t\t\tfirstTime: !this._mVisitedPages[oToPageId],\n\t\t\t\tisTo: false,\n\t\t\t\tisBack: (sType === \"back\"),\n\t\t\t\tisBackToPage: (sType === \"backToPage\"),\n\t\t\t\tisBackToTop: (sType === \"backToTop\"),\n\t\t\t\tdirection: sType,\n\t\t\t\tbFocusInsideFromPage: this._isFocusInControl(oFromPage)\n\t\t\t};\n\t\t\tvar bContinue = this.fireNavigate(oNavInfo);\n\t\t\tif (bContinue) { // ok, let's do the navigation\n\n\t\t\t\tlibrary.closeKeyboard();\n\n\t\t\t\tvar oEvent = jQuery.Event(\"BeforeHide\", oNavInfo);\n\t\t\t\toEvent.srcControl = this; // store the element on the event (aligned with jQuery syntax)\n\t\t\t\t// no data needed for hiding\n\t\t\t\toFromPage._handleEvent(oEvent);\n\n\t\t\t\tif (!this._mVisitedPages[oToPageId]) { // if this page has not been shown before\n\t\t\t\t\toEvent = jQuery.Event(\"BeforeFirstShow\", oNavInfo);\n\t\t\t\t\toEvent.srcControl = this;\n\t\t\t\t\toEvent.backData = backData || {};\n\t\t\t\t\t// the old data from the forward navigation should not exist because there was never a forward navigation\n\t\t\t\t\toEvent.data = {};\n\t\t\t\t\toToPage._handleEvent(oEvent);\n\t\t\t\t}\n\n\t\t\t\toEvent = jQuery.Event(\"BeforeShow\", oNavInfo);\n\t\t\t\toEvent.srcControl = this;\n\t\t\t\toEvent.backData = backData || {};\n\t\t\t\toEvent.data = oToPageData || {}; // the old data from the forward navigation\n\t\t\t\toToPage._handleEvent(oEvent);\n\n\t\t\t\tthis._pageStack.pop(); // this actually causes/is the navigation\n\t\t\t\tjQuery.sap.log.info(this.toString() + \": navigating back to page \" + oToPage.toString());\n\t\t\t\tthis._mVisitedPages[oToPageId] = true;\n\n\t\t\t\tif (sType === \"backToTop\") { // if we should navigate to top, just clean up the whole stack\n\t\t\t\t\tthis._pageStack = [];\n\t\t\t\t\tjQuery.sap.log.info(this.toString() + \": navigating back to top\");\n\t\t\t\t\tthis.getCurrentPage(); // this properly restores the initial page on the stack\n\n\t\t\t\t} else if (sType === \"backToPage\") {\n\t\t\t\t\tvar aPages = [], interimPage;\n\t\t\t\t\twhile (this._pageStack[this._pageStack.length - 1].id !== sRequestedPageId) { // by now it is guaranteed that we will find it\n\t\t\t\t\t\tinterimPage = this._pageStack.pop();\n\t\t\t\t\t\taPages.push(interimPage.id);\n\t\t\t\t\t}\n\t\t\t\t\tjQuery.sap.log.info(this.toString() + \": navigating back to specific page \" + oToPage.toString() + \" across the pages: \" + aPages.join(\", \"));\n\t\t\t\t}\n\n\t\t\t\tif (!this.getDomRef()) { // the wanted animation has been recorded, but when the NavContainer is not rendered, we cannot animate, so just return\n\t\t\t\t\tjQuery.sap.log.info(\"'Hidden' back navigation in not-rendered NavContainer \" + this.toString());\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\tvar oTransition = NavContainer.transitions[transition] || NavContainer.transitions[\"slide\"];\n\n\t\t\t\t// Track proper invocation of the callback  TODO: only do this during development?\n\t\t\t\tvar iCompleted = this._iTransitionsCompleted;\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\tif (that && (that._iTransitionsCompleted < iCompleted + 1)) {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Transition '\" + transition + \"' 'back' was triggered five seconds ago, but has not yet invoked the end-of-transition callback.\");\n\t\t\t\t\t}\n\t\t\t\t}, fnGetDelay(5000));\n\n\t\t\t\tthis._bNavigating = true;\n\n\t\t\t\t// make sure the to-page is rendered\n\t\t\t\tvar oToPageDomRef;\n\t\t\t\tif (!(oToPageDomRef = oToPage.getDomRef()) || oToPageDomRef.parentNode != this.getDomRef() || RenderManager.isPreservedContent(oToPageDomRef)) {\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemRendering\");\n\t\t\t\t\tjQuery.sap.log.debug(\"Rendering 'to' page '\" + oToPage.toString() + \"' for back navigation\");\n\t\t\t\t\tvar rm = sap.ui.getCore().createRenderManager();\n\t\t\t\t\tvar childPos = this.$().children().index(oFromPage.getDomRef());\n\t\t\t\t\trm.renderControl(oToPage);\n\t\t\t\t\trm.flush(this.getDomRef(), false, childPos);\n\t\t\t\t\trm.destroy();\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemRendering\");\n\t\t\t\t}\n\n\t\t\t\t//if the from page and to page are identical, the transition is skipped.\n\t\t\t\tif (oFromPage.getId() === oToPage.getId()) {\n\t\t\t\t\tjQuery.sap.log.info(\"Transition is skipped when navigating back to the same page instance\" + oToPage.toString());\n\t\t\t\t\tthis._afterTransitionCallback(oNavInfo, oToPageData, backData);\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\t// trigger the transition\n\t\t\t\toTransition.back.call(this, oFromPage, oToPage, jQuery.proxy(function () {\n\t\t\t\t\tthis._afterTransitionCallback(oNavInfo, oToPageData, backData);\n\t\t\t\t}, this), oTransitionParameters); // trigger the transition\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\tNavContainer.prototype._findClosestPreviousPageInfo = function (sRequestedPreviousPageId) {\n\t\tfor (var i = this._pageStack.length - 2; i >= 0; i--) {\n\t\t\tvar info = this._pageStack[i];\n\t\t\tif (info.id === sRequestedPreviousPageId) {\n\t\t\t\treturn info;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\n\tNavContainer.transitions = NavContainer.transitions || {}; // make sure the object exists\n\n\n\t//*** SHOW Transition ***\n\n\tNavContainer.transitions[\"show\"] = {\n\t\tto: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class which has been added by the NavContainer before the transition was called\n\t\t\toFromPage && oFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\tfCallback();\n\t\t},\n\n\t\tback: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\");\n\t\t\toFromPage && oFromPage.addStyleClass(\"sapMNavItemHidden\"); // instantly hide the previous page\n\t\t\tfCallback();\n\t\t}\n\t};\n\n\n\t//*** SLIDE Transition ***\n\n\tif (jQuery.support.cssTransitions) {\n\t\tNavContainer.transitions[\"slide\"] = {\n\n\t\t\tto: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\toFromPage.addStyleClass(\"sapMNavItemCenter\");\n\t\t\t\twindow.setTimeout(function () { // iPhone seems to need a zero timeout here, otherwise the to page is black (and may suddenly become visible when the DOM is touched)\n\n\t\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemRight\");     // the page to navigate to should be placed just right of the visible area\n\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\n\t\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\t\tfAfterTransition = function () {\n\t\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemSliding\").removeStyleClass(\"sapMNavItemCenter\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemSliding\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemLeft\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\t\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemSliding\").addStyleClass(\"sapMNavItemCenter\").removeStyleClass(\"sapMNavItemRight\");\n\t\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemSliding\").removeStyleClass(\"sapMNavItemCenter\").addStyleClass(\"sapMNavItemLeft\");\n\n\t\t\t\t\t\twindow.setTimeout(function () { // in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, fnGetDelay(400));\n\n\t\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few\n\n\t\t\t\t}, 0); // iPhone seems to need a zero timeout here, otherwise the to page is black (and may suddenly become visible when the DOM is touched)\n\t\t\t},\n\n\t\t\tback: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toToPage.addStyleClass(\"sapMNavItemLeft\");     // the page to navigate back to should be placed just left of the visible area\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\t\t\t\toFromPage.addStyleClass(\"sapMNavItemCenter\");\n\n\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tfAfterTransition = function () {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemSliding\").removeStyleClass(\"sapMNavItemCenter\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemSliding\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemRight\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t// workaround for bug in current webkit versions: in slided-in elements the z-order may be wrong and will be corrected once a re-layout is enforced\n\t\t\t\t\t// see http://code.google.com/p/chromium/issues/detail?id=246965  - still an issue in iOS 6.1.3 as of 03/2015\n\t\t\t\t\tif (Device.browser.webkit) {\n\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\toToPage.$().css(\"box-shadow\", \"0em 1px 0em rgba(128, 128, 1280, 0.1)\"); // add box-shadow\n\t\t\t\t\t\t\twindow.setTimeout(function () {\n\t\t\t\t\t\t\t\toToPage.$().css(\"box-shadow\", \"\"); // remove it again\n\t\t\t\t\t\t\t}, fnGetDelay(50));\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemSliding\").addStyleClass(\"sapMNavItemCenter\").removeStyleClass(\"sapMNavItemLeft\"); // transition from left position to normal/center position starts now\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemSliding\").removeStyleClass(\"sapMNavItemCenter\").addStyleClass(\"sapMNavItemRight\"); // transition from normal position to right position starts now\n\n\t\t\t\t\twindow.setTimeout(function () { // in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(400));\n\n\t\t\t\t}, fnGetDelay(100)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few\n\t\t\t}\n\t\t};\n\n\t} else { // no CSS transitions, IE9 support\n\t\tNavContainer.transitions[\"slide\"] = {\n\t\t\tto: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar $ToPage = oToPage.$();\n\t\t\t\t$ToPage.css(\"left\", \"100%\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class which has been added by the NavContainer before the transition was called\n\n\t\t\t\t$ToPage.animate({left: \"0%\"}, fnGetDelay(300));\n\t\t\t\tvar $FromPage = oFromPage.$();\n\t\t\t\t$FromPage.animate({left: \"-100%\"}, fnGetDelay(300), function () {\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\t$FromPage.css(\"left\", \"0\");\n\t\t\t\t\tfCallback();\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tback: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar $ToPage = oToPage.$();\n\t\t\t\t$ToPage.css(\"left\", \"-100%\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\");\n\n\t\t\t\t$ToPage.animate({left: \"0%\"}, fnGetDelay(300));\n\t\t\t\tvar $FromPage = oFromPage.$();\n\t\t\t\t$FromPage.animate({left: \"100%\"}, fnGetDelay(300), function () {\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\t$FromPage.css(\"left\", \"0\");\n\t\t\t\t\tfCallback();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\n\t//*** FADE Transition ***\n\n\tif (jQuery.support.cssTransitions) {\n\t\tNavContainer.transitions[\"fade\"] = {\n\n\t\t\tto: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toToPage.addStyleClass(\"sapMNavItemTransparent\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\");\n\n\t\t\t\t// iPhone needs some time for rendering, there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t// the code to be executed after the new page has completed fading in\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tfAfterTransition = function () {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\t// clean up the style classes\n\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemFading\").removeStyleClass(\"sapMNavItemOpaque\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\tfCallback();\n\t\t\t\t\t};\n\n\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemFading\").removeStyleClass(\"sapMNavItemTransparent\").addStyleClass(\"sapMNavItemOpaque\");\n\n\t\t\t\t\twindow.setTimeout(function () { // in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tfAfterTransition.apply(oToPage.$());\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(600));\n\n\t\t\t\t}, fnGetDelay(10));\n\t\t\t},\n\n\t\t\tback: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toFromPage.addStyleClass(\"sapMNavItemOpaque\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\");\n\n\t\t\t\t// iPhone needs some time for rendering, there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t// the code to be executed after the new page has completed fading in\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tfAfterTransition = function () {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\t// clean up the style classes\n\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemFading\").addStyleClass(\"sapMNavItemHidden\"); // TODO: destroy HTML?\n\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemTransparent\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\tfCallback();\n\t\t\t\t\t};\n\n\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemFading\").removeStyleClass(\"sapMNavItemOpaque\");\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemTransparent\");\n\n\t\t\t\t\twindow.setTimeout(function () { // in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tfAfterTransition.apply(oToPage.$());\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(600));\n\n\t\t\t\t}, fnGetDelay(10));\n\t\t\t}\n\t\t};\n\n\t} else { // no CSS transitions, IE9 support\n\t\tNavContainer.transitions[\"fade\"] = {\n\t\t\tto: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar $ToPage = oToPage.$();\n\t\t\t\t$ToPage.css(\"opacity\", \"0\");\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class which has been added by the NavContainer before the transition was called\n\n\t\t\t\t$ToPage.animate({opacity: \"1\"}, fnGetDelay(500), function () {\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\tfCallback();\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tback: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar $FromPage = oFromPage.$();\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class which has been added by the NavContainer before the transition was called\n\n\t\t\t\t$FromPage.animate({opacity: \"0\"}, fnGetDelay(500), function () {\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t\t\t\t\t$FromPage.css(\"opacity\", \"1\");\n\t\t\t\t\tfCallback();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n\n\n\t//*** FLIP Transition ***\n\n\tif (jQuery.support.cssTransitions) {\n\t\tNavContainer.transitions[\"flip\"] = {\n\n\t\t\tto: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(function () { // iPhone seems to need a zero timeout here, otherwise the to page is black (and may suddenly become visible when the DOM is touched)\n\n\t\t\t\t\tthat.$().addClass(\"sapMNavFlip\");\n\n\t\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemFlipNext\");     // the page to navigate to should be placed just right of the visible area\n\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\t\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\t\tfAfterTransition = function () {\n\t\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemFlipping\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemFlipping\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemFlipPrevious\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthat.$().removeClass(\"sapMNavFlip\");\n\n\t\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\t\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemFlipping\").removeStyleClass(\"sapMNavItemFlipNext\");\n\t\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemFlipping\").addStyleClass(\"sapMNavItemFlipPrevious\");\n\n\t\t\t\t\t\twindow.setTimeout(function () { // in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, fnGetDelay(600));\n\n\t\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few#\n\t\t\t\t}, 0);\n\t\t\t},\n\n\t\t\tback: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar that = this;\n\n\t\t\t\tthat.$().addClass(\"sapMNavFlip\");\n\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toToPage.addStyleClass(\"sapMNavItemFlipPrevious\");     // the page to navigate back to should be placed just left of the visible area\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tfAfterTransition = function () {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitTransitionEnd transitionend\");\n\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemFlipping\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemFlipping\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemFlipNext\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthat.$().removeClass(\"sapMNavFlip\");\n\n\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\toFromPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\t\t\t\t\toToPage.$().bind(\"webkitTransitionEnd transitionend\", fAfterTransition);\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemFlipping\").removeStyleClass(\"sapMNavItemFlipPrevious\"); // transition from left position to normal/center position starts now\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemFlipping\").addStyleClass(\"sapMNavItemFlipNext\"); // transition from normal position to right position starts now\n\n\t\t\t\t\twindow.setTimeout(function () { // in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(600));\n\n\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few\n\t\t\t}\n\t\t};\n\n\t} else { // no CSS transitions, IE9 support\n\t\tNavContainer.transitions[\"flip\"] = NavContainer.transitions[\"slide\"];\n\t}\n\n\n\t//*** DOOR Transition ***\n\n\tif (jQuery.support.cssTransitions) {\n\t\tNavContainer.transitions[\"door\"] = {\n\n\t\t\tto: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(function () { // iPhone seems to need a zero timeout here, otherwise the to page is black (and may suddenly become visible when the DOM is touched)\n\n\t\t\t\t\tthat.$().addClass(\"sapMNavDoor\");\n\n\t\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemDoorInNext\");     // the page to navigate to should be placed just right of the visible area\n\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\t\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\t\tfAfterTransition = function () {\n\t\t\t\t\t\t\tjQuery(this).unbind(\"webkitAnimationEnd animationend\");\n\t\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// the second transition now also finished => clean up the style classes\n\t\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemDooring\").removeStyleClass(\"sapMNavItemDoorInNext\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemDooring\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemDoorInPrevious\");\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthat.$().removeClass(\"sapMNavDoor\");\n\n\t\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\toFromPage.$().bind(\"webkitAnimationEnd animationend\", fAfterTransition);\n\t\t\t\t\t\toToPage.$().bind(\"webkitAnimationEnd animationend\", fAfterTransition);\n\n\t\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemDooring\");\n\t\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemDooring\").addStyleClass(\"sapMNavItemDoorInPrevious\");\n\n\t\t\t\t\t\twindow.setTimeout(function () { // in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, fnGetDelay(1000));\n\n\t\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few#\n\t\t\t\t}, 0);\n\t\t\t},\n\n\t\t\tback: function (oFromPage, oToPage, fCallback /*, oTransitionParameters is unused */) {\n\t\t\t\tvar that = this;\n\n\t\t\t\tthat.$().addClass(\"sapMNavDoor\");\n\n\t\t\t\t// set the style classes that represent the initial state\n\t\t\t\toToPage.addStyleClass(\"sapMNavItemDoorOutNext\");     // the page to navigate back to should be placed just left of the visible area\n\t\t\t\toToPage.removeStyleClass(\"sapMNavItemHidden\"); // remove the \"hidden\" class now which has been added by the NavContainer before the animation was called\n\n\t\t\t\t// iPhone needs some time... there is no animation without waiting\n\t\t\t\twindow.setTimeout(function () {\n\n\t\t\t\t\tvar bOneTransitionFinished = false;\n\t\t\t\t\tvar bTransitionEndPending = true;\n\t\t\t\t\tvar fAfterTransition = null; // make Eclipse aware that this variable is defined\n\t\t\t\t\tfAfterTransition = function () {\n\t\t\t\t\t\tjQuery(this).unbind(\"webkitAnimationEnd animationend\");\n\t\t\t\t\t\tif (!bOneTransitionFinished) {\n\t\t\t\t\t\t\t// the first one of both transitions finished\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// the second transition now also finished =>  clean up the style classes\n\t\t\t\t\t\t\tbTransitionEndPending = false;\n\n\t\t\t\t\t\t\t// update classes only of the active pages\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oToPage)) {\n\t\t\t\t\t\t\t\toToPage.removeStyleClass(\"sapMNavItemDooring\").removeStyleClass(\"sapMNavItemDoorOutNext\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (fnIsPageParentActive(oFromPage)) {\n\t\t\t\t\t\t\t\toFromPage.removeStyleClass(\"sapMNavItemDooring\").addStyleClass(\"sapMNavItemHidden\").removeStyleClass(\"sapMNavItemDoorOutPrevious\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthat.$().removeClass(\"sapMNavDoor\");\n\n\t\t\t\t\t\t\t// notify the NavContainer that the animation is complete\n\t\t\t\t\t\t\tfCallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\toFromPage.$().bind(\"webkitAnimationEnd animationend\", fAfterTransition);\n\t\t\t\t\toToPage.$().bind(\"webkitAnimationEnd animationend\", fAfterTransition);\n\n\t\t\t\t\t// set the new style classes that represent the end state (and thus start the transition)\n\t\t\t\t\toToPage.addStyleClass(\"sapMNavItemDooring\"); // transition from left position to normal/center position starts now\n\t\t\t\t\toFromPage.addStyleClass(\"sapMNavItemDooring\").addStyleClass(\"sapMNavItemDoorOutPrevious\"); // transition from normal position to right position starts now\n\n\t\t\t\t\twindow.setTimeout(function () { // in case rerendering prevented the fAfterTransition call\n\t\t\t\t\t\tif (bTransitionEndPending) {\n\t\t\t\t\t\t\tbOneTransitionFinished = true;\n\t\t\t\t\t\t\tfAfterTransition.apply(oFromPage.$().add(oToPage.$()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, fnGetDelay(1000));\n\n\t\t\t\t}, fnGetDelay(60)); // this value has been found by testing on actual devices; with \"10\" there are frequent \"no-animation\" issues, with \"100\" there are none, with \"50\" there are very few\n\t\t\t}\n\t\t};\n\n\t} else { // no CSS transitions, IE9 support\n\t\tNavContainer.transitions[\"door\"] = NavContainer.transitions[\"slide\"];\n\t}\n\n\n\t/**\n\t * Adds a custom transition to the NavContainer type (not to a particular instance!). The transition is identified by a \"name\". Make sure to only use names that will not collide with transitions which may be added to the NavContainer later. A suggestion is to use the prefix \"c_\" or \"_\" for your custom transitions to ensure this.\n\t *\n\t * \"to\" and \"back\" are the transition functions for the forward and backward navigation.\n\t * Both will be called with the following parameters:\n\t * - oFromPage: the Control which is currently being displayed by the NavContainer\n\t * - oToPage: the Control which should be displayed by the NavContainer after the transition\n\t * - fCallback: a function which MUST be called when the transition has completed\n\t * - oTransitionParameters: a data object that can be given by application code when triggering the transition by calling to() or back(); this object could give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration\n\t *\n\t * The contract for \"to\" and \"back\" is that they may do an animation of their choice, but it should not take \"too long\". At the beginning of the transition the target page \"oToPage\" does have the CSS class \"sapMNavItemHidden\" which initially hides the target page (visibility:hidden). The transition can do any preparation (e.g. move that page out of the screen or make it transparent) and then should remove this CSS class.\n\t * After the animation the target page \"oToPage\" should cover the entire screen and the source page \"oFromPage\" should not be visible anymore. This page should then have the CSS class \"sapMNavItemHidden\".\n\t * For adding/removing this or other CSS classes, the transition can use the addStyleClass/removeStyleClass method:\n\t * oFromPage.addStyleClass(\"sapMNavItemHidden\");\n\t * When the transition is complete, it MUST call the given fCallback method to inform the NavContainer that navigation has finished!\n\t *\n\t * Hint: if the target page of your transition stays black on iPhone, try wrapping the animation start into a\n\t * setTimeout(..., 0)\n\t * block (delayed, but without waiting).\n\t *\n\t * This method can be called on any NavContainer instance or statically on the sap.m.NavContainer type. However, the transition will always be registered for the type (and ALL instances), not for the single instance on which this method was invoked.\n\t *\n\t * Returns the sap.m.NavContainer type if called statically, or \"this\" (to allow method chaining) if called on a particular NavContainer instance.\n\t *\n\t * @param {string} sName\n\t *         The name of the transition. This name can be used by the application to choose this transition when navigating \"to()\" or \"back()\": the \"transitionName\" parameter of \"NavContainer.to()\" corresponds to this name, the back() navigation will automatically use the same transition.\n\t *\n\t *         Make sure to only use names that will not collide with transitions which may be added to the NavContainer later. A suggestion is to use the prefix \"c_\" or \"_\" for your custom transitions to ensure this.\n\t * @param {object} oTo\n\t *         The function which will be called by the NavContainer when the application navigates \"to()\", using this animation's name. The NavContainer instance is the \"this\" context within the animation function.\n\t *\n\t *         See the documentation of NavContainer.addCustomTransitions for more details about this function.\n\t * @param {object} oBack\n\t *         The function which will be called by the NavContainer when the application navigates \"back()\" from a page where it had navigated to using this animation's name. The NavContainer instance is the \"this\" context within the animation function.\n\t *\n\t *         See the documentation of NavContainer.addCustomTransitions for more details about this function.\n\t * @type sap.m.NavContainer\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tNavContainer.prototype.addCustomTransition = function (sName, fTo, fBack) {\n\t\tif (NavContainer.transitions[sName]) {\n\t\t\tjQuery.sap.log.warning(\"Transition with name \" + sName + \" already exists in \" + this + \". It is now being replaced by custom transition.\");\n\t\t}\n\n\t\tNavContainer.transitions[sName] = {to: fTo, back: fBack};\n\t\treturn this;\n\t};\n\tNavContainer.addCustomTransition = NavContainer.prototype.addCustomTransition;\n\n\n\t// ----------------- code for tracking and avoiding invalidation --------------------------\n\n\t/**\n\t * Forces invalidation and rerendering (.invalidate() is disabled)\n\t * @private\n\t */\n\tNavContainer.prototype.forceInvalidation = NavContainer.prototype.invalidate;\n\n\tNavContainer.prototype.invalidate = function (oSource) {\n\n\t\t/*eslint-disable no-empty */\n\t\tif (oSource == this) {\n\t\t\t/*eslint-enable no-empty */\n\t\t\t// does not happen because the source is only given when propagating to a parent\n\n\t\t} else if (!oSource) {\n\t\t\t// direct invalidation of the NavContainer; this means a property has been modified\n\t\t\tthis.forceInvalidation(); // let invalidation occur\n\n\t\t} else if (oSource instanceof Control) {\n\t\t\t// an aggregated control is invalidated\n\t\t\tvar bIsInPages = false,\n\t\t\t\taPages = this.getPages(),\n\t\t\t\tl = aPages.length;\n\n\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\tif (aPages[i] === oSource) {\n\t\t\t\t\tbIsInPages = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((!bIsInPages || oSource === this.getCurrentPage()) && !this._isInsideAPopup()) {\n\t\t\t\tthis.forceInvalidation();\n\t\t\t} // else : the invalidation source is a non-current page, so do not rerender anything\n\n\t\t} else {\n\t\t\t// TODO: which cases are ending up here?\n\t\t\tthis.forceInvalidation();\n\n\t\t}\n\t};\n\n\tNavContainer.prototype._isInsideAPopup = function () {\n\t\tvar fnScanForPopup;\n\n\t\tfnScanForPopup = function (oControl) {\n\t\t\tif (!oControl) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (oControl.getMetadata().isInstanceOf(\"sap.ui.core.PopupInterface\")) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn fnScanForPopup(oControl.getParent());\n\t\t};\n\n\t\treturn fnScanForPopup(this);\n\t};\n\n\tNavContainer.prototype.removePage = function (oPage) {\n\t\t// when removing a page that's not the currently displayed page, there's no need to invalidate the NavContainer\n\t\toPage = this.removeAggregation(\"pages\", oPage, oPage !== this.getCurrentPage());\n\n\t\tthis._onPageRemoved(oPage);\n\n\t\treturn oPage;\n\t};\n\n\tNavContainer.prototype._onPageRemoved = function (oPage) {\n\t\tif (!oPage) {\n\t\t\treturn;\n\t\t}\n\n\t\t// remove the dom because if you remove the hidden class, the page will get visible until the rerendering of the navContainer - causes a flickering\n\t\toPage.$().remove();\n\n\t\t// remove the style classes that might be added by the navContainer\n\t\toPage.removeStyleClass(\"sapMNavItemHidden\");\n\t\toPage.removeStyleClass(\"sapMNavItem\");\n\n\t\tvar aStack = this._ensurePageStackInitialized();\n\t\t// Remove all occurences from the stack\n\t\tthis._pageStack = aStack.filter(function (oPageStackInfo) {\n\t\t\treturn oPage.getId() !== oPageStackInfo.id;\n\t\t});\n\n\t};\n\n\tNavContainer.prototype.removeAllPages = function () {\n\t\tvar aPages = this.getPages();\n\t\tif (!aPages) {\n\t\t\treturn [];\n\t\t}\n\n\t\tfor (var i = 0; i < aPages.length; i++) {\n\t\t\tthis._onPageRemoved(aPages[i]);\n\t\t}\n\n\t\treturn this.removeAllAggregation(\"pages\");\n\t};\n\n\tNavContainer.prototype.addPage = function (oPage) {\n\t\tvar aPages = this.getPages();\n\t\t// Routing often adds an already existing page. ManagedObject would remove and re-add it because the order is affected,\n\t\t// but here the order does not matter, so just ignore the call in this case.\n\t\tif (jQuery.inArray(oPage, aPages) > -1) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.addAggregation(\"pages\", oPage, true);\n\n\t\t// sapMNavItem must be added after addAggregation is called because addAggregation can lead\n\t\t// to a removePage-call where the class is removed again.\n\t\toPage.addStyleClass(\"sapMNavItem\");\n\t\tvar iPreviousPageCount = aPages.length;\n\n\t\tif (iPreviousPageCount === 0 && /* get the NEW pages count */ this.getPages().length === 1 && this.getDomRef()) { // the added page is the first and only page and has been newly added\n\t\t\tthis._ensurePageStackInitialized();\n\t\t\tthis.rerender();\n\t\t\tthis._fireAdaptableContentChange(oPage);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tNavContainer.prototype.insertPage = function (oPage, iIndex) {\n\t\tvar iPreviousPageCount = this.getPages().length;\n\n\t\tthis.insertAggregation(\"pages\", oPage, iIndex, true);\n\n\t\t// sapMNavItem must be added after addAggregation is called because addAggregation can lead\n\t\t// to a removePage-call where the class is removed again.\n\t\toPage.addStyleClass(\"sapMNavItem\");\n\n\t\tif (iPreviousPageCount === 0 && this.getPages().length === 1 && this.getDomRef()) { // the added page is the first and only page and has been newly added\n\t\t\tthis._ensurePageStackInitialized();\n\t\t\tthis.rerender();\n\t\t\tthis._fireAdaptableContentChange(oPage);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Fiori 2.0 Adaptation\n\t */\n\tNavContainer.prototype._getAdaptableContent = function() {\n\t\treturn this.getCurrentPage();\n\t};\n\n\tNavContainer.prototype._fireAdaptableContentChange = function(oPage) {\n\t\tif (oPage && this.mEventRegistry[\"_adaptableContentChange\"] ) { //workaround for accessing the first page displayed in the navContainer, since \"navigate\" event is not thrown for it\n\t\t\tthis.fireEvent(\"_adaptableContentChange\", {\n\t\t\t\t\"parent\": this,\n\t\t\t\t\"adaptableContent\": oPage\n\t\t\t});\n\t\t}\n\t};\n\n\t// documentation of the pseudo events (beforeShow, afterShow, beforeHide etc.)\n\n\t/**\n\t * sap.m.NavContainerChild is an artificial interface with the only purpose to bear the documentation of\n\t * pseudo events triggered by sap.m.NavContainer on its child controls when navigation occurs and child controls are displayed/hidden.\n\t *\n\t * Interested parties outside the child control can listen to one or more of these events by registering a Delegate:\n\t * <pre>\n\t * page1.addEventDelegate({\n\t *    onBeforeShow: function(evt) {\n\t *       // page1 is about to be shown; act accordingly - if required you can read event information from the evt object\n\t *    },\n\t *    onAfterHide: function(evt) {\n\t *       // ...\n\t *    }\n\t * });\n\t * </pre>\n\t *\n\t * @name sap.m.NavContainerChild\n\t * @interface\n\t * @public\n\t */\n\n\n\t/**\n\t * This event is fired before the NavContainer shows this child control for the first time.\n\t * @event\n\t * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n\t * @param {object} oEvent.data the data object which has been passed with the \"to\" navigation, or an empty object\n\t * @param {object} oEvent.backData the data object which has been passed with the back navigation, or an empty object\n\t * @name sap.m.NavContainerChild.prototype.BeforeFirstShow\n\t * @public\n\t */\n\n\t/**\n\t * This event is fired every time before the NavContainer shows this child control. In case of animated transitions this\n\t * event is fired before the transition starts.\n\t * @event\n\t * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n\t * @param {object} oEvent.data the data object which has been passed with the \"to\" navigation, or an empty object\n\t * @param {object} oEvent.backData the data object which has been passed with the back navigation, or an empty object\n\t * @name sap.m.NavContainerChild.prototype.BeforeShow\n\t * @public\n\t */\n\n\t/**\n\t * This event is fired every time when the NavContainer has made this child control visible. In case of animated transitions this\n\t * event is fired after the transition finishes. This control is now being displayed and not animated anymore.\n\t * @event\n\t * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n\t * @param {object} oEvent.data the data object which has been passed with the \"to\" navigation, or an empty object\n\t * @param {object} oEvent.backData the data object which has been passed with the back navigation, or an empty object\n\t * @name sap.m.NavContainerChild.prototype.AfterShow\n\t * @public\n\t */\n\n\t/**\n\t * This event is fired every time before the NavContainer hides this child control. In case of animated transitions this\n\t * event is fired before the transition starts.\n\t * @event\n\t * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n\t * @name sap.m.NavContainerChild.prototype.BeforeHide\n\t * @public\n\t */\n\n\t/**\n\t * This event is fired every time when the NavContainer has made this child control invisible. In case of animated transitions this\n\t * event is fired after the transition finishes. This control is now no longer being displayed and not animated anymore.\n\t * @event\n\t * @param {sap.ui.core.Control} oEvent.srcControl the NavContainer firing the event\n\t * @name sap.m.NavContainerChild.prototype.AfterHide\n\t * @public\n\t */\n\n\treturn NavContainer;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.NavContainerRenderer\", require(\"sap/m/NavContainerRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/NavContainer.js","module.exports = \"TITLE=todos\\nINPUT_PLACEHOLDER=What needs to be done?\\nITEM_LEFT=item left\\nITEMS_LEFT=items left\\nCLEAR_COMPLETED=Clear completed\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./i18n/i18n.properties\n// module id = 5lBc\n// module chunks = 1","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['sap/ui/core/Renderer', './InputBaseRenderer', 'sap/m/library'],\n\tfunction(Renderer, InputBaseRenderer, library) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.m.InputType\n\tvar InputType = library.InputType;\n\n\n\t/**\n\t * Input renderer.\n\t * @namespace\n\t *\n\t * InputRenderer extends the InputBaseRenderer\n\t */\n\tvar InputRenderer = Renderer.extend(InputBaseRenderer);\n\n\t/**\n\t * Adds control specific class\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tInputRenderer.addOuterClasses = function(oRm, oControl) {\n\t\toRm.addClass(\"sapMInput\");\n\t\tif (oControl.getShowValueHelp() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\toRm.addClass(\"sapMInputVH\");\n\t\t\tif (oControl.getValueHelpOnly()) {\n\t\t\t\toRm.addClass(\"sapMInputVHO\");\n\t\t\t}\n\t\t}\n\t\tif (oControl.getDescription()) {\n\t\t\t\toRm.addClass(\"sapMInputDescription\");\n\t\t}\n\t};\n\n\t/**\n\t * Add extra styles for input container\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tInputRenderer.addOuterStyles = function(oRm, oControl) {\n\t};\n\n\t/**\n\t * add extra attributes to Input\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tInputRenderer.writeInnerAttributes = function(oRm, oControl) {\n\t\toRm.writeAttribute(\"type\", oControl.getType().toLowerCase());\n\t\tif (oControl.getType() == InputType.Number && sap.ui.getCore().getConfiguration().getRTL()) {\n\t\t\toRm.writeAttribute(\"dir\", \"ltr\");\n\t\t\toRm.addStyle(\"text-align\", \"right\");\n\t\t}\n\n\t\tif (oControl.getShowSuggestion()) {\n\t\t\toRm.writeAttribute(\"autocomplete\", \"off\");\n\t\t}\n\n\t\tif ((!oControl.getEnabled() && oControl.getType() == \"Password\")\n\t\t\t\t|| (oControl.getShowSuggestion() && oControl._bUseDialog)\n\t\t\t\t|| (oControl.getValueHelpOnly() && oControl.getEnabled() && oControl.getEditable() && oControl.getShowValueHelp())) {\n\t\t\t// required for JAWS reader on password fields on desktop and in other cases:\n\t\t\toRm.writeAttribute(\"readonly\", \"readonly\");\n\t\t}\n\t};\n\n\t/**\n\t * Adds inner css classes to the input field\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tInputRenderer.addInnerClasses = function(oRm, oControl) {\n\t};\n\n\t/**\n\t * Add inner styles to the input field\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tInputRenderer.addWrapperStyles = function(oRm, oControl) {\n\n\t\tif (oControl.getDescription()) {\n\t\t\toRm.addStyle(\"width\", oControl.getFieldWidth() || \"50%\");\n\t\t}\n\t};\n\n\t/**\n\t * Write the decorations of the input.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputRenderer.writeDecorations = function(oRm, oControl) {\n\n\t\tvar id = oControl.getId(),\n\t\t\tdescription = oControl.getDescription();\n\n\t\tif (!description) {\n\t\t\tthis.writeValueHelpIcon(oRm, oControl);\n\t\t} else {\n\t\t\toRm.write(\"<span id=\\\"\" + oControl.getId() + \"-Descr\\\">\");\n\t\t\tthis.writeValueHelpIcon(oRm, oControl);\n\t\t\toRm.write('<span class=\"sapMInputDescriptionText\">');\n\t\t\toRm.writeEscaped(description);\n\t\t\toRm.write(\"</span></span>\");\n\t\t}\n\n\t\tif (sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\tif (oControl.getShowSuggestion() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\t\toRm.write(\"<span id=\\\"\" + id + \"-SuggDescr\\\" class=\\\"sapUiPseudoInvisibleText\\\" role=\\\"status\\\" aria-live=\\\"polite\\\"></span>\");\n\t\t\t}\n\t\t}\n\n\t};\n\n\tInputRenderer.writeValueHelpIcon = function(oRm, oControl) {\n\n\t\tif (oControl.getShowValueHelp() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\t// Set tabindex to -1 to prevent the focus from going to the underlying list row,\n\t\t\t// in case when the input is placed inside of a list/table.\n\t\t\toRm.write('<div class=\"sapMInputValHelp\" tabindex=\"-1\">');\n\t\t\toRm.renderControl(oControl._getValueHelpIcon());\n\t\t\toRm.write(\"</div>\");\n\t\t}\n\n\t};\n\n\t/**\n\t * Add inner styles to the placeholder\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tInputRenderer.addPlaceholderStyles = function(oRm, oControl) {\n\n\t\tif (oControl.getDescription()) {\n\t\t\toRm.addStyle(\"width\", oControl.getFieldWidth() || \"50%\");\n\t\t}\n\n\t};\n\n\tInputRenderer.getAriaLabelledBy = function(oControl) {\n\t\tvar ariaLabels = InputBaseRenderer.getAriaLabelledBy.call(this, oControl) || \"\";\n\t\tif (oControl.getDescription()) {\n\t\t\tariaLabels = ariaLabels + \" \" + oControl.getId() + \"-Descr\";\n\t\t}\n\t\treturn ariaLabels;\n\t};\n\n\tInputRenderer.getAriaDescribedBy = function(oControl) {\n\n\t\tvar sAriaDescribedBy = InputBaseRenderer.getAriaDescribedBy.apply(this, arguments);\n\n\t\tif (oControl.getShowValueHelp() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\tif (sAriaDescribedBy) {\n\t\t\t\tsAriaDescribedBy = sAriaDescribedBy + \" \" + oControl._sAriaValueHelpLabelId;\n\t\t\t} else {\n\t\t\t\tsAriaDescribedBy = oControl._sAriaValueHelpLabelId;\n\t\t\t}\n\t\t\tif (oControl.getValueHelpOnly()) {\n\t\t\t\tsAriaDescribedBy = sAriaDescribedBy + \" \" + oControl._sAriaInputDisabledLabelId;\n\t\t\t}\n\t\t}\n\n\t\tif (oControl.getShowSuggestion() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\tif (sAriaDescribedBy) {\n\t\t\t\tsAriaDescribedBy = sAriaDescribedBy + \" \" + oControl.getId() + \"-SuggDescr\";\n\t\t\t} else {\n\t\t\t\tsAriaDescribedBy = oControl.getId() + \"-SuggDescr\";\n\t\t\t}\n\t\t}\n\n\t\treturn sAriaDescribedBy;\n\n\t};\n\n\t/**\n\t * Returns aria accessibility role for the control.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control\n\t * @returns {String}\n\t */\n\tInputRenderer.getAriaRole = function(oControl) {\n\t\treturn \"\";\n\t};\n\n\tInputRenderer.getAccessibilityState = function(oControl) {\n\n\t\tvar mAccessibilityState = InputBaseRenderer.getAccessibilityState.apply(this, arguments);\n\n\t\tif (oControl.getShowSuggestion() && oControl.getEnabled() && oControl.getEditable()) {\n\t\t\tmAccessibilityState.autocomplete = \"list\";\n\t\t}\n\n\t\treturn mAccessibilityState;\n\n\t};\n\n\treturn InputRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/InputRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n sap.ui.define(['jquery.sap.global', 'sap/ui/core/library', 'sap/m/library', 'sap/ui/Device'],\n\tfunction(jQuery, coreLibrary, library, Device) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.m.BackgroundHelper\n\tvar BackgroundHelper = library.BackgroundHelper;\n\n\t// shortcut for sap.ui.core.TitleLevel\n\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\n\t/**\n\t * Shell renderer.\n\t * @namespace\n\t */\n\tvar ShellRenderer = {\n\t};\n\n\n\t/**\n\t * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered\n\t */\n\tShellRenderer.render = function(rm, oControl) {\n\t\tvar sTitleLevel = (oControl.getTitleLevel() === TitleLevel.Auto) ? TitleLevel.H1 : oControl.getTitleLevel();\n\n\t\trm.write(\"<div\");\n\t\trm.writeControlData(oControl);\n\t\trm.addClass(\"sapMShell\");\n\n\t\tif (oControl.getAppWidthLimited()) {\n\t\t\trm.addClass(\"sapMShellAppWidthLimited\");\n\t\t}\n\n\t\tBackgroundHelper.addBackgroundColorStyles(rm, oControl.getBackgroundColor(),  oControl.getBackgroundImage(), \"sapMShellGlobalOuterBackground\");\n\n\t\trm.writeClasses();\n\t\trm.writeStyles();\n\n\t\tvar sTooltip = oControl.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\trm.write(\">\");\n\n\t\t/* The background in \"SAP_Belize_Deep\" must be dark. The contrast class is set to the element wihout any children to avoid unnecessary propagation. */\n\t\tBackgroundHelper.renderBackgroundImageTag(rm, oControl, [\"sapContrastPlus\", \"sapMShellBG\", \"sapUiGlobalBackgroundImageForce\"],  oControl.getBackgroundImage(), oControl.getBackgroundRepeat(), oControl.getBackgroundOpacity());\n\n\t\trm.write(\"<div class='sapMShellBrandingBar'></div>\");\n\n\n\t\trm.write(\"<div class='sapMShellCentralBox'>\");\n\n\n\t\t// header\n\t\tvar extraHeaderClass = \"\", extraBGClass = \"\";\n\t\tif (!oControl.getBackgroundImage()) {\n\t\t\textraHeaderClass = \"sapMShellBackgroundColorOnlyIfDefault\";\n\t\t\textraBGClass = \"sapUiGlobalBackgroundImageOnlyIfDefault\";\n\t\t}\n\t\trm.write(\"<header class='sapMShellHeader \" + extraHeaderClass + \"' id='\" + oControl.getId() + \"-hdr'>\");\n\t\trm.write(\"<div class='\" + extraBGClass + \"'></div>\");\n\t\t// logo\n\t\trm.write(ShellRenderer.getLogoImageHtml(oControl));\n\n\t\t// header title\n\t\tif (oControl.getTitle()) {\n\t\t\trm.write(\"<\" + sTitleLevel);\n\t\t\trm.write(\" id='\" + oControl.getId() + \"-hdrTxt' class='sapMShellHeaderText'>\");\n\t\t\trm.writeEscaped(oControl.getTitle());\n\t\t\trm.write(\"</\" + sTitleLevel + \">\");\n\t\t}\n\n\t\t// header right area\n\t\trm.write(\"<span class='sapMShellHeaderRight'>\");\n\n\t\t// headerRightText\n\t\trm.write(\"<span id='\" + oControl.getId() + \"-hdrRightTxt' \");\n\t\tif (!oControl.getHeaderRightText()) {\n\t\t\trm.writeAttribute(\"style\", \"display:none;\");\n\t\t}\n\t\trm.write(\"class='sapMShellHeaderRightText'>\" + jQuery.sap.encodeHTML(oControl.getHeaderRightText()) + \"</span>\");\n\n\n\t\t// logout button\n\t\tif (oControl.getShowLogout()) {\n\t\t\tvar rb = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\t\trm.write(\"<a id='\" + oControl.getId() + \"-logout' tabindex='0' role='button' class='sapMShellHeaderLogout'>\" + rb.getText(\"SHELL_LOGOUT\") + \"</a>\");\n\t\t}\n\n\t\trm.write(\"</span></header>\");\n\n\n\n\t\t// content\n\t\trm.write(\"<div class='sapMShellContent sapMShellGlobalInnerBackground' id='\" + oControl.getId() + \"-content' data-sap-ui-root-content='true'>\");\n\t\trm.renderControl(oControl.getApp());\n\t\trm.write(\"</div></div></div>\");\n\t};\n\n\tShellRenderer.getLogoImageHtml = function(oControl) {\n\t\tvar sImage = oControl.getLogo(); // configured logo\n\t\tif (!sImage) {\n\t\t\tjQuery.sap.require(\"sap.ui.core.theming.Parameters\");\n\t\t\tsImage = sap.ui.core.theming.Parameters._getThemeImage(); // theme logo\n\t\t}\n\n\t\tvar result = \"\";\n\t\tif (sImage) {\n\t\t\tvar oRb = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\t\tresult = \"<div class='sapMShellLogo'>\";\n\t\t\tif (Device.browser.msie) {\n\t\t\t\tresult += \"<span class='sapMShellLogoImgAligner'></span>\";\n\t\t\t}\n\t\t\tresult += \"<img id='\" + oControl.getId() + \"-logo' class='sapMShellLogoImg' src='\";\n\t\t\tresult += jQuery.sap.encodeHTML(sImage);\n\t\t\tresult += \"' alt='\";\n\t\t\tresult += oRb.getText(\"SHELL_ARIA_LOGO\");\n\t\t\tresult += \"' /></div>\";\n\t\t}\n\t\treturn result;\n\t};\n\n\treturn ShellRenderer;\n\n }, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ShellRenderer.js","require(\"sap/m/themes/base/ColumnListItem.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.ColumnListItem.\nsap.ui.define(['jquery.sap.global', 'sap/ui/core/Element', './ListItemBase', './library', 'sap/ui/core/library'],\n\tfunction(jQuery, Element, ListItemBase, library, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.ui.core.VerticalAlign\n\tvar VerticalAlign = coreLibrary.VerticalAlign;\n\n\t/**\n\t * Constructor for a new ColumnListItem.\n\t *\n\t * @param {string} [sId] Id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * <code>sap.m.ColumnListItem</code> can be used with the <code>cells</code> aggregation to create rows for the <code>sap.m.Table</code> control.\n\t * The <code>columns</code> aggregation of the <code>sap.m.Table</code> should match with the cells aggregation.\n\t *\n\t * <b>Note:</b> This control should only be used within the <code>sap.m.Table</code> control.\n\t * The inherited <code>counter</code> property of <code>sap.m.ListItemBase</code> is not supported.\n\t *\n\t * @extends sap.m.ListItemBase\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @since 1.12\n\t * @alias sap.m.ColumnListItem\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar ColumnListItem = ListItemBase.extend(\"sap.m.ColumnListItem\", /** @lends sap.m.ColumnListItem.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Sets the vertical alignment of all the cells within the table row (including selection and navigation).\n\t\t\t * <b>Note:</b> <code>vAlign</code> property of <code>sap.m.Column</code> overrides the property for cell vertical alignment if both are set.\n\t\t\t * @since 1.20\n\t\t\t */\n\t\t\tvAlign : {type : \"sap.ui.core.VerticalAlign\", group : \"Appearance\", defaultValue : VerticalAlign.Inherit}\n\t\t},\n\t\tdefaultAggregation : \"cells\",\n\t\taggregations : {\n\n\t\t\t/**\n\t\t\t * Every <code>control</code> inside the <code>cells</code> aggregation defines one cell of the row.\n\t\t\t * <b>Note:</b> The order of the <code>cells</code> aggregation must match the order of the <code>columns</code> aggregation of <code>sap.m.Table</code>.\n\t\t\t */\n\t\t\tcells : {type : \"sap.ui.core.Control\", multiple : true, singularName : \"cell\", bindable : \"bindable\"}\n\t\t}\n\t}});\n\n\t/**\n\t * TablePopin element that handles own events.\n\t */\n\tvar TablePopin = Element.extend(\"sap.m.TablePopin\", {\n\t\tonfocusin: function(oEvent) {\n\t\t\t// focus to the main row if there is nothing to focus in the popin\n\t\t\tif (oEvent.srcControl === this || !jQuery(oEvent.target).is(\":sapFocusable\")) {\n\t\t\t\tthis.getParent().focus();\n\t\t\t}\n\t\t}\n\t});\n\n\t// defines tag name\n\tColumnListItem.prototype.TagName = \"tr\";\n\n\tColumnListItem.prototype.init = function() {\n\t\tListItemBase.prototype.init.call(this);\n\t\tthis._bNeedsTypeColumn = false;\n\t\tthis._aClonedHeaders = [];\n\t};\n\n\tColumnListItem.prototype.onAfterRendering = function() {\n\t\tListItemBase.prototype.onAfterRendering.call(this);\n\t\tthis._checkTypeColumn();\n\t};\n\n\tColumnListItem.prototype.exit = function() {\n\t\tListItemBase.prototype.exit.call(this);\n\t\tthis._checkTypeColumn(false);\n\t\tthis._destroyClonedHeaders();\n\n\t\tif (this._oPopin) {\n\t\t\tthis._oPopin.destroy(true);\n\t\t\tthis._oPopin = null;\n\t\t}\n\t};\n\n\t// remove pop-in from DOM when setVisible false is called\n\tColumnListItem.prototype.setVisible = function(bVisible) {\n\t\tListItemBase.prototype.setVisible.call(this, bVisible);\n\t\tif (!bVisible && this.hasPopin()) {\n\t\t\tthis.removePopin();\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t// returns responsible table control for the item\n\tColumnListItem.prototype.getTable = function() {\n\t\tvar oParent = this.getParent();\n\t\tif (oParent instanceof sap.m.Table) {\n\t\t\treturn oParent;\n\t\t}\n\n\t\t// support old list with columns aggregation\n\t\tif (oParent && oParent.getMetadata().getName() == \"sap.m.Table\") {\n\t\t\treturn oParent;\n\t\t}\n\t};\n\n\t/**\n\t * Returns the pop-in element.\n\t *\n\t * @protected\n\t * @since 1.30.9\n\t */\n\tColumnListItem.prototype.getPopin = function() {\n\t\tif (!this._oPopin) {\n\t\t\tthis._oPopin = new TablePopin({\n\t\t\t\tid: this.getId() + \"-sub\"\n\t\t\t}).addEventDelegate({\n\t\t\t\t// handle the events of pop-in\n\t\t\t\tontouchstart: this.ontouchstart,\n\t\t\t\tontouchmove: this.ontouchmove,\n\t\t\t\tontap: this.ontap,\n\t\t\t\tontouchend: this.ontouchend,\n\t\t\t\tontouchcancel: this.ontouchcancel,\n\t\t\t\tonsaptabnext: this.onsaptabnext,\n\t\t\t\tonsaptabprevious: this.onsaptabprevious,\n\t\t\t\tonsapup: this.onsapup,\n\t\t\t\tonsapdown: this.onsapdown\n\t\t\t}, this).setParent(this, null, true);\n\t\t}\n\n\t\treturn this._oPopin;\n\t};\n\n\t/**\n\t * Returns pop-in DOMRef as a jQuery Object\n\t *\n\t * @protected\n\t * @since 1.26\n\t */\n\tColumnListItem.prototype.$Popin = function() {\n\t\treturn this.$(\"sub\");\n\t};\n\n\t/**\n\t * Determines whether control has pop-in or not.\n\t * @protected\n\t */\n\tColumnListItem.prototype.hasPopin = function() {\n\t\treturn !!(this._oPopin && this.getTable().hasPopin());\n\t};\n\n\t/**\n\t * Pemove pop-in from DOM\n\t * @protected\n\t */\n\tColumnListItem.prototype.removePopin = function() {\n\t\tthis._oPopin && this.$Popin().remove();\n\t};\n\n\t/**\n\t * Returns the tabbable DOM elements as a jQuery collection\n\t * When popin is available this separated dom should also be included\n\t *\n\t * @returns {jQuery} jQuery object\n\t * @protected\n\t * @since 1.26\n\t */\n\tColumnListItem.prototype.getTabbables = function() {\n\t\treturn this.$().add(this.$Popin()).find(\":sapTabbable\");\n\t};\n\n\tColumnListItem.prototype.getAccessibilityType = function(oBundle) {\n\t\treturn oBundle.getText(\"ACC_CTR_TYPE_ROW\");\n\t};\n\n\tColumnListItem.prototype.getContentAnnouncement = function(oBundle) {\n\t\tvar oTable = this.getTable();\n\t\tif (!oTable) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sAnnouncement = \"\",\n\t\t\taCells = this.getCells(),\n\t\t\taColumns = oTable.getColumns(true);\n\n\t\taColumns.forEach(function(oColumn) {\n\t\t\tvar oCell = aCells[oColumn.getInitialOrder()];\n\t\t\tif (!oCell || !oColumn.getVisible() || (oColumn.isHidden() && !oColumn.isPopin())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oHeader = oColumn.getHeader();\n\t\t\tif (oHeader && oHeader.getVisible()) {\n\t\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oHeader) + \" \";\n\t\t\t}\n\n\t\t\tsAnnouncement += ListItemBase.getAccessibilityText(oCell, true) + \" \";\n\t\t});\n\n\t\treturn sAnnouncement;\n\t};\n\n\t// update the aria-selected for the cells\n\tColumnListItem.prototype.updateSelectedDOM = function(bSelected, $This) {\n\t\tListItemBase.prototype.updateSelectedDOM.apply(this, arguments);\n\n\t\t// update popin as well\n\t\tif (this.hasPopin()) {\n\t\t\tthis.$Popin().attr(\"aria-selected\", bSelected);\n\t\t}\n\t};\n\n\t// informs the table when item's type column requirement is changed\n\tColumnListItem.prototype._checkTypeColumn = function(bNeedsTypeColumn) {\n\t\tif (bNeedsTypeColumn == undefined) {\n\t\t\tbNeedsTypeColumn = this._needsTypeColumn();\n\t\t}\n\n\t\tif (this._bNeedsTypeColumn != bNeedsTypeColumn) {\n\t\t\tthis._bNeedsTypeColumn = bNeedsTypeColumn;\n\t\t\tthis.informList(\"TypeColumnChange\", bNeedsTypeColumn);\n\t\t}\n\t};\n\n\t// determines whether type column for this item is necessary or not\n\tColumnListItem.prototype._needsTypeColumn = function() {\n\t\tvar sType = this.getType(),\n\t\t\tmType = ListType;\n\n\t\treturn\tthis.getVisible() && (\n\t\t\t\t\tsType == mType.Detail ||\n\t\t\t\t\tsType == mType.Navigation ||\n\t\t\t\t\tsType == mType.DetailAndActive\n\t\t\t\t);\n\t};\n\n\t// Adds cloned header to the local collection\n\tColumnListItem.prototype._addClonedHeader = function(oHeader) {\n\t\treturn this._aClonedHeaders.push(oHeader);\n\t};\n\n\t// Destroys cloned headers that are generated for popin\n\tColumnListItem.prototype._destroyClonedHeaders = function() {\n\t\tif (this._aClonedHeaders.length) {\n\t\t\tthis._aClonedHeaders.forEach(function(oClone) {\n\t\t\t\toClone.destroy(\"KeepDom\");\n\t\t\t});\n\t\t\tthis._aClonedHeaders = [];\n\t\t}\n\t};\n\n\t// active feedback for pop-in\n\tColumnListItem.prototype._activeHandlingInheritor = function() {\n\t\tthis._toggleActiveClass(true);\n\t};\n\n\t// inactive feedback for pop-in\n\tColumnListItem.prototype._inactiveHandlingInheritor = function() {\n\t\tthis._toggleActiveClass(false);\n\t};\n\n\t// toggles the active class of the pop-in.\n\tColumnListItem.prototype._toggleActiveClass = function(bSwitch) {\n\t\tif (this.hasPopin()) {\n\t\t\tthis.$Popin().toggleClass(\"sapMLIBActive\", bSwitch);\n\t\t}\n\t};\n\n\treturn ColumnListItem;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.ColumnListItemRenderer\", require(\"sap/m/ColumnListItemRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ColumnListItem.js","require(\"sap/m/themes/base/ColumnHeader.less\");\n/*\n * ! UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\nsap.ui.define([\n\t'sap/ui/core/Control', 'sap/ui/core/Icon'\n], function(Control, Icon) {\n\t\"use strict\";\n\n\t/**\n\t * Constructor for the control.\n\t * @param {string} [sId] id for the new control.\n\t * @param {string} [mSettings] initial settings for the new control.\n\t *\n\t * @class\n\t * The <code>ColumnHeader</code> control provides the capabilities to perform sorting, filter and grouping on a table column.\n\t * @extends sap.ui.core.Control\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @since 1.52\n\t * @private\n\t * @alias sap.m.ColumnHeader\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar ColumnHeader = Control.extend(\"sap.m.ColumnHeader\", /** @lends sap.m.ColumnHeader.prototype */\n\t{\n\t\tlibrary: \"sap.m\",\n\t\tmetadata: {\n\t\t\tproperties: {\n\t\t\t\t/**\n\t\t\t\t * Defines title for the <code>ColumnHeader</code> control.\n\t\t\t\t */\n\t\t\t\ttext: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdefaultValue: null\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * This property can be used to predefine sorting\n\t\t\t\t */\n\t\t\t\tsorted: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdefaultValue: false\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Defines the sort order (Ascending/Descending).\n\t\t\t\t */\n\t\t\t\tsortOrder: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdefaultValue: null\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * Defines whether filters are applied.\n\t\t\t\t */\n\t\t\t\tfiltered: {\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tdefaultValue: false\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefaultAggregations: \"viewSettingsPopover\",\n\t\t\taggregations: {\n\t\t\t\t/**\n\t\t\t\t * <code>ViewSettingsPopover</code> control to be displayed with the <code>ColumnHeader</code> control.\n\t\t\t\t */\n\t\t\t\tviewSettingsPopover: {\n\t\t\t\t\ttype: \"sap.m.ViewSettingsPopover\",\n\t\t\t\t\tmultiple: false\n\t\t\t\t},\n\n\t\t\t\t_sortIcon: {\n\t\t\t\t\ttype: \"sap.ui.core.Icon\",\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tvisibility: \"hidden\"\n\t\t\t\t},\n\n\t\t\t\t_filterIcon: {\n\t\t\t\t\ttype: \"sap.ui.core.Icon\",\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\tvisibility: \"hidden\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Sets the <code>ViewSettingsAggregation</code> aggregation for the <code>ColumnHeader</code> control.\n\t * @private\n\t */\n\tColumnHeader.prototype.setViewSettingsPopover = function(oViewSettingsPopover) {\n\t\t// the property should be made Public when the control is made public\n\t\tthis.setAggregation(\"viewSettingsPopover\", oViewSettingsPopover, true);\n\t\tthis._attachViewSettingsPopoverEvents();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the sort order as well as sets the required sort icon.\n\t */\n\tColumnHeader.prototype.setSortOrder = function(sSortOrder) {\n\t\t// the property should be made Public when the control is made public\n\t\tthis.setProperty(\"sortOrder\", sSortOrder);\n\n\t\tvar sIconUrl = sSortOrder === \"Ascending\" ? \"sap-icon://sort-ascending\" : \"sap-icon://sort-descending\";\n\t\tvar oSortIcon = this.getAggregation(\"_sortIcon\");\n\t\tif (!oSortIcon) {\n\t\t\tthis.setAggregation(\"_sortIcon\", new Icon({\n\t\t\t\tsrc: sIconUrl,\n\t\t\t\tvisible: this.getSorted()\n\t\t\t}));\n\t\t} else {\n\t\t\toSortIcon.setSrc(sIconUrl);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Defines if sorting is applied and sets the sort icon on the <code>ColumnHeader</code> control.\n\t */\n\tColumnHeader.prototype.setSorted = function(bSorted) {\n\t\tthis.setProperty(\"sorted\", bSorted);\n\t\tvar oSortIcon = this.getAggregation(\"_sortIcon\");\n\n\t\tif (!bSorted && !oSortIcon) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (bSorted) {\n\t\t\tif (!oSortIcon) {\n\t\t\t\tthis.setAggregation(\"_sortIcon\", new Icon({\n\t\t\t\t\tsrc: this.getSortOrder() === \"Ascending\" ? \"sap-icon://sort-ascending\" : \"sap-icon://sort-descending\"\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\toSortIcon.setVisible(true);\n\t\t\t}\n\t\t} else {\n\t\t\toSortIcon.setVisible(false);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Defines if filtering is applied and sets the filter icon on the <code>ColumnHeader</code> control.\n\t */\n\tColumnHeader.prototype.setFiltered = function(bFiltered) {\n\t\t// the property should be made Public when the control is made public\n\t\tthis.setProperty(\"filtered\", bFiltered);\n\t\tvar oFilterIcon = this.getAggregation(\"_filterIcon\");\n\n\t\tif (!bFiltered && !oFilterIcon) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (bFiltered) {\n\t\t\tif (!oFilterIcon) {\n\t\t\t\tthis.setAggregation(\"_filterIcon\", new Icon({\n\t\t\t\t\tsrc: \"sap-icon://filter\"\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\toFilterIcon.setVisible(true);\n\t\t\t}\n\t\t} else {\n\t\t\toFilterIcon.setVisible(false);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the adapter for the <code>ColumnHeader</code> control.\n\t * @param {object} oAdapter table adapter.\n\t * @private\n\t */\n\tColumnHeader.prototype.setTableAdapter = function(oAdapter) {\n\t\tthis._oAdapter = oAdapter;\n\t};\n\n\t/**\n\t * Get the column adapter based on the adapter type.\n\t * Currently defaulted to ResponsiveTableAdapter.\n\t *\n\t * @returns {oAdapter} adapter to be used.\n\t * @private\n\t */\n\tColumnHeader.prototype.getTableAdapter = function() {\n\t\treturn this._oAdapter || {\n\t\t\tinteractive: true,\n\t\t\trowAggregation: \"items\"\n\t\t};\n\t};\n\n\t/**\n\t * Click event for opening the <code>ViewSettingsPopover<code> control.\n\t * @param {object} oEvent Triggers the opening of the <code>ViewSettingsPopover<code> control.\n\t * @private\n\t */\n\tColumnHeader.prototype.onclick = function(oEvent) {\n\t\tif (this._isInteractive()) {\n\t\t\tthis._openColumnActions();\n\t\t}\n\t};\n\n\tColumnHeader.prototype.onsapselect = ColumnHeader.prototype.onclick;\n\n\t/**\n\t * Handler for opening the ViewSettingsPopover.\n\t * @private\n\t */\n\tColumnHeader.prototype._openColumnActions = function() {\n\t\tvar oViewSettingsPopover = this.getViewSettingsPopover();\n\t\tif (oViewSettingsPopover != null) {\n\t\t\tvar $this = this.$();\n\t\t\toViewSettingsPopover.openBy(this);\n\t\t\t// overwrite the popover position to open over the Column\n\t\t\toViewSettingsPopover._getPopover(this).setOffsetY(-$this.outerHeight());\n\t\t}\n\t};\n\n\t/**\n\t * This function is used to attach events of the <code>ViewSettingsPopover</code> control.\n\t * @private\n\t */\n\tColumnHeader.prototype._attachViewSettingsPopoverEvents = function() {\n\t\tvar oViewSettingsPopover = this.getViewSettingsPopover();\n\t\tif (oViewSettingsPopover) {\n\t\t\tthis._detachViewSettingsPopoverEvents(oViewSettingsPopover);\n\t\t\toViewSettingsPopover.attachSortSelected(this.onSortSelected, this);\n\t\t\toViewSettingsPopover.attachFilterSelected(this.onFilterSelected, this);\n\t\t}\n\t};\n\n\t/**\n\t * This function is used to detach events of the <code>ViewSettingsPopover</code> control.\n\t * @param {object} oViewSettingsPopover ViewSettingsPopover.\n\t * @private\n\t */\n\tColumnHeader.prototype._detachViewSettingsPopoverEvents = function(oViewSettingsPopover) {\n\t\toViewSettingsPopover.detachSortSelected(this.onSortSelected, this);\n\t\toViewSettingsPopover.detachFilterSelected(this.onFilterSelected, this);\n\t};\n\n\t/**\n\t * Sort functionality.\n\t * @private\n\t */\n\tColumnHeader.prototype.onSortSelected = function() {\n\t\t// TBD: viewSettingsPopover do not provide parameters for getting the sort order\n\t\t// should be discussed with viewSettingsPopover colleagues.\n\t\tif (!this.getSorted()) {\n\t\t\tthis.setSorted(true);\n\t\t}\n\n\t\tif (this.getSortOrder() === \"\" || this.getSortOrder() === \"Descending\") {\n\t\t\tthis.setSortOrder(\"Ascending\");\n\t\t} else {\n\t\t\tthis.setSortOrder(\"Descending\");\n\t\t}\n\t};\n\n\t/**\n\t * Filter functionality.\n\t * @private\n\t */\n\tColumnHeader.prototype.onFilterSelected = function() {\n\t\t// TBD: ViewSettingsPopover does not provide event for clearing the Filters\n\t\t// this is also needed so that the application can react on it and clear the filtering on the table\n\t\t// should be discussed with ViewSettingsPopover colleagues\n\t\tthis.setFiltered(true);\n\t};\n\n\tColumnHeader.prototype.getAccessibilityInfo = function() {\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\"),\n\t\t\tsAnnouncement = this.getText() + \" \";\n\n\t\tif (this._isInteractive()) {\n\t\t\tif (this.getSortOrder()) {\n\t\t\t\tsAnnouncement += oBundle.getText(\"COLUMNHEADER_SORTED\") + \" \";\n\t\t\t\tsAnnouncement += (this.getSortOrder() === \"Ascending\" ? oBundle.getText(\"COLUMNHEADER_SORTED_ASCENDING\") : oBundle.getText(\"COLUMNHEADER_SORTED_DESCENDING\")) + \" \";\n\t\t\t}\n\n\t\t\tif (this.getFiltered()) {\n\t\t\t\tsAnnouncement += oBundle.getText(\"COLUMNHEADER_FILTERED\") + \" \";\n\t\t\t}\n\n\t\t\tsAnnouncement += oBundle.getText(\"COLUMNHEADER_ACCESS_COLUMN_ACTIONS\");\n\n\t\t\treturn {\n\t\t\t\trole: \"button\",\n\t\t\t\tfocusable: true,\n\t\t\t\tdescription: sAnnouncement\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tfocusable: false,\n\t\t\tdescription: sAnnouncement\n\t\t};\n\t};\n\n\tColumnHeader.prototype._isInteractive = function() {\n\t\treturn this.getTableAdapter().interactive && !!this.getViewSettingsPopover();\n\t};\n\n\tColumnHeader.prototype.exit = function() {\n\t\tthis._oAdapter = null;\n\t};\n\n\treturn ColumnHeader;\n});\n\njQuery.sap.setObject(\"sap.m.ColumnHeaderRenderer\", require(\"sap/m/ColumnHeaderRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ColumnHeader.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['sap/ui/core/library', 'sap/ui/core/ValueStateSupport', 'sap/ui/Device'],\n\tfunction(coreLibrary, ValueStateSupport, Device) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.ui.core.ValueState\n\tvar ValueState = coreLibrary.ValueState;\n\n\n\t/**\n\t * CheckBox renderer.\n\t * @namespace\n\t */\n\tvar CheckBoxRenderer = {\n\t};\n\n\n\t/**\n\t * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the Render-Output-Buffer\n\t * @param {sap.ui.core.Control} oCheckBox An object representation of the control that should be rendered\n\t */\n\tCheckBoxRenderer.render = function(oRm, oCheckBox){\n\t\t// get control properties\n\t\tvar sId = oCheckBox.getId(),\n\t\t\tbEnabled = oCheckBox.getEnabled(),\n\t\t\tbEditable = oCheckBox.getEditable(),\n\t\t\toCbLabel = oCheckBox.getAggregation(\"_label\"),\n\t\t\tbInErrorState = ValueState.Error === oCheckBox.getValueState(),\n\t\t\tbInWarningState = ValueState.Warning === oCheckBox.getValueState(),\n\t\t\tbUseEntireWidth = oCheckBox.getUseEntireWidth();\n\n\t\t// CheckBox wrapper\n\t\toRm.write(\"<div\");\n\t\toRm.addClass(\"sapMCb\");\n\n\t\tif (!bEditable) {\n\t\t\toRm.addClass(\"sapMCbRo\");\n\t\t}\n\n\t\tif (!bEnabled) {\n\t\t\toRm.addClass(\"sapMCbBgDis\");\n\t\t}\n\n\t\tif (bInErrorState) {\n\t\t\toRm.addClass(\"sapMCbErr\");\n\t\t} else if (bInWarningState) {\n\t\t\toRm.addClass(\"sapMCbWarn\");\n\t\t}\n\n\t\tif (oCheckBox.getText()) {\n\t\t\toRm.addClass(\"sapMCbHasLabel\");\n\t\t}\n\n\t\toRm.writeControlData(oCheckBox);\n\t\toRm.writeClasses();\n\n\t\tif (bUseEntireWidth) {\n\t\t\toRm.addStyle(\"width\", oCheckBox.getWidth());\n\t\t\toRm.writeStyles();\n\t\t}\n\n\t\tvar sTooltip = ValueStateSupport.enrichTooltip(oCheckBox, oCheckBox.getTooltip_AsString());\n\t\tif (sTooltip) {\n\t\t\toRm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\tif (bEnabled) {\n\t\t\toRm.writeAttribute(\"tabindex\", oCheckBox.getTabIndex());\n\t\t}\n\n\t\t//ARIA attributes\n\t\toRm.writeAccessibilityState(oCheckBox, {\n\t\t\trole: \"checkbox\",\n\t\t\tselected: null,\n\t\t\tchecked: oCheckBox.getSelected(),\n\t\t\tdescribedby: sTooltip ? sId + \"-Descr\" : undefined\n\t\t});\n\n\t\toRm.write(\">\");\t\t// DIV element\n\n\t\t// write the HTML into the render manager\n\t\toRm.write(\"<div id='\");\n\t\toRm.write(oCheckBox.getId() + \"-CbBg'\");\n\n\t\t// CheckBox style class\n\t\toRm.addClass(\"sapMCbBg\");\n\n\t\tif (bEnabled && bEditable && Device.system.desktop) {\n\t\t\toRm.addClass(\"sapMCbHoverable\");\n\t\t}\n\n\t\tif (!oCheckBox.getActiveHandling()) {\n\t\t\toRm.addClass(\"sapMCbActiveStateOff\");\n\t\t}\n\n\t\toRm.addClass(\"sapMCbMark\"); // TODO: sapMCbMark is redundant, remove it and simplify CSS\n\n\t\tif (oCheckBox.getSelected()) {\n\t\t\toRm.addClass(\"sapMCbMarkChecked\");\n\t\t}\n\t\toRm.writeClasses();\n\n\t\toRm.write(\">\");\t\t// DIV element\n\n\t\toRm.write(\"<input type='CheckBox' id='\");\n\t\toRm.write(oCheckBox.getId() + \"-CB'\");\n\n\t\tif (oCheckBox.getSelected()) {\n\t\t\toRm.writeAttribute(\"checked\", \"checked\");\n\t\t}\n\n\t\tif (oCheckBox.getName()) {\n\t\t\toRm.writeAttributeEscaped('name', oCheckBox.getName());\n\t\t}\n\n\t\tif (!bEnabled) {\n\t\t\toRm.write(\" disabled=\\\"disabled\\\"\");\n\t\t}\n\n\t\tif (!bEditable) {\n\t\t\toRm.write(\" readonly=\\\"readonly\\\"\");\n\t\t}\n\n\t\toRm.write(\" /></div>\");\n\t\toRm.renderControl(oCbLabel);\n\n\t\tif (sTooltip && sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\t// for ARIA, the tooltip must be in a separate SPAN and assigned via aria-describedby.\n\t\t\t// otherwise, JAWS does not read it.\n\t\t\toRm.write(\"<span id=\\\"\" + sId + \"-Descr\\\" class=\\\"sapUiHidden\\\">\");\n\t\t\toRm.writeEscaped(sTooltip);\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\n\t\toRm.write(\"</div>\");\n\t};\n\n\n\treturn CheckBoxRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/CheckBoxRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.ui.core.ListItem.\nsap.ui.define(['./Item', './library'],\n\tfunction(Item, library) {\n\t\"use strict\";\n\n\n\t/**\n\t * Constructor for a new ListItem.\n\t *\n\t * @param {string} [sId] id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] initial settings for the new control\n\t *\n\t * @class\n\t * An item that is used in lists or list-similar controls such as DropdownBox, for example.\n\t * The element foresees the usage of additional texts displayed in a second column.\n\t * @extends sap.ui.core.Item\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @public\n\t * @alias sap.ui.core.ListItem\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar ListItem = Item.extend(\"sap.ui.core.ListItem\", /** @lends sap.ui.core.ListItem.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.ui.core\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * The icon belonging to this list item instance.\n\t\t\t * This can be a URI to an image or an icon font URI.\n\t\t\t */\n\t\t\ticon : {type : \"string\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Some additional text of type string, optionally to be displayed along with this item.\n\t\t\t */\n\t\t\tadditionalText : {type : \"string\", group : \"Data\", defaultValue : null}\n\t\t}\n\t}});\n\n\n\treturn ListItem;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.ui.core/resources/sap/ui/core/ListItem.js","require(\"sap/m/themes/sap_belize/Label.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Label\nsap.ui.define(['jquery.sap.global', './library', 'sap/ui/core/Control', 'sap/ui/core/LabelEnablement', 'sap/ui/core/library'],\n\tfunction(jQuery, library, Control, LabelEnablement, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.ui.core.TextAlign\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.m.LabelDesign\n\tvar LabelDesign = library.LabelDesign;\n\n\t/**\n\t * Constructor for a new Label.\n\t *\n\t * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * Provides a textual label for other controls.\n\t * Label appearance can be influenced by properties such as <code>textAlign</code>, <code>design</code>,\n\t * <code>displayOnly</code> and <code>wrapping</code>.\n\t * As of version 1.50 the default value of the <code>wrapping</code> property is set to <code>false</code>\n\t *\n\t * Labels for required fields are marked with an asterisk.\n\t * <h3>Overview</h3>\n\t * Labels are used as titles for single controls or groups of controls.\n\t * <h3>Usage</h3>\n\t * <h4>When to use</h4>\n\t * <ul>\n\t * <li>It's recommended to use the <code>Label</code> in Form controls.</li>\n\t * <li>Use title case for labels.</li>\n\t * </ul>\n\t * <h4>When not to use</h4>\n\t * <ul>\n\t * <li> It is not recommended to use labels in Bold.</li>\n\t * </ul>\n\t * @extends sap.ui.core.Control\n\t * @implements sap.ui.core.Label, sap.ui.core.IShrinkable\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.Label\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar Label = Control.extend(\"sap.m.Label\", /** @lends sap.m.Label.prototype */ { metadata : {\n\n\t\tinterfaces : [\n\t\t\t\"sap.ui.core.Label\",\n\t\t\t\"sap.ui.core.IShrinkable\"\n\t\t],\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Sets the design of a Label to either Standard or Bold.\n\t\t\t */\n\t\t\tdesign : {type : \"sap.m.LabelDesign\", group : \"Appearance\", defaultValue : LabelDesign.Standard},\n\n\t\t\t/**\n\t\t\t * Determines the Label text to be displayed.\n\t\t\t */\n\t\t\ttext : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\t\t\t */\n\t\t\ttextAlign : {type : \"sap.ui.core.TextAlign\", group : \"Appearance\", defaultValue : TextAlign.Begin},\n\n\t\t\t/**\n\t\t\t * Options for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n\t\t\t */\n\t\t\ttextDirection : {type : \"sap.ui.core.TextDirection\", group : \"Appearance\", defaultValue : TextDirection.Inherit},\n\n\t\t\t/**\n\t\t\t * Determines the width of the label.\n\t\t\t */\n\t\t\twidth : {type : \"sap.ui.core.CSSSize\", group : \"Dimension\", defaultValue : ''},\n\n\t\t\t/**\n\t\t\t * Indicates that user input is required for input control labeled by the sap.m.Label.\n\t\t\t * When the property is set to true and associated input field is empty an asterisk character is added to the label text.\n\t\t\t */\n\t\t\trequired : {type : \"boolean\", group : \"Misc\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Determines if the label is in displayOnly mode. Controls in this mode are neither interactive, nor editable, nor focusable, and not in the tab chain.\n\t\t\t *\n\t\t\t * <b>Note:</b> This property should be used only in Form controls in preview mode.\n\t\t\t *\n\t\t\t * @since 1.50.0\n\t\t\t */\n\t\t\tdisplayOnly : {type : \"boolean\", group : \"Appearance\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Determines the wrapping of the text within the <code>Label</code>.\n\t\t\t * If set to true the <code>Label</code> will wrap, when set to false the <code>Label</code> will be truncated and replaced with ellipsis which is the default behavior.\n\t\t\t *\n\t\t\t * @since 1.50\n\t\t\t */\n\t\t\twrapping: {type : \"boolean\", group : \"Appearance\", defaultValue : false}\n\t\t},\n\t\tassociations : {\n\n\t\t\t/**\n\t\t\t * Association to the labeled control.\n\t\t\t * By default the label set the for attribute to the ID of the labeled control. This can be changed by implementing the function getIdForLabel on the labelled control.\n\t\t\t */\n\t\t\tlabelFor : {type : \"sap.ui.core.Control\", multiple : false}\n\t\t},\n\t\tdesignTime : true\n\t}});\n\n\tLabel.prototype.setText = function(sText) {\n\n\t\tvar sValue = this.getText();\n\n\t\tif (sValue !== sText) {\n\n\t\t\tthis.setProperty(\"text\", sText, true);\n\n\t\t\tthis.$(\"bdi\").html(jQuery.sap.encodeHTML(this.getProperty(\"text\")));\n\n\n\t\t\tif (sText) {\n\t\t\t\tthis.$().removeClass(\"sapMLabelNoText\");\n\t\t\t}else {\n\t\t\t\tthis.$().addClass(\"sapMLabelNoText\");\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\tLabel.prototype.setTooltip = function(oTooltip) {\n\t\tvar oValue = this.getTooltip();\n\t\tif (oValue !== oTooltip) {\n\t\t\tthis.setAggregation(\"tooltip\", oTooltip, true);\n\t\t\tthis.$().attr(\"title\", this.getTooltip());\n\t\t}\n\t\treturn this;\n\t};\n\n\tLabel.prototype.setDisplayOnly = function(displayOnly) {\n\t\tif (typeof displayOnly !== \"boolean\") {\n\t\t\tjQuery.sap.log.error(\"DisplayOnly property should be boolean. The new value will not be set\");\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.$().toggleClass(\"sapMLabelDisplayOnly\", displayOnly);\n\n\t\treturn Control.prototype.setProperty.call(this, \"displayOnly\", displayOnly);\n\t};\n\n\t/**\n\t * @see sap.ui.core.Control#getAccessibilityInfo Provides the current accessibility state of the control.\n\t * @protected\n\t */\n\tLabel.prototype.getAccessibilityInfo = function() {\n\t\treturn {description: this.getText()};\n\t};\n\n\t// enrich Label functionality\n\tLabelEnablement.enrich(Label.prototype);\n\n\treturn Label;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.LabelRenderer\", require(\"sap/m/LabelRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/Label.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['./ListItemBaseRenderer', 'sap/ui/core/Renderer', 'sap/m/library', 'sap/ui/core/library'],\n\tfunction(ListItemBaseRenderer, Renderer, library, coreLibrary) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\n\t/**\n\t * StandardListItem renderer.\n\t * @namespace\n\t */\n\tvar StandardListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\t/**\n\t * Renders the HTML for the given control, using the provided\n\t * {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager}\n\t *          oRenderManager the RenderManager that can be used for writing to the\n\t *          Render-Output-Buffer\n\t * @param {sap.ui.core.Control}\n\t *          oControl an object representation of the control that should be\n\t *          rendered\n\t */\n\tStandardListItemRenderer.renderLIAttributes = function(rm, oLI) {\n\t\trm.addClass(\"sapMSLI\");\n\t\tif (oLI.getIcon()) {\n\t\t\trm.addClass(\"sapMSLIIcon\");\n\t\t}\n\t\tif (!oLI.getIconInset()) {\n\t\t\trm.addClass(\"sapMSLIIconThumb\");\n\t\t}\n\t\tif ((oLI.getDescription() || !oLI.getAdaptTitleSize()) && oLI.getIcon() &&  oLI.getIconInset()) {\n\t\t\trm.addClass(\"sapMSLIDescIcon\");\n\t\t}\n\t\tif ((oLI.getDescription() || !oLI.getAdaptTitleSize()) && !oLI.getIcon()) {\n\t\t\trm.addClass(\"sapMSLIDescNoIcon\");\n\t\t}\n\t\tif (!oLI.getDescription() && oLI.getIcon()) {\n\t\t\trm.addClass(\"sapMSLINoDescIcon\");\n\t\t}\n\t\tif (oLI.getType() == ListType.Detail || oLI.getType() == ListType.DetailAndActive) {\n\t\t\trm.addClass(\"sapMSLIDetail\");\n\t\t}\n\n\t};\n\n\tStandardListItemRenderer.renderLIContent = function(rm, oLI) {\n\n\t\tvar sInfo = oLI.getInfo(),\n\t\t\tsInfoDir = oLI.getInfoTextDirection(),\n\t\t\tsTextDir = oLI.getTitleTextDirection(),\n\t\t\tsDescription = oLI.getTitle() && (oLI.getDescription() || !oLI.getAdaptTitleSize());\n\n\t\t// render image\n\t\tif (oLI.getIcon()) {\n\t\t\trm.renderControl(oLI._getImage());\n\t\t}\n\n\t\tif (sDescription) {\n\t\t\trm.write('<div class=\"sapMSLIDiv\">');\n\t\t}\n\n\t\trm.write(\"<div\");\n\t\tif (!sDescription) {\n\t\t\trm.addClass(\"sapMSLIDiv\");\n\t\t}\n\t\trm.addClass(\"sapMSLITitleDiv\");\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\t// List item text (also written when no title for keeping the space)\n\t\trm.write(\"<div\");\n\t\trm.addClass(sDescription ? \"sapMSLITitle\" : \"sapMSLITitleOnly\");\n\t\trm.writeClasses();\n\t\tif (sTextDir !== TextDirection.Inherit) {\n\t\t\trm.writeAttribute(\"dir\", sTextDir.toLowerCase());\n\t\t}\n\t\trm.write(\">\");\n\t\trm.writeEscaped(oLI.getTitle());\n\t\trm.write(\"</div>\");\n\n\t\t//info div top when @sapUiInfoTop: true;\n\t\tif (sInfo && !sDescription) {\n\t\t\trm.write(\"<div\");\n\t\t\trm.writeAttribute(\"id\", oLI.getId() + \"-info\");\n\t\t\trm.addClass(\"sapMSLIInfo\");\n\t\t\trm.addClass(\"sapMSLIInfo\" + oLI.getInfoState());\n\t\t\trm.writeClasses();\n\t\t\tif (sInfoDir !== TextDirection.Inherit) {\n\t\t\t\trm.writeAttribute(\"dir\", sInfoDir.toLowerCase());\n\t\t\t}\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(sInfo);\n\t\t\trm.write(\"</div>\");\n\t\t}\n\n\t\trm.write(\"</div>\");\n\n\t\trm.write('<div class=\"sapMSLIDescriptionDiv\">');\n\n\t\t// List item text\n\t\tif (sDescription) {\n\t\t\trm.write('<div class=\"sapMSLIDescription\">');\n\t\t\tif (oLI.getDescription()) {\n\t\t\t\trm.writeEscaped(oLI.getDescription());\n\t\t\t} else {\n\t\t\t\trm.write(\"&nbsp;\");\n\t\t\t}\n\t\t\trm.write(\"</div>\");\n\t\t}\n\n\t\tif (sInfo && sDescription) {\n\t\t\trm.write(\"<div\");\n\t\t\trm.writeAttribute(\"id\", oLI.getId() + \"-info\");\n\t\t\trm.addClass(\"sapMSLIInfo\");\n\t\t\trm.addClass(\"sapMSLIInfo\" + oLI.getInfoState());\n\t\t\trm.writeClasses();\n\t\t\tif (sInfoDir !== TextDirection.Inherit) {\n\t\t\t\trm.writeAttribute(\"dir\", sInfoDir.toLowerCase());\n\t\t\t}\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(sInfo);\n\t\t\trm.write(\"</div>\");\n\t\t}\n\n\t\trm.write(\"</div>\");\n\n\t\tif (sDescription) {\n\t\t\trm.write(\"</div>\");\n\t\t}\n\n\t};\n\n\treturn StandardListItemRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/StandardListItemRenderer.js","require(\"sap/m/themes/base/App.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.App.\nsap.ui.define(['jquery.sap.global', './NavContainer', './library'],\n\tfunction(jQuery, NavContainer, library) {\n\t\"use strict\";\n\n\n\n\t/**\n\t * Constructor for a new <code>App</code>.\n\t *\n\t * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * The root element of a UI5 mobile app.\n\t *\n\t * <h3>Overview</h3>\n\t *\n\t * The <code>App</code> inherits from {@link sap.m.NavContainer} and thus provides its navigation capabilities.\n\t * It adds certain header tags to the HTML page which are considered useful for mobile apps.\n\t *\n\t * <h3>Usage</h3>\n\t *\n\t * You can configure the home icon of the <code>App</code>. For more information,\n\t * see the <code>homeIcon</code> property.\n\t *\n\t * There are options for setting the background color and a background image with the use of the\n\t * <code>backgroundColor</code> and <code>backgroundImage</code> properties.\n\t *\n\t * @extends sap.m.NavContainer\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.App\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar App = NavContainer.extend(\"sap.m.App\", /** @lends sap.m.App.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * The icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\n\t\t\t *\n\t\t\t * Note that only the first attempt to set the homeIcon will be executed, subsequent settings are ignored.\n\t\t\t *\n\t\t\t * This icon must be in PNG format. The property can either hold the URL of one single icon which is used for all devices (and possibly scaled, which looks not perfect), or an object holding icon URLs for the different required sizes.\n\t\t\t *\n\t\t\t * A desktop icon (used for bookmarks and overriding the favicon) can also be configured. This requires an object to be given and the \"icon\" property of this object then defines the desktop bookmark icon. For this icon, PNG is not supported by Internet Explorer. The ICO format is supported by all browsers. ICO is also preferred for this desktop icon setting because the file can contain different images for different resolutions.\n\t\t\t *\n\t\t\t * One example is:\n\t\t\t *\n\t\t\t * app.setHomeIcon({\n\t\t\t * 'phone':'phone-icon.png',\n\t\t\t * 'phone@2':'phone-retina.png',\n\t\t\t * 'tablet':'tablet-icon.png',\n\t\t\t * 'tablet@2':'tablet-retina.png',\n\t\t\t * 'icon':'desktop.ico'\n\t\t\t * });\n\t\t\t *\n\t\t\t * The respective image sizes are 57/114 px for the phone and 72/144 px for the tablet.\n\t\t\t * If an object is given but one of the sizes is not given, the largest given icon will be used for this size.\n\t\t\t *\n\t\t\t * On Android these icons may or may not be used by the device. Apparently chances can be improved by adding glare effect and rounded corners, setting the file name so it ends with \"-precomposed.png\" and setting the \"homeIconPrecomposed\" property to \"true\".\n\t\t\t */\n\t\t\thomeIcon : {type : \"any\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Background color of the App. If set, this color will override the default background defined by the theme. So this should only be set when really required.\n\t\t\t * Any configured background image will be placed above this colored background. But any theme adaptation in the Theme Designer will override this setting.\n\t\t\t * Use the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled.\n\t\t\t * @since 1.11.2\n\t\t\t */\n\t\t\tbackgroundColor : {type : \"string\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Background image of the App. If set, this image will override the default background defined by the theme. So this should only be set when really required.\n\t\t\t * This background image will be placed above any color set for the background. But any theme adaptation in the Theme Designer will override this image setting.\n\t\t\t * Use the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled.\n\t\t\t * @since 1.11.2\n\t\t\t */\n\t\t\tbackgroundImage : {type : \"sap.ui.core.URI\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Whether the background image (if configured) should be proportionally stretched to cover the whole App (false) or whether it should be tiled (true).\n\t\t\t * @since 1.11.2\n\t\t\t */\n\t\t\tbackgroundRepeat : {type : \"boolean\", group : \"Appearance\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Opacity of the background image. The opacity can be set between 0 (fully transparent) and 1 fully opaque).\n\t\t\t * This can be used to make the application content better readable by making the background image partly transparent.\n\t\t\t * @since 1.11.2\n\t\t\t */\n\t\t\tbackgroundOpacity : {type : \"float\", group : \"Appearance\", defaultValue : 1}\n\t\t},\n\t\tevents : {\n\n\t\t\t/**\n\t\t\t * Fired when the orientation (portrait/landscape) of the device is changed.\n\t\t\t * @deprecated Since version 1.20.0.\n\t\t\t * use sap.ui.Device.orientation.attachHandler(...)\n\t\t\t */\n\t\t\torientationChange : {deprecated: true,\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Whether the device is in landscape orientation.\n\t\t\t\t\t */\n\t\t\t\t\tlandscape : {type : \"boolean\"}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}});\n\n\tApp.prototype.init = function() {\n\t\tNavContainer.prototype.init.apply(this, arguments);\n\n\t\tthis.addStyleClass(\"sapMApp\");\n\t\tjQuery.sap.initMobile({\n\t\t\tviewport: !this._debugZoomAndScroll,\n\t\t\tstatusBar: \"default\",\n\t\t\thideBrowser: true,\n\t\t\tpreventScroll: !this._debugZoomAndScroll,\n\t\t\trootId: this.getId()\n\t\t});\n\t\tjQuery(window).bind(\"resize\", jQuery.proxy(this._handleOrientationChange, this));\n\t};\n\n\n\tApp.prototype.onBeforeRendering = function() {\n\t\tif (NavContainer.prototype.onBeforeRendering) {\n\t\t\tNavContainer.prototype.onBeforeRendering.apply(this, arguments);\n\t\t}\n\t\tjQuery.sap.initMobile({\n\t\t\thomeIcon: this.getHomeIcon()\n\t\t});\n\t};\n\n\tApp.prototype.onAfterRendering = function() {\n\t\tif (NavContainer.prototype.onAfterRendering) {\n\t\t\tNavContainer.prototype.onAfterRendering.apply(this, arguments);\n\t\t}\n\t\tvar ref = this.getDomRef().parentNode;\n\t\t// set all parent elements to 100% height this *should* be done by the application in CSS, but people tend to forget it...\n\t\twhile (ref && ref !== document.documentElement) {\n\t\t\tvar $ref = jQuery(ref);\n\t\t\tif ($ref.attr(\"data-sap-ui-root-content\")) { // Shell as parent does this already\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!ref.style.height) {\n\t\t\t\tref.style.height = \"100%\";\n\t\t\t}\n\t\t\tref = ref.parentNode;\n\t\t}\n\t};\n\n\n\t/**\n\t * Termination of the App control\n\t * @private\n\t */\n\tApp.prototype.exit = function() {\n\t\tjQuery(window).unbind(\"resize\", this._handleOrientationChange);\n\n\t\tif (this._sInitTimer) {\n\t\t\tjQuery.sap.clearDelayedCall(this._sInitTimer);\n\t\t}\n\t};\n\n\tApp.prototype._handleOrientationChange = function() {\n\t\tvar $window = jQuery(window);\n\t\tvar isLandscape = $window.width() > $window.height();\n\t\tif (this._oldIsLandscape !== isLandscape) {\n\t\t\tthis.fireOrientationChange({landscape: isLandscape});\n\t\t\tthis._oldIsLandscape = isLandscape;\n\t\t}\n\t};\n\n\t// TODO: later, introduce tabs as a kind of separation between histories\n\n\n\t// API methods\n\n\tApp.prototype.setBackgroundOpacity = function(fOpacity) {\n\t\tif (fOpacity > 1 || fOpacity < 0) {\n\t\t\tjQuery.sap.log.warning(\"Invalid value \" + fOpacity + \" for App.setBackgroundOpacity() ignored. Valid values are: floats between 0 and 1.\");\n\t\t\treturn this;\n\t\t}\n\t\tthis.$(\"BG\").css(\"opacity\", fOpacity);\n\t\treturn this.setProperty(\"backgroundOpacity\", fOpacity, true); // no rerendering - live opacity change looks cooler\n\t};\n\n\n\treturn App;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.AppRenderer\", require(\"sap/m/AppRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/App.js","require(\"sap/m/themes/sap_belize/ListBase.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.ListBase.\nsap.ui.define(['jquery.sap.global', './GroupHeaderListItem', './ListItemBase', './library', 'sap/ui/core/Control', 'sap/ui/core/delegate/ItemNavigation', 'sap/ui/core/InvisibleText', 'sap/ui/core/LabelEnablement', 'sap/ui/Device', 'jquery.sap.keycodes'],\n\tfunction(jQuery, GroupHeaderListItem, ListItemBase, library, Control, ItemNavigation, InvisibleText, LabelEnablement, Device) {\n\t\"use strict\";\n\n\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.m.ListKeyboardMode\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\t// shortcut for sap.m.ListGrowingDirection\n\tvar ListGrowingDirection = library.ListGrowingDirection;\n\n\t// shortcut for sap.m.SwipeDirection\n\tvar SwipeDirection = library.SwipeDirection;\n\n\t// shortcut for sap.m.ListSeparators\n\tvar ListSeparators = library.ListSeparators;\n\n\t// shortcut for sap.m.ListMode\n\tvar ListMode = library.ListMode;\n\n\t// shortcut for sap.m.ListHeaderDesign\n\tvar ListHeaderDesign = library.ListHeaderDesign;\n\n\n\n\t/**\n\t * Constructor for a new ListBase.\n\t *\n\t * @param {string} [sId] Id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * The <code>sap.m.ListBase</code> control provides a base functionality of the <code>sap.m.List</code> and <code>sap.m.Table</code> controls. Selection, deletion, unread states and inset style are also maintained in <code>sap.m.ListBase</code>.\n\t *\n\t * See section \"{@link topic:295e44b2d0144318bcb7bdd56bfa5189 List, List Item, and Table}\"\n\t * in the documentation for an introduction to subclasses of <code>sap.m.ListBase</code> control.\n\t *\n\t * <b>Note:</b> The ListBase including all contained items may be completely re-rendered when the data of a bound model is changed. Due to the limited hardware resources of mobile devices this can lead to longer delays for lists that contain many items. As such the usage of a list is not recommended for these use cases.\n\t * @extends sap.ui.core.Control\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @since 1.16\n\t * @alias sap.m.ListBase\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar ListBase = Control.extend(\"sap.m.ListBase\", /** @lends sap.m.ListBase.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Defines the indentation of the container. Setting it to <code>true</code> indents the list.\n\t\t\t */\n\t\t\tinset : {type : \"boolean\", group : \"Appearance\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Defines the header text that appears in the control.\n\t\t\t * <b>Note:</b> If <code>headerToolbar</code> aggregation is set, then this property is ignored.\n\t\t\t */\n\t\t\theaderText : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the header style of the control. Possible values are <code>Standard</code> and <code>Plain</code>.\n\t\t\t * @since 1.14\n\t\t\t * @deprecated Since version 1.16. No longer has any functionality.\n\t\t\t */\n\t\t\theaderDesign : {type : \"sap.m.ListHeaderDesign\", group : \"Appearance\", defaultValue : ListHeaderDesign.Standard, deprecated: true},\n\n\t\t\t/**\n\t\t\t * Defines the footer text that appears in the control.\n\t\t\t */\n\t\t\tfooterText : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the mode of the control (e.g. <code>None</code>, <code>SingleSelect</code>, <code>MultiSelect</code>, <code>Delete</code>).\n\t\t\t */\n\t\t\tmode : {type : \"sap.m.ListMode\", group : \"Behavior\", defaultValue : ListMode.None},\n\n\t\t\t/**\n\t\t\t * Sets the width of the control.\n\t\t\t */\n\t\t\twidth : {type : \"sap.ui.core.CSSSize\", group : \"Dimension\", defaultValue : '100%'},\n\n\t\t\t/**\n\t\t\t * Defines whether the items are selectable by clicking on the item itself (<code>true</code>) rather than having to set the selection control first.\n\t\t\t * <b>Note:</b> The <code>SingleSelectMaster</code> mode also provides this functionality by default.\n\t\t\t */\n\t\t\tincludeItemInSelection : {type : \"boolean\", group : \"Behavior\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Activates the unread indicator for all items, if set to <code>true</code>.\n\t\t\t */\n\t\t\tshowUnread : {type : \"boolean\", group : \"Misc\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * This text is displayed when the control contains no items.\n\t\t\t */\n\t\t\tnoDataText : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines whether or not the text specified in the <code>noDataText</code> property is displayed.\n\t\t\t */\n\t\t\tshowNoData : {type : \"boolean\", group : \"Misc\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * When this property is set to <code>true</code>, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\n\t\t\t * By default, the busy indicator will be shown after one second. This behavior can be customized by setting the <code>busyIndicatorDelay</code> property.\n\t\t\t * @since 1.20.2\n\t\t\t */\n\t\t\tenableBusyIndicator : {type : \"boolean\", group : \"Behavior\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Defines if animations will be shown while switching between modes.\n\t\t\t */\n\t\t\tmodeAnimationOn : {type : \"boolean\", group : \"Misc\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Defines which item separator style will be used.\n\t\t\t */\n\t\t\tshowSeparators : {type : \"sap.m.ListSeparators\", group : \"Appearance\", defaultValue : ListSeparators.All},\n\n\t\t\t/**\n\t\t\t * Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the <code>swipeContent</code> aggregation.\n\t\t\t */\n\t\t\tswipeDirection : {type : \"sap.m.SwipeDirection\", group : \"Misc\", defaultValue : SwipeDirection.Both},\n\n\t\t\t/**\n\t\t\t * If set to <code>true</code>, enables the growing feature of the control to load more items by requesting from the model.\n\t\t\t * <b>Note:</b>: This feature only works when an <code>items</code> aggregation is bound. Growing must not be used together with two-way binding.\n\t\t\t * @since 1.16.0\n\t\t\t */\n\t\t\tgrowing : {type : \"boolean\", group : \"Behavior\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Defines the number of items to be requested from the model for each grow.\n\t\t\t * This property can only be used if the <code>growing</code> property is set to <code>true</code>.\n\t\t\t * @since 1.16.0\n\t\t\t */\n\t\t\tgrowingThreshold : {type : \"int\", group : \"Misc\", defaultValue : 20},\n\n\t\t\t/**\n\t\t\t * Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\n\t\t\t * This property can only be used if the <code>growing</code> property is set to <code>true</code>.\n\t\t\t * @since 1.16.0\n\t\t\t */\n\t\t\tgrowingTriggerText : {type : \"string\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * If set to true, the user can scroll down/up to load more items. Otherwise a growing button is displayed at the bottom/top of the control.\n\t\t\t * <b>Note:</b> This property can only be used if the <code>growing</code> property is set to <code>true</code> and only if there is one instance of <code>sap.m.List</code> or <code>sap.m.Table</code> inside the scrollable scroll container (e.g <code>sap.m.Page</code>).\n\t\t\t * @since 1.16.0\n\t\t\t */\n\t\t\tgrowingScrollToLoad : {type : \"boolean\", group : \"Behavior\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Defines the direction of the growing feature.\n\t\t\t * If set to <code>Downwards</code> the user has to scroll down to load more items or the growing button is displayed at the bottom.\n\t\t\t * If set to <code>Upwards</code> the user has to scroll up to load more items or the growing button is displayed at the top.\n\t\t\t * @since 1.40.0\n\t\t\t */\n\t\t\tgrowingDirection : {type : \"sap.m.ListGrowingDirection\", group : \"Behavior\", defaultValue : ListGrowingDirection.Downwards},\n\n\t\t\t/**\n\t\t\t * If set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\n\t\t\t * <b>Note:</b> This feature works only if two-way data binding for the <code>selected</code> property of the item is not used. It also needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the <code>JSONModel</code> is changed.\n\t\t\t * @since 1.16.6\n\t\t\t */\n\t\t\trememberSelections : {type : \"boolean\", group : \"Behavior\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Defines keyboard handling behavior of the control.\n\t\t\t * @since 1.38.0\n\t\t\t */\n\t\t\tkeyboardMode : {type : \"sap.m.ListKeyboardMode\", group : \"Behavior\", defaultValue : ListKeyboardMode.Navigation}\n\t\t},\n\t\tdefaultAggregation : \"items\",\n\t\taggregations : {\n\n\t\t\t/**\n\t\t\t * Defines the items contained within this control.\n\t\t\t */\n\t\t\titems : {type : \"sap.m.ListItemBase\", multiple : true, singularName : \"item\", bindable : \"bindable\"},\n\n\t\t\t/**\n\t\t\t * User can swipe to bring in this control on the right hand side of an item.\n\t\t\t * <b>Note:</b> For non-touch devices, this functionality is ignored.\n\t\t\t */\n\t\t\tswipeContent : {type : \"sap.ui.core.Control\", multiple : false},\n\n\t\t\t/**\n\t\t\t * The header area can be used as a toolbar to add extra controls for user interactions.\n\t\t\t * <b>Note:</b> When set, this overwrites the <code>headerText</code> property.\n\t\t\t * @since 1.16\n\t\t\t */\n\t\t\theaderToolbar : {type : \"sap.m.Toolbar\", multiple : false},\n\n\t\t\t/**\n\t\t\t * A toolbar that is placed below the header to show extra information to the user.\n\t\t\t * @since 1.16\n\t\t\t */\n\t\t\tinfoToolbar : {type : \"sap.m.Toolbar\", multiple : false}\n\t\t},\n\t\tassociations: {\n\n\t\t\t/**\n\t\t\t * Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).\n\t\t\t * @since 1.28.0\n\t\t\t */\n\t\t\tariaLabelledBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaLabelledBy\" }\n\t\t},\n\t\tevents : {\n\n\t\t\t/**\n\t\t\t * Fires when selection is changed via user interaction. In <code>MultiSelect</code> mode, this event is also fired on deselection.\n\t\t\t * @deprecated Since version 1.16.\n\t\t\t * Use the <code>selectionChange</code> event instead.\n\t\t\t */\n\t\t\tselect : {deprecated: true,\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The item which fired the select event.\n\t\t\t\t\t */\n\t\t\t\t\tlistItem : {type : \"sap.m.ListItemBase\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Fires when selection is changed via user interaction inside the control.\n\t\t\t * @since 1.16\n\t\t\t */\n\t\t\tselectionChange : {\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The item whose selection has changed. In <code>MultiSelect</code> mode, only the up-most selected item is returned. This parameter can be used for single-selection modes.\n\t\t\t\t\t */\n\t\t\t\t\tlistItem : {type : \"sap.m.ListItemBase\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Array of items whose selection has changed. This parameter can be used for <code>MultiSelect</code> mode.\n\t\t\t\t\t */\n\t\t\t\t\tlistItems : {type : \"sap.m.ListItemBase[]\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Indicates whether the <code>listItem</code> parameter is selected or not.\n\t\t\t\t\t */\n\t\t\t\t\tselected : {type : \"boolean\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Indicates whether the select all action is triggered or not.\n\t\t\t\t\t */\n\t\t\t\t\tselectAll : {type : \"boolean\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Fires when delete icon is pressed by user.\n\t\t\t */\n\t\t\t\"delete\" : {\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The item which fired the delete event.\n\t\t\t\t\t */\n\t\t\t\t\tlistItem : {type : \"sap.m.ListItemBase\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Fires after user's swipe action and before the <code>swipeContent</code> is shown. On the <code>swipe</code> event handler, <code>swipeContent</code> can be changed according to the swiped item.\n\t\t\t * Calling the <code>preventDefault</code> method of the event cancels the swipe action.\n\t\t\t */\n\t\t\tswipe : {allowPreventDefault : true,\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The item which fired the swipe.\n\t\t\t\t\t */\n\t\t\t\t\tlistItem : {type : \"sap.m.ListItemBase\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Aggregated <code>swipeContent</code> control that is shown on the right hand side of the item.\n\t\t\t\t\t */\n\t\t\t\t\tswipeContent : {type : \"sap.ui.core.Control\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Holds which control caused the swipe event within the item.\n\t\t\t\t\t */\n\t\t\t\t\tsrcControl : {type : \"sap.ui.core.Control\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Fires before the new growing chunk is requested from the model.\n\t\t\t * @since 1.16\n\t\t\t * @deprecated Since version 1.16.3.\n\t\t\t * Instead, use <code>updateStarted</code> event with listening <code>changeReason</code>.\n\t\t\t */\n\t\t\tgrowingStarted : {deprecated: true,\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Actual number of items.\n\t\t\t\t\t */\n\t\t\t\t\tactual : {type : \"int\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Total number of items.\n\t\t\t\t\t */\n\t\t\t\t\ttotal : {type : \"int\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Fires after the new growing chunk has been fetched from the model and processed by the control.\n\t\t\t * @since 1.16\n\t\t\t * @deprecated Since version 1.16.3.\n\t\t\t * Instead, use \"updateFinished\" event.\n\t\t\t */\n\t\t\tgrowingFinished : {deprecated: true,\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Actual number of items.\n\t\t\t\t\t */\n\t\t\t\t\tactual : {type : \"int\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Total number of items.\n\t\t\t\t\t */\n\t\t\t\t\ttotal : {type : \"int\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Fires before <code>items</code> binding is updated (e.g. sorting, filtering)\n\t\t\t *\n\t\t\t * <b>Note:</b> Event handler should not invalidate the control.\n\t\t\t * @since 1.16.3\n\t\t\t */\n\t\t\tupdateStarted : {\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The reason of the update, e.g. Binding, Filter, Sort, Growing, Change, Refresh, Context.\n\t\t\t\t\t */\n\t\t\t\t\treason : {type : \"string\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Actual number of items.\n\t\t\t\t\t */\n\t\t\t\t\tactual : {type : \"int\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The total count of bound items. This can be used if the <code>growing</code> property is set to <code>true</code>.\n\t\t\t\t\t */\n\t\t\t\t\ttotal : {type : \"int\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Fires after <code>items</code> binding is updated and processed by the control.\n\t\t\t * @since 1.16.3\n\t\t\t */\n\t\t\tupdateFinished : {\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The reason of the update, e.g. Binding, Filter, Sort, Growing, Change, Refresh, Context.\n\t\t\t\t\t */\n\t\t\t\t\treason : {type : \"string\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Actual number of items.\n\t\t\t\t\t */\n\t\t\t\t\tactual : {type : \"int\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The total count of bound items. This can be used if the <code>growing</code> property is set to <code>true</code>.\n\t\t\t\t\t */\n\t\t\t\t\ttotal : {type : \"int\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Fires when an item is pressed unless the item's <code>type</code> property is <code>Inactive</code>.\n\t\t\t * @since 1.20\n\t\t\t */\n\t\t\titemPress : {\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The item which fired the pressed event.\n\t\t\t\t\t */\n\t\t\t\t\tlistItem : {type : \"sap.m.ListItemBase\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The control which caused the press event within the container.\n\t\t\t\t\t */\n\t\t\t\t\tsrcControl : {type : \"sap.ui.core.Control\"}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdesignTime : true\n\n\t}});\n\n\t// announce accessibility details at the initial focus\n\tListBase.prototype.bAnnounceDetails = true;\n\n\tListBase.getInvisibleText = function() {\n\t\treturn this.oInvisibleText || (this.oInvisibleText = new InvisibleText().toStatic());\n\t};\n\n\t// class name for the navigation items\n\tListBase.prototype.sNavItemClass = \"sapMLIB\";\n\n\tListBase.prototype.init = function() {\n\t\tthis._aNavSections = [];\n\t\tthis._aSelectedPaths = [];\n\t\tthis._iItemNeedsHighlight = 0;\n\t\tthis.data(\"sap-ui-fastnavgroup\", \"true\", true); // Define group for F6 handling\n\t};\n\n\tListBase.prototype.onBeforeRendering = function() {\n\t\tthis._bRendering = true;\n\t\tthis._bActiveItem = false;\n\t\tthis._aNavSections = [];\n\t\tthis._removeSwipeContent();\n\t};\n\n\tListBase.prototype.onAfterRendering = function() {\n\t\tthis._bRendering = false;\n\t\tthis._sLastMode = this.getMode();\n\n\t\t// invalidate item navigation for desktop\n\t\tif (Device.system.desktop) {\n\t\t\tthis._bItemNavigationInvalidated = true;\n\t\t}\n\t};\n\n\tListBase.prototype.exit = function () {\n\t\tthis._oSelectedItem = null;\n\t\tthis._aNavSections = [];\n\t\tthis._aSelectedPaths = [];\n\t\tthis._destroyGrowingDelegate();\n\t\tthis._destroyItemNavigation();\n\t};\n\n\t// this gets called only with oData Model when first load or filter/sort\n\tListBase.prototype.refreshItems = function(sReason) {\n\t\tif (this._oGrowingDelegate) {\n\t\t\t// inform growing delegate to handle\n\t\t\tthis._oGrowingDelegate.refreshItems(sReason);\n\t\t} else {\n\t\t\t// if data multiple time requested during the ongoing request\n\t\t\t// UI5 cancels the previous requests then we should fire updateStarted once\n\t\t\tif (!this._bReceivingData) {\n\t\t\t\t// handle update started event\n\t\t\t\tthis._updateStarted(sReason);\n\t\t\t\tthis._bReceivingData = true;\n\t\t\t}\n\n\t\t\t// for flat list get all data\n\t\t\tthis.refreshAggregation(\"items\");\n\t\t}\n\t};\n\n\t// this gets called via JSON and OData model when binding is updated\n\t// if there is no data this should get called anyway\n\t// TODO: if there is a network error this will not get called\n\t// but we need to turn back to initial state\n\tListBase.prototype.updateItems = function(sReason) {\n\t\tif (this._oGrowingDelegate) {\n\t\t\t// inform growing delegate to handle\n\t\t\tthis._oGrowingDelegate.updateItems(sReason);\n\t\t} else {\n\t\t\tif (this._bReceivingData) {\n\t\t\t\t// if we are receiving the data this should be oDataModel\n\t\t\t\t// updateStarted is already handled before on refreshItems\n\t\t\t\t// here items binding is updated because data is came from server\n\t\t\t\t// so we can convert the flag for the next request\n\t\t\t\tthis._bReceivingData = false;\n\t\t\t} else {\n\t\t\t\t// if data is not requested this should be JSON Model\n\t\t\t\t// data is already in memory and will not be requested\n\t\t\t\t// so we do not need to change the flag\n\t\t\t\t// this._bReceivingData should be always false\n\t\t\t\tthis._updateStarted(sReason);\n\t\t\t}\n\n\t\t\t// for flat list update items aggregation\n\t\t\tthis.updateAggregation(\"items\");\n\n\t\t\t// items binding are updated\n\t\t\tthis._updateFinished();\n\t\t}\n\t};\n\n\tListBase.prototype.setBindingContext = function() {\n\t\tthis._resetItemsBinding();\n\t\treturn Control.prototype.setBindingContext.apply(this, arguments);\n\t};\n\n\tListBase.prototype._bindAggregation = function(sName, oBindingInfo) {\n\t\tfunction addBindingListener(oBindingInfo, sEventName, fHandler) {\n\t\t\toBindingInfo.events = oBindingInfo.events || {};\n\n\t\t\tif (!oBindingInfo.events[sEventName]) {\n\t\t\t\toBindingInfo.events[sEventName] = fHandler;\n\t\t\t} else {\n\t\t\t\t// Wrap the event handler of the other party to add our handler.\n\t\t\t\tvar fOriginalHandler = oBindingInfo.events[sEventName];\n\t\t\t\toBindingInfo.events[sEventName] = function() {\n\t\t\t\t\tfOriginalHandler.apply(this, arguments);\n\t\t\t\t\tfHandler.apply(this, arguments);\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (sName === \"items\") {\n\t\t\tthis._resetItemsBinding();\n\t\t\taddBindingListener(oBindingInfo, \"dataRequested\", this._onBindingDataRequestedListener.bind(this));\n\t\t\taddBindingListener(oBindingInfo, \"dataReceived\", this._onBindingDataReceivedListener.bind(this));\n\t\t}\n\n\t\tControl.prototype._bindAggregation.call(this, sName, oBindingInfo);\n\t};\n\n\tListBase.prototype._onBindingDataRequestedListener = function(oEvent) {\n\t\tthis._showBusyIndicator();\n\n\t\tif (this._dataReceivedHandlerId != null) {\n\t\t\tjQuery.sap.clearDelayedCall(this._dataReceivedHandlerId);\n\t\t\tdelete this._dataReceivedHandlerId;\n\t\t}\n\t};\n\n\tListBase.prototype._onBindingDataReceivedListener = function(oEvent) {\n\t\tif (this._dataReceivedHandlerId != null) {\n\t\t\tjQuery.sap.clearDelayedCall(this._dataReceivedHandlerId);\n\t\t\tdelete this._dataReceivedHandlerId;\n\t\t}\n\n\t\t// The list will be set to busy when a request is sent, and set to not busy when a response is received.\n\t\t// Under certain conditions it can happen that there are multiple requests in the request queue of the binding, which will be processed\n\t\t// sequentially. In this case the busy indicator will be shown and hidden multiple times (flickering) until all requests have been\n\t\t// processed. With this timer we avoid the flickering, as the list will only be set to not busy after all requests have been processed.\n\t\tthis._dataReceivedHandlerId = jQuery.sap.delayedCall(0, this, function() {\n\t\t\tthis._hideBusyIndicator();\n\t\t\tdelete this._dataReceivedHandlerId;\n\t\t});\n\t};\n\n\tListBase.prototype.destroyItems = function(bSuppressInvalidate) {\n\t\t// check whether we have items to destroy or not\n\t\tif (!this.getItems(true).length) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// clean up the selection\n\t\tthis._oSelectedItem = null;\n\n\t\t// suppress the synchronous DOM removal of the aggregation destroy\n\t\tthis.destroyAggregation(\"items\", \"KeepDom\");\n\n\t\t// invalidate to update the DOM on the next tick of the RenderManager\n\t\tif (!bSuppressInvalidate) {\n\t\t\tthis.invalidate();\n\t\t}\n\n\t\treturn this;\n\t};\n\n\n\tListBase.prototype.removeAllItems = function(sAggregationName) {\n\t\tthis._oSelectedItem = null;\n\t\treturn this.removeAllAggregation(\"items\");\n\t};\n\n\tListBase.prototype.removeItem = function(vItem) {\n\t\tvar oItem = this.removeAggregation(\"items\", vItem);\n\t\tif (oItem && oItem === this._oSelectedItem) {\n\t\t\tthis._oSelectedItem = null;\n\t\t}\n\t\treturn oItem;\n\t};\n\n\tListBase.prototype.getItems = function(bReadOnly) {\n\t\tif (bReadOnly) {\n\t\t\treturn this.mAggregations[\"items\"] || [];\n\t\t}\n\n\t\treturn this.getAggregation(\"items\", []);\n\t};\n\n\tListBase.prototype.getId = function(sSuffix) {\n\t\tvar sId = this.sId;\n\t\treturn sSuffix ? sId + \"-\" + sSuffix : sId;\n\t};\n\n\tListBase.prototype.setGrowing = function(bGrowing) {\n\t\tbGrowing = !!bGrowing;\n\t\tif (this.getGrowing() != bGrowing) {\n\t\t\tthis.setProperty(\"growing\", bGrowing, !bGrowing);\n\t\t\tif (bGrowing) {\n\t\t\t\tjQuery.sap.require(\"sap.m.GrowingEnablement\");\n\t\t\t\tthis._oGrowingDelegate = new sap.m.GrowingEnablement(this);\n\t\t\t} else if (this._oGrowingDelegate) {\n\t\t\t\tthis._oGrowingDelegate.destroy();\n\t\t\t\tthis._oGrowingDelegate = null;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\tListBase.prototype.setGrowingThreshold = function(iThreshold) {\n\t\treturn this.setProperty(\"growingThreshold\", iThreshold, true);\n\t};\n\n\tListBase.prototype.setEnableBusyIndicator = function(bEnable) {\n\t\tthis.setProperty(\"enableBusyIndicator\", bEnable, true);\n\t\tif (!this.getEnableBusyIndicator()) {\n\t\t\tthis._hideBusyIndicator();\n\t\t}\n\t\treturn this;\n\t};\n\n\tListBase.prototype.setNoDataText = function(sNoDataText) {\n\t\tthis.setProperty(\"noDataText\", sNoDataText, true);\n\t\tthis.$(\"nodata-text\").text(this.getNoDataText());\n\t\treturn this;\n\t};\n\n\tListBase.prototype.getNoDataText = function(bCheckBusy) {\n\t\t// check busy state\n\t\tif (bCheckBusy && this._bBusy) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\t// return no data text from resource bundle when there is no custom\n\t\tvar sNoDataText = this.getProperty(\"noDataText\");\n\t\tsNoDataText = sNoDataText || sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LIST_NO_DATA\");\n\t\treturn sNoDataText;\n\t};\n\n\n\t/**\n\t * Returns selected list item. When no item is selected, \"null\" is returned. When \"multi-selection\" is enabled and multiple items are selected, only the up-most selected item is returned.\n\t *\n\t * @type sap.m.ListItemBase\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.getSelectedItem = function() {\n\t\tvar aItems = this.getItems(true);\n\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\tif (aItems[i].getSelected()) {\n\t\t\t\treturn aItems[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\n\t/**\n\t * Selects or deselects the given list item.\n\t *\n\t * @param {sap.m.ListItemBase} oListItem\n\t *         The list item whose selection to be changed. This parameter is mandatory.\n\t * @param {boolean} bSelect\n\t *         Sets selected status of the list item. Default value is true.\n\t * @type sap.m.ListBase\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.setSelectedItem = function(oListItem, bSelect, bFireEvent) {\n\t\tif (this.indexOfItem(oListItem) < 0) {\n\t\t\tjQuery.sap.log.warning(\"setSelectedItem is called without valid ListItem parameter on \" + this);\n\t\t\treturn;\n\t\t}\n\t\tif (this._bSelectionMode) {\n\t\t\toListItem.setSelected((bSelect === undefined) ? true : !!bSelect);\n\t\t\tbFireEvent && this._fireSelectionChangeEvent([oListItem]);\n\t\t}\n\t};\n\n\n\t/**\n\t * Returns an array containing the selected list items. If no items are selected, an empty array is returned.\n\t *\n\t * @type sap.m.ListItemBase[]\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.getSelectedItems = function() {\n\t\treturn this.getItems(true).filter(function(oItem) {\n\t\t\treturn oItem.getSelected();\n\t\t});\n\t};\n\n\n\t/**\n\t * Sets a list item to be selected by id. In single mode the method removes the previous selection.\n\t *\n\t * @param {string} sId\n\t *         The id of the list item whose selection to be changed.\n\t * @param {boolean} bSelect\n\t *         Sets selected status of the list item. Default value is true.\n\t * @type sap.m.ListBase\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.setSelectedItemById = function(sId, bSelect) {\n\t\tvar oListItem = sap.ui.getCore().byId(sId);\n\t\treturn this.setSelectedItem(oListItem, bSelect);\n\t};\n\n\n\t/**\n\t * Returns the binding contexts of the selected items.\n\t * Note: This method returns an empty array if no databinding is used.\n\t *\n\t * @param {boolean} bAll\n\t *         Set true to include even invisible selected items(e.g. the selections from the previous filters).\n\t *         Note: In single selection modes, only the last selected item's binding context is returned in array.\n\t * @type object[]\n\t * @public\n\t * @since 1.18.6\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.getSelectedContexts = function(bAll) {\n\t\tvar oBindingInfo = this.getBindingInfo(\"items\"),\n\t\t\tsModelName = (oBindingInfo || {}).model,\n\t\t\toModel = this.getModel(sModelName);\n\n\t\t// only deal with binding case\n\t\tif (!oBindingInfo || !oModel) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// return binding contexts from all selection paths\n\t\tif (bAll && this.getRememberSelections()) {\n\t\t\treturn this._aSelectedPaths.map(function(sPath) {\n\t\t\t\treturn oModel.getContext(sPath);\n\t\t\t});\n\t\t}\n\n\t\t// return binding context of current selected items\n\t\treturn this.getSelectedItems().map(function(oItem) {\n\t\t\treturn oItem.getBindingContext(sModelName);\n\t\t});\n\t};\n\n\n\t/**\n\t * Removes visible selections of the current selection mode.\n\t *\n\t * @param {boolean} bAll\n\t *         Since version 1.16.3. This control keeps old selections after filter or sorting. Set this parameter \"true\" to remove all selections.\n\t * @type sap.m.ListBase\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.removeSelections = function(bAll, bFireEvent, bDetectBinding) {\n\t\tvar aChangedListItems = [];\n\t\tthis._oSelectedItem = null;\n\t\tbAll && (this._aSelectedPaths = []);\n\t\tthis.getItems(true).forEach(function(oItem) {\n\t\t\tif (!oItem.getSelected()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if the selected property is two-way bound then we do not need to update the selection\n\t\t\tif (bDetectBinding && oItem.isSelectedBoundTwoWay()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toItem.setSelected(false, true);\n\t\t\taChangedListItems.push(oItem);\n\t\t\t!bAll && this._updateSelectedPaths(oItem);\n\t\t}, this);\n\n\t\tif (bFireEvent && aChangedListItems.length) {\n\t\t\tthis._fireSelectionChangeEvent(aChangedListItems);\n\t\t}\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Select all items in \"MultiSelection\" mode.\n\t *\n\t * @type sap.m.ListBase\n\t * @public\n\t * @since 1.16\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.selectAll = function (bFireEvent) {\n\t\tif (this.getMode() != \"MultiSelect\") {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar aChangedListItems = [];\n\t\tthis.getItems(true).forEach(function(oItem) {\n\t\t\tif (!oItem.getSelected()) {\n\t\t\t\toItem.setSelected(true, true);\n\t\t\t\taChangedListItems.push(oItem);\n\t\t\t\tthis._updateSelectedPaths(oItem);\n\t\t\t}\n\t\t}, this);\n\n\t\tif (bFireEvent && aChangedListItems.length) {\n\t\t\tthis._fireSelectionChangeEvent(aChangedListItems, bFireEvent);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Returns the last list mode, the mode that is rendered\n\t * This can be used to detect mode changes during rendering\n\t *\n\t * @protected\n\t */\n\tListBase.prototype.getLastMode = function(sMode) {\n\t\treturn this._sLastMode;\n\t};\n\n\tListBase.prototype.setMode = function(sMode) {\n\t\tsMode = this.validateProperty(\"mode\", sMode);\n\t\tvar sOldMode = this.getMode();\n\t\tif (sOldMode == sMode) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// determine the selection mode\n\t\tthis._bSelectionMode = sMode.indexOf(\"Select\") > -1;\n\n\t\t// remove selections if mode is not a selection mode\n\t\tif (!this._bSelectionMode) {\n\t\t\tthis.removeSelections(true);\n\t\t} else {\n\t\t\t// update selection status of items\n\t\t\tvar aSelecteds = this.getSelectedItems();\n\t\t\tif (aSelecteds.length > 1) {\n\t\t\t\t// remove selection if there are more than one item is selected\n\t\t\t\tthis.removeSelections(true);\n\t\t\t} else if (sOldMode === ListMode.MultiSelect) {\n\t\t\t\t// if old mode is multi select then we need to remember selected item\n\t\t\t\t// in case of new item selection right after setMode call\n\t\t\t\tthis._oSelectedItem = aSelecteds[0];\n\t\t\t}\n\t\t}\n\n\t\t// update property with invalidate\n\t\treturn this.setProperty(\"mode\", sMode);\n\t};\n\n\n\t/**\n\t * Returns growing information as object with \"actual\" and \"total\" keys.\n\t * Note: This function returns \"null\" if \"growing\" feature is disabled.\n\t *\n\t * @type object\n\t * @public\n\t * @since 1.16\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.getGrowingInfo = function() {\n\t\treturn this._oGrowingDelegate ? this._oGrowingDelegate.getInfo() : null;\n\t};\n\n\tListBase.prototype.setRememberSelections = function(bRemember) {\n\t\tthis.setProperty(\"rememberSelections\", bRemember, true);\n\t\t!this.getRememberSelections() && (this._aSelectedPaths = []);\n\t\treturn this;\n\t};\n\n\t/*\n\t * Sets internal remembered selected context paths.\n\t * This method can be called to reset remembered selection\n\t * and does not change selection of the items until binding update.\n\t *\n\t * @param {String[]} aSelectedPaths valid binding context path array\n\t * @since 1.26\n\t * @protected\n\t */\n\tListBase.prototype.setSelectedContextPaths = function(aSelectedPaths) {\n\t\tthis._aSelectedPaths = aSelectedPaths || [];\n\t};\n\n\t/*\n\t * Returns internal remembered selected context paths as a copy if rememberSelections is set to true,\n\t * else returns the binding context path for the current selected items.\n\t *\n\t * @return {String[]} selected items binding context path\n\t * @since 1.26\n\t * @protected\n\t */\n\tListBase.prototype.getSelectedContextPaths = function(bAll) {\n\t\t// return this selectedPaths if rememberSelections is true\n\t\tif (!bAll || (bAll && this.getRememberSelections())) {\n\t\t\treturn this._aSelectedPaths.slice(0);\n\t\t}\n\n\t\t// return the binding context path of current selected items\n\t\treturn this.getSelectedItems().map(function(oItem) {\n\t\t\treturn oItem.getBindingContextPath();\n\t\t});\n\t};\n\n\t/* Determines whether all selectable items are selected or not\n\t * @protected\n\t */\n\tListBase.prototype.isAllSelectableSelected = function() {\n\t\tif (this.getMode() != ListMode.MultiSelect) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar aItems = this.getItems(true),\n\t\t\tiSelectedItemCount = this.getSelectedItems().length,\n\t\t\tiSelectableItemCount = aItems.filter(function(oItem) {\n\t\t\t\treturn oItem.isSelectable();\n\t\t\t}).length;\n\n\t\treturn (aItems.length > 0) && (iSelectedItemCount == iSelectableItemCount);\n\t};\n\n\t/*\n\t * Returns only visible items\n\t * @protected\n\t */\n\tListBase.prototype.getVisibleItems = function() {\n\t\treturn this.getItems(true).filter(function(oItem) {\n\t\t\treturn oItem.getVisible();\n\t\t});\n\t};\n\n\t// return whether list has active item or not\n\tListBase.prototype.getActiveItem = function() {\n\t\treturn this._bActiveItem;\n\t};\n\n\t// this gets called when items DOM is changed\n\tListBase.prototype.onItemDOMUpdate = function(oListItem) {\n\t\tif (!this._bRendering && this.bOutput) {\n\t\t\tthis._startItemNavigation(true);\n\t\t}\n\t};\n\n\t// this gets called when items active state is changed\n\tListBase.prototype.onItemActiveChange = function(oListItem, bActive) {\n\t\tthis._bActiveItem = bActive;\n\t};\n\n\t// this gets called when item type column requirement is changed\n\tListBase.prototype.onItemHighlightChange = function(oItem, bNeedsHighlight) {\n\t\tthis._iItemNeedsHighlight += (bNeedsHighlight ? 1 : -1);\n\n\t\t// update highlight visibility\n\t\tif (this._iItemNeedsHighlight == 1 && bNeedsHighlight) {\n\t\t\tthis.$(\"listUl\").addClass(\"sapMListHighlight\");\n\t\t} else if (this._iItemNeedsHighlight == 0) {\n\t\t\tthis.$(\"listUl\").removeClass(\"sapMListHighlight\");\n\t\t}\n\t};\n\n\t// this gets called when selected property of the ListItem is changed\n\tListBase.prototype.onItemSelectedChange = function(oListItem, bSelected) {\n\n\t\tif (this.getMode() == ListMode.MultiSelect) {\n\t\t\tthis._updateSelectedPaths(oListItem, bSelected);\n\t\t\treturn;\n\t\t}\n\n\t\tif (bSelected) {\n\t\t\tthis._aSelectedPaths = [];\n\t\t\tthis._oSelectedItem && this._oSelectedItem.setSelected(false, true);\n\t\t\tthis._oSelectedItem = oListItem;\n\t\t} else if (this._oSelectedItem === oListItem) {\n\t\t\tthis._oSelectedItem = null;\n\t\t}\n\n\t\t// update selection path for the list item\n\t\tthis._updateSelectedPaths(oListItem, bSelected);\n\t};\n\n\t/*\n\t * Returns items container DOM reference\n\t * @protected\n\t */\n\tListBase.prototype.getItemsContainerDomRef = function() {\n\t\treturn this.getDomRef(\"listUl\");\n\t};\n\n\n\tListBase.prototype.checkGrowingFromScratch = function() {};\n\n\t/*\n\t * This hook method gets called if growing feature is enabled and before new page loaded\n\t * @protected\n\t */\n\tListBase.prototype.onBeforePageLoaded = function(oGrowingInfo, sChangeReason) {\n\t\tthis._fireUpdateStarted(sChangeReason, oGrowingInfo);\n\t\tthis.fireGrowingStarted(oGrowingInfo);\n\t};\n\n\t/*\n\t * This hook method get called if growing feature is enabled and after new page loaded\n\t * @protected\n\t */\n\tListBase.prototype.onAfterPageLoaded = function(oGrowingInfo, sChangeReason) {\n\t\tthis._fireUpdateFinished(oGrowingInfo);\n\t\tthis.fireGrowingFinished(oGrowingInfo);\n\t};\n\n\t/*\n\t * Adds navigation section that we can be navigate with alt + down/up\n\t * @protected\n\t */\n\tListBase.prototype.addNavSection = function(sId) {\n\t\tthis._aNavSections.push(sId);\n\t\treturn sId;\n\t};\n\n\t/*\n\t * Returns the max items count.\n\t * If aggregation items is bound the count will be the length of the binding\n\t * otherwise the length of the list items aggregation will be returned\n\t * @protected\n\t */\n\tListBase.prototype.getMaxItemsCount = function() {\n\t\tvar oBinding = this.getBinding(\"items\");\n\t\tif (oBinding && oBinding.getLength) {\n\t\t\treturn oBinding.getLength() || 0;\n\t\t}\n\t\treturn this.getItems(true).length;\n\t};\n\n\t/*\n\t * This hook method is called from renderer to determine whether items should render or not\n\t * @protected\n\t */\n\tListBase.prototype.shouldRenderItems = function() {\n\t\treturn true;\n\t};\n\n\t// when new items binding we should turn back to initial state\n\tListBase.prototype._resetItemsBinding = function() {\n\t\tif (this.isBound(\"items\")) {\n\t\t\tthis._bUpdating = false;\n\t\t\tthis._bReceivingData = false;\n\t\t\tthis.removeSelections(true, false, true);\n\t\t\tthis._oGrowingDelegate && this._oGrowingDelegate.reset();\n\t\t\tthis._hideBusyIndicator();\n\n\t\t\t/* reset focused position */\n\t\t\tif (this._oItemNavigation) {\n\t\t\t\tthis._oItemNavigation.iFocusedIndex = -1;\n\t\t\t}\n\t\t}\n\t};\n\n\t// called before update started via sorting/filtering/growing etc.\n\tListBase.prototype._updateStarted = function(sReason) {\n\t\t// if data receiving/update is not started or ongoing\n\t\tif (!this._bReceivingData && !this._bUpdating) {\n\t\t\tthis._bUpdating = true;\n\t\t\tthis._fireUpdateStarted(sReason);\n\t\t}\n\t};\n\n\t// fire updateStarted event with update reason and actual/total info\n\tListBase.prototype._fireUpdateStarted = function(sReason, oInfo) {\n\t\tthis._sUpdateReason = jQuery.sap.charToUpperCase(sReason || \"Refresh\");\n\t\tthis.fireUpdateStarted({\n\t\t\treason : this._sUpdateReason,\n\t\t\tactual : oInfo ? oInfo.actual : this.getItems(true).length,\n\t\t\ttotal : oInfo ? oInfo.total : this.getMaxItemsCount()\n\t\t});\n\t};\n\n\t// called on after rendering to finalize item update finished\n\tListBase.prototype._updateFinished = function() {\n\t\t// check if data receiving/update is finished\n\t\tif (!this._bReceivingData && this._bUpdating) {\n\t\t\tthis._fireUpdateFinished();\n\t\t\tthis._bUpdating = false;\n\t\t}\n\t};\n\n\t// fire updateFinished event delayed to make sure rendering phase is done\n\tListBase.prototype._fireUpdateFinished = function(oInfo) {\n\t\tthis._hideBusyIndicator();\n\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\tthis._bItemNavigationInvalidated = true;\n\t\t\tthis.fireUpdateFinished({\n\t\t\t\treason : this._sUpdateReason,\n\t\t\t\tactual : oInfo ? oInfo.actual : this.getItems(true).length,\n\t\t\t\ttotal : oInfo ? oInfo.total : this.getMaxItemsCount()\n\t\t\t});\n\t\t});\n\t};\n\n\tListBase.prototype._showBusyIndicator = function() {\n\t\tif (this.getEnableBusyIndicator() && !this.getBusy() && !this._bBusy) {\n\t\t\t// set the busy state\n\t\t\tthis._bBusy = true;\n\n\t\t\t// TODO: would be great to have an event when busy indicator visually seen\n\t\t\tthis._sBusyTimer = jQuery.sap.delayedCall(this.getBusyIndicatorDelay(), this, function() {\n\t\t\t\t// clean no data text\n\t\t\t\tthis.$(\"nodata-text\").text(\"\");\n\t\t\t});\n\n\t\t\t// set busy property\n\t\t\tthis.setBusy(true, \"listUl\");\n\t\t}\n\t};\n\n\tListBase.prototype._hideBusyIndicator = function() {\n\t\tif (this._bBusy) {\n\t\t\t// revert busy state\n\t\t\tthis._bBusy = false;\n\t\t\tthis.setBusy(false, \"listUl\");\n\t\t\tjQuery.sap.clearDelayedCall(this._sBusyTimer);\n\n\t\t\t// revert no data texts when necessary\n\t\t\tif (!this.getItems(true).length) {\n\t\t\t\tthis.$(\"nodata-text\").text(this.getNoDataText());\n\t\t\t}\n\t\t}\n\t};\n\n\tListBase.prototype.onItemBindingContextSet = function(oItem) {\n\t\t// determine whether selection remember is necessary or not\n\t\tif (!this._bSelectionMode || !this.getRememberSelections() || !this.isBound(\"items\")) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if selected property two-way bound then we do not need to update the selection\n\t\tif (oItem.isSelectedBoundTwoWay()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// update the item selection\n\t\tvar sPath = oItem.getBindingContextPath();\n\t\tif (sPath) {\n\t\t\tvar bSelected = (this._aSelectedPaths.indexOf(sPath) > -1);\n\t\t\toItem.setSelected(bSelected);\n\t\t}\n\t};\n\n\tListBase.prototype.onItemInserted = function(oItem, bSelectedDelayed) {\n\t\tif (bSelectedDelayed) {\n\t\t\t// item was already selected before inserted to the list\n\t\t\tthis.onItemSelectedChange(oItem, true);\n\t\t}\n\n\t\tif (!this._bSelectionMode ||\n\t\t\t!this._aSelectedPaths.length ||\n\t\t\t!this.getRememberSelections() ||\n\t\t\t!this.isBound(\"items\") ||\n\t\t\toItem.isSelectedBoundTwoWay() ||\n\t\t\toItem.getSelected()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// retain item selection\n\t\tvar sPath = oItem.getBindingContextPath();\n\t\tif (sPath && this._aSelectedPaths.indexOf(sPath) > -1) {\n\t\t\toItem.setSelected(true);\n\t\t}\n\t};\n\n\t// this gets called from item when selection is changed via checkbox/radiobutton/press event\n\tListBase.prototype.onItemSelect = function(oListItem, bSelected) {\n\t\tif (this.getMode() == ListMode.MultiSelect) {\n\t\t\tthis._fireSelectionChangeEvent([oListItem]);\n\t\t} else if (this._bSelectionMode && bSelected) {\n\t\t\tthis._fireSelectionChangeEvent([oListItem]);\n\t\t}\n\t};\n\n\t// Fire selectionChange event and support old select event API\n\tListBase.prototype._fireSelectionChangeEvent = function(aListItems, bSelectAll) {\n\t\tvar oListItem = aListItems && aListItems[0];\n\t\tif (!oListItem) {\n\t\t\treturn;\n\t\t}\n\n\t\t// fire event\n\t\tthis.fireSelectionChange({\n\t\t\tlistItem : oListItem,\n\t\t\tlistItems : aListItems,\n\t\t\tselected : oListItem.getSelected(),\n\t\t\tselectAll: !!bSelectAll\n\t\t});\n\n\t\t// support old API\n\t\tthis.fireSelect({\n\t\t\tlistItem : oListItem\n\t\t});\n\t};\n\n\t// this gets called from item when delete is triggered via delete button\n\tListBase.prototype.onItemDelete = function(oListItem) {\n\t\tthis.fireDelete({\n\t\t\tlistItem : oListItem\n\t\t});\n\t};\n\n\t// this gets called from item when item is pressed(enter/tap/click)\n\tListBase.prototype.onItemPress = function(oListItem, oSrcControl) {\n\n\t\t// do not fire press event for inactive type\n\t\tif (oListItem.getType() == ListType.Inactive) {\n\t\t\treturn;\n\t\t}\n\n\t\t// fire event async\n\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\tthis.fireItemPress({\n\t\t\t\tlistItem : oListItem,\n\t\t\t\tsrcControl : oSrcControl\n\t\t\t});\n\t\t});\n\t};\n\n\t// insert or remove given item's path from selection array\n\tListBase.prototype._updateSelectedPaths = function(oItem, bSelect) {\n\t\tif (!this.getRememberSelections() || !this.isBound(\"items\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sPath = oItem.getBindingContextPath();\n\t\tif (!sPath) {\n\t\t\treturn;\n\t\t}\n\n\t\tbSelect = (bSelect === undefined) ? oItem.getSelected() : bSelect;\n\t\tvar iIndex = this._aSelectedPaths.indexOf(sPath);\n\t\tif (bSelect) {\n\t\t\tiIndex < 0 && this._aSelectedPaths.push(sPath);\n\t\t} else {\n\t\t\tiIndex > -1 && this._aSelectedPaths.splice(iIndex, 1);\n\t\t}\n\t};\n\n\tListBase.prototype._destroyGrowingDelegate = function() {\n\t\tif (this._oGrowingDelegate) {\n\t\t\tthis._oGrowingDelegate.destroy();\n\t\t\tthis._oGrowingDelegate = null;\n\t\t}\n\t};\n\n\tListBase.prototype._destroyItemNavigation = function() {\n\t\tif (this._oItemNavigation) {\n\t\t\tthis.removeEventDelegate(this._oItemNavigation);\n\t\t\tthis._oItemNavigation.destroy();\n\t\t\tthis._oItemNavigation = null;\n\t\t}\n\t};\n\n\t/**\n\t * After swipe content is shown on the right hand side of the list item\n\t * we will block the touch events and this method defines this touch blocker area.\n\t * It must be always child/ren of the area because we will listen parent's touch events\n\t *\n\t * @private\n\t */\n\tListBase.prototype._getTouchBlocker = function() {\n\t\treturn this.$().children();\n\t};\n\n\tListBase.prototype._getSwipeContainer = function() {\n\t\treturn this._$swipeContainer || (\n\t\t\tjQuery.sap.require(\"sap.m.InstanceManager\"),\n\t\t\tthis._$swipeContainer = jQuery(\"<div>\", {\n\t\t\t\t\"id\" : this.getId(\"swp\"),\n\t\t\t\t\"class\" : \"sapMListSwp\"\n\t\t\t})\n\t\t);\n\t};\n\n\tListBase.prototype._setSwipePosition = function() {\n\t\tif (this._isSwipeActive) {\n\t\t\treturn this._getSwipeContainer().css(\"top\", this._swipedItem.$().position().top);\n\t\t}\n\t};\n\n\tListBase.prototype._renderSwipeContent = function() {\n\t\tvar $listitem = this._swipedItem.$(),\n\t\t\t$container = this._getSwipeContainer();\n\n\t\t// add swipe container into list if it is not there\n\t\tthis.$().prepend($container.css({\n\t\t\ttop : $listitem.position().top,\n\t\t\theight : $listitem.outerHeight(true)\n\t\t}));\n\n\t\t// render swipe content into swipe container if needed\n\t\tif (this._bRerenderSwipeContent) {\n\t\t\tthis._bRerenderSwipeContent = false;\n\t\t\tvar rm = sap.ui.getCore().createRenderManager();\n\t\t\trm.render(this.getSwipeContent(), $container.empty()[0]);\n\t\t\trm.destroy();\n\t\t}\n\n\t\t// for method chaining\n\t\treturn this;\n\t};\n\n\tListBase.prototype._swipeIn = function() {\n\t\tvar that = this,\t// scope\n\t\t\t$blocker = that._getTouchBlocker(),\n\t\t\t$container = that._getSwipeContainer();\n\n\t\t// render swipe content\n\t\tthat._isSwipeActive = true;\n\t\tthat._renderSwipeContent();\n\n\t\t// add to instance manager\n\t\tsap.m.InstanceManager.addDialogInstance(that);\n\n\t\t// maybe keyboard is opened\n\t\twindow.document.activeElement.blur();\n\n\t\t// check orientation change and recalculate the position\n\t\tjQuery(window).on(\"resize.swp\", function() {\n\t\t\tthat._setSwipePosition();\n\t\t});\n\n\t\t// block touch events\n\t\t$blocker.css(\"pointer-events\", \"none\").on(\"touchstart.swp mousedown.swp\", function(e){\n\t\t\tif (!$container[0].firstChild.contains(e.target)) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\t\t// UX: swipeout is not interruptible till animation is finished\n\t\t$container.bind(\"webkitAnimationEnd animationend\", function() {\n\t\t\tjQuery(this).unbind(\"webkitAnimationEnd animationend\");\n\t\t\t// disable animation and focus to container\n\t\t\t$container.css(\"opacity\", 1).focus();\n\n\t\t\t// check parents touchend for auto hide mode\n\t\t\t$blocker.parent().on(\"touchend.swp touchcancel.swp mouseup.swp\", function(e) {\n\t\t\t\t// checks if event source is coming from swipe container's first child\n\t\t\t\tif (!$container[0].firstChild.contains(e.target)) {\n\t\t\t\t\tthat.swipeOut();\n\t\t\t\t}\n\t\t\t});\n\t\t}).removeClass(\"sapMListSwpOutAnim\").addClass(\"sapMListSwpInAnim\");\n\t};\n\n\tListBase.prototype._onSwipeOut = function(callback) {\n\t\t// remove container from DOM and disable animation event\n\t\tthis._getSwipeContainer().css(\"opacity\", 0).remove();\n\n\t\t// remove windows resize listener\n\t\tjQuery(window).off(\"resize.swp\");\n\n\t\t// enable touch events again\n\t\tthis._getTouchBlocker().css(\"pointer-events\", \"auto\").off(\"touchstart.swp mousedown.swp\");\n\n\t\tif (typeof callback == \"function\") {\n\t\t\tcallback.call(this, this._swipedItem, this.getSwipeContent());\n\t\t}\n\n\t\tthis._isSwipeActive = false;\n\n\t\t// remove from instance manager\n\t\tsap.m.InstanceManager.removeDialogInstance(this);\n\t};\n\n\n\t/**\n\t * After swipeContent is shown, user can interact with this control(e.g Tap). After interaction is done, you can/should use this method to hide swipeContent from screen.\n\t * Note: If users try to tap inside of the list but outside of the swipeContent then control hides automatically.\n\t *\n\t * @param {any} oCallback\n\t *         This callback function is called with two parameters(swipedListItem and swipedContent) after swipe-out animation is finished.\n\t * @type sap.m.ListBase\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.swipeOut = function(callback) {\n\t\tif (!this._isSwipeActive) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar that = this,\n\t\t\t$container = this._getSwipeContainer();\n\n\t\t// stop listening parents touchend event\n\t\tthis._getTouchBlocker().parent().off(\"touchend.swp touchend.swp touchcancel.swp mouseup.swp\");\n\n\t\t// add swipeout animation and listen this\n\t\t$container.bind(\"webkitAnimationEnd animationend\", function() {\n\t\t\tjQuery(this).unbind(\"webkitAnimationEnd animationend\");\n\t\t\tthat._onSwipeOut(callback);\n\t\t}).removeClass(\"sapMListSwpInAnim\").addClass(\"sapMListSwpOutAnim\");\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Close and hide the opened swipe content immediately\n\t * @private\n\t */\n\tListBase.prototype._removeSwipeContent = function() {\n\t\tif (this._isSwipeActive) {\n\t\t\tthis.swipeOut()._onSwipeOut();\n\t\t}\n\t};\n\n\t/**\n\t * This method is required from sap.m.InstanceManager\n\t * To remove swipe content when back button is pressed\n\t */\n\tListBase.prototype.close = ListBase.prototype._removeSwipeContent;\n\n\t// called on swipe event to bring in the swipeContent control\n\tListBase.prototype._onSwipe = function(oEvent) {\n\t\tvar oContent = this.getSwipeContent(),\n\t\t\toSrcControl = oEvent.srcControl;\n\n\t\tif (oContent && oSrcControl && !this._isSwipeActive && this !== oSrcControl && !this._eventHandledByControl\n\t\t\t\t// also enable the swipe feature when runs on Windows 8 device\n\t\t\t\t&& (Device.support.touch || (Device.os.windows && Device.os.version >= 8))) {\n\t\t\t// source can be anything so, check parents and find the list item\n\t\t\t/*eslint-disable no-extra-semi, curly */\n\t\t\tfor (var li = oSrcControl; li && !(li instanceof ListItemBase); li = li.oParent);\n\t\t\t/*eslint-enable no-extra-semi, curly */\n\t\t\tif (li instanceof ListItemBase) {\n\t\t\t\tthis._swipedItem = li;\n\n\t\t\t\t// fire event earlier to let the user change swipeContent according to list item\n\t\t\t\t// if the event not is canceled then start the animation\n\t\t\t\tthis.fireSwipe({\n\t\t\t\t\tlistItem : this._swipedItem,\n\t\t\t\t\tswipeContent : oContent,\n\t\t\t\t\tsrcControl : oSrcControl\n\t\t\t\t}, true) && this._swipeIn();\n\t\t\t}\n\t\t}\n\t};\n\n\tListBase.prototype.ontouchstart = function(oEvent) {\n\t\tthis._eventHandledByControl = oEvent.isMarked();\n\t};\n\n\tListBase.prototype.onswipeleft = function(oEvent) {\n\t\tvar exceptDirection = sap.ui.getCore().getConfiguration().getRTL() ? \"RightToLeft\" : \"LeftToRight\";\n\n\t\tif (this.getSwipeDirection() != exceptDirection) {\n\t\t\tthis._onSwipe(oEvent);\n\t\t}\n\t};\n\n\tListBase.prototype.onswiperight = function(oEvent) {\n\t\tvar exceptDirection = sap.ui.getCore().getConfiguration().getRTL() ? \"LeftToRight\" : \"RightToLeft\";\n\n\t\tif (this.getSwipeDirection() != exceptDirection) {\n\t\t\tthis._onSwipe(oEvent);\n\t\t}\n\t};\n\n\tListBase.prototype.setSwipeDirection = function(sDirection) {\n\t\treturn this.setProperty(\"swipeDirection\", sDirection, true);\n\t};\n\n\n\t/**\n\t * Returns swiped list item. When no item is swiped, \"null\" is returned.\n\t *\n\t * @type sap.m.ListItemBase\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListBase.prototype.getSwipedItem = function() {\n\t\treturn (this._isSwipeActive ? this._swipedItem : null);\n\t};\n\n\tListBase.prototype.setSwipeContent = function(oControl) {\n\t\tthis._bRerenderSwipeContent = true;\n\n\t\tthis.toggleStyleClass(\"sapMListSwipable\", !!oControl);\n\n\t\t// prevent list from re-rendering on setSwipeContent\n\t\treturn this.setAggregation(\"swipeContent\", oControl, !this._isSwipeActive);\n\t};\n\n\tListBase.prototype.invalidate = function(oOrigin) {\n\t\tif (oOrigin && oOrigin === this.getSwipeContent()) {\n\t\t\tthis._bRerenderSwipeContent = true;\n\t\t\tthis._isSwipeActive && this._renderSwipeContent();\n\t\t\treturn this;\n\t\t}\n\n\t\tControl.prototype.invalidate.apply(this, arguments);\n\t\treturn this;\n\t};\n\n\tListBase.prototype.addItemGroup = function(oGroup, oHeader, bSuppressInvalidate) {\n\t\toHeader = oHeader || new GroupHeaderListItem({\n\t\t\ttitle: oGroup.text || oGroup.key\n\t\t});\n\n\t\toHeader._bGroupHeader = true;\n\t\tthis.addAggregation(\"items\", oHeader, bSuppressInvalidate);\n\t\treturn oHeader;\n\t};\n\n\tListBase.prototype.removeGroupHeaders = function(bSuppressInvalidate) {\n\t\tthis.getItems(true).forEach(function(oItem) {\n\t\t\tif (oItem.isGroupHeader()) {\n\t\t\t\toItem.destroy(bSuppressInvalidate);\n\t\t\t}\n\t\t});\n\t};\n\n\tListBase.prototype.getAccessibilityType = function() {\n\t\treturn sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"ACC_CTR_TYPE_LIST\");\n\t};\n\n\tListBase.prototype.getAccessibilityStates = function() {\n\t\tif (!this.getItems(true).length) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tvar sStates = \"\",\n\t\t\tmMode = ListMode,\n\t\t\tsMode = this.getMode(),\n\t\t\toBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\n\t\tif (LabelEnablement.isRequired(this)) {\n\t\t\tsStates += oBundle.getText(\"LIST_REQUIRED\") + \" \";\n\t\t}\n\n\t\tif (sMode == mMode.MultiSelect) {\n\t\t\tsStates += oBundle.getText(\"LIST_MULTISELECTABLE\") + \" \";\n\t\t} else if (sMode == mMode.Delete) {\n\t\t\tsStates += oBundle.getText(\"LIST_DELETABLE\") + \" \";\n\t\t} else if (sMode != mMode.None) {\n\t\t\tsStates += oBundle.getText(\"LIST_SELECTABLE\") + \" \";\n\t\t}\n\n\t\tif (this.isGrouped()) {\n\t\t\tsStates += oBundle.getText(\"LIST_GROUPED\") + \" \";\n\t\t}\n\n\t\treturn sStates;\n\t};\n\n\tListBase.prototype.getAccessibilityDescription = function() {\n\t\tvar sDescription = this.getAriaLabelledBy().map(function(sAriaLabelledBy) {\n\t\t\tvar oAriaLabelledBy = sap.ui.getCore().byId(sAriaLabelledBy);\n\t\t\treturn ListItemBase.getAccessibilityText(oAriaLabelledBy);\n\t\t}).join(\" \");\n\n\t\tvar oHeaderTBar = this.getHeaderToolbar();\n\t\tif (oHeaderTBar) {\n\t\t\tvar oTitle = oHeaderTBar.getTitleControl();\n\t\t\tif (oTitle) {\n\t\t\t\tsDescription += oTitle.getText() + \" \";\n\t\t\t}\n\t\t} else {\n\t\t\tsDescription += this.getHeaderText() + \" \";\n\t\t}\n\n\t\tsDescription += this.getAccessibilityStates() + \" \";\n\t\tsDescription += this.getFooterText();\n\n\t\treturn sDescription.trim();\n\t};\n\n\tListBase.prototype.getAccessibilityInfo = function() {\n\t\treturn {\n\t\t\tdescription: this.getAccessibilityDescription(),\n\t\t\tfocusable: true\n\t\t};\n\t};\n\n\tListBase.prototype.getAccessbilityPosition = function(oItem) {\n\t\tvar iSetSize = 0,\n\t\t\taItems = this.getVisibleItems(),\n\t\t\tiPosInset = aItems.indexOf(oItem) + 1,\n\t\t\toBinding = this.getBinding(\"items\");\n\n\t\t// use binding length if list is in scroll to load growing mode\n\t\tif (this.getGrowing() && this.getGrowingScrollToLoad() && oBinding && oBinding.isLengthFinal()) {\n\t\t\tiSetSize = oBinding.getLength();\n\t\t\tif (oBinding.isGrouped()) {\n\t\t\t\tiSetSize += aItems.filter(function(oItem) {\n\t\t\t\t\treturn oItem.isGroupHeader() && oItem.getVisible();\n\t\t\t\t}).length;\n\t\t\t}\n\t\t} else {\n\t\t\tiSetSize = aItems.length;\n\t\t}\n\n\t\treturn {\n\t\t\tsetSize: iSetSize,\n\t\t\tposInset: iPosInset\n\t\t};\n\t};\n\n\t// this gets called when items are focused\n\tListBase.prototype.onItemFocusIn = function(oItem) {\n\t\tif (!sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar oItemDomRef = oItem.getDomRef(),\n\t\t\tmPosition = this.getAccessbilityPosition(oItem);\n\n\t\tif (!oItem.getContentAnnouncement) {\n\t\t\t// let the screen reader announce the whole content\n\t\t\tthis.getNavigationRoot().setAttribute(\"aria-activedescendant\", oItemDomRef.id);\n\t\t\toItemDomRef.setAttribute(\"aria-posinset\", mPosition.posInset);\n\t\t\toItemDomRef.setAttribute(\"aria-setsize\", mPosition.setSize);\n\t\t} else {\n\t\t\t// prepare the announcement for the screen reader\n\t\t\tvar oAccInfo = oItem.getAccessibilityInfo(),\n\t\t\t\toBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\"),\n\t\t\t\tsDescription = oAccInfo.type + \" \";\n\n\t\t\tsDescription += oBundle.getText(\"LIST_ITEM_POSITION\", [mPosition.posInset, mPosition.setSize]) + \" \";\n\t\t\tsDescription += oAccInfo.description;\n\t\t\tthis.updateInvisibleText(sDescription, oItemDomRef);\n\t\t}\n\t};\n\n\tListBase.prototype.updateInvisibleText = function(sText, oItemDomRef, bPrepend) {\n\t\tvar oInvisibleText = ListBase.getInvisibleText(),\n\t\t\t$FocusedItem = jQuery(oItemDomRef || document.activeElement);\n\n\t\tif (this.bAnnounceDetails) {\n\t\t\tthis.bAnnounceDetails = false;\n\t\t\tsText = this.getAccessibilityInfo().description + \" \" + sText;\n\t\t}\n\n\t\toInvisibleText.setText(sText.trim());\n\t\t$FocusedItem.addAriaLabelledBy(oInvisibleText.getId(), bPrepend);\n\t\twindow.setTimeout(function() {\n\t\t\t$FocusedItem.removeAriaLabelledBy(oInvisibleText.getId());\n\t\t}, 0);\n\t};\n\n\t/* Keyboard Handling */\n\tListBase.prototype.getNavigationRoot = function() {\n\t\treturn this.getDomRef(\"listUl\");\n\t};\n\n\tListBase.prototype.getFocusDomRef = function() {\n\t\t// let the item navigation handle focus\n\t\treturn this.getNavigationRoot();\n\t};\n\n\tListBase.prototype._startItemNavigation = function(bIfNeeded) {\n\n\t\t// item navigation only for desktop\n\t\tif (!Device.system.desktop) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sKeyboardMode = this.getKeyboardMode(),\n\t\t\tmKeyboardMode = ListKeyboardMode;\n\n\t\t// ItemNavigation is not necessary if there is no item in edit mode\n\t\tif (sKeyboardMode == mKeyboardMode.Edit && !this.getItems(true).length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if focus is not on the navigation items then only invalidate the item navigation\n\t\tif (bIfNeeded && !this.getNavigationRoot().contains(document.activeElement)) {\n\t\t\tthis._bItemNavigationInvalidated = true;\n\t\t\treturn;\n\t\t}\n\n\t\t// init item navigation\n\t\tif (!this._oItemNavigation) {\n\t\t\tthis._oItemNavigation = new ItemNavigation();\n\t\t\tthis._oItemNavigation.setCycling(false);\n\t\t\tthis.addEventDelegate(this._oItemNavigation);\n\n\t\t\t// set the tab index of active items\n\t\t\tvar iTabIndex = (sKeyboardMode == mKeyboardMode.Edit) ? -1 : 0;\n\t\t\tthis._setItemNavigationTabIndex(iTabIndex);\n\n\t\t\t// explicitly setting table mode with one column\n\t\t\t// to disable up/down reaction on events of the cell\n\t\t\tthis._oItemNavigation.setTableMode(true, true).setColumns(1);\n\n\t\t\t// alt + up/down will be used for section navigation\n\t\t\t// notify item navigation not to handle alt key modifiers\n\t\t\tthis._oItemNavigation.setDisabledModifiers({\n\t\t\t\tsapnext : [\"alt\"],\n\t\t\t\tsapprevious : [\"alt\"]\n\t\t\t});\n\t\t}\n\n\t\t// TODO: Maybe we need a real paging algorithm here\n\t\tthis._oItemNavigation.setPageSize(this.getGrowingThreshold());\n\n\t\t// configure navigation root\n\t\tvar oNavigationRoot = this.getNavigationRoot();\n\t\tthis._oItemNavigation.setRootDomRef(oNavigationRoot);\n\n\t\t// configure navigatable items\n\t\tthis.setNavigationItems(this._oItemNavigation, oNavigationRoot);\n\n\t\t// clear invalidations\n\t\tthis._bItemNavigationInvalidated = false;\n\t};\n\n\t/*\n\t * Sets DOM References for keyboard navigation\n\t *\n\t * @param {sap.ui.core.delegate.ItemNavigation} oItemNavigation\n\t * @param {HTMLElement} [oNavigationRoot]\n\t * @protected\n\t * @since 1.26\n\t */\n\tListBase.prototype.setNavigationItems = function(oItemNavigation, oNavigationRoot) {\n\t\tvar aNavigationItems = jQuery(oNavigationRoot).children(\".sapMLIB\").get();\n\t\toItemNavigation.setItemDomRefs(aNavigationItems);\n\t\tif (oItemNavigation.getFocusedIndex() == -1) {\n\t\t\tif (this.getGrowing() && this.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\toItemNavigation.setFocusedIndex(aNavigationItems.length - 1);\n\t\t\t} else {\n\t\t\t\toItemNavigation.setFocusedIndex(0);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Returns ItemNavigation for controls uses List\n\t * @since 1.16.5\n\t * @returns {sap.ui.core.delegate.ItemNavigation|undefined}\n\t * @protected\n\t */\n\tListBase.prototype.getItemNavigation = function() {\n\t\treturn this._oItemNavigation;\n\t};\n\n\t// sets the active elements tabindex of ItemNavigation\n\tListBase.prototype._setItemNavigationTabIndex = function(iTabIndex) {\n\t\tif (this._oItemNavigation) {\n\t\t\tthis._oItemNavigation.iActiveTabIndex = iTabIndex;\n\t\t\tthis._oItemNavigation.iTabIndex = iTabIndex;\n\t\t}\n\t};\n\n\tListBase.prototype.setKeyboardMode = function(sKeyboardMode) {\n\t\tthis.setProperty(\"keyboardMode\", sKeyboardMode, true);\n\n\t\tif (this.isActive()) {\n\t\t\tvar iTabIndex = (sKeyboardMode == ListKeyboardMode.Edit) ? -1 : 0;\n\t\t\tthis.$(\"nodata\").prop(\"tabIndex\", ~iTabIndex);\n\t\t\tthis.$(\"listUl\").prop(\"tabIndex\", iTabIndex);\n\t\t\tthis.$(\"after\").prop(\"tabIndex\", iTabIndex);\n\t\t\tthis._setItemNavigationTabIndex(iTabIndex);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/*\n\t * Makes the given ListItem(row) focusable via ItemNavigation\n\t *\n\t * @since 1.26\n\t * @protected\n\t */\n\tListBase.prototype.setItemFocusable = function(oListItem) {\n\t\tif (!this._oItemNavigation) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar aItemDomRefs = this._oItemNavigation.getItemDomRefs();\n\t\tvar iIndex = aItemDomRefs.indexOf(oListItem.getDomRef());\n\t\tif (iIndex >= 0) {\n\t\t\tthis._oItemNavigation.setFocusedIndex(iIndex);\n\t\t}\n\t};\n\n\t/*\n\t * Forward tab before or after List\n\t * This function should be called before tab key is pressed\n\t *\n\t * @see sap.m.ListItemBase#onsaptabnext\n\t * @see sap.m.ListItemBase#onsaptabprevious\n\t * @since 1.26\n\t * @protected\n\t */\n\tListBase.prototype.forwardTab = function(bForward) {\n\t\tthis._bIgnoreFocusIn = true;\n\t\tthis.$(bForward ? \"after\" : \"before\").focus();\n\t};\n\n\t// move focus out of the table for nodata row\n\tListBase.prototype.onsaptabnext = function(oEvent) {\n\t\tif (oEvent.isMarked() || this.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (oEvent.target.id == this.getId(\"nodata\")) {\n\t\t\tthis.forwardTab(true);\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// move focus out of the table for nodata row\n\tListBase.prototype.onsaptabprevious = function(oEvent) {\n\t\tif (oEvent.isMarked() || this.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sTargetId = oEvent.target.id;\n\t\tif (sTargetId == this.getId(\"nodata\")) {\n\t\t\tthis.forwardTab(false);\n\t\t} else if (sTargetId == this.getId(\"trigger\")) {\n\t\t\tthis.focusPrevious();\n\t\t\toEvent.preventDefault();\n\t\t}\n\t};\n\n\t// navigate to previous or next section according to current focus position\n\tListBase.prototype._navToSection = function(bForward) {\n\t\tvar $TargetSection;\n\t\tvar iIndex = 0;\n\t\tvar iStep = bForward ? 1 : -1;\n\t\tvar iLength = this._aNavSections.length;\n\n\t\t// find the current section index\n\t\tthis._aNavSections.some(function(sSectionId, iSectionIndex) {\n\t\t\tvar oSectionDomRef = jQuery.sap.domById(sSectionId);\n\t\t\tif (oSectionDomRef && oSectionDomRef.contains(document.activeElement)) {\n\t\t\t\tiIndex = iSectionIndex;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\t// if current section is items container then save the current focus position\n\t\tvar oItemsContainerDomRef = this.getItemsContainerDomRef();\n\t\tvar $CurrentSection = jQuery.sap.byId(this._aNavSections[iIndex]);\n\t\tif ($CurrentSection[0] === oItemsContainerDomRef && this._oItemNavigation) {\n\t\t\t$CurrentSection.data(\"redirect\", this._oItemNavigation.getFocusedIndex());\n\t\t}\n\n\t\t// find the next focusable section\n\t\tthis._aNavSections.some(function() {\n\t\t\tiIndex = (iIndex + iStep + iLength) % iLength;\t// circle\n\t\t\t$TargetSection = jQuery.sap.byId(this._aNavSections[iIndex]);\n\n\t\t\t// if target is items container\n\t\t\tif ($TargetSection[0] === oItemsContainerDomRef && this._oItemNavigation) {\n\t\t\t\tvar iRedirect = $TargetSection.data(\"redirect\");\n\t\t\t\tvar oItemDomRefs = this._oItemNavigation.getItemDomRefs();\n\t\t\t\tvar oTargetSection = oItemDomRefs[iRedirect] || oItemsContainerDomRef.children[0];\n\t\t\t\t$TargetSection = jQuery(oTargetSection);\n\t\t\t}\n\n\t\t\tif ($TargetSection.is(\":focusable\")) {\n\t\t\t\t$TargetSection.focus();\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t}, this);\n\n\t\t// return the found section\n\t\treturn $TargetSection;\n\t};\n\n\t// Handle Alt + Down\n\tListBase.prototype.onsapshow = function(oEvent) {\n\t\t// handle events that are only coming from navigation items and ignore F4\n\t\tif (oEvent.isMarked() ||\n\t\t\toEvent.which == jQuery.sap.KeyCodes.F4 ||\n\t\t\toEvent.target.id != this.getId(\"trigger\") &&\n\t\t\t!jQuery(oEvent.target).hasClass(this.sNavItemClass)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// move focus to the next section\n\t\tif (this._navToSection(true)) {\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// Handle Alt + Up\n\tListBase.prototype.onsaphide = function(oEvent) {\n\t\t// handle events that are only coming from navigation items\n\t\tif (oEvent.isMarked() ||\n\t\t\toEvent.target.id != this.getId(\"trigger\") &&\n\t\t\t!jQuery(oEvent.target).hasClass(this.sNavItemClass)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// move focus to the previous section\n\t\tif (this._navToSection(false)) {\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// Ctrl + A to switch select all/none\n\tListBase.prototype.onkeydown = function(oEvent) {\n\n\t\tvar bCtrlA = (oEvent.which == jQuery.sap.KeyCodes.A) && (oEvent.metaKey || oEvent.ctrlKey);\n\t\tif (oEvent.isMarked() || !bCtrlA || !jQuery(oEvent.target).hasClass(this.sNavItemClass)) {\n\t\t\treturn;\n\t\t}\n\n\t\toEvent.preventDefault();\n\n\t\tif (this.getMode() !== ListMode.MultiSelect) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isAllSelectableSelected()) {\n\t\t\tthis.removeSelections(false, true);\n\t\t} else {\n\t\t\tthis.selectAll(true);\n\t\t}\n\n\t\toEvent.setMarked();\n\t};\n\n\tListBase.prototype.onmousedown = function(oEvent) {\n\t\t// check whether item navigation should be reapplied from scratch\n\t\tif (this._bItemNavigationInvalidated) {\n\t\t\tthis._startItemNavigation();\n\t\t}\n\t};\n\n\t// focus to previously focused element known in item navigation\n\tListBase.prototype.focusPrevious = function() {\n\t\tif (!this._oItemNavigation) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get the last focused element from the ItemNavigation\n\t\tvar aNavigationDomRefs = this._oItemNavigation.getItemDomRefs();\n\t\tvar iLastFocusedIndex = this._oItemNavigation.getFocusedIndex();\n\t\tvar $LastFocused = jQuery(aNavigationDomRefs[iLastFocusedIndex]);\n\n\t\t// find related item control to get tabbables\n\t\tvar oRelatedControl = $LastFocused.control(0) || {};\n\t\tvar $Tabbables = oRelatedControl.getTabbables ? oRelatedControl.getTabbables() : $LastFocused.find(\":sapTabbable\");\n\n\t\t// get the last tabbable item or itself and focus\n\t\tvar $FocusElement = $Tabbables.eq(-1).add($LastFocused).eq(-1);\n\t\tthis.bAnnounceDetails = true;\n\t\t$FocusElement.focus();\n\t};\n\n\t// Handles focus to reposition the focus to correct place\n\tListBase.prototype.onfocusin = function(oEvent) {\n\n\t\t// ignore self focus\n\t\tif (this._bIgnoreFocusIn) {\n\t\t\tthis._bIgnoreFocusIn = false;\n\t\t\toEvent.stopImmediatePropagation(true);\n\t\t\treturn;\n\t\t}\n\n\t\t// check whether item navigation should be reapplied from scratch\n\t\tif (this._bItemNavigationInvalidated) {\n\t\t\tthis._startItemNavigation();\n\t\t}\n\n\t\tvar oTarget = oEvent.target;\n\t\tif (oTarget.id == this.getId(\"nodata\")) {\n\t\t\tthis.updateInvisibleText(this.getNoDataText(), oTarget);\n\t\t}\n\n\t\t// handle only for backward navigation\n\t\tif (oEvent.isMarked() || !this._oItemNavigation ||\n\t\t\tthis.getKeyboardMode() == ListKeyboardMode.Edit ||\n\t\t\toTarget.id != this.getId(\"after\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.focusPrevious();\n\t\toEvent.setMarked();\n\t};\n\n\tListBase.prototype.onsapfocusleave = function(oEvent) {\n\t\tif (this._oItemNavigation &&\n\t\t\t!this.bAnnounceDetails &&\n\t\t\t!this.getNavigationRoot().contains(jQuery.sap.domById(oEvent.relatedControlId))) {\n\t\t\tthis.bAnnounceDetails = true;\n\t\t}\n\t};\n\n\t// this gets called when items up arrow key is pressed for the edit keyboard mode\n\tListBase.prototype.onItemArrowUpDown = function(oListItem, oEvent) {\n\t\tvar aItems = this.getItems(true),\n\t\t\tiIndex = aItems.indexOf(oListItem) + (oEvent.type == \"sapup\" ? -1 : 1),\n\t\t\toItem = aItems[iIndex];\n\n\t\tif (oItem && oItem.isGroupHeader()) {\n\t\t\toItem = aItems[iIndex + (oEvent.type == \"sapup\" ? -1 : 1)];\n\t\t}\n\n\t\tif (!oItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $Tabbables = oItem.getTabbables(),\n\t\t\tiFocusPos = oListItem.getTabbables().index(oEvent.target),\n\t\t\t$Element = $Tabbables.eq($Tabbables[iFocusPos] ? iFocusPos : -1);\n\n\t\t$Element[0] ? $Element.focus() : oItem.focus();\n\t\toEvent.preventDefault();\n\t\toEvent.setMarked();\n\t};\n\n\tListBase.prototype.getAggregationDomRef = function(sAggregationName) {\n\t\tif (sAggregationName == \"items\") {\n\t\t\treturn this.getItemsContainerDomRef();\n\t\t}\n\t};\n\n\t// return true if grouping is enabled on the binding, else false\n\tListBase.prototype.isGrouped = function() {\n\t\tvar oBinding = this.getBinding(\"items\");\n\t\treturn oBinding && oBinding.isGrouped();\n\t};\n\n\treturn ListBase;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.ListBaseRenderer\", require(\"sap/m/ListBaseRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ListBase.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides helper class ValueStateSupport\nsap.ui.define(['jquery.sap.global', './Element', './library'],\n\tfunction(jQuery, Element, library) {\n\t\"use strict\";\n\n\t// shortcut for enum(s)\n\tvar ValueState = library.ValueState;\n\n\t\t/**\n\t\t * Helper functionality for value state support.\n\t\t *\n\t\t * @author SAP SE\n\t\t * @version 1.52.3\n\t\t * @public\n\t\t * @namespace sap.ui.core.ValueStateSupport\n\t\t */\n\t\tvar ValueStateSupport = {};\n\t\tvar mTexts = null;\n\n\n\t\tvar ensureTexts = function() {\n\t\t\tif (!mTexts) { // initialize texts if required\n\t\t\t\tmTexts = {};\n\t\t\t\tvar rb = sap.ui.getCore().getLibraryResourceBundle(\"sap.ui.core\");\n\t\t\t\tmTexts[ValueState.Error] = rb.getText(\"VALUE_STATE_ERROR\");\n\t\t\t\tmTexts[ValueState.Warning] = rb.getText(\"VALUE_STATE_WARNING\");\n\t\t\t\tmTexts[ValueState.Success] = rb.getText(\"VALUE_STATE_SUCCESS\");\n\t\t\t}\n\t\t};\n\n\n\t\t/**\n\t\t * Appends a generic success, warning or error message to the given tooltip text if the given Element\n\t\t * has a property \"valueState\" with one of these three states.\n\t\t *\n\t\t * @param {sap.ui.core.Element} oElement the Element of which the tooltip needs to be modified\n\t\t * @param {string} sTooltipText the original tooltip text (may be null)\n\t\t * @returns {string} the given text, with appended success/warning/error text, if appropriate\n\t\t *\n\t\t * @public\n\t\t * @name sap.ui.core.ValueStateSupport.enrichTooltip\n\t\t * @function\n\t\t */\n\t\tValueStateSupport.enrichTooltip = function(oElement, sTooltipText) {\n\t\t\tjQuery.sap.assert(oElement instanceof Element, \"oElement must be an Element\");\n\n\t\t\tif (!sTooltipText && oElement.getTooltip()) {\n\t\t\t\treturn undefined; // this means there is no tooltip text configured, but a tooltip object like a RichTooltip\n\t\t\t}\n\n\t\t\tvar sText = ValueStateSupport.getAdditionalText(oElement);\n\t\t\tif (sText) {\n\t\t\t\treturn (sTooltipText ? sTooltipText + \" - \" : \"\") + sText;\n\t\t\t}\n\n\t\t\treturn sTooltipText; // when there is no value state\n\t\t};\n\n\n\t\t/**\n\t\t * Returns a generic success, warning or error message if the given Element\n\t\t * has a property \"valueState\" with one of these three states or the given ValueState\n\t\t * represents one of these states.\n\t\t *\n\t\t * @param {sap.ui.core.Element|sap.ui.core.ValueState} vValue the Element of which the valueState needs to be checked, or the ValueState explicitly\n\t\t * @returns {string} the success/warning/error text, if appropriate; otherwise null\n\t\t *\n\t\t * @public\n\t\t * @name sap.ui.core.ValueStateSupport.getAdditionalText\n\t\t * @function\n\t\t */\n\t\tValueStateSupport.getAdditionalText = function(vValue) {\n\t\t\tvar sState = null;\n\n\t\t\tif (vValue && vValue.getValueState) {\n\t\t\t\tsState = vValue.getValueState();\n\t\t\t} else if (ValueState[vValue]) {\n\t\t\t\tsState = vValue;\n\t\t\t}\n\n\t\t\tif (sState && (sState != ValueState.None)) { // only for one of the three interesting state, not for the default\n\t\t\t\tensureTexts();\n\t\t\t\treturn mTexts[sState];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * Returns a ValueState object based on the given integer value\n\t\t *\n\t\t *  0 : ValueState.None\n\t\t *  1 : ValueState.Warning\n\t\t *  2 : ValueState.Success\n\t\t *  3 : ValueState.Error\n\t\t *\n\t\t * @param {int} iState the state as an integer\n\t\t * @return {sap.ui.core.ValueState} the corresponding ValueState object\n\t\t * @static\n\t\t * @public\n\t\t * @name sap.ui.core.ValueStateSupport.formatValueState\n\t\t * @function\n\t\t * @since 1.25.0\n\t\t */\n\t\tValueStateSupport.formatValueState = function(iState) {\n\t\t\tswitch (iState) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn ValueState.Warning;\n\t\t\t\tcase 2:\n\t\t\t\t\treturn ValueState.Success;\n\t\t\t\tcase 3:\n\t\t\t\t\treturn ValueState.Error;\n\t\t\t\tdefault:\n\t\t\t\t\treturn ValueState.None;\n\t\t\t}\n\t\t};\n\n\n\treturn ValueStateSupport;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.ui.core/resources/sap/ui/core/ValueStateSupport.js","module.exports = \"#This is the resource bundle for the sap.ui.core library\\n#\\n\\n#NOTR\\nSAPUI5_FRIDAY=Friday\\n#NOTR\\nSAPUI5_GM_ZSTEP=Zoom step {0}\\n\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have an error\\nVALUE_STATE_ERROR=Invalid entry\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have a warning\\nVALUE_STATE_WARNING=Warning issued\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to be in success state\\nVALUE_STATE_SUCCESS=Entry successfully validated\\n\\n#XTOL: text that could be show if BusyIndicator is active\\nBUSY_TEXT=Please wait\\n\\n#########\\n# Texts for sap.ui.core.format.DateFormat\\n#########\\n\\n#XTXT: the long pattern for formatting a date using calendar week number\\ndate.week.calendarweek.wide=Calendar Week {0}\\n#XTXT: the short pattern for formatting a date using calendar week number\\ndate.week.calendarweek.narrow=CW {0}\\n\\n#########\\n# Texts for sap.ui.core.format.FileSizeFormat\\n#########\\n\\n#YMSG,20: File Size Unit one Byte\\nFileSize.Byte={0} Byte\\n#YMSG,20: File Size Unit Bytes\\nFileSize.Bytes={0} Bytes\\n\\n#YMSG,20: File Size Unit Kilobyte (short)\\nFileSize.Kilobyte={0} KB\\n#YMSG,20: File Size Unit Megabyte (short)\\nFileSize.Megabyte={0} MB\\n#YMSG,20: File Size Unit Gigabyte (short)\\nFileSize.Gigabyte={0} GB\\n#YMSG,20: File Size Unit Terabyte (short)\\nFileSize.Terabyte={0} TB\\n#YMSG,20: File Size Unit Petabyte (short)\\nFileSize.Petabyte={0} PB\\n#YMSG,20: File Size Unit Exabyte (short)\\nFileSize.Exabyte={0} EB\\n#YMSG,20: File Size Unit Zettabyte (short)\\nFileSize.Zettabyte={0} ZB\\n#YMSG,20: File Size Unit Yottabyte (short)\\nFileSize.Yottabyte={0} YB\\n\\n#YMSG,20: File Size Unit Kibibyte (short)\\nFileSize.Kibibyte={0} KiB\\n#YMSG,20: File Size Unit Mebibyte (short)\\nFileSize.Mebibyte={0} MiB\\n#YMSG,20: File Size Unit Gibibyte (short)\\nFileSize.Gibibyte={0} GiB\\n#YMSG,20: File Size Unit Tebibyte (short)\\nFileSize.Tebibyte={0} TiB\\n#YMSG,20: File Size Unit Pebibyte (short)\\nFileSize.Pebibyte={0} PiB\\n#YMSG,20: File Size Unit Exbibyte (short)\\nFileSize.Exbibyte={0} EiB\\n#YMSG,20: File Size Unit Zebibyte (short)\\nFileSize.Zebibyte={0} ZiB\\n#YMSG,20: File Size Unit Yobibyte (short)\\nFileSize.Yobibyte={0} YiB\\n\\n#########\\n# Texts for sap.ui.model.odata.AnnotationHelper\\n#########\\n\\n#XTOL: mathematical term for a number greater than anything else\\nINFINITY=Infinity\\n#XTOL: mathematical term for a number smaller than anything else\\nMINUS_INFINITY=Minus infinity\\n#XTOL\\nNAN=Not a number\\n\\n#########\\n# Texts for sap.ui.model.odata.type.*\\n#########\\n\\n#XTOL: No\\nNO=No\\n#XTOL: Yes\\nYES=Yes\\n#YMSG: Enter \\\"{0}\\\" or \\\"{1}\\\"\\nEnterYesOrNo=Enter \\\"{0}\\\" or \\\"{1}\\\".\\n#YMSG: Enter only digits\\nEnterDigitsOnly=Enter only digits\\n#YMSG: Enter a maximum of {0} digits\\nEnterMaximumOfDigits=Enter a maximum of {0} digits.\\n#YMSG: Enter a number\\nEnterNumber=Enter a number\\n#YMSG: Enter a number with a maximum of {0} digits, including any decimal places\\nEnterNumberPrecision=Enter a number with a maximum of {0} digits, including any decimal places\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator\\nEnterNumberInteger=Enter a number with a maximum of {0} digits to the left of the decimal separator\\n#YMSG: Enter a number with a maximum of {0} decimal places\\nEnterNumberFraction=Enter a number with a maximum of {0} decimal places\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\nEnterNumberIntegerFraction=Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\n#YMSG: Enter a number with a minimum value of {0}\\nEnterNumberMin=Enter a number with a minimum value of {0}\\n#YMSG: Enter a number greater than {0}\\nEnterNumberMinExclusive=Enter a number greater than {0}\\n#YMSG: Enter a number with a maximum value of {0}\\nEnterNumberMax=Enter a number with a maximum value of {0}\\n#YMSG: Enter a number less than {0}\\nEnterNumberMaxExclusive=Enter a number less than {0}\\n#YMSG: Enter a text\\nEnterText=Enter a text\\n#YMSG: Enter a text with a maximum of {0} characters and spaces\\nEnterTextMaxLength=Enter a text with a maximum of {0} characters and spaces\\n#YMSG: Enter a number with no decimal places\\nEnterInt=Enter a number with no decimal places\\n#YMSG: Enter a valid date and a valid time in the following format\\\\: {0}\\nEnterDateTime=Enter a valid date and a valid time in the following format\\\\: {0}\\n#YMSG: Enter a valid date in the following format\\\\: {0}\\nEnterDate=Enter a valid date in the following format\\\\: {0}\\n#YMSG: Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\nEnterGuid=Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\n#YMSG: Enter a valid time in the following format\\\\: {0}\\nEnterTime=Enter a valid time in the following format\\\\: {0}\\n\\n#########\\n# Texts for sap.ui.model.type.*\\n#########\\n\\n#YMSG,100: Enter a valid boolean\\nBoolean.Invalid=Enter a valid Boolean value\\n\\n#YMSG,100: Enter a valid number\\nInteger.Invalid=Enter a valid number\\n#YMSG,100: Enter a number greater than or equal to {0}\\nInteger.Minimum=Enter a number greater than or equal to {0}\\n#YMSG,100: Enter a number lower than or equal to {0}\\nInteger.Maximum=Enter a number less than or equal to {0}\\n\\n#YMSG,100: Enter a valid number.\\nFloat.Invalid=Enter a valid number\\n#YMSG,100: Enter a number greater than or equal to {0}\\nFloat.Minimum=Enter a number greater than or equal to {0}\\n#YMSG,100: Enter a number lower than or equal to {0}\\nFloat.Maximum=Enter a number less than or equal to {0}\\n\\n#YMSG,100: Enter a valid currency amount\\nCurrency.Invalid=Enter a valid currency amount\\n#YMSG,100: Enter an amount greater than or equal to {0}\\nCurrency.Minimum=Enter an amount greater than or equal to {0}\\n#YMSG,100: Enter an amount lower than or equal to {0}\\nCurrency.Maximum=Enter an amount less than or equal to {0}\\n\\n#YMSG,100: Enter a valid file size\\nFileSize.Invalid=Enter a valid file size\\n#YMSG,100: EEnter a file size greater than or equal to {0}\\nFileSize.Minimum=Enter a file size greater than or equal to {0}\\n#YMSG,100: Enter a file size lower than or equal to {0}\\nFileSize.Maximum=Enter a file size lower than or equal to {0}\\n\\n#YMSG,100: Enter a valid date\\nDate.Invalid=Enter a date\\n#YMSG,100: Enter a date after {0}\\nDate.Minimum=Enter a date after {0}\\n#YMSG,100: Enter a date before {0}\\nDate.Maximum=Enter a date before {0}\\n\\n#YMSG,100: Enter a valid time\\nTime.Invalid=Enter a valid time\\n#YMSG,100: Enter a time after {0}\\nTime.Minimum=Enter a time after {0}\\n#YMSG,100: Enter a time before {0}\\nTime.Maximum=Enter a time before {0}\\n\\n#YMSG,100: Enter a valid date and time\\nDateTime.Invalid=Enter a valid date and time\\n#YMSG,100: Enter a date and time after {0}\\nDateTime.Minimum=Enter a date and time after {0}\\n#YMSG,100: Enter a date and time before {0}\\nDateTime.Maximum=Enter a date and time before {0}\\n\\n#YMSG,100: Enter a valid date interval\\nDateInterval.Invalid=Enter a valid date interval\\n\\n#YMSG,100: Enter a value with at least {0} characters\\nString.MinLength=Enter a value with at least {0} characters\\n#YMSG,100: Enter a value with no more than {0} characters\\nString.MaxLength=Enter a value with no more than {0} characters\\n#YMSG,100: Enter a value starting with \\\"{0}\\\"\\nString.StartsWith=Enter a value starting with \\\"{0}\\\"\\n#YMSG,100: Enter a value ending with \\\"{0}\\\"\\nString.EndsWith=Enter a value ending with \\\"{0}\\\"\\n#YMSG,100: Enter a value containing \\\"{0}\\\"\\nString.Contains=Enter a value containing \\\"{0}\\\"\\n#YMSG,100: Enter value \\\"{0}\\\"\\nString.Equals=Enter value \\\"{0}\\\"\\n#YMSG,100: Enter a value matching \\\"{0}\\\"\\nString.Search=Enter a value matching \\\"{0}\\\"\\n\\n#XACT: ARIA announcement for the MessageStrip's \\\"Error\\\" state\\nMESSAGE_STRIP_ERROR=Message Strip Error\\n#XACT: ARIA announcement for the MessageStrip's \\\"Warning\\\" state\\nMESSAGE_STRIP_WARNING=Message Strip Warning\\n#XACT: ARIA announcement for the MessageStrip's \\\"Success\\\" state\\nMESSAGE_STRIP_SUCCESS=Message Strip Success\\n#XACT: ARIA announcement for the MessageStrip's \\\"Information\\\" state\\nMESSAGE_STRIP_INFORMATION=Message Strip Information\\n#XACT: ARIA announcement for the MessageStrip's closable state\\nMESSAGE_STRIP_CLOSABLE=Closable\\n\\n#XACT: type of an UI control is an image\\nACC_CTR_TYPE_IMAGE=Image\\n#XACT: type of an UI control is a button\\nACC_CTR_TYPE_BUTTON=Button\\n\\n#XFLD: Close\\nCLOSE=Close\\n\\n#########\\n# Texts for sap-icon Font\\n#\\n# Update \\\"sap.ui.core.IconPool\\\" (mIconI18nKey)\\n# when adding a new key here\\n#########\\n\\n#XTXT\\nIcon.action-settings=Settings\\n#XTXT\\nIcon.activate=Activate\\n#XTXT\\nIcon.add=Add\\n#XTXT\\nIcon.add-contact=Add Contact\\n#XTXT\\nIcon.add-filter=Add Filter\\n#XTXT\\nIcon.add-photo=Add Photo\\n#XTXT\\nIcon.back-to-top=Back to Top\\n#XTXT\\nIcon.collapse=Collapse\\n#XTXT\\nIcon.collapse-group=Collapse Group\\n#XTXT: Crop parts of an image\\nIcon.crop=Crop\\n#XTXT: To decline an offer\\nIcon.decline=Decline\\n#XTXT\\nIcon.delete=Delete\\n#XTXT\\nIcon.display=Display\\n#XTXT\\nIcon.down=Down\\n#XTXT\\nIcon.download=Download\\n#XTXT\\nIcon.drill-down=Drill Down\\n#XTXT\\nIcon.drill-up=Drill Up\\n#XTXT\\nIcon.error=Error\\n#XTXT\\nIcon.exit-full-screen=Exit Full Screen\\n#XTXT\\nIcon.expand=Expand\\n#XTXT\\nIcon.expand-group=Expand Group\\n#XTXT: Action to filter on a group of elements\\nIcon.filter=Filter\\n#XTXT: To flag or mark an item\\nIcon.flag=Flag\\n#XTXT: To forward an item to a recipients\\nIcon.forward=Forward\\n#XTXT\\nIcon.full-screen=Enter Full Screen\\n#XTXT\\nIcon.generate-shortcut=Create Shortcut\\n#XTXT: To group items\\nIcon.group-2=Group\\n#XTXT: To hide an element from display\\nIcon.hide=Hide\\n#XTXT\\nIcon.ipad=Tablet\\n#XTXT\\nIcon.ipad-2=Tablet\\n#XTXT\\nIcon.iphone=Phone\\n#XTXT\\nIcon.iphone-2=Phone\\n#XTXT\\nIcon.laptop=Laptop\\n#XTXT\\nIcon.message-error=Error\\n#XTXT\\nIcon.message-information=Information\\n#XTXT\\nIcon.message-success=Successful\\n#XTXT\\nIcon.message-warning=Warning\\n#XTXT: To manipulate the position of an element\\nIcon.move=Move\\n#XTXT\\nIcon.multi-select=Multi Select\\n#XTXT\\nIcon.nav-back=Navigate Back\\n#XTXT\\nIcon.overflow=More\\n#XTXT\\nIcon.redo=Redo\\n#XTXT\\nIcon.refresh=Refresh\\n#XTXT\\nIcon.resize=Resize\\n#XTXT\\nIcon.resize-horizontal=Resize Horizontally\\n#XTXT\\nIcon.resize-vertical=Resize Vertically\\n#XTXT\\nIcon.response=Reply\\n#XTXT\\nIcon.save=Save\\n#XTXT\\nIcon.search=Search\\n#XTXT\\nIcon.settings=Settings\\n#XTXT: To show an element previously hidden\\nIcon.show=Show\\n#XTXT\\nIcon.sort=Sort\\n#XTXT\\nIcon.sort-ascending=Sort Ascending\\n#XTXT\\nIcon.sort-descending=Sort Descending\\n#XTXT\\nIcon.synchronize=Synchronize\\n#XTXT\\nIcon.undo=Undo\\n#XTXT\\nIcon.up=Up\\n#XTXT\\nIcon.upload=Upload\\n#XTXT\\nIcon.zoom-in=Zoom In\\n#XTXT\\nIcon.zoom-out=Zoom Out\\n\\n#########\\n# Texts for sap.ui.debug.TechnicalInfo\\n#########\\n\\n#XTIT: Title for the technical information dialog\\nTechInfo.DialogTitle=Technical Information Dialog\\n\\n#XTOL: Tooltip for info button in header\\nTechInfo.HelpButton.Tooltip=Open documentation\\n\\n#XTOL: Tooltip for version information link\\nTechInfo.VersionLink.Tooltip=Open version information in a new tab\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.CopyButton.Tooltip=Copy technical information to clipboard\\n\\n#XBUT: SAPUI5 Diagnostics button text\\nTechnInfo.DiagnosticsButton.Text=Open Diagnostics\\n\\n#XBUT: Support assistant button text\\nTechnInfo.AssistantButton.Text=Activate Support Assistant\\n\\n#XFLD: User agent field label\\nTechInfo.UserAgent.Label=User Agent\\n\\n#XFLD: Application URL label\\nTechInfo.AppUrl.Label=App URL\\n\\n#XFLD: Debug sources label\\nTechInfo.DebugSources.Label=Use Debug Sources\\n\\n#XTOL: Debug sources tooltip\\nTechInfo.DebugSources.Tooltip=Reloads the current page with unminified sources for debugging\\n\\n#XLNK: Debug sources select packages link\\nTechInfo.DebugSourcesModules.Link=Select specific modules\\n\\n#XFLD: Text for the version build time string\\nTechInfo.VersionBuildTime.Text=(built at {0})\\n\\n#YMSG: success message for copying to clipboard\\nTechInfo.CopyToClipboard.Success=Technical information copied to clipboard\\n\\n#YMSG: error message for copying to clipboard\\nTechInfo.CopyToClipboard.Error=Technical information could not be copied to clipboard\\n\\n#XTIT: Confirmation title for enabling/disabling debug sources\\nTechInfo.DebugSources.ConfirmTitle=Reload App\\n\\n#YMSG: Confirmation message for enabling/disabling debug sources\\nTechInfo.DebugSources.ConfirmMessage=Reload the app to enable or disable the debug sources\\n\\n#XTIT: Title for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.Title=Support Assistant Settings\\n\\n#XFLD: Standard bootstrap locations option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.StandardLocation=Recommended Locations\\n\\n#XFLD: Custom bootstrap location option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.CustomLocation=Custom Location\\n\\n#XFLD: Application version bootstrap location option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.AppVersionOption=Application Version ({0})\\n\\n#YMSG: Custom bootstrap location validation error message\\nTechInfo.SupportAssistantConfigPopup.URLValidationMessage=The syntax of the location address is incorrect. The correct syntax is http\\\\://<Valid custom URI>/resources/sap/ui/support.\\n\\n#YMSG: Error message when support Assistant is not found\\nTechInfo.SupportAssistantConfigPopup.SupportAssistantNotFound=Support Assistant is not available in this location\\\\:\\n\\n#YMSG: Error message when protocols did not match\\nTechInfo.SupportAssistantConfigPopup.ProtocolError=App protocol does not match the Support Assistant protocol (HTTP/HTTPS)\\n\\n#YMSG: Error message when Ajax return code is different than [200]\\nTechInfo.SupportAssistantConfigPopup.ErrorTryingToGetRecourse=Ajax return code is different than [200]\\n\\n#YMSG: Error message when file not Found [404]\\nTechInfo.SupportAssistantConfigPopup.ErrorNotFound=File not found (404)\\n\\n#YMSG: Error message when internal server error occurs\\nTechInfo.SupportAssistantConfigPopup.InternalServerError=Internal server error\\\\: {500}\\n\\n#YMSG: Error message when request timeout.\\nTechInfo.SupportAssistantConfigPopup.ErrorOnTimeout=Timeout error\\n\\n#YMSG: Error message when trying to parse JSON\\nTechInfo.SupportAssistantConfigPopup.ErrorOnJsonParse=Requested JSON parse failed\\n\\n#YMSG: Error message when uncaught Error occurs\\nTechInfo.SupportAssistantConfigPopup.UncaughtError=Uncaught error\\n\\n#YMSG: Error message when request is aborted\\nTechInfo.SupportAssistantConfigPopup.ErrorWhenAborted=Ajax request aborted\\n\\n#YMSG: Error message when default locations are not available\\nTechInfo.SupportAssistantConfigPopup.NotAvailableAtTheMoment=This location is not available at the moment.\\n\\n#XFLD: Title for enabling Support Assistant to open in new window.\\nTechInfo.SupportAssistantConfigPopup.OpenInNewWindow=Open Support Assistant in New Window\\n\\n#XFLD: Title for location section in support Assistant settings popover\\nTechInfo.SupportAssistantConfigPopup.Locations=Resource Location\\n\\n#XFLD: Title for options section in support Assistant settings popover\\nTechInfo.SupportAssistantConfigPopup.Options=Options\\n\\n#XTIT: Title for the debug modules configuration selection\\nTechInfo.DebugModulesConfigPopup.SelectionCounter=Select Debug Modules ({0} Selected)\\n\\n#YMSG: sap-ui-debug mode custom value validation error message\\nTechInfo.DebugModulesConfigPopup.ModeValidationMessage=Value for parameter sap-ui-debug is invalid\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.DebugModulesCopy.Tooltip=Copy the sap-ui-debug value to clipboard\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.DebugModulesReset.Tooltip=Reset the currently selected modules\\n\\n#YMSG: success message for copying to clipboard\\nTechInfo.DebugModulesCopyToClipboard.Success=Custom sap-ui-debug value copied to clipboard\\n\\n#YMSG: error message for copying to clipboard\\nTechInfo.DebugModulesCopyToClipboard.Error=Custom sap-ui-debug value could not be copied to clipboard\\n\\n#XTIT: Title for the debug modules configuration popup confirmation button\\nTechInfo.DebugModulesConfigPopup.Confirm=Apply\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/openui5-sap.ui.core/resources/sap/ui/core/messagebundle_en.properties\n// module id = DYFy\n// module chunks = 1","require(\"sap/m/themes/sap_belize/ListItemBase.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.ListItemBase.\nsap.ui.define(['jquery.sap.global', './library', 'sap/ui/core/Control', 'sap/ui/core/IconPool', 'sap/ui/core/Icon', 'sap/m/Button', 'sap/ui/model/BindingMode', 'sap/ui/Device', 'jquery.sap.keycodes'],\n\tfunction(jQuery, library, Control, IconPool, Icon, Button, BindingMode, Device) {\n\t\"use strict\";\n\n\n\n\t// shortcut for sap.m.ListKeyboardMode\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\t// shortcut for sap.m.ListMode\n\tvar ListMode = library.ListMode;\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\n\n\t// shortcut for sap.m.ButtonType\n\tvar ButtonType = library.ButtonType;\n\n\n\t/**\n\t * Constructor for a new ListItemBase.\n\t *\n\t * @param {string} [sId] Id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * ListItemBase contains the base features of all specific list items.\n\t * @extends sap.ui.core.Control\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.ListItemBase\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar ListItemBase = Control.extend(\"sap.m.ListItemBase\", /** @lends sap.m.ListItemBase.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Defines the visual indication and behavior of the list items, e.g. <code>Active</code>, <code>Navigation</code>, <code>Detail</code>.\n\t\t\t */\n\t\t\ttype : {type : \"sap.m.ListType\", group : \"Misc\", defaultValue : ListType.Inactive},\n\n\t\t\t/**\n\t\t\t * Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control.\n\t\t\t */\n\t\t\tvisible : {type : \"boolean\", group : \"Appearance\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Activates the unread indicator for the list item, if set to <code>true</code>.\n\t\t\t * <b>Note:</b> This flag is ignored when the <code>showUnread</code> property of the parent is set to <code>false</code>.\n\t\t\t */\n\t\t\tunread : {type : \"boolean\", group : \"Misc\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Defines the selected state of the list items.\n\t\t\t * <b>Note:</b> Binding the <code>selected</code> property in single selection modes may cause unwanted results if you have more than one selected items in your binding.\n\t\t\t */\n\t\t\tselected : {type : \"boolean\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Defines the counter value of the list items.\n\t\t\t */\n\t\t\tcounter : {type : \"int\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the highlight state of the list items.\n\t\t\t * @since 1.44.0\n\t\t\t */\n\t\t\thighlight : {type : \"sap.ui.core.MessageType\", group : \"Appearance\", defaultValue : \"None\"}\n\t\t},\n\t\tassociations: {\n\n\t\t\t/**\n\t\t\t * Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).\n\t\t\t * @since 1.28.0\n\t\t\t */\n\t\t\tariaLabelledBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaLabelledBy\" }\n\t\t},\n\t\tevents : {\n\n\t\t\t/**\n\t\t\t * Fires when the user taps on the control.\n\t\t\t * @deprecated Since version 1.20.0. Instead, use <code>press</code> event.\n\t\t\t */\n\t\t\ttap : {deprecated: true},\n\n\t\t\t/**\n\t\t\t * Fires when the user taps on the detail button of the control.\n\t\t\t * @deprecated Since version 1.20.0. Instead, use <code>detailPress</code> event.\n\t\t\t */\n\t\t\tdetailTap : {deprecated: true},\n\n\t\t\t/**\n\t\t\t * Fires when the user clicks on the control.\n\t\t\t * <b>Note:</b> This event is not fired when the parent <code>mode</code> is <code>SingleSelectMaster</code> or when the <code>includeItemInSelection</code> property is set to <code>true</code>.\n\t\t\t * If there is an interactive element that handles its own <code>press</code> event then the list item's <code>press</code> event is not fired.\n\t\t\t * Also see {@link sap.m.ListBase#attachItemPress}.\n\t\t\t */\n\t\t\tpress : {},\n\n\t\t\t/**\n\t\t\t * Fires when the user clicks on the detail button of the control.\n\t\t\t */\n\t\t\tdetailPress : {}\n\t\t},\n\t\tdesignTime : true\n\t}});\n\n\tListItemBase.getAccessibilityText = function(oControl, bDetectEmpty) {\n\t\tif (!oControl || !oControl.getVisible || !oControl.getVisible()) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tvar oAccInfo;\n\t\tif (oControl.getAccessibilityInfo) {\n\t\t\toAccInfo = oControl.getAccessibilityInfo();\n\t\t}\n\t\tif (!oAccInfo || !oControl.getAccessibilityInfo) {\n\t\t\toAccInfo = this.getDefaultAccessibilityInfo(oControl.getDomRef());\n\t\t}\n\n\t\toAccInfo = jQuery.extend({\n\t\t\ttype: \"\",\n\t\t\tdescription: \"\",\n\t\t\tchildren: []\n\t\t}, oAccInfo);\n\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\"),\n\t\t\tsText = oAccInfo.type + \" \" + oAccInfo.description + \" \",\n\t\t\tsTooltip = oControl.getTooltip_AsString();\n\n\t\tif (oAccInfo.enabled === false) {\n\t\t\tsText += oBundle.getText(\"CONTROL_DISABLED\") + \" \";\n\t\t}\n\t\tif (oAccInfo.editable === false) {\n\t\t\tsText += oBundle.getText(\"CONTROL_READONLY\") + \" \";\n\t\t}\n\t\tif (!oAccInfo.type && sTooltip && sText.indexOf(sTooltip) == -1) {\n\t\t\tsText = sTooltip + \" \" + sText;\n\t\t}\n\n\t\toAccInfo.children.forEach(function(oChild) {\n\t\t\tsText += ListItemBase.getAccessibilityText(oChild) + \" \";\n\t\t});\n\n\t\tsText = sText.trim();\n\t\tif (bDetectEmpty && !sText) {\n\t\t\tsText = oBundle.getText(\"CONTROL_EMPTY\");\n\t\t}\n\n\t\treturn sText;\n\t};\n\n\tListItemBase.getDefaultAccessibilityInfo = function(oDomRef) {\n\t\tif (!oDomRef) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar Node = window.Node,\n\t\t\tNodeFilter = window.NodeFilter,\n\t\t\toTreeWalker = document.createTreeWalker(oDomRef, NodeFilter.SHOW_TEXT + NodeFilter.SHOW_ELEMENT, function(oNode) {\n\t\t\t\tif (oNode.type === Node.ELEMENT_NODE) {\n\t\t\t\t\tif (oNode.classList.contains(\"sapUiInvisibleText\")) {\n\t\t\t\t\t\treturn NodeFilter.FILTER_SKIP;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (oNode.getAttribute(\"aria-hidden\") == \"true\" ||\n\t\t\t\t\t\toNode.style.visibility == \"hidden\" ||\n\t\t\t\t\t\toNode.style.display == \"none\") {\n\t\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn NodeFilter.FILTER_SKIP;\n\t\t\t\t}\n\n\t\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t\t}, false);\n\n\t\tvar aText = [];\n\t\twhile (oTreeWalker.nextNode()) {\n\t\t\tvar oNode = oTreeWalker.currentNode;\n\t\t\tif (oNode.nodeType === Node.TEXT_NODE) {\n\t\t\t\tvar sText = (oNode.nodeValue || \"\").trim();\n\t\t\t\tif (sText) {\n\t\t\t\t\taText.push(sText);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdescription: aText.join(\" \")\n\t\t};\n\t};\n\n\t// icon URI configuration\n\tListItemBase.prototype.DetailIconURI = IconPool.getIconURI(\"edit\");\n\tListItemBase.prototype.DeleteIconURI = IconPool.getIconURI(\"sys-cancel\");\n\tListItemBase.prototype.NavigationIconURI = IconPool.getIconURI(\"slim-arrow-right\");\n\n\t// defines the root tag name for rendering purposes\n\tListItemBase.prototype.TagName = \"li\";\n\n\t// internal active state of the listitem\n\tListItemBase.prototype.init = function() {\n\t\tthis._active = false;\n\t\tthis._bGroupHeader = false;\n\t\tthis._bNeedsHighlight = false;\n\t};\n\n\tListItemBase.prototype.onAfterRendering = function() {\n\t\tthis.informList(\"DOMUpdate\", true);\n\t\tthis._checkHighlight();\n\t};\n\n\t/*\n\t * Returns the binding context path via checking the named model of parent\n\t *\n\t * @protected\n\t * @since 1.16.3\n\t */\n\tListItemBase.prototype.getBindingContextPath = function(sModelName) {\n\t\tvar oList = this.getList();\n\t\tif (oList && !sModelName) {\n\t\t\tsModelName = (oList.getBindingInfo(\"items\") || {}).model;\n\t\t}\n\n\t\tvar oContext = this.getBindingContext(sModelName);\n\t\tif (oContext) {\n\t\t\treturn oContext.getPath();\n\t\t}\n\t};\n\n\t/*\n\t * Returns whether selected property is two-way bound or not\n\t * @protected\n\t */\n\tListItemBase.prototype.isSelectedBoundTwoWay = function() {\n\t\tvar oBinding = this.getBinding(\"selected\");\n\t\tif (oBinding && oBinding.getBindingMode() == BindingMode.TwoWay) {\n\t\t\treturn true;\n\t\t}\n\t};\n\n\t/*\n\t * Returns the responsible list control\n\t *\n\t * @returns {sap.m.ListBase|undefined}\n\t * @protected\n\t */\n\tListItemBase.prototype.getList = function() {\n\t\tvar oParent = this.getParent();\n\t\tif (oParent instanceof sap.m.ListBase) {\n\t\t\treturn oParent;\n\t\t}\n\t};\n\n\t/*\n\t * Returns the property of the responsible list container according to given parameter.\n\t *\n\t * @param {string} sProperty property name\n\t * @param {*} [vFallbackValue] fallback value when list is not found\n\t * @return {*}\n\t * @protected\n\t */\n\tListItemBase.prototype.getListProperty = function(sProperty, vFallbackValue) {\n\t\tvar oList = this.getList();\n\t\tif (oList) {\n\t\t\tsProperty = jQuery.sap.charToUpperCase(sProperty);\n\t\t\treturn oList[\"get\" + sProperty]();\n\t\t}\n\n\t\treturn vFallbackValue;\n\t};\n\n\t/*\n\t * Informs the responsible list for item events\n\t *\n\t * @param {string} sEvent the name of the event\n\t * @param {*} [vParam1] first additional parameter\n\t * @param {*} [vParam2] second additional parameter\n\t * @protected\n\t */\n\tListItemBase.prototype.informList = function(sEvent, vParam1, vParam2) {\n\t\tvar oList = this.getList();\n\t\tif (oList) {\n\t\t\tvar sMethod = \"onItem\" + sEvent;\n\t\t\tif (oList[sMethod]) {\n\t\t\t\toList[sMethod](this, vParam1, vParam2);\n\t\t\t}\n\t\t}\n\t};\n\n\tListItemBase.prototype.informSelectedChange = function(bSelected) {\n\t\tvar oList = this.getList();\n\t\tif (oList) {\n\t\t\toList.onItemSelectedChange(this, bSelected);\n\t\t\tthis.bSelectedDelayed = undefined;\n\t\t} else {\n\t\t\tthis.bSelectedDelayed = bSelected;\n\t\t}\n\t};\n\n\tListItemBase.prototype.getAccessibilityType = function(oBundle) {\n\t\treturn oBundle.getText(\"ACC_CTR_TYPE_OPTION\");\n\t};\n\n\tListItemBase.prototype.getAccessibilityDescription = function(oBundle) {\n\t\tvar aOutput = [],\n\t\t\tmType = ListType,\n\t\t\tsType = this.getType(),\n\t\t\tsHighlight = this.getHighlight(),\n\t\t\tsTooltip = this.getTooltip_AsString();\n\n\t\tif (this.getSelected()) {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_SELECTED\"));\n\t\t}\n\n\t\tif (sHighlight != \"None\") {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_STATE_\" + sHighlight.toUpperCase()));\n\t\t}\n\n\t\tif (this.getUnread() && this.getListProperty(\"showUnread\")) {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_UNREAD\"));\n\t\t}\n\n\t\tif (this.getCounter()) {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_COUNTER\", this.getCounter()));\n\t\t}\n\n\t\tif (sType == mType.Navigation) {\n\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_NAVIGATION\"));\n\t\t} else {\n\t\t\tif (sType == mType.Detail || sType == mType.DetailAndActive) {\n\t\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_DETAIL\"));\n\t\t\t}\n\t\t\tif (sType == mType.Active || sType == mType.DetailAndActive) {\n\t\t\t\taOutput.push(oBundle.getText(\"LIST_ITEM_ACTIVE\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.getContentAnnouncement) {\n\t\t\taOutput.push((this.getContentAnnouncement(oBundle) || \"\").trim());\n\t\t}\n\n\t\tif (sTooltip) {\n\t\t\taOutput.push(sTooltip);\n\t\t}\n\n\t\treturn aOutput.join(\" \");\n\t};\n\n\tListItemBase.prototype.getAccessibilityInfo = function() {\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\treturn {\n\t\t\ttype: this.getAccessibilityType(oBundle),\n\t\t\tdescription: this.getAccessibilityDescription(oBundle),\n\t\t\tfocusable: true\n\t\t};\n\t};\n\n\t/**\n\t * Returns the accessibility announcement for the content\n\t * Hook for the subclasses.\n\t *\n\t * @returns {string}\n\t * @protected\n\t * ListItemBase.prototype.getContentAnnouncement = function() {\n\t * };\n\t */\n\n\t/*\n\t * Returns the mode of the current item according to list mode\n\t * Subclasses can overwrite this if item should not have any mode\n\t * Default empty mode is used when list mode is not yet known\n\t *\n\t * @returns {sap.m.ListMode|\"\"}\n\t * @protected\n\t */\n\tListItemBase.prototype.getMode = function() {\n\t\treturn this.getListProperty(\"mode\", \"\");\n\t};\n\n\t/*\n\t * Updates the accessibility state of the control.\n\t *\n\t * @param {Object} [mAccessibility] a map of accessibility properties\n\t * @protected\n\t */\n\tListItemBase.prototype.updateAccessibilityState = function(mAccessibility) {\n\t\tvar $This = this.$();\n\t\tif (!$This.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $Items = $This.parent().children(\".sapMLIB\");\n\t\t$This.attr(jQuery.extend({\n\t\t\t\"aria-setsize\": $Items.length,\n\t\t\t\"aria-posinset\": $Items.index($This) + 1\n\t\t}, mAccessibility));\n\t};\n\n\t/**\n\t * Returns the delete icon when mode is Delete\n\t *\n\t * @return {sap.ui.core.Icon}\n\t * @private\n\t */\n\tListItemBase.prototype.getDeleteControl = function() {\n\t\tif (this._oDeleteControl) {\n\t\t\treturn this._oDeleteControl;\n\t\t}\n\n\t\tthis._oDeleteControl = new Button({\n\t\t\tid: this.getId() + \"-imgDel\",\n\t\t\ticon: this.DeleteIconURI,\n\t\t\ttype: ButtonType.Transparent,\n\t\t\ttooltip: sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LIST_ITEM_DELETE\")\n\t\t}).addStyleClass(\"sapMLIBIconDel sapMLIBSelectD\").setParent(this, null, true).attachPress(function(oEvent) {\n\t\t\tthis.informList(\"Delete\");\n\t\t}, this);\n\n\t\tthis._oDeleteControl._bExcludeFromTabChain = true;\n\n\t\treturn this._oDeleteControl;\n\t};\n\n\t/**\n\t * Returns the detail icon when item type is Detail|DetailAndActive\n\t *\n\t * @return {sap.ui.core.Icon}\n\t * @private\n\t */\n\tListItemBase.prototype.getDetailControl = function() {\n\t\tif (this._oDetailControl) {\n\t\t\treturn this._oDetailControl;\n\t\t}\n\n\t\tthis._oDetailControl = new Button({\n\t\t\tid: this.getId() + \"-imgDet\",\n\t\t\ticon: this.DetailIconURI,\n\t\t\ttype: ButtonType.Transparent,\n\t\t\ttooltip: sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LIST_ITEM_EDIT\")\n\t\t}).addStyleClass(\"sapMLIBType sapMLIBIconDet\").setParent(this, null, true).attachPress(function() {\n\t\t\tthis.fireDetailTap();\n\t\t\tthis.fireDetailPress();\n\t\t}, this);\n\n\t\tthis._oDetailControl._bExcludeFromTabChain = true;\n\n\t\treturn this._oDetailControl;\n\t};\n\n\t/**\n\t * Returns the navigation icon when item type is Navigation\n\t *\n\t * @return {sap.ui.core.Icon}\n\t * @private\n\t */\n\tListItemBase.prototype.getNavigationControl = function() {\n\t\tif (this._oNavigationControl) {\n\t\t\treturn this._oNavigationControl;\n\t\t}\n\n\t\tthis._oNavigationControl = new Icon({\n\t\t\tid: this.getId() + \"-imgNav\",\n\t\t\tsrc: this.NavigationIconURI,\n\t\t\tuseIconTooltip: false,\n\t\t\tnoTabStop: true\n\t\t}).setParent(this, null, true).addStyleClass(\"sapMLIBType sapMLIBImgNav\");\n\n\t\treturn this._oNavigationControl;\n\t};\n\n\t/**\n\t * Returns RadioButton control when mode is one of Single Selection type\n\t *\n\t * @return {sap.m.RadioButton}\n\t * @private\n\t */\n\tListItemBase.prototype.getSingleSelectControl = function() {\n\t\tif (this._oSingleSelectControl) {\n\t\t\treturn this._oSingleSelectControl;\n\t\t}\n\n\t\tthis._oSingleSelectControl = new sap.m.RadioButton({\n\t\t\tid : this.getId() + \"-selectSingle\",\n\t\t\tgroupName : this.getListProperty(\"id\") + \"_selectGroup\",\n\t\t\tactiveHandling : false,\n\t\t\tselected : this.getSelected()\n\t\t}).addStyleClass(\"sapMLIBSelectS\").setParent(this, null, true).setTabIndex(-1).attachSelect(function(oEvent) {\n\t\t\t\tvar bSelected = oEvent.getParameter(\"selected\");\n\t\t\t\tthis.setSelected(bSelected);\n\t\t\t\tthis.informList(\"Select\", bSelected);\n\t\t\t}, this);\n\n\t\treturn this._oSingleSelectControl;\n\t};\n\n\t/**\n\t * Returns CheckBox control when mode is MultiSelection\n\t *\n\t * @return {sap.m.CheckBox}\n\t * @private\n\t */\n\tListItemBase.prototype.getMultiSelectControl = function() {\n\t\tif (this._oMultiSelectControl) {\n\t\t\treturn this._oMultiSelectControl;\n\t\t}\n\n\t\tthis._oMultiSelectControl = new sap.m.CheckBox({\n\t\t\tid : this.getId() + \"-selectMulti\",\n\t\t\tactiveHandling : false,\n\t\t\tselected : this.getSelected()\n\t\t}).addStyleClass(\"sapMLIBSelectM\").setParent(this, null, true).setTabIndex(-1).attachSelect(function(oEvent) {\n\t\t\tvar bSelected = oEvent.getParameter(\"selected\");\n\t\t\tthis.setSelected(bSelected);\n\t\t\tthis.informList(\"Select\", bSelected);\n\t\t}, this);\n\n\t\treturn this._oMultiSelectControl;\n\t};\n\n\t/**\n\t * Returns responsible control depends on the mode\n\t *\n\t * @returns {sap.ui.core.Control}\n\t * @private\n\t */\n\tListItemBase.prototype.getModeControl = function(bUpdate) {\n\t\tvar sMode = this.getMode(),\n\t\t\tmListMode = ListMode;\n\n\t\tif (!sMode || sMode == mListMode.None) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (sMode == mListMode.Delete) {\n\t\t\treturn this.getDeleteControl();\n\t\t}\n\n\t\tvar oSelectionControl = null;\n\t\tif (sMode == mListMode.MultiSelect) {\n\t\t\toSelectionControl = this.getMultiSelectControl();\n\t\t} else {\n\t\t\toSelectionControl = this.getSingleSelectControl();\n\t\t}\n\n\t\tif (oSelectionControl && bUpdate) {\n\t\t\toSelectionControl.setSelected(this.getSelected());\n\t\t}\n\n\t\treturn oSelectionControl;\n\t};\n\n\t/**\n\t * Returns item type icon\n\t *\n\t * @returns {sap.ui.core.Icon}\n\t * @private\n\t */\n\tListItemBase.prototype.getTypeControl = function() {\n\t\tvar sType = this.getType(),\n\t\t\tmType = ListType;\n\n\t\tif (sType == mType.Detail || sType == mType.DetailAndActive) {\n\t\t\treturn this.getDetailControl();\n\t\t}\n\n\t\tif (sType == mType.Navigation) {\n\t\t\treturn this.getNavigationControl();\n\t\t}\n\t};\n\n\t/**\n\t * Destroys generated mode/type controls\n\t *\n\t * @param {String[]} aControls array of control names\n\t * @private\n\t */\n\tListItemBase.prototype.destroyControls = function(aControls) {\n\t\taControls.forEach(function(sControl) {\n\t\t\tsControl = \"_o\" + sControl + \"Control\";\n\t\t\tif (this[sControl]) {\n\t\t\t\tthis[sControl].destroy(\"KeepDom\");\n\t\t\t\tthis[sControl] = null;\n\t\t\t}\n\t\t}, this);\n\t};\n\n\t/**\n\t * Determines whether item has any action or not.\n\t * @private\n\t */\n\tListItemBase.prototype.isActionable = function() {\n\t\treturn this.getListProperty(\"includeItemInSelection\") ||\n\t\t\t\tthis.getMode() == ListMode.SingleSelectMaster || (\n\t\t\t\t\tthis.getType() != ListType.Inactive &&\n\t\t\t\t\tthis.getType() != ListType.Detail\n\t\t\t\t);\n\t};\n\n\tListItemBase.prototype.exit = function() {\n\t\tthis._oLastFocused = null;\n\t\tthis._checkHighlight(false);\n\t\tthis.setActive(false);\n\t\tthis.destroyControls([\n\t\t\t\"Delete\",\n\t\t\t\"SingleSelect\",\n\t\t\t\"MultiSelect\",\n\t\t\t\"Detail\",\n\t\t\t\"Navigation\"\n\t\t]);\n\t};\n\n\t/**\n\t * Determines whether item is selectable or not.\n\t * By default, when item should be in selectable mode\n\t *\n\t * Subclasses can overwrite in case of unselectable item.\n\t * @returns {Boolean}\n\t * @private\n\t */\n\tListItemBase.prototype.isSelectable = function() {\n\t\tvar sMode = this.getMode();\n\t\treturn !(sMode == ListMode.None || sMode == ListMode.Delete);\n\t};\n\n\tListItemBase.prototype.getSelected = function() {\n\t\tif (this.isSelectable()) {\n\t\t\treturn this.getProperty(\"selected\");\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Returns the state of the item selection as a boolean\n\t *\n\t * @public\n\t * @return boolean\n\t * @deprecated Since version 1.10.2.\n\t * API Change makes this method unnecessary. Use getSelected method instead.\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tListItemBase.prototype.isSelected = ListItemBase.prototype.getSelected;\n\n\tListItemBase.prototype.setSelected = function(bSelected, bDontNotifyParent) {\n\t\t// do not handle when item is not selectable or in same status\n\t\tbSelected = this.validateProperty(\"selected\", bSelected);\n\t\tif (!this.isSelectable() || bSelected == this.getSelected()) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// notify parent about the selection first\n\t\tif (!bDontNotifyParent) {\n\t\t\tthis.informSelectedChange(bSelected);\n\t\t}\n\n\t\t// update the selection control status\n\t\tvar oSelectionControl = this.getModeControl();\n\t\tif (oSelectionControl) {\n\t\t\toSelectionControl.setSelected(bSelected);\n\t\t}\n\n\t\t// run the hook to update dom state\n\t\tthis.updateSelectedDOM(bSelected, this.$());\n\n\t\t// set the property and do not invalidate\n\t\tthis.setProperty(\"selected\", bSelected, true);\n\n\t\treturn this;\n\t};\n\n\t// Updates the selected state of the DOM\n\tListItemBase.prototype.updateSelectedDOM = function(bSelected, $This) {\n\t\t$This.toggleClass(\"sapMLIBSelected\", bSelected);\n\t\t$This.attr(\"aria-selected\", bSelected);\n\t};\n\n\tListItemBase.prototype.setParent = function(oParent) {\n\t\tControl.prototype.setParent.apply(this, arguments);\n\t\tif (!oParent) {\n\t\t\tthis._bGroupHeader = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.informList(\"Inserted\", this.bSelectedDelayed);\n\t\treturn this;\n\t};\n\n\tListItemBase.prototype.setBindingContext = function() {\n\t\tControl.prototype.setBindingContext.apply(this, arguments);\n\t\tthis.informList(\"BindingContextSet\");\n\t\treturn this;\n\t};\n\n\t/**\n\t * Determines whether group header item or not.\n\t *\n\t * @return {Boolean}\n\t */\n\tListItemBase.prototype.isGroupHeader = function() {\n\t\treturn this._bGroupHeader;\n\t};\n\n\t/**\n\t * Determines whether item is in SingleSelectMaster mode or\n\t * other selection modes when includeItemInSelection is true\n\t *\n\t * @return {Boolean}\n\t */\n\tListItemBase.prototype.isIncludedIntoSelection = function() {\n\t\tvar sMode = this.getMode(),\n\t\t\tmMode = ListMode;\n\n\t\treturn (sMode == mMode.SingleSelectMaster || (\n\t\t\t\t this.getListProperty(\"includeItemInSelection\") && (\n\t\t\t\t\tsMode == mMode.SingleSelectLeft ||\n\t\t\t\t\tsMode == mMode.SingleSelect ||\n\t\t\t\t\tsMode == mMode.MultiSelect)\n\t\t\t\t));\n\t};\n\n\t// informs the list when item's highlight is changed\n\tListItemBase.prototype._checkHighlight = function(bNeedsHighlight) {\n\t\tif (bNeedsHighlight == undefined) {\n\t\t\tbNeedsHighlight = (this.getVisible() && this.getHighlight() != \"None\");\n\t\t}\n\n\t\tif (this._bNeedsHighlight != bNeedsHighlight) {\n\t\t\tthis._bNeedsHighlight = bNeedsHighlight;\n\t\t\tthis.informList(\"HighlightChange\", bNeedsHighlight);\n\t\t}\n\t};\n\n\t/**\n\t * Determines whether item needs icon to render type or not\n\t *\n\t * @return {Boolean}\n\t */\n\tListItemBase.prototype.hasActiveType = function() {\n\t\tvar mType = ListType,\n\t\t\tsType = this.getType();\n\n\t\treturn (sType == mType.Active ||\n\t\t\t\tsType == mType.Navigation ||\n\t\t\t\tsType == mType.DetailAndActive);\n\t};\n\n\tListItemBase.prototype.setActive = function(bActive) {\n\t\tif (bActive == this._active) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (bActive && this.getListProperty(\"activeItem\")) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar $This = this.$();\n\t\tthis._active = bActive;\n\t\tthis._activeHandling($This);\n\n\t\tif (this.getType() == ListType.Navigation) {\n\t\t\tthis._activeHandlingNav($This);\n\t\t}\n\n\t\tif (bActive) {\n\t\t\tthis._activeHandlingInheritor($This);\n\t\t} else {\n\t\t\tthis._inactiveHandlingInheritor($This);\n\t\t}\n\n\t\tthis.informList(\"ActiveChange\", bActive);\n\t};\n\n\tListItemBase.prototype.ontap = function(oEvent) {\n\n\t\t// do not handle already handled events\n\t\tif (this._eventHandledByControl) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if includeItemInSelection all tap events will be used for the mode select and delete\n\t\t// SingleSelectMaster always behaves like includeItemInSelection is set\n\t\tif (this.isIncludedIntoSelection()) {\n\n\t\t\t// update selected property\n\t\t\tif (this.getMode() == ListMode.MultiSelect) {\n\t\t\t\tthis.setSelected(!this.getSelected());\n\t\t\t\tthis.informList(\"Select\", this.getSelected());\n\t\t\t} else if (!this.getSelected()) {\n\t\t\t\tthis.setSelected(true);\n\t\t\t\tthis.informList(\"Select\", true);\n\t\t\t}\n\t\t} else if (this.hasActiveType()) {\n\n\t\t\t// if a fast tap happens deactivate the touchstart/touchend timers and their logic\n\t\t\twindow.clearTimeout(this._timeoutIdStart);\n\t\t\twindow.clearTimeout(this._timeoutIdEnd);\n\n\t\t\t// active feedback\n\t\t\tthis.setActive(true);\n\n\t\t\t// even though the tabindex=-1, list items are not focusable on iPhone\n\t\t\tif (Device.os.ios) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\n\t\t\tjQuery.sap.delayedCall(180, this, function() {\n\t\t\t\tthis.setActive(false);\n\t\t\t});\n\n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.fireTap();\n\t\t\t\tthis.firePress();\n\t\t\t});\n\t\t}\n\n\t\t// tell the parent, item is pressed\n\t\tthis.informList(\"Press\", oEvent.srcControl);\n\t};\n\n\tListItemBase.prototype.ontouchstart = function(oEvent) {\n\t\tthis._eventHandledByControl = oEvent.isMarked();\n\n\t\tvar oTargetTouch = oEvent.targetTouches[0];\n\t\tthis._touchedY = oTargetTouch.clientY;\n\t\tthis._touchedX = oTargetTouch.clientX;\n\n\t\t// active handling if not handled already by control\n\t\t// several fingers could be used\n\t\tif (this._eventHandledByControl ||\n\t\t\toEvent.touches.length != 1 ||\n\t\t\t!this.hasActiveType()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// timeout regarding active state when scrolling\n\t\tthis._timeoutIdStart = jQuery.sap.delayedCall(100, this, function() {\n\t\t\tthis.setActive(true);\n\t\t});\n\t};\n\n\t// handle touchmove to prevent active state when scrolling\n\tListItemBase.prototype.ontouchmove = function(oEvent) {\n\n\t\tif ((this._active || this._timeoutIdStart) &&\n\t\t\t(Math.abs(this._touchedY - oEvent.targetTouches[0].clientY) > 10 || Math.abs(this._touchedX - oEvent.targetTouches[0].clientX) > 10)) {\n\n\t\t\t// there is movement and therefore no tap...remove active styles\n\t\t\tclearTimeout(this._timeoutIdStart);\n\t\t\tthis._timeoutIdStart = null;\n\t\t\tthis._timeoutIdEnd = null;\n\t\t\tthis.setActive(false);\n\t\t}\n\t};\n\n\tListItemBase.prototype.ontouchend = function(oEvent) {\n\n\t\t// several fingers could be used\n\t\tif (oEvent.targetTouches.length == 0 && this.hasActiveType()) {\n\t\t\tthis._timeoutIdEnd = jQuery.sap.delayedCall(100, this, function() {\n\t\t\t\tthis.setActive(false);\n\t\t\t});\n\t\t}\n\t};\n\n\t// During native scrolling: Chrome sends touchcancel and no touchend thereafter\n\tListItemBase.prototype.ontouchcancel = ListItemBase.prototype.ontouchend;\n\n\t// toggle active styles for navigation items\n\tListItemBase.prototype._activeHandlingNav = function() {};\n\n\t// hook method for active handling...inheritors should overwrite this method\n\tListItemBase.prototype._activeHandlingInheritor = function() {};\n\n\t// hook method for inactive handling...inheritors should overwrite this method\n\tListItemBase.prototype._inactiveHandlingInheritor = function() {};\n\n\t// switch background style... toggle active feedback\n\tListItemBase.prototype._activeHandling = function($This) {\n\t\t$This.toggleClass(\"sapMLIBActive\", this._active);\n\n\t\tif (Device.system.Desktop && this.isActionable()) {\n\t\t\t$This.toggleClass(\"sapMLIBHoverable\", !this._active);\n\t\t}\n\t};\n\n\t/* Keyboard Handling */\n\tListItemBase.prototype.onsapspace = function(oEvent) {\n\n\t\t// handle only the events that are coming from ListItemBase\n\t\tif (oEvent.srcControl !== this) {\n\t\t\treturn;\n\t\t}\n\n\t\t// prevent default not to scroll down\n\t\toEvent.preventDefault();\n\n\t\t// allow only for selectable items\n\t\tif (oEvent.isMarked() || !this.isSelectable()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// update selected property\n\t\tif (this.getMode() == ListMode.MultiSelect) {\n\t\t\tthis.setSelected(!this.getSelected());\n\t\t\tthis.informList(\"Select\", this.getSelected());\n\t\t} else if (!this.getSelected()) {\n\t\t\tthis.setSelected(true);\n\t\t\tthis.informList(\"Select\", true);\n\t\t}\n\n\t\t// event is handled\n\t\toEvent.setMarked();\n\t};\n\n\tListItemBase.prototype.onsapenter = function(oEvent) {\n\t\tvar oList = this.getList();\n\t\tif (oEvent.isMarked() || !oList) {\n\t\t\treturn;\n\t\t}\n\n\t\t// exit from edit mode\n\t\tvar mKeyboardMode = ListKeyboardMode;\n\t\tif (oEvent.srcControl !== this && oList.getKeyboardMode() == mKeyboardMode.Edit) {\n\t\t\toList.setKeyboardMode(mKeyboardMode.Navigation);\n\t\t\tthis._switchFocus(oEvent);\n\t\t\treturn;\n\t\t}\n\n\t\t// handle only item events\n\t\tif (oEvent.srcControl !== this) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isIncludedIntoSelection()) {\n\n\t\t\t// support old bug and mimic space key handling and\n\t\t\t// do not fire item's press event when item is included into selection\n\t\t\tthis.onsapspace(oEvent);\n\n\t\t} else if (this.hasActiveType()) {\n\n\t\t\t// active feedback\n\t\t\toEvent.setMarked();\n\t\t\tthis.setActive(true);\n\n\t\t\tjQuery.sap.delayedCall(180, this, function() {\n\t\t\t\tthis.setActive(false);\n\t\t\t});\n\n\t\t\t// fire own press event\n\t\t\tjQuery.sap.delayedCall(0, this, function() {\n\t\t\t\tthis.fireTap();\n\t\t\t\tthis.firePress();\n\t\t\t});\n\t\t}\n\n\t\t// let the parent know item is pressed\n\t\toList.onItemPress(this, oEvent.srcControl);\n\t};\n\n\tListItemBase.prototype.onsapdelete = function(oEvent) {\n\t\tif (oEvent.isMarked() ||\n\t\t\toEvent.srcControl !== this ||\n\t\t\tthis.getMode() != ListMode.Delete) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.informList(\"Delete\");\n\t\toEvent.preventDefault();\n\t\toEvent.setMarked();\n\t};\n\n\tListItemBase.prototype._switchFocus = function(oEvent) {\n\t\tvar oList = this.getList();\n\t\tif (!oList) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $Tabbables = this.getTabbables();\n\t\tif (oEvent.srcControl !== this) {\n\t\t\toList._iLastFocusPosOfItem = $Tabbables.index(oEvent.target);\n\t\t\tthis.focus();\n\t\t} else if ($Tabbables.length) {\n\t\t\tvar iFocusPos = oList._iLastFocusPosOfItem || 0;\n\t\t\tiFocusPos = $Tabbables[iFocusPos] ? iFocusPos : -1;\n\t\t\t$Tabbables.eq(iFocusPos).focus();\n\t\t}\n\n\t\toEvent.preventDefault();\n\t\toEvent.setMarked();\n\t};\n\n\tListItemBase.prototype.onkeydown = function(oEvent) {\n\t\t// check whether event is marked or not\n\t\tif (oEvent.isMarked()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// switch focus to row and focused item with F7\n\t\tvar mKeyCodes = jQuery.sap.KeyCodes;\n\t\tif (oEvent.which == mKeyCodes.F7) {\n\t\t\tthis._switchFocus(oEvent);\n\t\t\treturn;\n\t\t}\n\n\t\t// F2 fire detail event or switch keyboard mode\n\t\tif (oEvent.which == mKeyCodes.F2) {\n\t\t\tif (oEvent.srcControl === this &&\n\t\t\t\tthis.getType().indexOf(\"Detail\") == 0 &&\n\t\t\t\tthis.hasListeners(\"detailPress\") ||\n\t\t\t\tthis.hasListeners(\"detailTap\")) {\n\t\t\t\tthis.fireDetailTap();\n\t\t\t\tthis.fireDetailPress();\n\t\t\t\toEvent.preventDefault();\n\t\t\t\toEvent.setMarked();\n\t\t\t} else {\n\t\t\t\tvar oList = this.getList();\n\t\t\t\tif (oList) {\n\t\t\t\t\tthis.$().prop(\"tabIndex\", -1);\n\t\t\t\t\tvar mKeyboardMode = ListKeyboardMode;\n\t\t\t\t\toList.setKeyboardMode(oList.getKeyboardMode() == mKeyboardMode.Edit ? mKeyboardMode.Navigation : mKeyboardMode.Edit);\n\t\t\t\t\tthis._switchFocus(oEvent);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Returns the tabbable DOM elements as a jQuery collection\n\t *\n\t * @returns {jQuery} jQuery object\n\t * @protected\n\t * @since 1.26\n\t */\n\tListItemBase.prototype.getTabbables = function() {\n\t\treturn this.$().find(\":sapTabbable\");\n\t};\n\n\t// handle the TAB key\n\tListItemBase.prototype.onsaptabnext = function(oEvent) {\n\t\t// check whether event is marked or not\n\t\tvar oList = this.getList();\n\t\tif (!oList || oEvent.isMarked() || oList.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if tab key is pressed while the last tabbable element of the list item\n\t\t// has been focused, we forward tab to the last pseudo element of the table\n\t\tvar oLastTabbableDomRef = this.getTabbables().get(-1) || this.getDomRef();\n\t\tif (oEvent.target === oLastTabbableDomRef) {\n\t\t\toList.forwardTab(true);\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// handle the SHIFT-TAB key\n\tListItemBase.prototype.onsaptabprevious = function(oEvent) {\n\t\tvar oList = this.getList();\n\t\tif (!oList || oEvent.isMarked() || oList.getKeyboardMode() == ListKeyboardMode.Edit) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if shift-tab is pressed while the list item has been focused,\n\t\t// we forward tab to the root element of the list\n\t\tif (oEvent.target === this.getDomRef()) {\n\t\t\toList.forwardTab(false);\n\t\t\toEvent.setMarked();\n\t\t}\n\t};\n\n\t// handle propagated focus to make the item row focusable\n\tListItemBase.prototype.onfocusin = function(oEvent) {\n\t\tvar oList = this.getList();\n\t\tif (!oList || oEvent.isMarked()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (oEvent.srcControl === this) {\n\t\t\toList.onItemFocusIn(this);\n\t\t\treturn;\n\t\t}\n\n\t\tif (oList.getKeyboardMode() == ListKeyboardMode.Edit ||\n\t\t\t!jQuery(oEvent.target).is(\":sapFocusable\")) {\n\t\t\treturn;\n\t\t}\n\n\t\t// inform the list async that this item should be focusable\n\t\tjQuery.sap.delayedCall(0, oList, \"setItemFocusable\", [this]);\n\t\toEvent.setMarked();\n\t};\n\n\t// inform the list for the vertical navigation\n\tListItemBase.prototype.onsapup = function(oEvent) {\n\t\tif (oEvent.isMarked() ||\n\t\t\toEvent.srcControl === this ||\n\t\t\tthis.getListProperty(\"keyboardMode\") === ListKeyboardMode.Navigation) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.informList(\"ArrowUpDown\", oEvent);\n\t};\n\n\t// inform the list for the vertical navigation\n\tListItemBase.prototype.onsapdown = ListItemBase.prototype.onsapup;\n\n\treturn ListItemBase;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.ListItemBaseRenderer\", require(\"sap/m/ListItemBaseRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ListItemBase.js","require(\"sap/m/themes/base/GroupHeaderListItem.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.GroupHeaderListItem.\nsap.ui.define(['./ListItemBase', './library', 'sap/ui/core/library'],\n\tfunction(ListItemBase, library, coreLibrary) {\n\t\"use strict\";\n\n\n\n\t// shortcut for sap.m.ListMode\n\tvar ListMode = library.ListMode;\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\tfunction isTable(o) {\n\t\tvar FNClass = sap.ui.require('sap/m/Table');\n\t\treturn typeof FNClass === 'function' && (o instanceof FNClass);\n\t}\n\n\n\t/**\n\t * Constructor for a new GroupHeaderListItem.\n\t *\n\t * @param {string} [sId] Id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * <code>sap.m.GroupHeaderListItem</code> is used to display the title of a group and act as separator between groups in <code>sap.m.List</code> and <code>sap.m.Table</code>.\n\t * <b>Note:</b> The inherited properties <code>unread</code>, <code>selected</code>, <code>counter</code> and <code>press</code> event from <code>sap.m.ListItemBase</code> are not supported.\n\t *\n\t * @extends sap.m.ListItemBase\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @since 1.12\n\t * @alias sap.m.GroupHeaderListItem\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar GroupHeaderListItem = ListItemBase.extend(\"sap.m.GroupHeaderListItem\", /** @lends sap.m.GroupHeaderListItem.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Defines the title of the group header.\n\t\t\t */\n\t\t\ttitle : {type : \"string\", group : \"Data\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the count of items in the group, but it could also be an amount which represents the sum of all amounts in the group.\n\t\t\t * <b>Note:</b> Will not be displayed if not set.\n\t\t\t */\n\t\t\tcount : {type : \"string\", group : \"Data\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Allows to uppercase the group title.\n\t\t\t * @since 1.13.2\n\t\t\t * @deprecated Since version 1.40.10\n\t\t\t */\n\t\t\tupperCase : {type : \"boolean\", group : \"Appearance\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Defines the title text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\t\t\t * @since 1.28.0\n\t\t\t */\n\t\t\ttitleTextDirection : {type : \"sap.ui.core.TextDirection\", group : \"Appearance\", defaultValue : TextDirection.Inherit}\n\t\t}\n\t}});\n\n\t// GroupHeaderListItem does not respect the list mode\n\tGroupHeaderListItem.prototype.getMode = function() {\n\t\treturn ListMode.None;\n\t};\n\n\tGroupHeaderListItem.prototype.shouldClearLastValue = function() {\n\t\treturn true;\n\t};\n\n\t// returns responsible table control for the item\n\tGroupHeaderListItem.prototype.getTable = function() {\n\t\tvar oParent = this.getParent();\n\t\tif (isTable(oParent)) {\n\t\t\treturn oParent;\n\t\t}\n\n\t\t// support old list with columns aggregation\n\t\tif (oParent && oParent.getMetadata().getName() == \"sap.m.Table\") {\n\t\t\treturn oParent;\n\t\t}\n\t};\n\n\tGroupHeaderListItem.prototype.onBeforeRendering = function() {\n\t\tvar oParent = this.getParent();\n\t\tif (isTable(oParent)) {\n\t\t\t// clear column last value to reset cell merging\n\t\t\toParent.getColumns().forEach(function(oColumn) {\n\t\t\t\toColumn.clearLastValue();\n\t\t\t});\n\n\t\t\t// defines the tag name\n\t\t\tthis.TagName = \"tr\";\n\t\t}\n\t};\n\n\tGroupHeaderListItem.prototype.getAccessibilityType = function(oBundle) {\n\t\tvar sType = this.getTable() ? \"ROW\" : \"OPTION\";\n\t\treturn oBundle.getText(\"LIST_ITEM_GROUP_HEADER\") + \" \" + oBundle.getText(\"ACC_CTR_TYPE_\" + sType);\n\t};\n\n\tGroupHeaderListItem.prototype.getContentAnnouncement = function() {\n\t\treturn this.getTitle();\n\t};\n\n\treturn GroupHeaderListItem;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.GroupHeaderListItemRenderer\", require(\"sap/m/GroupHeaderListItemRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/GroupHeaderListItem.js","require(\"sap/m/themes/sap_belize/Shell.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Shell.\nsap.ui.define(['jquery.sap.global', './library', 'sap/ui/core/Control', 'sap/ui/core/library', 'sap/m/ShellRenderer'],\n\tfunction(jQuery, library, Control, coreLibrary, ShellRenderer) {\n\t\t\"use strict\";\n\n\n\n\t\t// shortcut for sap.ui.core.TitleLevel\n\t\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\n\n\t\t/**\n\t\t * Constructor for a new Shell.\n\t\t *\n\t\t * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n\t\t * @param {object} [mSettings] Initial settings for the new control\n\t\t *\n\t\t * @class\n\t\t * The Shell control can be used as root element of applications. It can contain an App or a <code>SplitApp</code> control.\n\t\t * The Shell provides some overarching functionality for the overall application and takes care of visual adaptation, such as a frame around the App, on desktop browser platforms.\n\t\t * @extends sap.ui.core.Control\n\t\t * @version 1.52.3\n\t\t *\n\t\t * @constructor\n\t\t * @public\n\t\t * @since 1.12\n\t\t * @alias sap.m.Shell\n\t\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t\t */\n\t\tvar Shell = Control.extend(\"sap.m.Shell\", /** @lends sap.m.Shell.prototype */ { metadata : {\n\n\t\t\tlibrary : \"sap.m\",\n\t\t\tproperties : {\n\n\t\t\t\t/**\n\t\t\t\t * Defines the application title, which may or may not be displayed outside the actual application, depending on the available screen size.\n\t\t\t\t */\n\t\t\t\ttitle : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t\t/**\n\t\t\t\t * Defines the logo to be displayed next to the App when the screen is sufficiently large.\n\t\t\t\t */\n\t\t\t\tlogo : {type : \"sap.ui.core.URI\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t\t/**\n\t\t\t\t * Determines whether the Logout button should be displayed. Currently, this only happens on very tall screens (1568px height), otherwise, it is always hidden.\n\t\t\t\t */\n\t\t\t\tshowLogout : {type : \"boolean\", group : \"Behavior\", defaultValue : true},\n\n\t\t\t\t/**\n\t\t\t\t * Defines texts, such as the name of the logged-in user, which should be displayed on the right side of the header (if there is enough space to display the header at all - this only happens on very tall screens (1568px height), otherwise, it is always hidden).\n\t\t\t\t */\n\t\t\t\theaderRightText : {type : \"string\", group : \"Data\", defaultValue : null},\n\n\t\t\t\t/**\n\t\t\t\t * Determines whether the width of the content (the aggregated App) should be limited or extended to the full screen width.\n\t\t\t\t */\n\t\t\t\tappWidthLimited : {type : \"boolean\", group : \"Appearance\", defaultValue : true},\n\n\t\t\t\t/**\n\t\t\t\t * Defines the background color of the Shell. If set, this color will override the default background defined by the theme. This should only be set when really required.\n\t\t\t\t * Any configured background image will be placed above this colored background.\n\t\t\t\t * Use the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled.\n\t\t\t\t * @since 1.11.2\n\t\t\t\t */\n\t\t\t\tbackgroundColor : {type : \"sap.ui.core.CSSColor\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t\t/**\n\t\t\t\t * Defines the background image of the Shell. If set, this image will override the default background defined by the theme. This should only be set when really required.\n\t\t\t\t * This background image will be placed above any color set for the background.\n\t\t\t\t * Use the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled.\n\t\t\t\t * @since 1.11.2\n\t\t\t\t */\n\t\t\t\tbackgroundImage : {type : \"sap.ui.core.URI\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t\t/**\n\t\t\t\t * Determines whether the background image (if configured) should be proportionally stretched to cover the whole Shell (false, default) or whether it should be tiled (true).\n\t\t\t\t * @since 1.11.2\n\t\t\t\t */\n\t\t\t\tbackgroundRepeat : {type : \"boolean\", group : \"Appearance\", defaultValue : false},\n\n\t\t\t\t/**\n\t\t\t\t * Defines the opacity of the background image. The opacity can be set between 0 (fully transparent) and 1 (fully opaque).\n\t\t\t\t * This can be used to improve readability of the Shell content by making the background image partly transparent.\n\t\t\t\t * @since 1.11.2\n\t\t\t\t */\n\t\t\t\tbackgroundOpacity : {type : \"float\", group : \"Appearance\", defaultValue : 1},\n\n\t\t\t\t/**\n\t\t\t\t * Sets the icon used for the mobile device home screen and the icon to be used for bookmarks by desktop browsers.\n\t\t\t\t *\n\t\t\t\t * This property should be only set once, and as early as possible. Subsequent calls replace the previous icon settings and may lead to different behavior depending on the browser.\n\t\t\t\t *\n\t\t\t\t * Different image sizes for device home screen need to be given as PNG images, an ICO file needs to be given as desktop browser bookmark icon (other file formats may not work in all browsers).\n\t\t\t\t * The <code>precomposed</code> flag defines whether there is already a glow effect contained in the home screen images (or whether iOS should add such an effect). The given structure could look like this:\n\t\t\t\t * {\n\t\t\t * 'phone':'phone-icon_57x57.png',\n\t\t\t * 'phone@2':'phone-retina_114x114.png',\n\t\t\t\t * 'tablet':'tablet-icon_72x72.png',\n\t\t\t\t * 'tablet@2':'tablet-retina_144x144.png',\n\t\t\t\t * 'precomposed':true,\n\t\t\t\t * 'favicon':'favicon.ico'\n\t\t\t\t * }\n\t\t\t\t *\n\t\t\t\t * See jQuery.sap.setIcons() for full documentation.\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\thomeIcon : {type : \"object\", group : \"Misc\", defaultValue : null},\n\n\t\t\t\t/**\n\t\t\t\t * Defines the semantic level of the title.\n\t\t\t\t *\n\t\t\t\t * This information is used by assistive technologies, such as screen readers to create a hierarchical site map for faster navigation.\n\t\t\t\t * Depending on this setting an HTML h1-h6 element is used.\n\t\t\t\t */\n\t\t\t\ttitleLevel : {type : \"sap.ui.core.TitleLevel\", group : \"Appearance\", defaultValue : TitleLevel.H1}\n\t\t\t},\n\t\t\tdefaultAggregation : \"app\",\n\t\t\taggregations : {\n\n\t\t\t\t/**\n\t\t\t\t * A Shell contains an App or a SplitApp (they may be wrapped in a View). Other control types are not allowed.\n\t\t\t\t */\n\t\t\t\tapp : {type : \"sap.ui.core.Control\", multiple : false}\n\t\t\t},\n\t\t\tevents : {\n\n\t\t\t\t/**\n\t\t\t\t * Fires when the user presses the logout button/link.\n\t\t\t\t */\n\t\t\t\tlogout : {}\n\t\t\t}\n\t\t}});\n\n\n\t\tShell.prototype.init = function() {\n\t\t\t// theme change might change the logo\n\t\t\tsap.ui.getCore().attachThemeChanged(jQuery.proxy(function(){\n\t\t\t\tvar $hdr = this.$(\"hdr\");\n\t\t\t\tif ($hdr.length) {\n\t\t\t\t\t$hdr.find(\".sapMShellLogo\").remove(); // remove old logo, if present\n\t\t\t\t\tvar html = ShellRenderer.getLogoImageHtml(this);\n\t\t\t\t\t$hdr.prepend(jQuery(html)); // insert new logo\n\t\t\t\t}\n\t\t\t}, this));\n\n\n\t\t\tjQuery.sap.initMobile({\n\t\t\t\tstatusBar: \"default\",\n\t\t\t\thideBrowser: true\n\t\t\t});\n\t\t};\n\n\t\tShell.prototype.onAfterRendering = function () {\n\t\t\tvar ref = this.getDomRef().parentNode,\n\t\t\t\t$ref;\n\t\t\t// set all parent elements to 100% height this *should* be done by the application in CSS, but people tend to forget it...\n\t\t\tif (ref && !ref._sapui5_heightFixed) {\n\t\t\t\tref._sapui5_heightFixed = true;\n\t\t\t\twhile (ref && ref !== document.documentElement) {\n\t\t\t\t\t$ref = jQuery(ref);\n\t\t\t\t\tif ($ref.attr(\"data-sap-ui-root-content\")) { // some parents (e.g. Unified Shell) do this already\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (!ref.style.height) {\n\t\t\t\t\t\tref.style.height = \"100%\";\n\t\t\t\t\t}\n\t\t\t\t\tref = ref.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$(\"content\").css(\"height\", \"\");\n\t\t};\n\n\t\tShell.prototype.ontap = function(oEvent) {\n\t\t\tif (oEvent.target.className\n\t\t\t\t&& oEvent.target.className.indexOf /* not available for SVG elements */\n\t\t\t\t&& oEvent.target.className.indexOf(\"sapMShellHeaderLogout\") > -1) { // logout button clicked\n\t\t\t\tthis.fireLogout();\n\t\t\t}\n\t\t};\n\n\n\t\t// API methods\n\n\t\tShell.prototype.setTitle = function(sTitle) {\n\t\t\tthis.$(\"hdrTxt\").text(sTitle);\n\t\t\tthis.setProperty(\"title\", sTitle, true); // no rerendering\n\t\t\treturn this;\n\t\t};\n\n\t\tShell.prototype.setHeaderRightText = function(sText) {\n\t\t\tthis.setProperty(\"headerRightText\", sText, true); // no rerendering\n\t\t\tif (!sText) {\n\t\t\t\tsText = \"\";\n\t\t\t}\n\t\t\tthis.$(\"hdrRightTxt\").text(sText).css(\"display\", (!!sText ? \"inline\" : \"none\"));\n\t\t\treturn this;\n\t\t};\n\n\t\tShell.prototype.setAppWidthLimited = function(bLimit) {\n\t\t\tthis.$().toggleClass(\"sapMShellAppWidthLimited\", bLimit);\n\t\t\tthis.setProperty(\"appWidthLimited\", bLimit, true); // no rerendering\n\t\t\treturn this;\n\t\t};\n\n\t\tShell.prototype.setBackgroundOpacity = function(fOpacity) {\n\t\t\tif (fOpacity > 1 || fOpacity < 0) {\n\t\t\t\tjQuery.sap.log.warning(\"Invalid value \" + fOpacity + \" for Shell.setBackgroundOpacity() ignored. Valid values are: floats between 0 and 1.\");\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis.$(\"BG\").css(\"opacity\", fOpacity);\n\t\t\treturn this.setProperty(\"backgroundOpacity\", fOpacity, true); // no rerendering - live opacity change looks cooler\n\t\t};\n\n\t\tShell.prototype.setHomeIcon = function(oIcons) {\n\t\t\tthis.setProperty(\"homeIcon\", oIcons, true); // no rerendering\n\t\t\tjQuery.sap.setIcons(oIcons);\n\t\t\treturn this;\n\t\t};\n\n\t\treturn Shell;\n\t});\n\n\njQuery.sap.setObject(\"sap.m.ShellRenderer\", require(\"sap/m/ShellRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/Shell.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['./ListItemBaseRenderer', 'sap/ui/core/Renderer', 'sap/ui/core/library'],\n\tfunction(ListItemBaseRenderer, Renderer, coreLibrary) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\n\t/**\n\t * DisplayListItem renderer.\n\t * @namespace\n\t */\n\tvar DisplayListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\t/**\n\t * Renders the HTML for the given control, using the provided\n\t * {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager}\n\t *          oRenderManager the RenderManager that can be used for writing to the\n\t *          Render-Output-Buffer\n\t * @param {sap.ui.core.Control}\n\t *          oControl an object representation of the control that should be\n\t *          rendered\n\t */\n\tDisplayListItemRenderer.renderLIAttributes = function(rm, oLI) {\n\t\trm.addClass(\"sapMDLI\");\n\t};\n\n\tDisplayListItemRenderer.renderLIContent = function(rm, oLI) {\n\n\t\tvar isLabel = oLI.getLabel();\n\n\t\t// List item label\n\t\tif (isLabel) {\n\t\t\trm.write(\"<label for='\" + oLI.getId() + \"-value' class='sapMDLILabel'>\");\n\t\t\trm.writeEscaped(oLI.getLabel());\n\t\t\trm.write(\"</label>\");\n\t\t}\n\n\t\tvar isValue = oLI.getValue();\n\t\tvar sValueTextDir = oLI.getValueTextDirection();\n\n\t\t// List item value\n\t\tif (isValue) {\n\t\t\trm.write(\"<div id='\" + oLI.getId() + \"-value' class='sapMDLIValue'\");\n\n\t\t\tif (sValueTextDir != TextDirection.Inherit) {\n\t\t\t\trm.writeAttribute(\"dir\", sValueTextDir.toLowerCase());\n\t\t\t}\n\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(oLI.getValue());\n\t\t\trm.write(\"</div>\");\n\t\t}\n\t};\n\n\n\treturn DisplayListItemRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/DisplayListItemRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['sap/ui/core/Renderer', 'sap/ui/core/library', 'sap/ui/Device'],\n\tfunction(Renderer, coreLibrary, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.ui.core.ValueState\n\tvar ValueState = coreLibrary.ValueState;\n\n\t/**\n\t * Input renderer.\n\t *\n\t * @namespace\n\t */\n\tvar InputBaseRenderer = {};\n\n\t/**\n\t * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.render = function(oRm, oControl) {\n\t\tvar sValueState = oControl.getValueState(),\n\t\t\tsTextDir = oControl.getTextDirection(),\n\t\t\tsTextAlign = Renderer.getTextAlign(oControl.getTextAlign(), sTextDir),\n\t\t\tbAccessibility = sap.ui.getCore().getConfiguration().getAccessibility();\n\n\t\toRm.write(\"<div\");\n\t\toRm.writeControlData(oControl);\n\n\t\t// outer styles\n\t\tthis.addOuterStyles(oRm, oControl);\n\n\t\tthis.addControlWidth(oRm, oControl);\n\n\t\toRm.writeStyles();\n\n\t\t// outer classes\n\t\toRm.addClass(\"sapMInputBase\");\n\t\tthis.addPaddingClass(oRm, oControl);\n\t\tthis.addCursorClass(oRm, oControl);\n\t\tthis.addOuterClasses(oRm, oControl);\n\n\t\tif (!oControl.getEnabled()) {\n\t\t\toRm.addClass(\"sapMInputBaseDisabled\");\n\t\t}\n\n\t\tif (!oControl.getEditable()) {\n\t\t\toRm.addClass(\"sapMInputBaseReadonly\");\n\t\t}\n\n\t\tif (sValueState !== ValueState.None) {\n\t\t\tthis.addValueStateClasses(oRm, oControl);\n\t\t}\n\n\t\toRm.writeClasses();\n\n\t\t// outer attributes\n\t\tthis.writeOuterAttributes(oRm, oControl);\n\t\tvar sTooltip = oControl.getTooltip_AsString();\n\n\t\tif (sTooltip) {\n\t\t\toRm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\toRm.write(\">\");\n\n\t\tthis.prependInnerContent(oRm, oControl);\n\n\t\t// enable self-made placeholder\n\t\tif (oControl.bShowLabelAsPlaceholder) {\n\t\t\toRm.write(\"<span\");\n\t\t\toRm.writeAttribute(\"id\", oControl.getId() + \"-placeholder\");\n\n\t\t\tif (sTextAlign) {\n\t\t\t\toRm.addStyle(\"text-align\", sTextAlign);\n\t\t\t}\n\n\t\t\tthis.addPlaceholderClasses(oRm, oControl);\n\t\t\tthis.addPlaceholderStyles(oRm, oControl);\n\t\t\toRm.writeClasses();\n\t\t\toRm.writeStyles();\n\t\t\toRm.write(\">\");\n\t\t\toRm.writeEscaped(oControl._getPlaceholder());\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\n\t\toRm.write('<div ');\n\t\toRm.addClass(\"sapMInputDivWrapper\");\n\n\t\t// check disable and readonly\n\t\tif (!oControl.getEnabled()) {\n\t\t\toRm.addClass(\"sapMInputBaseDisabledInner\");\n\n\t\t} else if (!oControl.getEditable()) {\n\t\t\toRm.addClass(\"sapMInputBaseReadonlyInner\");\n\t\t}\n\n\t\toRm.writeClasses();\n\n\t\tthis.addWrapperStyles(oRm, oControl);\n\t\toRm.writeStyles();\n\t\toRm.write('>');\n\n\t\t// start inner\n\t\tthis.openInputTag(oRm, oControl);\n\n\t\t// inner attributes\n\t\tthis.writeInnerId(oRm, oControl);\n\n\t\t// write the name of input\n\t\tif (oControl.getName()) {\n\t\t\toRm.writeAttributeEscaped(\"name\", oControl.getName());\n\t\t}\n\n\t\t// let the browser handle placeholder\n\t\tif (!oControl.bShowLabelAsPlaceholder && oControl._getPlaceholder()) {\n\t\t\toRm.writeAttributeEscaped(\"placeholder\", oControl._getPlaceholder());\n\t\t}\n\n\t\t// check if there is a maxLength property\n\t\tif (oControl.getMaxLength && oControl.getMaxLength() > 0) {\n\t\t\toRm.writeAttribute(\"maxlength\", oControl.getMaxLength());\n\t\t}\n\t\tif (!oControl.getEnabled()) {\n\t\t\toRm.writeAttribute(\"disabled\", \"disabled\");\n\n\t\t} else if (!oControl.getEditable()) {\n\t\t\toRm.writeAttribute(\"readonly\", \"readonly\");\n\n\t\t}\n\t\t// check if textDirection property is not set to default \"Inherit\" and add \"dir\" attribute\n\t\tif (sTextDir != TextDirection.Inherit) {\n\t\t\toRm.writeAttribute(\"dir\", sTextDir.toLowerCase());\n\t\t}\n\n\t\tthis.writeInnerValue(oRm, oControl);\n\n\t\t// accessibility states\n\t\tif (bAccessibility) {\n\t\t\tthis.writeAccessibilityState(oRm, oControl);\n\t\t}\n\n\t\tif (Device.browser.mozilla) {\n\t\t\tif (sTooltip) {\n\n\t\t\t\t// fill tooltip to mozilla validation flag too, to display it in validation error case too\n\t\t\t\toRm.writeAttributeEscaped(\"x-moz-errormessage\", sTooltip);\n\t\t\t} else {\n\n\t\t\t\t// if no tooltip use blank text for mozilla validation text\n\t\t\t\toRm.writeAttribute(\"x-moz-errormessage\", \" \");\n\t\t\t}\n\t\t}\n\n\t\tthis.writeInnerAttributes(oRm, oControl);\n\n\t\t// inner classes\n\t\toRm.addClass(\"sapMInputBaseInner\");\n\n\t\tif (sValueState !== ValueState.None) {\n\t\t\tthis.addValueStateInnerClasses(oRm, oControl);\n\t\t}\n\n\t\tthis.addInnerClasses(oRm, oControl);\n\t\toRm.writeClasses();\n\n\t\t// write text-align\n\t\tif (sTextAlign) {\n\t\t\toRm.addStyle(\"text-align\", sTextAlign);\n\t\t}\n\t\tthis.addInnerStyles(oRm, oControl);\n\t\toRm.writeStyles();\n\t\toRm.write(\">\");\n\n\t\t// finish inner\n\t\tthis.writeInnerContent(oRm, oControl);\n\t\tthis.closeInputTag(oRm, oControl);\n\n\t\t// close wrapper div\n\t\toRm.write('</div>');\n\n\t\tthis.writeDecorations(oRm, oControl);\n\n\t\t// render hidden aria nodes\n\t\tif (bAccessibility) {\n\t\t\tthis.renderAriaLabelledBy(oRm, oControl);\n\t\t\tthis.renderAriaDescribedBy(oRm, oControl);\n\t\t}\n\n\t\t// finish outer\n\t\toRm.write(\"</div>\");\n\t};\n\n\t/**\n\t * Returns aria accessibility role for the control.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control\n\t * @returns {String}\n\t */\n\tInputBaseRenderer.getAriaRole = function(oControl) {\n\t\treturn \"textbox\";\n\t};\n\n\t/**\n\t * Returns the inner aria labelledby ids for the accessibility.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control.\n\t * @returns {String|undefined}\n\t */\n\tInputBaseRenderer.getAriaLabelledBy = function(oControl) {\n\t\tif (this.getLabelledByAnnouncement(oControl)) {\n\t\t\treturn oControl.getId() + \"-labelledby\";\n\t\t}\n\t};\n\n\t/**\n\t * Returns the inner aria labelledby announcement texts for the accessibility.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control.\n\t * @returns {String}\n\t */\n\tInputBaseRenderer.getLabelledByAnnouncement = function(oControl) {\n\t\treturn oControl._getPlaceholder() || \"\";\n\t};\n\n\t/**\n\t * Renders the hidden aria labelledby node for the accessibility.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.renderAriaLabelledBy = function(oRm, oControl) {\n\t\tvar sAnnouncement = this.getLabelledByAnnouncement(oControl);\n\t\tif (sAnnouncement) {\n\t\t\toRm.write(\"<span\");\n\t\t\toRm.writeAttribute(\"id\", oControl.getId() + \"-labelledby\");\n\t\t\toRm.writeAttribute(\"aria-hidden\", \"true\");\n\t\t\toRm.addClass(\"sapUiInvisibleText\");\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\toRm.writeEscaped(sAnnouncement.trim());\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\t};\n\n\t/**\n\t * Returns the inner aria describedby ids for the accessibility.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control.\n\t * @returns {String|undefined}\n\t */\n\tInputBaseRenderer.getAriaDescribedBy = function(oControl) {\n\t\tif (this.getDescribedByAnnouncement(oControl)) {\n\t\t\treturn oControl.getId() + \"-describedby\";\n\t\t}\n\t};\n\n\t/**\n\t * Returns the inner aria describedby announcement texts for the accessibility.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control.\n\t * @returns {String}\n\t */\n\tInputBaseRenderer.getDescribedByAnnouncement = function(oControl) {\n\t\treturn oControl.getTooltip_AsString() || \"\";\n\t};\n\n\t/**\n\t * Renders the hidden aria labelledby node for the accessibility.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.renderAriaDescribedBy = function(oRm, oControl) {\n\t\tvar sAnnouncement = this.getDescribedByAnnouncement(oControl);\n\t\tif (sAnnouncement) {\n\t\t\toRm.write(\"<span\");\n\t\t\toRm.writeAttribute(\"id\", oControl.getId() + \"-describedby\");\n\t\t\toRm.writeAttribute(\"aria-hidden\", \"true\");\n\t\t\toRm.addClass(\"sapUiInvisibleText\");\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\toRm.writeEscaped(sAnnouncement.trim());\n\t\t\toRm.write(\"</span>\");\n\t\t}\n\t};\n\n\t/**\n\t * Returns the accessibility state of the control.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control.\n\t * @returns {Object}\n\t */\n\tInputBaseRenderer.getAccessibilityState = function(oControl) {\n\t\tvar sAriaLabelledBy = this.getAriaLabelledBy(oControl),\n\t\t\tsAriaDescribedBy = this.getAriaDescribedBy(oControl),\n\t\t\tsRole = this.getAriaRole(oControl),\n\t\t\tmAccessibilityState = { };\n\n\t\tif (sRole) {\n\t\t\tmAccessibilityState.role = sRole;\n\t\t}\n\n\t\tif (oControl.getValueState() === ValueState.Error) {\n\t\t\tmAccessibilityState.invalid = true;\n\t\t}\n\n\t\tif (sAriaLabelledBy) {\n\t\t\tmAccessibilityState.labelledby = {\n\t\t\t\tvalue: sAriaLabelledBy.trim(),\n\t\t\t\tappend: true\n\t\t\t};\n\t\t}\n\n\t\tif (sAriaDescribedBy) {\n\t\t\tmAccessibilityState.describedby = {\n\t\t\t\tvalue: sAriaDescribedBy.trim(),\n\t\t\t\tappend: true\n\t\t\t};\n\t\t}\n\n\t\treturn mAccessibilityState;\n\t};\n\n\t/**\n\t * Writes the accessibility state of the control.\n\t * Hook for the subclasses.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.writeAccessibilityState = function(oRm, oControl) {\n\t\toRm.writeAccessibilityState(oControl, this.getAccessibilityState(oControl));\n\t};\n\n\t/**\n\t * Write the opening tag name of the input.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.openInputTag = function(oRm, oControl) {\n\t\toRm.write(\"<input\");\n\t};\n\n\t/**\n\t * Write the value of the input.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.writeInnerValue = function(oRm, oControl) {\n\t\toRm.writeAttributeEscaped(\"value\", oControl.getValue());\n\t};\n\n\t/**\n\t * Add cursor class to input container.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addCursorClass = function(oRm, oControl) {};\n\n\t/**\n\t * Add a padding class to input container.\n\t * May be overwritten by subclasses.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addPaddingClass = function(oRm, oControl) {\n\t\toRm.addClass(\"sapMInputBaseWidthPadding\");\n\t};\n\n\t/**\n\t * This method is reserved for derived class to add extra styles for input container.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addOuterStyles = function(oRm, oControl) {};\n\n\n\t/**\n\t * This method is reserved for derived class to set width inline style\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addControlWidth = function(oRm, oControl) {\n\t\tif (oControl.getWidth()) {\n\t\t\toRm.addStyle(\"width\", oControl.getWidth());\n\t\t}\n\t};\n\t/**\n\t * This method is reserved for derived classes to add extra classes for input container.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addOuterClasses = function(oRm, oControl) {};\n\n\t/**\n\t * This method is reserved for derived class to add extra attributes for input container.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.writeOuterAttributes = function(oRm, oControl) {};\n\n\t/**\n\t * This method is reserved for derived classes to add extra styles for input element.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addInnerStyles = function(oRm, oControl) {};\n\n\t/**\n\t * This method is reserved for derived classes to add extra styles for input element.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addWrapperStyles = function(oRm, oControl) {};\n\n\t/**\n\t * This method is reserved for derived classes to add extra classes for input element.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addInnerClasses = function(oRm, oControl) {};\n\n\t/**\n\t * This method is reserved for derived classes to add extra attributes for the input element.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.writeInnerAttributes = function(oRm, oControl) {};\n\n\t/**\n\t * This method is reserved for derived classes to prepend inner content.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.prependInnerContent = function(oRm, oControl) {};\n\n\t/**\n\t * Write the value of the input.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.writeInnerContent = function(oRm, oControl) {};\n\n\t/**\n\t * Write the decorations of the input - description and value-help icon.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.writeDecorations = function(oRm, oControl) {};\n\n\t/**\n\t * Write the closing tag name of the input.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.closeInputTag = function(oRm, oControl) {};\n\n\t/**\n\t * This method is reserved for derived classes to add extra styles for the placeholder, if rendered as label.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addPlaceholderStyles = function(oRm, oControl) {};\n\n\t/**\n\t * Adds custom placeholder classes, if native placeholder is not used.\n\t * To be overwritten by subclasses.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addPlaceholderClasses = function(oRm, oControl) {\n\t\toRm.addClass(\"sapMInputBasePlaceholder\");\n\t};\n\n\t/**\n\t * Add the CSS value state classes to the input element using the provided {@link sap.ui.core.RenderManager}.\n\t * May be overwritten by subclasses.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addValueStateInnerClasses = function(oRm, oControl) {\n\t\toRm.addClass(\"sapMInputBaseStateInner\");\n\t\toRm.addClass(\"sapMInputBase\" + oControl.getValueState() + \"Inner\");\n\t};\n\n\t/**\n\t * Add the CSS value state classes to the control's root element using the provided {@link sap.ui.core.RenderManager}.\n\t * To be overwritten by subclasses.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.addValueStateClasses = function(oRm, oControl) {\n\t\toRm.addClass(\"sapMInputBaseState\");\n\t\toRm.addClass(\"sapMInputBase\" + oControl.getValueState());\n\t};\n\n\t/**\n\t * Write the id of the inner input\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm The RenderManager that can be used for writing to the render output buffer.\n\t * @param {sap.ui.core.Control} oControl An object representation of the control that should be rendered.\n\t */\n\tInputBaseRenderer.writeInnerId = function(oRm, oControl) {\n\t\toRm.writeAttribute(\"id\", oControl.getId() + \"-inner\");\n\t};\n\n\treturn InputBaseRenderer;\n\n}, /* bExport= */ true);\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/InputBaseRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['./NavContainerRenderer', 'sap/ui/core/Renderer', 'sap/m/library'],\n\tfunction(NavContainerRenderer, Renderer, library) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.m.BackgroundHelper\n\tvar BackgroundHelper = library.BackgroundHelper;\n\n\n\t/**\n\t * App renderer.\n\t * @namespace\n\t */\n\tvar AppRenderer = {\n\t};\n\n\tvar AppRenderer = Renderer.extend(NavContainerRenderer);\n\n\tAppRenderer.renderAttributes = function(rm, oControl) {\n\t\tBackgroundHelper.addBackgroundColorStyles(rm, oControl.getBackgroundColor(),  oControl.getBackgroundImage());\n\t};\n\n\tAppRenderer.renderBeforeContent = function(rm, oControl) {\n\t\tBackgroundHelper.renderBackgroundImageTag(rm, oControl, \"sapMAppBG\",  oControl.getBackgroundImage(), oControl.getBackgroundRepeat(), oControl.getBackgroundOpacity());\n\t};\n\n\n\treturn AppRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/AppRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define([],\n\tfunction() {\n\t\"use strict\";\n\n\n\t/**\n\t * Page renderer.\n\t * @namespace\n\t */\n\tvar PageRenderer = {};\n\n\t/**\n\t * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the Render-Output-Buffer\n\t * @param {sap.m.Page} oPage an object representation of the control that should be rendered\n\t */\n\tPageRenderer.render = function(oRm, oPage) {\n\t\tvar oHeader = null,\n\t\t\toFooter = null,\n\t\t\tbShowFooter = oPage.getShowFooter(),\n\t\t\toSubHeader = null,\n\t\t\tbLightHeader  = this._isLightHeader(oPage),\n\t\t\toLandmarkInfo = oPage.getLandmarkInfo();\n\n\t\tif (oPage.getShowHeader()) {\n\t\t\toHeader = oPage._getAnyHeader();\n\t\t}\n\n\t\tif (oPage.getShowSubHeader()) {\n\t\t\toSubHeader = oPage.getSubHeader();\n\t\t}\n\n\t\toFooter = oPage.getFooter();\n\n\t\toRm.write(\"<div\");\n\t\toRm.writeControlData(oPage);\n\t\toRm.addClass(\"sapMPage\");\n\n\t\toRm.addClass(\"sapMPageBg\" + oPage.getBackgroundDesign());\n\n\t\tif (oHeader) {\n\t\t\toRm.addClass(\"sapMPageWithHeader\");\n\t\t}\n\n\t\tif (oSubHeader) {\n\t\t\toRm.addClass(\"sapMPageWithSubHeader\");\n\t\t}\n\n\t\tif (oFooter && bShowFooter) {\n\t\t\t// it is used in the PopOver to remove additional margin bottom for page with footer\n\t\t\toRm.addClass(\"sapMPageWithFooter\");\n\t\t}\n\n\t\tif (!oPage.getContentOnlyBusy()) {\n\t\t\toRm.addClass(\"sapMPageBusyCoversAll\");\n\t\t}\n\n\t\tif (oPage.getFloatingFooter()) {\n\t\t\toRm.addClass(\"sapMPageFloatingFooter\");\n\t\t}\n\n\t\toRm.writeClasses();\n\n\t\tvar sTooltip = oPage.getTooltip_AsString();\n\n\t\tif (sTooltip) {\n\t\t\toRm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"Root\"));\n\n\t\toRm.write(\">\");\n\n\t\tif (oHeader) {\n\t\t\tvar sHeaderTag = oPage._getHeaderTag(oLandmarkInfo);\n\t\t\t// Header\n\t\t\toRm.write(\"<\" + sHeaderTag);\n\t\t\toRm.addClass(\"sapMPageHeader\");\n\t\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"Header\"));\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\t//render headers\n\t\t\tthis.renderBarControl(oRm, oPage, oHeader, {\n\t\t\t\tcontext: \"header\",\n\t\t\t\tstyleClass: bLightHeader ? \"\" : \"sapContrastPlus\"\n\t\t\t});\n\t\t\toRm.write(\"</\" + sHeaderTag + \">\");\n\t\t}\n\n\t\tif (oSubHeader) {\n\t\t\tvar sSubHeaderTag = oPage._getSubHeaderTag(oLandmarkInfo);\n\t\t\t// SubHeader\n\t\t\toRm.write(\"<\" + sSubHeaderTag);\n\t\t\toRm.addClass(\"sapMPageSubHeader\");\n\t\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"SubHeader\"));\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\tthis.renderBarControl(oRm, oPage, oSubHeader, {\n\t\t\t\tcontext: \"subHeader\",\n\t\t\t\tstyleClass: bLightHeader ? \"\" : \"sapContrastPlus\"\n\t\t\t});\n\t\t\toRm.write(\"</\" + sSubHeaderTag + \">\");\n\t\t}\n\n\t\t// render child controls\n\t\toRm.write('<section id=\"' + oPage.getId() + '-cont\"');\n\n\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"Content\"));\n\n\t\t// The vertical scroll bar should be immediately available to avoid flickering\n\t\t// and reduce size recalculations of embedded responsive controls that rely on\n\t\t// the page content width. See ScrollEnablement.js: _setOverflow\n\t\tif (oPage.getEnableScrolling()) {\n\t\t\toRm.addClass(\"sapMPageEnableScrolling\");\n\t\t\toRm.writeClasses();\n\t\t}\n\n\t\toRm.write('>');\n\n\t\tvar aContent = oPage.getContent();\n\t\tvar l = aContent.length;\n\n\t\tfor (var i = 0; i < l; i++) {\n\t\t\toRm.renderControl(aContent[i]);\n\t\t}\n\n\t\toRm.write(\"</section>\");\n\n\t\t// render footer Element\n\t\t// if a footer is defined, it should always be rendered\n\t\t// otherwise animation on show/hide won't work always\n\n\t\tif (oFooter) {\n\t\t\tvar sFooterTag = oPage._getFooterTag(oLandmarkInfo);\n\n\t\t\toRm.write(\"<\" + sFooterTag);\n\t\t\toRm.addClass(\"sapMPageFooter\");\n\t\t\tif (!oPage.getShowFooter()) {\n\t\t\t\toRm.addClass(\"sapUiHidden\");\n\t\t\t}\n\t\t\toRm.writeAccessibilityState(oPage, oPage._formatLandmarkInfo(oLandmarkInfo, \"Footer\"));\n\t\t\toRm.writeClasses();\n\t\t\toRm.write(\">\");\n\t\t\tthis.renderBarControl(oRm, oPage, oFooter, {\n\t\t\t\tcontext : \"footer\"\n\t\t\t});\n\t\t\toRm.write(\"</\" + sFooterTag + \">\");\n\t\t}\n\n\t\toRm.write(\"</div>\");\n\t};\n\n\t/**\n\t * Renders the bar control if it is defined. Also adds classes to it.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the Render-Output-Buffer\n\t * @param {sap.m.Page} oPage\n\t * @param {sap.m.IBar} oBarControl the RenderManager that can be used for writing to the Render-Output-Buffer\n\t * @param {object} oOptions object containing the tag, contextClass and styleClass added to the bar\n\t */\n\tPageRenderer.renderBarControl = function (oRm, oPage, oBarControl, oOptions) {\n\t\tif (!oBarControl) {\n\t\t\treturn;\n\t\t}\n\n\t\toBarControl._applyContextClassFor(oOptions.context.toLowerCase());\n\n\t\toBarControl.addStyleClass(oOptions.styleClass || \"\");\n\n\t\toRm.renderControl(oBarControl);\n\t};\n\n\t/**\n\t *\tCheck whether THIS page is used in scenario where its header should be light\n\t *\tImportant for Belize styling\n\t *\n\t * @param {sap.m.Page} oPage\n\t * @returns {boolean}\n\t * @private\n\t */\n\tPageRenderer._isLightHeader = function (oPage) {\n\t\tvar oChild = oPage,\n\t\t\toParent = oPage.getParent(),\n\t\t\tsParentName,\n\t\t\tsChildName;\n\n\t\t// Loop back to the top to check if there's SplitContainer OR SplitApp OR QuickView and then check if child elem is\n\t\t// sap.m.NavContainer and this Nav container is the master\n\t\twhile (oParent) {\n\t\t\tsParentName = (oParent && oParent.getMetadata().getName()) || \"\";\n\t\t\tsChildName = oChild.getMetadata().getName();\n\n\t\t\tif ((sParentName === \"sap.m.Popover\" || sParentName === \"sap.m.Dialog\")\n\t\t\t\t&& sChildName === \"sap.m.NavContainer\") {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (oParent && [\"sap.m.SplitApp\", \"sap.m.SplitContainer\"].indexOf(sParentName) > -1\n\t\t\t\t&& sChildName === \"sap.m.NavContainer\" && /\\-Master$/.test(oChild.getId())) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\toChild = oParent;\n\t\t\toParent = oChild.getParent();\n\t\t}\n\n\t\treturn false;\n\t};\n\n\treturn PageRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/PageRenderer.js","require(\"sap/m/themes/base/Title.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n /**\n  * @typedef {Object} sap.m.Title\n  * @typedef {Object} sap.ui.core.Title\n  */\n// Provides control sap.m.Title.\nsap.ui.define(['jquery.sap.global', 'sap/ui/core/Control', './library', 'sap/ui/core/library'],\n\tfunction(jQuery, Control, library, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextAlign\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.ui.core.TitleLevel\n\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\t/**\n\t * Constructor for a new Title control.\n\t *\n\t * @param {string} [sId] Id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * The Title control represents a single line of text with explicit header / title semantics.\n\t * @extends sap.ui.core.Control\n\t * @implements sap.ui.core.IShrinkable\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t * @since 1.27.0\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.Title\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar Title = Control.extend(\"sap.m.Title\", /** @lends sap.m.Title.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tinterfaces : [\n\t\t\t \"sap.ui.core.IShrinkable\"\n\t\t],\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Defines the text which should be displayed as a title.\n\t\t\t */\n\t\t\ttext : {type : \"string\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the semantic level of the title.\n\t\t\t * This information is e.g. used by assistive technologies like screenreaders to create a hierarchical site map for faster navigation.\n\t\t\t * Depending on this setting either an HTML h1-h6 element is used or when using level <code>Auto</code> no explicit level information is written (HTML5 header element).\n\t\t\t * This property does not influence the style of the control. Use the property <code>titleStyle</code> for this purpose instead.\n\t\t\t */\n\t\t\tlevel : {type : \"sap.ui.core.TitleLevel\", group : \"Appearance\", defaultValue : TitleLevel.Auto},\n\n\t\t\t/**\n\t\t\t * Defines the style of the title.\n\t\t\t * When using the <code>Auto</code> styling, the appearance of the title depends on the current position of the title (e.g. inside a <code>Toolbar</code>).\n\t\t\t * This default behavior can be overridden by setting a different style explicitly.\n\t\t\t * The actual appearance of the title and the different styles always depends on the theme being used.\n\t\t\t */\n\t\t\ttitleStyle : {type : \"sap.ui.core.TitleLevel\", group : \"Appearance\", defaultValue : TitleLevel.Auto},\n\n\t\t\t/**\n\t\t\t * Defines the width of the title.\n\t\t\t */\n\t\t\twidth : {type : \"sap.ui.core.CSSSize\", group : \"Dimension\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the alignment of the text within the title. <b>Note:</b> This property only has an effect if the overall width of the title control is\n\t\t\t * larger than the displayed text.\n\t\t\t */\n\t\t\ttextAlign : {type : \"sap.ui.core.TextAlign\", group : \"Appearance\", defaultValue : TextAlign.Initial},\n\n\t\t\t/**\n\t\t\t * Enables text wrapping.\n\t\t\t * <b>Note:</b> Wrapping must only be activated if the surrounding container allows flexible heights.\n\t\t\t * @since 1.52\n\t\t\t */\n\t\t\twrapping : {type : \"boolean\", group : \"Appearance\", defaultValue : false}\n\n\t\t},\n\t\tassociations : {\n\n\t\t\t/**\n\t\t\t * Defines a relationship to a generic title description.\n\t\t\t * If such a title element is associated, the properties text, level and tooltip (text only) of this element are consumed.\n\t\t\t * The corresponding properties of the title control are ignored.\n\t\t\t */\n\t\t\ttitle : {type : \"sap.ui.core.Title\", multiple : false}\n\t\t},\n\t\tdesignTime: true\n\n\t}});\n\n\t/**\n\t * Sets text within the title.\n\t *\n\t * @name sap.m.Title.setText\n\t * @method\n\t * @public\n\t * @param {string} sText Text that will be set for the title.\n\t * @returns {sap.m.Title} this Title reference for chaining.\n\t */\n\tTitle.prototype.setText = function(sText) {\n\t\tvar oRef = this.getDomRef(\"inner\");\n\t\tvar bPatchDom = oRef && !this._getTitle();\n\t\tthis.setProperty(\"text\", sText, bPatchDom);\n\t\tif (bPatchDom) {\n\t\t\toRef.innerHTML = jQuery.sap.encodeHTML(this.getText() || \"\");\n\t\t}\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Gets the currently set title.\n\t *\n\t * @name sap.m.Title._getTitle\n\t * @method\n\t * @private\n\t * @returns {sap.m.Title} Instance of the associated sap.ui.core.Title if exists.\n\t */\n\tTitle.prototype._getTitle = function(){\n\t\tvar sTitle = this.getTitle();\n\n\t\tif (sTitle) {\n\t\t\tvar oTitle = sap.ui.getCore().byId(sTitle);\n\t\t\tif (oTitle && oTitle instanceof sap.ui.core.Title) {\n\t\t\t\treturn oTitle;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\t/**\n\t * Title on change handler.\n\t *\n\t * @name sap.m.Title._onTitleChanged\n\t * @method\n\t * @private\n\t */\n\tTitle.prototype._onTitleChanged = function(){\n\t\tthis.invalidate();\n\t};\n\n\t/**\n\t * Sets the title for a <code>sap.m.Title</code> or <code>sap.ui.core.Title</code>\n\t *\n\t * @name sap.m.Title.setTitle\n\t * @method\n\t * @public\n\t * @param {sap.m.Title|sap.ui.core.Title} vTitle Given variant of the a title which can be <code>sap.m.Title</code> or <code>sap.ui.core.Title</code>.\n\t * @returns {sap.m.Title} this Title reference for chaining.\n\t */\n\tTitle.prototype.setTitle = function(vTitle){\n\t\tvar that = this;\n\n\t\tvar oOldTitle = this._getTitle();\n\t\tif (oOldTitle) {\n\t\t\toOldTitle.invalidate = oOldTitle.__sapui5_title_originvalidate;\n\t\t\toOldTitle.exit = oOldTitle.__sapui5_title_origexit;\n\t\t\tdelete oOldTitle.__sapui5_title_origexit;\n\t\t\tdelete oOldTitle.__sapui5_title_originvalidate;\n\t\t}\n\n\t\tthis.setAssociation(\"title\", vTitle);\n\n\t\tvar oNewTitle = this._getTitle();\n\t\tif (oNewTitle) {\n\t\t\toNewTitle.__sapui5_title_originvalidate = oNewTitle.invalidate;\n\t\t\toNewTitle.__sapui5_title_origexit = oNewTitle.exit;\n\t\t\toNewTitle.exit = function() {\n\t\t\t\tthat._onTitleChanged();\n\t\t\t\tif (this.__sapui5_title_origexit) {\n\t\t\t\t\tthis.__sapui5_title_origexit.apply(this, arguments);\n\t\t\t\t}\n\t\t\t};\n\t\t\toNewTitle.invalidate = function() {\n\t\t\t\tthat._onTitleChanged();\n\t\t\t\tthis.__sapui5_title_originvalidate.apply(this, arguments);\n\t\t\t};\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Gets the accessibility information for the <code>sap.m.Title</code> control.\n\t *\n\t * @name sap.m.Title.getAccessibilityInfo\n\t * @method\n\t * @protected\n\t * @see sap.ui.core.Control#getAccessibilityInfo\n\t */\n\tTitle.prototype.getAccessibilityInfo = function() {\n\t\tvar oTitle = this._getTitle() || this;\n\t\treturn {\n\t\t\trole: \"heading\",\n\t\t\tdescription: oTitle.getText(),\n\t\t\tfocusable: false\n\t\t};\n\t};\n\n\treturn Title;\n\n});\n\njQuery.sap.setObject(\"sap.m.TitleRenderer\", require(\"sap/m/TitleRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/Title.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.SegmentedButtonItem.\nsap.ui.define(['./library', 'sap/ui/core/Item', 'sap/m/Button', 'sap/ui/core/CustomStyleClassSupport'],\n\tfunction(library, Item, Button, CustomStyleClassSupport) {\n\t\t\"use strict\";\n\n\n\n\t\t/**\n\t\t * Constructor for a new <code>SegmentedButtonItem</code>.\n\t\t *\n\t\t * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n\t\t * @param {object} [mSettings] Initial settings for the new control\n\t\t *\n\t\t * @class\n\t\t * Used for creating buttons for the {@link sap.m.SegmentedButton}.\n\t\t * It is derived from the {@link sap.ui.core.Item}.\n\t\t * @extends sap.ui.core.Item\n\t\t *\n\t\t * @author SAP SE\n\t\t * @version 1.52.3\n\t\t *\n\t\t * @constructor\n\t\t * @public\n\t\t * @since 1.28\n\t\t * @alias sap.m.SegmentedButtonItem\n\t\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t\t */\n\t\tvar SegmentedButtonItem = Item.extend(\"sap.m.SegmentedButtonItem\", /** @lends sap.m.SegmentedButtonItem.prototype */ { metadata : {\n\n\t\t\tlibrary : \"sap.m\",\n\t\t\tproperties : {\n\n\t\t\t\t/**\n\t\t\t\t * The icon, which belongs to the button.\n\t\t\t\t * This can be a URI to an image or an icon font URI.\n\t\t\t\t */\n\t\t\t\ticon : {type : \"string\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t\t/**\n\t\t\t\t * Whether the button should be visible on the screen. If set to false, a placeholder is rendered instead of the real button.\n\t\t\t\t */\n\t\t\t\tvisible : {type: \"boolean\", group : \"Appearance\", defaultValue: true},\n\n\t\t\t\t/**\n\t\t\t\t * Sets the width of the buttons.\n\t\t\t\t */\n\t\t\t\twidth : {type : \"sap.ui.core.CSSSize\", group : \"Dimension\", defaultValue : null}\n\n\t\t\t},\n\t\t\tevents: {\n\n\t\t\t\t/**\n\t\t\t\t * Fires when the user clicks on an individual button.\n\t\t\t\t */\n\t\t\t\tpress : {}\n\t\t\t}\n\n\t\t}});\n\n\t\t// Add custom style class support\n\t\tCustomStyleClassSupport.apply(SegmentedButtonItem.prototype);\n\n\t\t/**\n\t\t * Called once during the element's initialization\n\t\t * @override\n\t\t * @protected\n\t\t */\n\t\tSegmentedButtonItem.prototype.init = function () {\n\t\t\t// Create internal button with a stable ID\n\t\t\tvar oButton = new Button(this.getId() + \"-button\");\n\n\t\t\t// Create objects first so they can be referenced in the button\n\t\t\tthis.aCustomStyleClasses;\n\t\t\tthis.mCustomStyleClassMap;\n\n\t\t\t// Reference's between button and item objects related to customStyleClasses so they will be in sync\n\t\t\toButton.aCustomStyleClasses = this.aCustomStyleClasses;\n\t\t\toButton.mCustomStyleClassMap = this.mCustomStyleClassMap;\n\n\t\t\t// Attach CustomData and LayoutData function copy's with bound context to the button\n\t\t\toButton.getCustomData = this.getCustomData.bind(this);\n\t\t\toButton.getLayoutData = this.getLayoutData.bind(this);\n\n\t\t\t// Hook on firePress method of the button so we can fire local press event also\n\t\t\toButton.firePress = function () {\n\t\t\t\tthis.firePress();\n\t\t\t\tButton.prototype.firePress.call(oButton);\n\t\t\t}.bind(this);\n\n\t\t\t// We return DOM reference from the button so for example CustomData.setKey method checks\n\t\t\t// for parent DOM reference and does a live update only of the attribute.\n\t\t\tthis.getDomRef = oButton.getDomRef.bind(oButton);\n\n\t\t\t// Keep in mind that we are using property instead of private aggregation because\n\t\t\t// we need to add this button to the SegmentedButton buttons aggregation\n\t\t\tthis.oButton = oButton;\n\t\t};\n\n\t\t/**\n\t\t * Cleanup\n\t\t * @override\n\t\t * @protected\n\t\t */\n\t\tSegmentedButtonItem.prototype.exit = function () {\n\t\t\t// Destroy button only in case of standalone use\n\t\t\t// In case the element is set as aggregation of the SegmentedButton the latter one takes care for the cleanup\n\t\t\tif (this.oButton && !(this.oButton.getParent() instanceof sap.m.SegmentedButton)) {\n\t\t\t\tthis.oButton.destroy();\n\t\t\t\tthis.oButton = null;\n\t\t\t}\n\t\t};\n\n\t\tSegmentedButtonItem.prototype.setText = function (sValue) {\n\t\t\tthis.setProperty(\"text\", sValue, true);\n\t\t\tif (this.oButton) {\n\t\t\t\tthis.oButton.setText(this.getText());\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\tSegmentedButtonItem.prototype.setIcon = function (sValue) {\n\t\t\tthis.setProperty(\"icon\", sValue, true);\n\t\t\tif (this.oButton) {\n\t\t\t\tthis.oButton.setIcon(this.getIcon());\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\tSegmentedButtonItem.prototype.setEnabled = function (bValue) {\n\t\t\tthis.setProperty(\"enabled\", bValue, true);\n\t\t\tif (this.oButton) {\n\t\t\t\tthis.oButton.setEnabled(this.getEnabled());\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\tSegmentedButtonItem.prototype.setTextDirection = function (sValue) {\n\t\t\tthis.setProperty(\"textDirection\", sValue, true);\n\t\t\tif (this.oButton) {\n\t\t\t\tthis.oButton.setTextDirection(this.getTextDirection());\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\tSegmentedButtonItem.prototype.setVisible = function (bVisible) {\n\t\t\tthis.setProperty(\"visible\", bVisible, true);\n\t\t\tif (this.oButton) {\n\t\t\t\tthis.oButton.setVisible(bVisible);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\tSegmentedButtonItem.prototype.setWidth = function (sValue) {\n\t\t\tthis.setProperty(\"width\", sValue, true);\n\t\t\tif (this.oButton) {\n\t\t\t\tthis.oButton.setWidth(this.getWidth());\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\tSegmentedButtonItem.prototype.setTooltip = function (sValue) {\n\t\t\tthis.setAggregation(\"tooltip\", sValue, true);\n\t\t\tif (this.oButton) {\n\t\t\t\tthis.oButton.setTooltip(sValue);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\treturn SegmentedButtonItem;\n\n\t});\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/SegmentedButtonItem.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n/**\n * @namespace\n * @name sap.m.delegate.ValueState\n * @private\n */\n\nsap.ui.define(['jquery.sap.global', 'sap/ui/Device', 'sap/ui/base/Object', 'sap/ui/core/ValueStateSupport', 'sap/ui/core/Popup', 'sap/ui/core/library'],\n\tfunction(jQuery, Device, BaseObject, ValueStateSupport, Popup, coreLibrary) {\n\t\t\"use strict\";\n\n\t\t// shortcut for sap.ui.core.ValueState\n\t\tvar ValueState = coreLibrary.ValueState;\n\n\t\t/**\n\t\t * Creates a <code>sap.m.delegate.ValueState</code> delegate that can be attached to controls that require\n\t\t * a value state message popup.\n\t\t *\n\t\t * @example <caption>Example of usage:</caption>\n\t\t *\n\t\t * <pre>\n\t\t *\tMyControl.prototype.init = function() {\n\t\t *\t\tthis._oValueStateMessage = new ValueStateMessage(this);\n\t\t *\t};\n\t\t *\n\t\t *  MyControl.prototype.onfocusin = function(oEvent) {\n\t\t *  \tthis._oValueStateMessage.open();\n\t\t *  };\n\t\t *\n\t\t *  MyControl.prototype.onfocusout = function(oEvent) {\n\t\t *  \tthis._oValueStateMessage.close();\n\t\t *  };\n\t\t *\n\t\t *\tMyControl.prototype.exit = function() {\n\t\t *\n\t\t *\t\tif (this._oValueStateMessage) {\n\t\t *\t\t\tthis._oValueStateMessage.destroy();\n\t\t *\t\t}\n\t\t *\n\t\t *\t\tthis._oValueStateMessage = null;\n\t\t *\t};\n\t\t * </pre>\n\t\t *\n\t\t * <b>Preconditions:</b>\n\t\t * The given control must implement the following interface:\n\t\t *\n\t\t * <code>\n\t\t * .getValueState()\n\t\t * .getValueStateText()\n\t\t * .getFocusDomRef()\n\t\t * .getDomRefForValueStateMessage()\n\t\t * </code>\n\t\t *\n\t\t * @extends sap.ui.base.Object\n\t\t * @param {sap.ui.core.Control} oControl The control for which this value state message is the delegate\n\t\t * @constructor\n\t\t * @private\n\t\t * @alias sap.m.delegate.ValueState\n\t\t * @version 1.42\n\t\t * @author SAP SE\n\t\t */\n\t\tvar ValueStateMessage = BaseObject.extend(\"sap.m.delegate.ValueState\", /** @lends sap.m.delegate.ValueState.prototype */ {\n\t\t\tconstructor: function(oControl) {\n\t\t\t\tBaseObject.apply(this, arguments);\n\t\t\t\tthis._oControl = oControl;\n\t\t\t\tthis._oPopup = null;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Opens value state message popup.\n\t\t *\n\t\t * @protected\n\t\t */\n\t\tValueStateMessage.prototype.open = function() {\n\t\t\tvar oControl = this._oControl,\n\t\t\t\toPopup = this.getPopup(),\n\t\t\t\toMessageDomRef = this.createDom(),\n\t\t\t\tmDock = Popup.Dock,\n\t\t\t\t$Control = jQuery(oControl.getDomRefForValueStateMessage());\n\n\t\t\tif (!oControl || !oPopup || !oMessageDomRef) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toPopup.setContent(oMessageDomRef);\n\t\t\toPopup.close(0);\n\t\t\tif (oPopup.getContent()) {\n\t\t\t\toPopup.getContent().style.maxWidth = oControl.getDomRef().offsetWidth + \"px\";\n\t\t\t} else {\n\t\t\t\toPopup.getContent().style.maxWidth = \"\";\n\t\t\t}\n\t\t\toPopup.open(\n\t\t\t\tthis.getOpenDuration(),\n\t\t\t\tmDock.BeginTop,\n\t\t\t\tmDock.BeginBottom,\n\t\t\t\toControl.getDomRefForValueStateMessage(),\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tDevice.system.phone ? true : Popup.CLOSE_ON_SCROLL\n\t\t\t);\n\n\t\t\tvar $DomRef = jQuery(oMessageDomRef);\n\n\t\t\t// check whether popup is below or above the input\n\t\t\tif ($Control.offset().top < $DomRef.offset().top) {\n\t\t\t\t$DomRef.addClass(\"sapMValueStateMessageBottom\");\n\t\t\t} else {\n\t\t\t\t$DomRef.addClass(\"sapMValueStateMessageTop\");\n\t\t\t}\n\n\t\t\tjQuery(oControl.getFocusDomRef()).addAriaDescribedBy(this.getId());\n\t\t};\n\n\t\t/**\n\t\t * Closes value state message popup.\n\t\t *\n\t\t * @protected\n\t\t */\n\t\tValueStateMessage.prototype.close = function() {\n\t\t\tvar oControl = this._oControl,\n\t\t\t\toPopup = this.getPopup();\n\n\t\t\tif (oPopup) {\n\t\t\t\toPopup.close(0);\n\t\t\t}\n\n\t\t\tif (oControl) {\n\t\t\t\tjQuery(oControl.getFocusDomRef()).removeAriaDescribedBy(this.getId());\n\t\t\t}\n\t\t};\n\n\t\tValueStateMessage.prototype.getId = function() {\n\t\t\tvar oControl = this._oControl;\n\n\t\t\tif (!oControl) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\treturn (typeof oControl.getValueStateMessageId === \"function\") ? oControl.getValueStateMessageId() : oControl.getId() + \"-message\";\n\t\t};\n\n\t\tValueStateMessage.prototype.getOpenDuration = function() {\n\t\t\tvar oControl = this._oControl;\n\n\t\t\tif (!oControl) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn (oControl.iOpenMessagePopupDuration === undefined) ? 0 : oControl.iOpenMessagePopupDuration;\n\t\t};\n\n\t\t/**\n\t\t * Creates the value state message popup.\n\t\t *\n\t\t * @param {string} [sID] ID for the new message popup; generated automatically if no ID is given\n\t\t * @returns {sap.ui.core.Popup} The popup instance object\n\t\t */\n\t\tValueStateMessage.prototype.createPopup = function(sID) {\n\t\t\tsID = sID || this.getId();\n\n\t\t\tif (this._oPopup) {\n\t\t\t\treturn this._oPopup;\n\t\t\t}\n\n\t\t\tthis._oPopup = new Popup(document.createElement(\"span\"), false, false, false);\n\t\t\tthis._oPopup.attachClosed(function() {\n\t\t\t\tjQuery.sap.byId(sID).remove();\n\t\t\t});\n\n\t\t\treturn this._oPopup;\n\t\t};\n\n\t\t/**\n\t\t * Gets the value state message popup, creating it if necessary by calling\n\t\t * the <code>createPopup()</code> method.\n\t\t *\n\t\t * @returns {sap.ui.core.Popup} The popup instance object\n\t\t */\n\t\tValueStateMessage.prototype.getPopup = function() {\n\n\t\t\tif (!this._oControl) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.createPopup();\n\t\t};\n\n\t\t/**\n\t\t * Creates the value state message HTML elements.\n\t\t *\n\t\t * @returns {object} The value state message root HTML element\n\t\t */\n\t\tValueStateMessage.prototype.createDom = function() {\n\t\t\tvar oControl = this._oControl;\n\n\t\t\tif (!oControl) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar sState = oControl.getValueState(),\n\t\t\t\tsText = oControl.getValueStateText() || ValueStateSupport.getAdditionalText(oControl),\n\t\t\t\tsClass = \"sapMValueStateMessage sapMValueStateMessage\" + sState,\n\t\t\t\toRB = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\n\t\t\tif (sState === ValueState.Success || sState === ValueState.None) {\n\t\t\t\tsClass = \"sapUiInvisibleText\";\n\t\t\t\tsText = \"\";\n\t\t\t}\n\n\t\t\tvar sID = this.getId();\n\t\t\tvar oMessageDomRef = document.createElement(\"div\");\n\t\t\toMessageDomRef.id = sID;\n\t\t\toMessageDomRef.className = sClass;\n\t\t\toMessageDomRef.setAttribute(\"role\", \"tooltip\");\n\t\t\toMessageDomRef.setAttribute(\"aria-live\", \"assertive\");\n\n\t\t\tvar oAccDomRef = document.createElement(\"span\");\n\t\t\toAccDomRef.id = sID + \"hidden\";\n\t\t\toAccDomRef.className = \"sapUiHidden\";\n\t\t\toAccDomRef.setAttribute(\"aria-hidden\", \"true\");\n\n\t\t\tif (sState !== ValueState.None) {\n\t\t\t\toAccDomRef.appendChild(document.createTextNode(oRB.getText(\"INPUTBASE_VALUE_STATE_\" + sState.toUpperCase())));\n\t\t\t}\n\n\t\t\tvar oTextDomRef = document.createElement(\"span\");\n\t\t\toTextDomRef.id = sID + \"-text\";\n\t\t\toTextDomRef.setAttribute(\"aria-hidden\", \"true\");\n\t\t\toTextDomRef.appendChild(document.createTextNode(sText));\n\n\t\t\toMessageDomRef.appendChild(oAccDomRef);\n\t\t\toMessageDomRef.appendChild(oTextDomRef);\n\t\t\treturn oMessageDomRef;\n\t\t};\n\n\t\tValueStateMessage.prototype.destroy = function() {\n\n\t\t\tif (this._oPopup) {\n\t\t\t\tthis._oPopup.destroy();\n\t\t\t\tthis._oPopup = null;\n\t\t\t}\n\n\t\t\tthis._oControl = null;\n\t\t};\n\n\t\treturn ValueStateMessage;\n\t});\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/delegate/ValueStateMessage.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides class sap.m.GrowingEnablement\nsap.ui.define(['jquery.sap.global', 'sap/ui/base/Object', 'sap/ui/core/format/NumberFormat', 'sap/m/library', 'sap/ui/model/ChangeReason', 'sap/ui/base/ManagedObjectMetadata'],\n\tfunction(jQuery, BaseObject, NumberFormat, library, ChangeReason, ManagedObjectMetadata) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.m.ListGrowingDirection\n\tvar ListGrowingDirection = library.ListGrowingDirection;\n\n\n\t/**\n\t * Creates a GrowingEnablement delegate that can be attached to ListBase Controls requiring capabilities for growing\n\t *\n\t * @extends sap.ui.base.Object\n\t * @alias sap.m.GrowingEnablement\n\t * @experimental Since 1.16. This class is experimental and provides only limited functionality. Also the API might be changed in future.\n\t *\n\t * @param {sap.m.ListBase} oControl the ListBase control of which this Growing is the delegate\n\t *\n\t * @constructor\n\t * @protected\n\t */\n\tvar GrowingEnablement = BaseObject.extend(\"sap.m.GrowingEnablement\", /** @lends sap.m.GrowingEnablement.prototype */ {\n\n\t\tconstructor : function(oControl) {\n\t\t\tBaseObject.apply(this);\n\t\t\tthis._oControl = oControl;\n\t\t\tthis._oControl.bUseExtendedChangeDetection = true;\n\t\t\tthis._oControl.addDelegate(this);\n\n\t\t\t/* init growing list */\n\t\t\tvar iRenderedItemsLength = this._oControl.getItems(true).length;\n\t\t\tthis._iRenderedDataItems = iRenderedItemsLength;\n\t\t\tthis._iLimit = iRenderedItemsLength;\n\t\t\tthis._bLoading = false;\n\t\t\tthis._sGroupingPath = \"\";\n\t\t\tthis._bDataRequested = false;\n\t\t\tthis._oContainerDomRef = null;\n\t\t\tthis._iTriggerTimer = 0;\n\t\t\tthis._aChunk = [];\n\t\t\tthis._oRM = null;\n\t\t},\n\n\t\t/**\n\t\t * Destroys this GrowingEnablement delegate.\n\t\t * This function must be called by the control which uses this delegate in the <code>exit</code> function.\n\t\t */\n\t\tdestroy : function() {\n\t\t\tif (this._oTrigger) {\n\t\t\t\tthis._oTrigger.destroy();\n\t\t\t\tthis._oTrigger = null;\n\t\t\t}\n\t\t\tif (this._oScrollDelegate) {\n\t\t\t\tthis._oScrollDelegate.setGrowingList(null);\n\t\t\t\tthis._oScrollDelegate = null;\n\t\t\t}\n\t\t\tif (this._oRM) {\n\t\t\t\tthis._oRM.destroy();\n\t\t\t\tthis._oRM = null;\n\t\t\t}\n\n\t\t\tthis._oControl.$(\"triggerList\").remove();\n\t\t\tthis._oControl.bUseExtendedChangeDetection = false;\n\t\t\tthis._oControl.removeDelegate(this);\n\t\t\tthis._oContainerDomRef = null;\n\t\t\tthis._oControl = null;\n\t\t},\n\n\t\t// renders load more trigger\n\t\trender : function(oRm) {\n\t\t\toRm.write(\"<div\");\n\t\t\toRm.addClass(\"sapMListUl\");\n\t\t\toRm.addClass(\"sapMGrowingList\");\n\t\t\toRm.writeAttribute(\"id\", this._oControl.getId() + \"-triggerList\");\n\t\t\toRm.addStyle(\"display\", \"none\");\n\t\t\toRm.writeClasses();\n\t\t\toRm.writeStyles();\n\t\t\toRm.write(\">\");\n\t\t\toRm.renderControl(this._getTrigger());\n\t\t\toRm.write(\"</div>\");\n\t\t},\n\n\t\tonAfterRendering : function() {\n\t\t\tvar oControl = this._oControl;\n\t\t\tif (oControl.getGrowingScrollToLoad()) {\n\t\t\t\tvar oScrollDelegate = library.getScrollDelegate(oControl);\n\t\t\t\tif (oScrollDelegate) {\n\t\t\t\t\tthis._oScrollDelegate = oScrollDelegate;\n\t\t\t\t\toScrollDelegate.setGrowingList(this.onScrollToLoad.bind(this), oControl.getGrowingDirection());\n\t\t\t\t}\n\t\t\t} else if (this._oScrollDelegate) {\n\t\t\t\tthis._oScrollDelegate.setGrowingList(null);\n\t\t\t\tthis._oScrollDelegate = null;\n\t\t\t}\n\n\t\t\tthis._updateTriggerDelayed(false);\n\t\t},\n\n\t\tsetTriggerText : function(sText) {\n\t\t\tthis._oControl.$(\"triggerText\").text(sText);\n\t\t},\n\n\t\t// reset paging\n\t\treset : function() {\n\t\t\tthis._iLimit = 0;\n\t\t},\n\n\t\t// determines growing reset with binding change reason\n\t\t// according to UX sort/filter/context should reset the growing\n\t\tshouldReset : function(sChangeReason) {\n\t\t\tvar mChangeReason = ChangeReason;\n\n\t\t\treturn \tsChangeReason == mChangeReason.Sort ||\n\t\t\t\t\tsChangeReason == mChangeReason.Filter ||\n\t\t\t\t\tsChangeReason == mChangeReason.Context;\n\t\t},\n\n\t\t// get actual and total info\n\t\tgetInfo : function() {\n\t\t\treturn {\n\t\t\t\ttotal : this._oControl.getMaxItemsCount(),\n\t\t\t\tactual : this._iRenderedDataItems\n\t\t\t};\n\t\t},\n\n\t\tonScrollToLoad: function() {\n\t\t\tif (!this._bLoading && this._oControl.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\tvar oScrollDelegate = this._oScrollDelegate;\n\t\t\t\tthis._oScrollPosition = {\n\t\t\t\t\tleft : oScrollDelegate.getScrollLeft(),\n\t\t\t\t\ttop : oScrollDelegate.getScrollHeight()\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.requestNewPage();\n\t\t},\n\n\t\t// call to request new page\n\t\trequestNewPage : function() {\n\t\t\tif (!this._oControl || this._bLoading) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if max item count not reached or if we do not know the count\n\t\t\tvar oBinding = this._oControl.getBinding(\"items\");\n\t\t\tif (oBinding && !oBinding.isLengthFinal() || this._iLimit < this._oControl.getMaxItemsCount()) {\n\t\t\t\t// The GrowingEnablement has its own busy indicator. Do not show the busy indicator, if existing, of the parent control.\n\t\t\t\tif (this._oControl.getMetadata().hasProperty(\"enableBusyIndicator\")) {\n\t\t\t\t\tthis._bParentEnableBusyIndicator = this._oControl.getEnableBusyIndicator();\n\t\t\t\t\tthis._oControl.setEnableBusyIndicator(false);\n\t\t\t\t}\n\n\t\t\t\tthis._iLimit += this._oControl.getGrowingThreshold();\n\t\t\t\tthis._updateTriggerDelayed(true);\n\t\t\t\tthis.updateItems(\"Growing\");\n\t\t\t}\n\t\t},\n\n\t\t// called before new page loaded\n\t\t_onBeforePageLoaded : function(sChangeReason) {\n\t\t\tthis._bLoading = true;\n\t\t\tthis._oControl.onBeforePageLoaded(this.getInfo(), sChangeReason);\n\t\t},\n\n\t\t// called after new page loaded\n\t\t_onAfterPageLoaded : function(sChangeReason) {\n\t\t\tthis._bLoading = false;\n\t\t\tthis._updateTriggerDelayed(false);\n\t\t\tthis._oControl.onAfterPageLoaded(this.getInfo(), sChangeReason);\n\n\t\t\t// After the data has been loaded, restore the busy indicator handling of the parent control.\n\t\t\tif (this._oControl.setEnableBusyIndicator) {\n\t\t\t\tthis._oControl.setEnableBusyIndicator(this._bParentEnableBusyIndicator);\n\t\t\t}\n\t\t},\n\n\t\t// created and returns load more trigger\n\t\t_getTrigger : function() {\n\t\t\tvar sTriggerID = this._oControl.getId() + \"-trigger\",\n\t\t\t\tsTriggerText = this._oControl.getGrowingTriggerText();\n\n\t\t\tsTriggerText = sTriggerText || sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LOAD_MORE_DATA\");\n\t\t\tthis._oControl.addNavSection(sTriggerID);\n\n\t\t\tif (this._oTrigger) {\n\t\t\t\tthis.setTriggerText(sTriggerText);\n\t\t\t\treturn this._oTrigger;\n\t\t\t}\n\n\t\t\t// The growing button is changed to span tag as h1 tag was semantically incorrect.\n\t\t\tthis._oTrigger = new sap.m.CustomListItem({\n\t\t\t\tid: sTriggerID,\n\t\t\t\tbusyIndicatorDelay: 0,\n\t\t\t\ttype: ListType.Active,\n\t\t\t\tcontent: new sap.ui.core.HTML({\n\t\t\t\t\tcontent:\t'<div class=\"sapMGrowingListTrigger\">' +\n\t\t\t\t\t\t\t\t\t'<div class=\"sapMSLITitleDiv sapMGrowingListTriggerText\">' +\n\t\t\t\t\t\t\t\t\t\t'<span class=\"sapMSLITitle\" id=\"' + sTriggerID + 'Text\">' + jQuery.sap.encodeHTML(sTriggerText) + '</span>' +\n\t\t\t\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t\t\t\t\t'<div class=\"sapMGrowingListDescription sapMSLIDescription\" id=\"' + sTriggerID + 'Info\"></div>' +\n\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t})\n\t\t\t}).setParent(this._oControl, null, true).attachPress(this.requestNewPage, this).addEventDelegate({\n\t\t\t\tonsapenter : function(oEvent) {\n\t\t\t\t\tthis.requestNewPage();\n\t\t\t\t\toEvent.preventDefault();\n\t\t\t\t},\n\t\t\t\tonsapspace : function(oEvent) {\n\t\t\t\t\tthis.requestNewPage();\n\t\t\t\t\toEvent.preventDefault();\n\t\t\t\t},\n\t\t\t\tonAfterRendering : function(oEvent) {\n\t\t\t\t\tthis._oTrigger.$().attr({\n\t\t\t\t\t\t\"tabindex\": 0,\n\t\t\t\t\t\t\"role\": \"button\",\n\t\t\t\t\t\t\"aria-labelledby\": sTriggerID + \"Text\" + \" \" + sTriggerID + \"Info\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\t// stop the eventing between item and the list\n\t\t\tthis._oTrigger.getList = function() {};\n\t\t\t// defines the tag name\n\t\t\tthis._oTrigger.TagName = \"div\";\n\n\t\t\treturn this._oTrigger;\n\t\t},\n\n\t\t// returns the growing information to be shown at the growing button\n\t\t_getListItemInfo : function() {\n\t\t\treturn (\"[ \" + this._iRenderedDataItems + \" / \" + NumberFormat.getFloatInstance().format(this._oControl.getMaxItemsCount()) + \" ]\");\n\t\t},\n\n\t\t// returns the first sorters grouping path when available\n\t\t_getGroupingPath : function(oBinding) {\n\t\t\tvar aSorters = oBinding.aSorters || [];\n\t\t\tvar oSorter = aSorters[0] || {};\n\t\t\treturn (oSorter.fnGroup) ? oSorter.sPath || \"\" : \"\";\n\t\t},\n\n\t\t// if table has pop-in then we have two rows for one item\n\t\t_getDomIndex : function(vIndex) {\n\t\t\tif (typeof vIndex != \"number\") {\n\t\t\t\treturn vIndex;\n\t\t\t}\n\n\t\t\tif (this._oControl.hasPopin && this._oControl.hasPopin()) {\n\t\t\t\treturn (vIndex * 2);\n\t\t\t}\n\n\t\t\treturn vIndex;\n\t\t},\n\n\t\t// determines if the scroll container of the list has enough scrollable area to hide the growing button\n\t\t_getHasScrollbars : function() {\n\t\t\tif (!this._oScrollDelegate) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this._iRenderedDataItems >= 40) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// after growing-button gets hidden scroll container should still be scrollable\n\t\t\treturn this._oScrollDelegate.getMaxScrollTop() > this._oControl.$(\"triggerList\").outerHeight();\n\t\t},\n\n\t\t// destroy all items in the list and cleanup\n\t\tdestroyListItems : function(bSuppressInvalidate) {\n\t\t\tthis._oControl.destroyItems(bSuppressInvalidate);\n\t\t\tthis._iRenderedDataItems = 0;\n\t\t\tthis._aChunk = [];\n\t\t},\n\n\t\t// appends single list item to the list\n\t\taddListItem : function(oContext, oBindingInfo, bSuppressInvalidate) {\n\n\t\t\tvar oControl = this._oControl,\n\t\t\t\toBinding = oBindingInfo.binding,\n\t\t\t\toItem = this.createListItem(oContext, oBindingInfo);\n\n\t\t\tif (oBinding.isGrouped()) {\n\t\t\t\t// creates group header if need\n\t\t\t\tvar aItems = oControl.getItems(true),\n\t\t\t\t\toLastItem = aItems[aItems.length - 1],\n\t\t\t\t\tsModelName = oBindingInfo.model,\n\t\t\t\t\toGroupInfo = oBinding.getGroup(oItem.getBindingContext(sModelName));\n\n\t\t\t\tif (oLastItem && oLastItem.isGroupHeader()) {\n\t\t\t\t\toControl.removeAggregation(\"items\", oLastItem, true);\n\t\t\t\t\tthis._fnAppendGroupItem = this.appendGroupItem.bind(this, oGroupInfo, oLastItem, bSuppressInvalidate);\n\t\t\t\t\toLastItem = aItems[aItems.length - 1];\n\t\t\t\t}\n\n\t\t\t\tif (!oLastItem || oGroupInfo.key !== oBinding.getGroup(oLastItem.getBindingContext(sModelName)).key) {\n\t\t\t\t\tvar oGroupHeader = (oBindingInfo.groupHeaderFactory) ? oBindingInfo.groupHeaderFactory(oGroupInfo) : null;\n\t\t\t\t\tif (oControl.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\t\t\tthis.applyPendingGroupItem();\n\t\t\t\t\t\tthis._fnAppendGroupItem = this.appendGroupItem.bind(this, oGroupInfo, oGroupHeader, bSuppressInvalidate);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.appendGroupItem(oGroupInfo, oGroupHeader, bSuppressInvalidate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toControl.addAggregation(\"items\", oItem, bSuppressInvalidate);\n\t\t\tif (bSuppressInvalidate) {\n\t\t\t\tthis._aChunk.push(oItem);\n\t\t\t}\n\t\t},\n\n\t\tapplyPendingGroupItem: function() {\n\t\t\tif (this._fnAppendGroupItem) {\n\t\t\t\tthis._fnAppendGroupItem();\n\t\t\t\tthis._fnAppendGroupItem = undefined;\n\t\t\t}\n\t\t},\n\n\t\tappendGroupItem: function(oGroupInfo, oGroupHeader, bSuppressInvalidate) {\n\t\t\toGroupHeader = this._oControl.addItemGroup(oGroupInfo, oGroupHeader, bSuppressInvalidate);\n\t\t\tif (bSuppressInvalidate) {\n\t\t\t\tthis._aChunk.push(oGroupHeader);\n\t\t\t}\n\t\t},\n\n\t\t// creates list item from the factory\n\t\tcreateListItem : function(oContext, oBindingInfo) {\n\t\t\tthis._iRenderedDataItems++;\n\t\t\tvar oItem = oBindingInfo.factory(ManagedObjectMetadata.uid(\"clone\"), oContext);\n\t\t\treturn oItem.setBindingContext(oContext, oBindingInfo.model);\n\t\t},\n\n\t\t// update context on all items except group headers\n\t\tupdateItemsBindingContext :  function(aContexts, oModel) {\n\t\t\tif (!aContexts.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar aItems = this._oControl.getItems(true);\n\t\t\tfor (var i = 0, c = 0, oItem; i < aItems.length; i++) {\n\t\t\t\toItem = aItems[i];\n\n\t\t\t\t// group headers are not in binding context\n\t\t\t\tif (!oItem.isGroupHeader()) {\n\t\t\t\t\toItem.setBindingContext(aContexts[c++], oModel);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// render all the collected items in the chunk and flush them into the DOM\n\t\t// vInsert whether to append (true) or replace (falsy) or to insert at a certain position (int)\n\t\tapplyChunk : function(vInsert, oDomRef) {\n\t\t\tthis.applyPendingGroupItem();\n\n\t\t\tvar iLength = this._aChunk.length;\n\t\t\tif (!iLength) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._oControl.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\tthis._aChunk.reverse();\n\t\t\t\tif (vInsert === true) {\n\t\t\t\t\tvInsert = 0;\n\t\t\t\t} else if (typeof vInsert == \"number\") {\n\t\t\t\t\tvInsert = this._iRenderedDataItems - iLength - vInsert;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toDomRef = oDomRef || this._oContainerDomRef;\n\t\t\tthis._oRM = this._oRM || sap.ui.getCore().createRenderManager();\n\n\t\t\tfor (var i = 0; i < iLength; i++) {\n\t\t\t\tthis._oRM.renderControl(this._aChunk[i]);\n\t\t\t}\n\n\t\t\tthis._oRM.flush(oDomRef, false, this._getDomIndex(vInsert));\n\t\t\tthis._aChunk = [];\n\t\t},\n\n\t\t// add multiple items to the list via BindingContext\n\t\taddListItems : function(aContexts, oBindingInfo, bSuppressInvalidate) {\n\t\t\tfor (var i = 0; i < aContexts.length; i++) {\n\t\t\t\tthis.addListItem(aContexts[i], oBindingInfo, bSuppressInvalidate);\n\t\t\t}\n\t\t},\n\n\t\t// destroy all the items and create from scratch\n\t\trebuildListItems : function(aContexts, oBindingInfo, bSuppressInvalidate) {\n\t\t\tthis.destroyListItems(bSuppressInvalidate);\n\t\t\tthis.addListItems(aContexts, oBindingInfo, bSuppressInvalidate);\n\t\t\tif (bSuppressInvalidate) {\n\t\t\t\tvar bHasFocus = this._oContainerDomRef.contains(document.activeElement);\n\t\t\t\tthis.applyChunk(false);\n\t\t\t\tbHasFocus && this._oControl.focus();\n\t\t\t} else {\n\t\t\t\tthis.applyPendingGroupItem();\n\t\t\t}\n\t\t},\n\n\t\t// inserts a single list item\n\t\tinsertListItem : function(oContext, oBindingInfo, iIndex) {\n\t\t\tvar oItem = this.createListItem(oContext, oBindingInfo);\n\t\t\tthis._oControl.insertAggregation(\"items\", oItem, iIndex, true);\n\t\t\tthis._aChunk.push(oItem);\n\t\t},\n\n\t\t// destroy a single list item\n\t\tdeleteListItem : function(iIndex) {\n\t\t\tthis._oControl.getItems(true)[iIndex].destroy(true);\n\t\t\tthis._iRenderedDataItems--;\n\t\t},\n\n\t\t/**\n\t\t * refresh items only for OData model.\n\t\t */\n\t\trefreshItems : function(sChangeReason) {\n\t\t\tif (!this._bDataRequested) {\n\t\t\t\tthis._bDataRequested = true;\n\t\t\t\tthis._onBeforePageLoaded(sChangeReason);\n\t\t\t}\n\n\t\t\t// set iItemCount to initial value if not set or no items at the control yet\n\t\t\tif (!this._iLimit || this.shouldReset(sChangeReason) || !this._oControl.getItems(true).length) {\n\t\t\t\tthis._iLimit = this._oControl.getGrowingThreshold();\n\t\t\t}\n\n\t\t\t// send the request to get the context\n\t\t\tthis._oControl.getBinding(\"items\").getContexts(0, this._iLimit);\n\t\t},\n\n\t\t/**\n\t\t * update control aggregation if contexts are already available\n\t\t * or send a request to get the contexts in case of ODATA model.\n\t\t */\n\t\tupdateItems : function(sChangeReason) {\n\t\t\tvar oControl = this._oControl,\n\t\t\t\toBinding = oControl.getBinding(\"items\"),\n\t\t\t\toBindingInfo = oControl.getBindingInfo(\"items\"),\n\t\t\t\taItems = oControl.getItems(true);\n\n\t\t\t// set limit to initial value if not set yet or no items at the control yet\n\t\t\tif (!this._iLimit || this.shouldReset(sChangeReason) || !aItems.length) {\n\t\t\t\tthis._iLimit = oControl.getGrowingThreshold();\n\t\t\t}\n\n\t\t\t// fire growing started event if data was requested this is a followup call of updateItems\n\t\t\tif (this._bDataRequested) {\n\t\t\t\tthis._bDataRequested = false;\n\t\t\t} else {\n\t\t\t\tthis._onBeforePageLoaded(sChangeReason);\n\t\t\t}\n\n\t\t\t// get the context from the binding or request will be sent\n\t\t\tvar aContexts = oBinding.getContexts(0, this._iLimit) || [];\n\n\t\t\t// if getContexts did cause a request to be sent, set the internal flag so growing started event is not fired again\n\t\t\tif (aContexts.dataRequested) {\n\t\t\t\tthis._bDataRequested = true;\n\n\t\t\t\t// a partial response may already be contained, so only return here without updating the list when diff is empty\n\t\t\t\tif (aContexts.diff && !aContexts.diff.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// cache dom ref for internal functions not to lookup again and again\n\t\t\tthis._oContainerDomRef = oControl.getItemsContainerDomRef();\n\n\t\t\t// aContexts.diff ==> undefined : New data we should build from scratch\n\t\t\t// aContexts.diff ==> [] : There is no diff, means data did not changed at all\n\t\t\t// aContexts.diff ==> [{index: 0, type: \"delete\"}, {index: 1, type: \"insert\"},...] : Run the diff logic\n\t\t\tvar aDiff = aContexts.diff,\n\t\t\t\tbFromScratch = false,\n\t\t\t\tvInsertIndex;\n\n\t\t\t// process the diff\n\t\t\tif (!aContexts.length) {\n\t\t\t\t// no context, destroy list items\n\t\t\t\tthis.destroyListItems();\n\t\t\t} else if (!this._oContainerDomRef) {\n\t\t\t\t// no dom ref for compatibility reason start from scratch\n\t\t\t\tthis.rebuildListItems(aContexts, oBindingInfo);\n\t\t\t} else if (!aDiff || !aItems.length && aDiff.length) {\n\t\t\t\t// new records need to be applied from scratch\n\t\t\t\tthis.rebuildListItems(aContexts, oBindingInfo, true);\n\t\t\t} else if (oBinding.isGrouped() || oControl.checkGrowingFromScratch()) {\n\n\t\t\t\tif (this._sGroupingPath != this._getGroupingPath(oBinding)) {\n\t\t\t\t\t// grouping is changed so we need to rebuild the list for the group headers\n\t\t\t\t\tbFromScratch = true;\n\t\t\t\t} else {\n\t\t\t\t\t// append items if possible\n\t\t\t\t\tfor (var i = 0; i < aDiff.length; i++) {\n\t\t\t\t\t\tvar oDiff = aDiff[i],\n\t\t\t\t\t\t\toContext = aContexts[oDiff.index];\n\n\t\t\t\t\t\tif (oDiff.type == \"delete\") {\n\t\t\t\t\t\t\t// group header may need to be deleted as well\n\t\t\t\t\t\t\tbFromScratch = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (oDiff.index != this._iRenderedDataItems) {\n\t\t\t\t\t\t\t// this item is not appended\n\t\t\t\t\t\t\tbFromScratch = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.addListItem(oContext, oBindingInfo, true);\n\t\t\t\t\t\t\tvInsertIndex = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif (this._sGroupingPath) {\n\t\t\t\t\t// if it was already grouped then we need to remove group headers first\n\t\t\t\t\toControl.removeGroupHeaders(true);\n\t\t\t\t}\n\n\t\t\t\tvInsertIndex = -1;\n\t\t\t\tvar iLastInsertIndex = -1;\n\t\t\t\tfor (var i = 0; i < aDiff.length; i++) {\n\t\t\t\t\tvar oDiff = aDiff[i],\n\t\t\t\t\t\tiDiffIndex = oDiff.index,\n\t\t\t\t\t\toContext = aContexts[iDiffIndex];\n\n\t\t\t\t\tif (oDiff.type == \"delete\") {\n\t\t\t\t\t\tif (vInsertIndex != -1) {\n\t\t\t\t\t\t\t// this record is deleted while the chunk is getting build\n\t\t\t\t\t\t\tthis.applyChunk(vInsertIndex);\n\t\t\t\t\t\t\tiLastInsertIndex = -1;\n\t\t\t\t\t\t\tvInsertIndex = -1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.deleteListItem(iDiffIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (vInsertIndex == -1) {\n\t\t\t\t\t\t\t// the subsequent of items needs to be inserted at this position\n\t\t\t\t\t\t\tvInsertIndex = iDiffIndex;\n\t\t\t\t\t\t} else if (iLastInsertIndex > -1 && iDiffIndex != iLastInsertIndex + 1) {\n\t\t\t\t\t\t\t// this item is not simply appended to the last one but has been inserted\n\t\t\t\t\t\t\tthis.applyChunk(vInsertIndex);\n\t\t\t\t\t\t\tvInsertIndex = iDiffIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.insertListItem(oContext, oBindingInfo, iDiffIndex);\n\t\t\t\t\t\tiLastInsertIndex = iDiffIndex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (bFromScratch) {\n\t\t\t\tthis.rebuildListItems(aContexts, oBindingInfo, true);\n\t\t\t} else if (this._oContainerDomRef && aDiff) {\n\t\t\t\t// set the binding context of items inserting/deleting entries shifts the index of all following items\n\t\t\t\tthis.updateItemsBindingContext(aContexts, oBindingInfo.model);\n\t\t\t\tthis.applyChunk(vInsertIndex);\n\t\t\t}\n\n\t\t\tthis._oContainerDomRef = null;\n\t\t\tthis._sGroupingPath = this._getGroupingPath(oBinding);\n\n\t\t\tif (!this._bDataRequested) {\n\t\t\t\tthis._onAfterPageLoaded(sChangeReason);\n\t\t\t}\n\t\t},\n\n\t\t_updateTriggerDelayed: function(bLoading) {\n\t\t\tif (this._oControl.getGrowingScrollToLoad()) {\n\t\t\t\tthis._iTriggerTimer && window.cancelAnimationFrame(this._iTriggerTimer);\n\t\t\t\tthis._iTriggerTimer = window.requestAnimationFrame(this._updateTrigger.bind(this, bLoading));\n\t\t\t} else {\n\t\t\t\tthis._updateTrigger(bLoading);\n\t\t\t}\n\t\t},\n\n\t\t// updates the trigger state\n\t\t_updateTrigger : function(bLoading) {\n\t\t\tvar oTrigger = this._oTrigger,\n\t\t\t\toControl = this._oControl;\n\n\t\t\t// If there are no visible columns then also hide the trigger.\n\t\t\tif (!oTrigger || !oControl || !oControl.shouldRenderItems()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oBinding = oControl.getBinding(\"items\");\n\t\t\tif (!oBinding) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// update busy state\n\t\t\toTrigger.setBusy(bLoading);\n\t\t\toTrigger.$().toggleClass(\"sapMGrowingListBusyIndicatorVisible\", bLoading);\n\n\t\t\tif (bLoading) {\n\t\t\t\toTrigger.setActive(false);\n\t\t\t\toControl.$(\"triggerList\").css(\"display\", \"\");\n\t\t\t} else {\n\t\t\t\tvar aItems = oControl.getItems(true),\n\t\t\t\t\tiItemsLength = aItems.length,\n\t\t\t\t\tiBindingLength = oBinding.getLength() || 0,\n\t\t\t\t\tbLengthFinal = oBinding.isLengthFinal(),\n\t\t\t\t\tbHasScrollToLoad = oControl.getGrowingScrollToLoad();\n\n\t\t\t\t// show, update or hide the growing button\n\t\t\t\tif (!iItemsLength || !this._iLimit ||\n\t\t\t\t\t(bLengthFinal && this._iLimit >= iBindingLength) ||\n\t\t\t\t\t(bHasScrollToLoad && this._getHasScrollbars())) {\n\t\t\t\t\toControl.$(\"triggerList\").css(\"display\", \"none\");\n\t\t\t\t\tif (document.activeElement === oTrigger.getDomRef()) {\n\t\t\t\t\t\toControl.$(\"after\").focus();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (bLengthFinal) {\n\t\t\t\t\t\toControl.$(\"triggerInfo\").css(\"display\", \"block\").text(this._getListItemInfo());\n\t\t\t\t\t}\n\n\t\t\t\t\toTrigger.$().removeClass(\"sapMGrowingListBusyIndicatorVisible\");\n\t\t\t\t\toControl.$(\"triggerList\").css(\"display\", \"\");\n\t\t\t\t}\n\n\t\t\t\t// at the beginning we should scroll to last item\n\t\t\t\tif (bHasScrollToLoad && this._oScrollPosition === undefined && oControl.getGrowingDirection() == ListGrowingDirection.Upwards) {\n\t\t\t\t\tthis._oScrollPosition = {\n\t\t\t\t\t\tleft : 0,\n\t\t\t\t\t\ttop : 0\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// scroll to last position\n\t\t\t\tif (iItemsLength > 0 && this._oScrollPosition) {\n\t\t\t\t\tvar oScrollDelegate = this._oScrollDelegate,\n\t\t\t\t\t\toScrollPosition = this._oScrollPosition;\n\n\t\t\t\t\toScrollDelegate.scrollTo(oScrollPosition.left, oScrollDelegate.getScrollHeight() - oScrollPosition.top);\n\t\t\t\t\tthis._oScrollPosition = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn GrowingEnablement;\n\n});\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/GrowingEnablement.js","require(\"sap/m/themes/sap_belize/CheckBox.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.CheckBox.\nsap.ui.define(['jquery.sap.global',\n\t'./Label',\n\t'./library',\n\t'sap/ui/Device',\n\t'sap/ui/core/Control',\n\t'sap/ui/core/IconPool',\n\t'sap/ui/core/EnabledPropagator',\n\t'sap/ui/core/library'],\n\tfunction(jQuery, Label, library, Device, Control, IconPool, EnabledPropagator, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.ValueState\n\tvar ValueState = coreLibrary.ValueState;\n\n\t// shortcut for sap.ui.core.TextAlign\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t/**\n\t * Constructor for a new <code>CheckBox</code>.\n\t *\n\t * @param {string} [sId] The ID for the new control, generated automatically if no ID is given\n\t * @param {object} [mSettings] The Initial settings for the new control\n\t *\n\t * @class\n\t * Allows the user to set a binary value, such as true/false or yes/no for an item.\n\t *\n\t * <h3>Overview</h3>\n\t *\n\t * The <code>CheckBox</code> control consists of a box and a label that describes its purpose.\n\t * If it's checked, an indicator is displayed inside the box.\n\t *\n\t * To select/deselect the <code>CheckBox</code>, the user has to click or tap the square box or its label.\n\t * Clicking or tapping toggles the <code>CheckBox</code> between checked and unchecked state.\n\t * The <code>CheckBox</code> control only has 2 states - checked and unchecked. There is no third\n\t * state for partially selected.\n\t *\n\t * <h3>Usage</h3>\n\t *\n\t * You can set the width of the element containing the box and the label manually with the use\n\t * of the <code>width<code> property. If the text exceeds the available width, it is truncated.\n\t *\n\t * <b>Note:</b> When <code>useEntireWidth</code> property is set to <code>true</code>, the value of the\n\t * <code>width</code> property is applied to the control as a whole (box and label). If\n\t * <code>useEntireWidth</code> is set to <code>false</code>, the <code>width</code> is applied to the label only.\n\t *\n\t * The touchable area for toggling the <code>CheckBox</code> ends where the text ends.\n\t *\n\t * If the width allows more space than the text requires, white space is added.\n\t * The text can be positioned manually in this space using the <code>textAlign<code> property.\n\t *\n\t * <b>Note:</b> Keep in mind that setting the <code>textAlign<code> property to <code>Right</code>\n\t * can result in a large amount of white space between the box and the text.\n\t *\n\t * You can disable the <code>CheckBox</code> by setting the <code>enabled</code> property to <code>false</code>,\n\t * or use the <code>CheckBox</code> in read-only mode by setting the <code>editable</code> property to false.\n\t *\n\t * <b>Note:</b> Disabled and read-only states shouldn't be used together.\n\t *\n\t * @extends sap.ui.core.Control\n\t * @implements sap.ui.core.IFormContent\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.CheckBox\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar CheckBox = Control.extend(\"sap.m.CheckBox\", /** @lends sap.m.CheckBox.prototype */ { metadata : {\n\n\t\tinterfaces : [\"sap.ui.core.IFormContent\"],\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Stores the state of the checkbox whether it is selected or not.\n\t\t\t */\n\t\t\tselected : {type : \"boolean\", group : \"Data\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Disables the Checkbox. Disabled controls are not interactive and are rendered differently according to the theme.\n\t\t\t */\n\t\t\tenabled : {type : \"boolean\", group : \"Behavior\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * The 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.\n\t\t\t */\n\t\t\tname : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the text displayed next to the checkbox\n\t\t\t */\n\t\t\ttext : {type : \"string\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Options for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n\t\t\t */\n\t\t\ttextDirection : {type : \"sap.ui.core.TextDirection\", group : \"Appearance\", defaultValue : TextDirection.Inherit},\n\n\t\t\t/**\n\t\t\t * Aligns the text of the checkbox. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\t\t\t */\n\t\t\ttextAlign : {type : \"sap.ui.core.TextAlign\", group : \"Appearance\", defaultValue : TextAlign.Begin},\n\n\t\t\t/**\n\t\t\t * Determines the total width of the control or the width of its label only, depending on the value of <code>useEntireWidth</code>.\n\t\t\t *\n\t\t\t * <b>Note:</b> When <code>useEntireWidth</code> is set to <code>true</code>, <code>width</code> is applied to the control as a whole (checkbox and label). Otherwise, <code>width</code> is applied to the label only.\n\t\t\t */\n\t\t\twidth : {type : \"sap.ui.core.CSSSize\", group : \"Dimension\", defaultValue : ''},\n\n\t\t\t/**\n\t\t\t * Indicates if the given width will be applied to the control as a whole or to its label only.\n\t\t\t *\n\t\t\t * <b>Note:</b> by default the width is set to the label\n\t\t\t * @since 1.52\n\t\t\t */\n\t\t\tuseEntireWidth : {type : \"boolean\", group: \"Appearance\", defaultValue : false },\n\n\t\t\t/**\n\t\t\t * Flag to switch on activeHandling, when it is switched off, there will be no visual changes on active state. Default value is 'true'\n\t\t\t */\n\t\t\tactiveHandling : {type : \"boolean\", group : \"Misc\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Specifies whether the user shall be allowed to edit the state of the checkbox\n\t\t\t * @since 1.25\n\t\t\t */\n\t\t\teditable : {type : \"boolean\", group : \"Behavior\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Accepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\t\t\t * @since 1.38\n\t\t\t */\n\t\t\tvalueState : {type : \"sap.ui.core.ValueState\", group : \"Data\", defaultValue : ValueState.None}\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * The label that represents the text of the checkbox control\n\t\t\t */\n\t\t\t_label: {type: \"sap.m.Label\", group: \"Behavior\", multiple: false, visibility: \"hidden\"}\n\t\t},\n\t\tassociations : {\n\n\t\t\t/**\n\t\t\t * Association to controls / IDs which describe this control (see WAI-ARIA attribute aria-describedby).\n\t\t\t */\n\t\t\tariaDescribedBy: {type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaDescribedBy\"},\n\n\t\t\t/**\n\t\t\t * Association to controls / IDs which label this control (see WAI-ARIA attribute aria-labelledby).\n\t\t\t */\n\t\t\tariaLabelledBy: {type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaLabelledBy\"}\n\t\t},\n\t\tevents : {\n\n\t\t\t/**\n\t\t\t * Event is triggered when the control status is changed by the user by selecting or deselecting the checkbox.\n\t\t\t */\n\t\t\tselect : {\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Checks whether the CheckBox is marked or not .\n\t\t\t\t\t */\n\t\t\t\t\tselected : {type : \"boolean\"}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdesignTime : true\n\t}});\n\n\tEnabledPropagator.call(CheckBox.prototype);\n\n\t/**\n\t * Lifecycle Methods\n\t */\n\tCheckBox.prototype.init = function() {\n\t\tthis.addActiveState(this);\n\t\tIconPool.insertFontFaceStyle();\n\t};\n\n\tCheckBox.prototype.exit = function() {\n\t\tthis._oLabel = null;\n\t\tdelete this._iTabIndex;\n\t};\n\n\t// Public Methods\n\n\tCheckBox.prototype.setSelected = function(bSelected) {\n\t\tbSelected = !!bSelected;\n\t\tif (bSelected == this.getSelected()) {\n\t\t\treturn this;\n\t\t}\n\t\tthis.$(\"CbBg\").toggleClass(\"sapMCbMarkChecked\", bSelected);\n\t\tthis.$().attr(\"aria-checked\", bSelected);\n\t\tvar oCheckBox = this.getDomRef(\"CB\");\n\t\tif (oCheckBox) {\n\t\t\tbSelected ? oCheckBox.setAttribute('checked', 'checked') : oCheckBox.removeAttribute('checked');\n\t\t}\n\t\tthis.setProperty(\"selected\", bSelected, true);\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setText = function(sText) {\n\t\tvar oLabel = this._getLabel(),\n\t\t\tbHasText = !!sText;\n\n\t\tthis.setProperty(\"text\", sText, true);\n\t\toLabel.setText(sText);\n\t\tthis.$().toggleClass(\"sapMCbHasLabel\", bHasText);\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setWidth = function (sWidth) {\n\t\tthis.setProperty(\"width\", sWidth, true);\n\t\tthis._setWidth();\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setUseEntireWidth = function (bUseEntireWidth) {\n\t\tthis.setProperty(\"useEntireWidth\", bUseEntireWidth, true);\n\t\tthis._setWidth();\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setTextDirection = function(sDirection) {\n\t\tvar oLabel = this._getLabel();\n\n\t\tthis.setProperty(\"textDirection\", sDirection, true);\n\t\toLabel.setTextDirection(sDirection);\n\n\t\treturn this;\n\t};\n\n\tCheckBox.prototype.setTextAlign = function(sAlign) {\n\t\tvar oLabel = this._getLabel();\n\n\t\tthis.setProperty(\"textAlign\", sAlign, true);\n\t\toLabel.setTextAlign(sAlign);\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add ActiveState to non-supported mobile platform\n\t * @private\n\t */\n\tCheckBox.prototype.addActiveState = function(oControl) {\n\t\tif (Device.os.blackberry) {\n\t\t\toControl.addDelegate({\n\t\t\t\tontouchstart: function(oEvent){\n\t\t\t\t\tjQuery(oControl.getDomRef()).addClass(\"sapMActive\");\n\t\t\t\t},\n\t\t\t\tontouchend: function(oEvent){\n\t\t\t\t\tjQuery(oControl.getDomRef()).removeClass(\"sapMActive\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Event handler called when the CheckBox is touched.\n\t *\n\t * @param {jQuery.Event} oEvent\n\t */\n\tCheckBox.prototype.ontouchstart = function(oEvent) {\n\t\t//for control who need to know if they should handle events from the CheckBox control\n\t\toEvent.originalEvent._sapui_handledByControl = true;\n\t};\n\n\t/**\n\t * Event handler called when the CheckBox is tapped.\n\t *\n\t * @param {jQuery.Event} oEvent\n\t */\n\tCheckBox.prototype.ontap = function(oEvent) {\n\t\tif (this.getEnabled() && this.getEditable()) {\n\t\t\tthis.$().focus(); // In IE taping on the input doesn`t focus the wrapper div.\n\t\t\tvar bSelected = !this.getSelected();\n\t\t\tthis.setSelected(bSelected);\n\t\t\tthis.fireSelect({selected:bSelected});\n\n\t\t\t// mark the event that it is handled by the control\n\t\t\toEvent && oEvent.setMarked();\n\t\t}\n\t};\n\n\t/**\n\t * Event handler called when the space key is pressed onto the Checkbox.\n\t *\n\t * @param {jQuery.Event} oEvent\n\t */\n\tCheckBox.prototype.onsapspace = function(oEvent) {\n\t\tthis.ontap(oEvent);\n\t\t// stop browsers default behavior\n\t\tif (oEvent) {\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\t/**\n\t * Event handler called when the enter key is pressed onto the Checkbox.\n\t *\n\t * @param {jQuery.Event} oEvent\n\t */\n\tCheckBox.prototype.onsapenter = function(oEvent) {\n\t\tthis.ontap(oEvent);\n\t};\n\n\t/**\n\t * Sets the tab index of the control\n\t *\n\t * @param {int} iTabIndex The tab index should be greater than or equal -1\n\t * @return {sap.m.CheckBox}\n\t * @since 1.16\n\t * @protected\n\t */\n\tCheckBox.prototype.setTabIndex = function(iTabIndex) {\n\t\tthis._iTabIndex = iTabIndex;\n\t\tthis.$(\"CbBg\").attr(\"tabindex\", iTabIndex);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns the CheckBox`s tab index.\n\t *\n\t * @return {int} iTabIndex for Checkbox\n\t * @since 1.22\n\t * @protected\n\t */\n\tCheckBox.prototype.getTabIndex = function() {\n\t\tif ( this.hasOwnProperty(\"_iTabIndex\") ) {\n\t\t\treturn this._iTabIndex;\n\t\t}\n\t\treturn this.getEnabled() ? 0 : -1 ;\n\t};\n\n\t/**\n\t * Lazy loads the CheckBox`s label\n\t *\n\t * @return {sap.m.Label}\n\t * @private\n\t */\n\tCheckBox.prototype._getLabel = function() {\n\t\tif (!this._oLabel) {\n\t\t\tthis._oLabel = new Label(this.getId() + \"-label\", {\n\t\t\t\tlabelFor: this.getId()\n\t\t\t}).addStyleClass(\"sapMCbLabel\");\n\n\t\t\tthis.setAggregation(\"_label\", this._oLabel, true);\n\t\t}\n\n\t\treturn this.getAggregation(\"_label\");\n\t};\n\n\t/**\n\t * Sets the width of the CheckBox control or its label, based on the <code>useEntireWidth</code> property.\n\t * @param {string} sWidth - CSS size to be set as width\n\t * @private\n\t */\n\tCheckBox.prototype._setWidth = function() {\n\t\tvar oLabel = this._getLabel(),\n\t\t\t$oCheckBox = this.$(),\n\t\t\tsWidth = this.getWidth();\n\n\t\tif (this.getUseEntireWidth()) {\n\t\t\toLabel.setWidth(\"\");\n\t\t\t$oCheckBox.outerWidth(sWidth);\n\t\t} else {\n\t\t\t$oCheckBox.outerWidth(\"\");\n\t\t\toLabel.setWidth(sWidth);\n\t\t}\n\t};\n\n\t/**\n\t * @see sap.ui.core.Control#getAccessibilityInfo\n\t * @protected\n\t */\n\tCheckBox.prototype.getAccessibilityInfo = function() {\n\t\tvar oBundle = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\t\treturn {\n\t\t\trole: \"checkbox\",\n\t\t\ttype: oBundle.getText(\"ACC_CTR_TYPE_CHECKBOX\"),\n\t\t\tdescription: (this.getText() || \"\") + (this.getSelected() ? (\" \" + oBundle.getText(\"ACC_CTR_STATE_CHECKED\")) : \"\"),\n\t\t\tfocusable: this.getEnabled(),\n\t\t\tenabled: this.getEnabled(),\n\t\t\teditable: this.getEditable()\n\t\t};\n\t};\n\n\t/*\n\t * Checkbox without label must not be stretched in Form.\n\t */\n\tCheckBox.prototype.getFormDoNotAdjustWidth = function() {\n\t\treturn this.getText() ? false : true;\n\t};\n\n\treturn CheckBox;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.CheckBoxRenderer\", require(\"sap/m/CheckBoxRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/CheckBox.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.List.\nsap.ui.define(['./ListBase', './library'],\n\tfunction(ListBase, library) {\n\t\"use strict\";\n\n\n\n\t// shortcut for sap.m.BackgroundDesign\n\tvar BackgroundDesign = library.BackgroundDesign;\n\n\n\n\t/**\n\t * Constructor for a new List.\n\t *\n\t * @param {string} [sId] Id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * The List control provides a container for all types of list items.\n\t * For mobile devices, the recommended limit of list items is 100 to assure proper performance. To improve initial rendering of large lists, use the \"growing\" feature. Please refer to the SAPUI5 Developer Guide for more information..\n\t *\n\t * See section \"{@link topic:1da158152f644ba1ad408a3e982fd3df Lists}\"\n\t * in the documentation for an introduction to <code>sap.m.List</code> control.\n\t *\n\t * @extends sap.m.ListBase\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.List\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar List = ListBase.extend(\"sap.m.List\", /** @lends sap.m.List.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Sets the background style of the list. Depending on the theme, you can change the state of the background from <code>Solid</code> to <code>Translucent</code> or to <code>Transparent</code>.\n\t\t\t * @since 1.14\n\t\t\t */\n\t\t\tbackgroundDesign : {type : \"sap.m.BackgroundDesign\", group : \"Appearance\", defaultValue : BackgroundDesign.Solid}\n\t\t},\n\t\taggregations : {\n\n\t\t\t/**\n\t\t\t * Defines columns of the list.\n\t\t\t * @deprecated Since version 1.16. Instead, use the <code>sap.m.Table</code> control.\n\t\t\t */\n\t\t\tcolumns : {type : \"sap.m.Column\", multiple : true, singularName : \"column\", deprecated: true}\n\t\t}\n\t}});\n\n\tList.prototype.onBeforeRendering = function() {\n\t\tif (ListBase.prototype.onBeforeRendering) {\n\t\t\tListBase.prototype.onBeforeRendering.call(this);\n\t\t}\n\n\t\t// if \"columns\" aggregation is not in use or incompatible then ignore\n\t\tif (!this.getColumns().length || this._isColumnsIncompatible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * FIXME: Here to support old API if columns are set\n\t\t * We are trying to extend renderer to render list as table\n\t\t * This is so ugly and we need to get rid of it ASAP\n\t\t */\n\t\tvar proto = sap.ui.requireSync(\"sap/m/Table\").prototype;\n\t\tObject.keys(proto).forEach(function(key) {\n\t\t\tthis[key] = proto[key];\n\t\t}, this);\n\n\t\t/**\n\t\t * FIXME: Handle different default backgroundDesign value for Table\n\t\t */\n\t\tif (!this.mProperties.hasOwnProperty(\"backgroundDesign\")) {\n\t\t\tthis.setBackgroundDesign(\"Translucent\");\n\t\t}\n\n\t};\n\n\t// checks if \"columns\" usage is not compatible anymore\n\tList.prototype._isColumnsIncompatible = function() {\n\t\treturn sap.ui.getCore().getConfiguration().getCompatibilityVersion(\"sapMListAsTable\").compareTo(\"1.16\") >= 0;\n\t};\n\n\treturn List;\n\n});\n\njQuery.sap.setObject(\"sap.m.ListRenderer\", require(\"sap/m/ListRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/List.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['jquery.sap.global', './ListItemBaseRenderer', 'sap/ui/core/Renderer', './ColumnHeader', './Label', 'sap/ui/core/library', 'sap/ui/Device', 'sap/m/library'],\n\tfunction(jQuery, ListItemBaseRenderer, Renderer, ColumnHeader, Label, coreLibrary, Device, library) {\n\t\"use strict\";\n\n\t// shortcut for sap.m.PopinDisplay\n\tvar PopinDisplay = library.PopinDisplay;\n\n\t// shortcut for sap.ui.core.VerticalAlign\n\tvar VerticalAlign = coreLibrary.VerticalAlign;\n\n\t// shortcut for sap.m.PopinLayout\n\tvar PopinLayout = library.PopinLayout;\n\n\t/**\n\t * ColumnListItem renderer.\n\t * @namespace\n\t */\n\tvar ColumnListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\tColumnListItemRenderer.render = function(rm, oLI) {\n\t\tvar oTable = oLI.getTable();\n\t\tif (!oTable) {\n\t\t\treturn;\n\t\t}\n\n\t\tListItemBaseRenderer.render.apply(this, arguments);\n\n\t\tif (oLI.getVisible() && oTable.hasPopin()) {\n\t\t\tthis.renderPopin(rm, oLI, oTable);\n\t\t}\n\t};\n\n\t// render type highlight always within a cell\n\tColumnListItemRenderer.renderHighlight = function(rm, oLI) {\n\t\trm.write('<td class=\"sapMListTblHighlightCell\" aria-hidden=\"true\">');\n\n\t\t// let the list item base render the highlight\n\t\tListItemBaseRenderer.renderHighlight.apply(this, arguments);\n\n\t\trm.write('</td>');\n\t};\n\n\t// render type content always within a cell\n\tColumnListItemRenderer.renderType = function(rm, oLI) {\n\t\trm.write('<td class=\"sapMListTblNavCol\" aria-hidden=\"true\">');\n\n\t\t// let the list item base render the type\n\t\tListItemBaseRenderer.renderType.apply(this, arguments);\n\n\t\trm.write('</td>');\n\t};\n\n\t// wrap mode content with a cell\n\tColumnListItemRenderer.renderModeContent = function(rm, oLI) {\n\t\trm.write('<td class=\"sapMListTblSelCol\" aria-hidden=\"true\">');\n\n\t\t// let the list item base render the mode control\n\t\tListItemBaseRenderer.renderModeContent.apply(this, arguments);\n\n\t\trm.write('</td>');\n\t};\n\n\t// ColumnListItem does not respect counter property of the LIB\n\tColumnListItemRenderer.renderCounter = function(rm, oLI) {\n\t};\n\n\t// Returns aria accessibility role\n\tColumnListItemRenderer.getAriaRole = function(oLI) {\n\t\treturn \"\";\n\t};\n\n\t/**\n\t * Renders the HTML for the given control, using the provided\n\t * {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager}\n\t *            oRenderManager the RenderManager that can be used for writing to\n\t *            the Render-Output-Buffer\n\t * @param {sap.ui.core.Control}\n\t *            oControl an object representation of the control that should be\n\t *            rendered\n\t */\n\tColumnListItemRenderer.renderLIAttributes = function(rm, oLI) {\n\t\trm.addClass(\"sapMListTblRow\");\n\t\tvar vAlign = oLI.getVAlign();\n\t\tif (vAlign != VerticalAlign.Inherit) {\n\t\t\trm.addClass(\"sapMListTblRow\" + vAlign);\n\t\t}\n\n\t\tvar oTable = oLI.getTable();\n\t\tif (oTable && oTable.getAlternateRowColors()) {\n\t\t\tvar iPos = oTable.indexOfItem(oLI);\n\t\t\tif (iPos % 2 == 0) {\n\t\t\t\trm.addClass(\"sapMListTblRowAlternate\");\n\t\t\t}\n\t\t}\n\t};\n\n\n\t/**\n\t * Overwriting hook method of ListItemBase\n\t *\n\t * @public\n\t *\n\t * @param {sap.ui.core.RenderManager} rm RenderManager\n\t * @param {sap.m.ListItemBase} oLI List item\n\t */\n\tColumnListItemRenderer.renderLIContentWrapper = function(rm, oLI) {\n\t\tvar oTable = oLI.getTable();\n\t\tif (!oTable) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar aColumns = oTable.getColumns(true),\n\t\t\taCells = oLI.getCells();\n\n\t\t// remove cloned headers\n\t\toLI._destroyClonedHeaders();\n\n\t\taColumns.forEach(function(oColumn, i) {\n\t\t\tvar cls,\n\t\t\t\toHeader,\n\t\t\t\tbRenderCell = true,\n\t\t\t\toCell = aCells[oColumn.getInitialOrder()];\n\n\t\t\tif (!oCell || !oColumn.getVisible() || oColumn.isPopin()) {\n\t\t\t\t// update the visible index of the column\n\t\t\t\toColumn.setIndex(-1);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trm.write(\"<td\");\n\t\t\trm.addClass(\"sapMListTblCell\");\n\t\t\trm.writeAttribute(\"id\", oLI.getId() + \"_cell\" + i);\n\n\t\t\t// check column properties\n\t\t\tif (oColumn) {\n\t\t\t\tcls = oColumn.getStyleClass(true);\n\t\t\t\tcls && rm.addClass(jQuery.sap.encodeHTML(cls));\n\n\t\t\t\t// aria for virtual keyboard mode\n\t\t\t\toHeader = oColumn.getHeader();\n\t\t\t\tif (oHeader) {\n\t\t\t\t\trm.writeAttribute(\"headers\", oHeader.getId());\n\t\t\t\t}\n\n\t\t\t\t// merge duplicate cells\n\t\t\t\tif (!oTable.hasPopin() && oColumn.getMergeDuplicates()) {\n\t\t\t\t\tvar sFuncWithParam = oColumn.getMergeFunctionName(),\n\t\t\t\t\t\taFuncWithParam = sFuncWithParam.split(\"#\"),\n\t\t\t\t\t\tsFuncParam = aFuncWithParam[1],\n\t\t\t\t\t\tsFuncName = aFuncWithParam[0];\n\n\t\t\t\t\tif (typeof oCell[sFuncName] != \"function\") {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"mergeFunctionName property is defined on \" + oColumn + \" but this is not function of \" + oCell);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar lastColumnValue = oColumn.getLastValue(),\n\t\t\t\t\t\t\tcellValue = oCell[sFuncName](sFuncParam);\n\n\t\t\t\t\t\tif (lastColumnValue === cellValue) {\n\t\t\t\t\t\t\t// it is not necessary to render cell content but\n\t\t\t\t\t\t\t// screen readers need content to announce it\n\t\t\t\t\t\t\tbRenderCell = sap.ui.getCore().getConfiguration().getAccessibility();\n\t\t\t\t\t\t\toCell.addStyleClass(\"sapMListTblCellDupCnt\");\n\t\t\t\t\t\t\trm.addClass(\"sapMListTblCellDup\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toColumn.setLastValue(cellValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toColumn.getVAlign() != \"Inherit\" && rm.addStyle(\"vertical-align\", oColumn.getVAlign().toLowerCase());\n\t\t\t\tvar sAlign = oColumn.getCssAlign();\n\t\t\t\tif (sAlign) {\n\t\t\t\t\trm.addStyle(\"text-align\", sAlign);\n\t\t\t\t}\n\n\t\t\t\trm.writeStyles();\n\t\t\t}\n\n\t\t\trm.writeClasses();\n\t\t\trm.write(\">\");\n\n\t\t\tif (bRenderCell) {\n\t\t\t\tthis.applyAriaLabelledBy(oHeader, oCell);\n\t\t\t\trm.renderControl(oColumn.applyAlignTo(oCell));\n\t\t\t}\n\n\t\t\trm.write(\"</td>\");\n\t\t}, this);\n\t};\n\n\tColumnListItemRenderer.applyAriaLabelledBy = function(oHeader, oCell) {\n\t\tif (oCell) {\n\t\t\toCell.removeAssociation(\"ariaLabelledBy\", oCell.data(\"ariaLabelledBy\") || undefined, true);\n\t\t}\n\n\t\t/* add the header as an aria-labelled by association for the cells */\n\t\t/* only set the header text to the aria-labelled association if the header is a textual control and is visible */\n\t\tif (oHeader &&\n\t\t\toHeader.getText &&\n\t\t\toCell.getAriaLabelledBy &&\n\t\t\toHeader.getVisible()) {\n\n\t\t\t// suppress the invalidation during the rendering\n\t\t\toCell.addAssociation(\"ariaLabelledBy\", oHeader, true);\n\t\t\toCell.data(\"ariaLabelledBy\", oHeader.getId());\n\t\t}\n\t};\n\n\t/**\n\t * Renders pop-ins for Table Rows\n\t *\n\t * @private\n\t *\n\t * @param {sap.ui.core.RenderManager} rm RenderManager\n\t * @param {sap.m.ListItemBase} oLI List item\n\t * @param {sap.m.Table} oTable Table control\n\t */\n\tColumnListItemRenderer.renderPopin = function(rm, oLI, oTable) {\n\t\t// remove existing popin first\n\t\toLI.removePopin();\n\n\t\t// popin row\n\t\trm.write(\"<tr\");\n\t\trm.addClass(\"sapMListTblSubRow\");\n\t\trm.writeElementData(oLI.getPopin());\n\t\trm.writeAttribute(\"tabindex\", \"-1\");\n\n\t\tif (oLI.isSelectable()) {\n\t\t\trm.writeAttribute(\"aria-selected\", oLI.getSelected());\n\t\t}\n\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\tthis.renderHighlight(rm, oLI);\n\n\t\t// cell\n\t\trm.write(\"<td\");\n\t\trm.writeAttribute(\"id\", oLI.getId() + \"-subcell\");\n\t\trm.writeAttribute(\"colspan\", oTable.getColSpan());\n\n\t\tvar sPopinLayout = oTable.getPopinLayout();\n\t\t// overwrite sPopinLayout=Block to avoid additional margin-top in IE and Edge\n\t\tif (Device.browser.msie || Device.browser.edge) {\n\t\t\tsPopinLayout = PopinLayout.Block;\n\t\t}\n\t\trm.write(\"><div\");\n\t\trm.addClass(\"sapMListTblSubCnt\");\n\t\trm.addClass(\"sapMListTblSubCnt\" + sPopinLayout);\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\tvar aCells = oLI.getCells(),\n\t\t\taColumns = oTable.getColumns(true);\n\n\t\taColumns.forEach(function(oColumn) {\n\t\t\tif (!oColumn.getVisible() || !oColumn.isPopin()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar oCell = aCells[oColumn.getInitialOrder()],\n\t\t\t\toHeader = oColumn.getHeader();\n\n\t\t\tif (!oHeader && !oCell) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sStyleClass = oColumn.getStyleClass(),\n\t\t\t\tsPopinDisplay = oColumn.getPopinDisplay();\n\n\t\t\t/* row start */\n\t\t\trm.write(\"<div\");\n\t\t\trm.addClass(\"sapMListTblSubCntRow\");\n\t\t\tsStyleClass && rm.addClass(jQuery.sap.encodeHTML(sStyleClass));\n\t\t\trm.writeClasses();\n\t\t\trm.write(\">\");\n\n\t\t\t/* header cell */\n\t\t\tif (oHeader && sPopinDisplay != PopinDisplay.WithoutHeader) {\n\t\t\t\trm.write(\"<div\");\n\t\t\t\trm.addClass(\"sapMListTblSubCntHdr\");\n\t\t\t\trm.writeClasses();\n\t\t\t\trm.write(\">\");\n\t\t\t\tif (oHeader instanceof ColumnHeader) {\n\t\t\t\t\tvar sColumnHeaderTitle = oHeader.getText();\n\t\t\t\t\toHeader = new Label({text: sColumnHeaderTitle});\n\t\t\t\t} else {\n\t\t\t\t\toHeader = oHeader.clone();\n\t\t\t\t}\n\t\t\t\toColumn.addDependent(oHeader);\n\t\t\t\toLI._addClonedHeader(oHeader);\n\t\t\t\toColumn.applyAlignTo(oHeader, \"Begin\");\n\t\t\t\trm.renderControl(oHeader);\n\t\t\t\trm.write(\"</div>\");\n\n\t\t\t\t/* separator cell */\n\t\t\t\trm.write(\"<div class='sapMListTblSubCntSpr'>:</div>\");\n\t\t\t}\n\n\t\t\t/* value cell */\n\t\t\tif (oCell) {\n\t\t\t\trm.write(\"<div\");\n\t\t\t\trm.addClass(\"sapMListTblSubCntVal\");\n\t\t\t\trm.addClass(\"sapMListTblSubCntVal\" + sPopinDisplay);\n\t\t\t\trm.writeClasses();\n\t\t\t\trm.write(\">\");\n\t\t\t\toColumn.applyAlignTo(oCell, \"Begin\");\n\t\t\t\tthis.applyAriaLabelledBy(oHeader, oCell);\n\t\t\t\trm.renderControl(oCell);\n\t\t\t\trm.write(\"</div>\");\n\t\t\t}\n\n\t\t\t/* row end */\n\t\t\trm.write(\"</div>\");\n\t\t}, this);\n\n\t\trm.write(\"</div></td></tr>\");\n\t};\n\n\t/**\n\t * Overwriting hook method of ListItemBase.\n\t *\n\t * @param {sap.ui.core.RenderManager} rm RenderManager\n\t * @param {sap.m.ListItemBase} [oLI] List item\n\t */\n\tColumnListItemRenderer.addLegacyOutlineClass = function(rm, oLI) {\n\t};\n\n\treturn ColumnListItemRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ColumnListItemRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['jquery.sap.global', 'sap/ui/core/Renderer', './ListBaseRenderer', './ColumnListItemRenderer', './ColumnHeader', 'sap/m/library'],\n\tfunction(jQuery, Renderer, ListBaseRenderer, ColumnListItemRenderer, ColumnHeader, library) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.m.ListKeyboardMode\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\n\t/**\n\t * List renderer.\n\t * @namespace\n\t *\n\t * TableRenderer extends the ListBaseRenderer\n\t */\n\tvar TableRenderer = Renderer.extend(ListBaseRenderer);\n\n\n\t/**\n\t * Renders the Header and/or Footer of the Table like List Control\n\t *\n\t * @param {sap.ui.core.RenderManager} rm RenderManager\n\t * @param {sap.m.ListBase} oTable Table control\n\t * @param {String} type Whether \"Head\" or \"Foot\"\n\t */\n\tTableRenderer.renderColumns = function(rm, oTable, type) {\n\t\tvar index = 0,\n\t\t\thiddens = 0,\n\t\t\thasPopin = false,\n\t\t\thasFooter = false,\n\t\t\tmode = oTable.getMode(),\n\t\t\tiModeOrder = ListBaseRenderer.ModeOrder[mode],\n\t\t\tclsPrefix = \"sapMListTbl\",\n\t\t\tidPrefix = oTable.getId(\"tbl\"),\n\t\t\tcellTag = (type == \"Head\") ? \"th\" : \"td\",\n\t\t\tgroupTag = \"t\" + type.toLowerCase(),\n\t\t\taColumns = oTable.getColumns(),\n\t\t\tisHeaderHidden = (type == \"Head\") && aColumns.every(function(oColumn) {\n\t\t\t\treturn\t!oColumn.getHeader() ||\n\t\t\t\t\t\t!oColumn.getHeader().getVisible() ||\n\t\t\t\t\t\t!oColumn.getVisible() ||\n\t\t\t\t\t\toColumn.isPopin() ||\n\t\t\t\t\t\toColumn.isHidden();\n\t\t\t}),\n\t\t\thasOneHeader = (type == \"Head\") && aColumns.filter(function(oColumn) {\n\t\t\t\treturn\toColumn.getVisible() &&\n\t\t\t\t\t\t!oColumn.isPopin() &&\n\t\t\t\t\t\t!oColumn.isHidden();\n\t\t\t}).length == 1,\n\t\t\tcreateBlankCell = function(cls, id, bAriaHidden) {\n\t\t\t\trm.write(\"<\");\n\t\t\t\trm.write(cellTag);\n\t\t\t\tbAriaHidden && rm.writeAttribute(\"aria-hidden\", \"true\");\n\t\t\t\tid && rm.writeAttribute(\"id\", idPrefix + id);\n\t\t\t\trm.addClass(clsPrefix + cls);\n\t\t\t\trm.writeClasses();\n\t\t\t\trm.write(\"></\");\n\t\t\t\trm.write(cellTag);\n\t\t\t\trm.write(\">\");\n\t\t\t\tindex++;\n\t\t\t};\n\n\t\trm.write(\"<\" + groupTag + \">\");\n\t\trm.write(\"<tr\");\n\t\trm.writeAttribute(\"tabindex\", -1);\n\t\trm.writeAttribute(\"id\", oTable.addNavSection(idPrefix + type + \"er\" ));\n\n\t\tif (isHeaderHidden) {\n\t\t\trm.addClass(\"sapMListTblHeaderNone\");\n\t\t} else {\n\t\t\trm.addClass(\"sapMListTblRow sapMLIBFocusable sapMListTbl\" + type + \"er\");\n\t\t\tColumnListItemRenderer.addLegacyOutlineClass.call(ColumnListItemRenderer, rm);\n\t\t}\n\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\tcreateBlankCell(\"HighlightCol\", type + \"Highlight\", !oTable._iItemNeedsHighlight);\n\n\t\tif (iModeOrder == -1) {\n\t\t\tif (mode == \"MultiSelect\" && type == \"Head\" && !isHeaderHidden) {\n\t\t\t\trm.write(\"<th class='\" + clsPrefix + \"SelCol'>\");\n\t\t\t\trm.renderControl(oTable._getSelectAllCheckbox());\n\t\t\t\trm.write(\"</th>\");\n\t\t\t\tindex++;\n\t\t\t} else {\n\t\t\t\tcreateBlankCell(\"SelCol\");\n\t\t\t}\n\t\t}\n\n\t\taColumns.forEach(function(oColumn, order) {\n\t\t\toColumn.setIndex(-1);\n\t\t\toColumn.setInitialOrder(order);\n\t\t});\n\n\t\toTable.getColumns(true).forEach(function(oColumn, order) {\n\t\t\tif (!oColumn.getVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (oColumn.isPopin()) {\n\t\t\t\thasPopin = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (oColumn.isHidden()) {\n\t\t\t\thiddens++;\n\t\t\t}\n\n\t\t\tvar control = oColumn[\"get\" + type + \"er\"](),\n\t\t\t\twidth = hasOneHeader ? \"\" : oColumn.getWidth(),\n\t\t\t\tcls = oColumn.getStyleClass(true),\n\t\t\t\talign = oColumn.getCssAlign();\n\n\t\t\trm.write(\"<\" + cellTag);\n\t\t\tcls && rm.addClass(jQuery.sap.encodeHTML(cls));\n\n\t\t\tif (type === \"Head\") {\n\t\t\t\trm.writeElementData(oColumn);\n\t\t\t\t// adding ColumnHeader specific class in order to overwrite the padding of the cell\n\t\t\t\tif (control instanceof ColumnHeader) {\n\t\t\t\t\trm.addClass(clsPrefix + \"CellCH\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trm.addClass(clsPrefix + \"Cell\");\n\t\t\trm.addClass(clsPrefix + type + \"erCell\");\n\t\t\trm.writeAttribute(\"data-sap-width\", oColumn.getWidth());\n\t\t\twidth && rm.addStyle(\"width\", width);\n\n\t\t\tif (align) {\n\t\t\t\trm.addStyle(\"text-align\", align);\n\t\t\t}\n\n\t\t\trm.writeClasses();\n\t\t\trm.writeStyles();\n\t\t\trm.write(\">\");\n\t\t\tif (control) {\n\t\t\t\toColumn.applyAlignTo(control);\n\t\t\t\trm.renderControl(control);\n\t\t\t}\n\t\t\tif (type == \"Head\" && !hasFooter) {\n\t\t\t\thasFooter = !!oColumn.getFooter();\n\t\t\t}\n\t\t\trm.write(\"</\" + cellTag + \">\");\n\t\t\toColumn.setIndex(index++);\n\t\t});\n\n\t\tcreateBlankCell(\"NavCol\", type + \"Nav\", !oTable._iItemNeedsColumn);\n\n\t\tif (iModeOrder == 1) {\n\t\t\tcreateBlankCell(\"SelCol\");\n\t\t}\n\n\t\trm.write(\"</tr></\" + groupTag + \">\");\n\n\t\tif (type == \"Head\") {\n\t\t\toTable._hasPopin = hasPopin;\n\t\t\toTable._colCount = index - hiddens;\n\t\t\toTable._hasFooter = hasFooter;\n\t\t\toTable._headerHidden = isHeaderHidden;\n\t\t}\n\t};\n\n\t/**\n\t * add table container class name\n\t */\n\tTableRenderer.renderContainerAttributes = function(rm, oControl) {\n\t\trm.addClass(\"sapMListTblCnt\");\n\t};\n\n\t/**\n\t * render table tag and add required classes\n\t */\n\tTableRenderer.renderListStartAttributes = function(rm, oControl) {\n\t\trm.write(\"<table\");\n\t\trm.addClass(\"sapMListTbl\");\n\t\tif (oControl.getFixedLayout() === false) {\n\t\t\trm.addStyle(\"table-layout\", \"auto\");\n\t\t}\n\n\t\t// make the type column visible if needed\n\t\tif (oControl._iItemNeedsColumn) {\n\t\t\trm.addClass(\"sapMListTblHasNav\");\n\t\t}\n\t};\n\n\t/**\n\t * returns aria accessibility role\n\t */\n\tTableRenderer.getAriaRole = function(oControl) {\n\t\treturn \"\";\n\t};\n\n\t/**\n\t * generate table columns\n\t */\n\tTableRenderer.renderListHeadAttributes = function(rm, oControl) {\n\t\tthis.renderColumns(rm, oControl, \"Head\");\n\t\trm.write(\"<tbody\");\n\t\trm.writeAttribute(\"id\", oControl.addNavSection(oControl.getId(\"tblBody\")));\n\t\tif (oControl.getAlternateRowColors()) {\n\t\t\trm.addClass(oControl._getAlternateRowColorsClass());\n\t\t\trm.writeClasses();\n\t\t}\n\t\trm.write(\">\");\n\t};\n\n\t/**\n\t * render footer and finish rendering table\n\t */\n\tTableRenderer.renderListEndAttributes = function(rm, oControl) {\n\t\trm.write(\"</tbody>\");\t// items should be rendered before foot\n\t\toControl._hasFooter && this.renderColumns(rm, oControl, \"Foot\");\n\t\trm.write(\"</table>\");\n\t};\n\n\t/**\n\t * render no data\n\t */\n\tTableRenderer.renderNoData = function(rm, oControl) {\n\t\trm.write(\"<tr\");\n\t\trm.writeAttribute(\"tabindex\", oControl.getKeyboardMode() == ListKeyboardMode.Navigation ? -1 : 0);\n\t\trm.writeAttribute(\"id\", oControl.getId(\"nodata\"));\n\t\trm.addClass(\"sapMLIB sapMListTblRow sapMLIBTypeInactive\");\n\t\tColumnListItemRenderer.addFocusableClasses.call(ColumnListItemRenderer, rm);\n\t\tif (!oControl._headerHidden || (!oControl.getHeaderText() && !oControl.getHeaderToolbar())) {\n\t\t\trm.addClass(\"sapMLIBShowSeparator\");\n\t\t}\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\trm.write(\"<td\");\n\t\trm.writeAttribute(\"id\", oControl.getId(\"nodata-text\"));\n\t\trm.writeAttribute(\"colspan\", oControl.getColCount());\n\t\trm.addClass(\"sapMListTblCell sapMListTblCellNoData\");\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\t\trm.writeEscaped(oControl.getNoDataText(true));\n\t\trm.write(\"</td>\");\n\n\t\trm.write(\"</tr>\");\n\t};\n\n\treturn TableRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/TableRenderer.js","module.exports = \"#This is the resource bundle for the SAPUI5 sap.m library\\n#\\n\\n#XACT: ARIA ColumnHeader control description\\nCOLUMNHEADER_ACCESS_COLUMN_ACTIONS=Auf Spaltenaktionen zugreifen\\n\\n#XACT: ARIA ColumnHeader filtered state announcement\\nCOLUMNHEADER_FILTERED=Gefiltert\\n\\n#XACT: ARIA ColumnHeader sorted state announcement\\nCOLUMNHEADER_SORTED=Sortiert\\n\\n#XACT: ARIA ColumnHeader sort ascending state announcement\\nCOLUMNHEADER_SORTED_ASCENDING=Aufsteigend\\n\\n#XACT: ARIA ColumnHeader sort descending state announcement\\nCOLUMNHEADER_SORTED_DESCENDING=Absteigend\\n\\n#XACT: ARIA keyboard announcement for the combo box arrow\\nCOMBOBOX_BUTTON=Pfeil nach unten\\n\\n#XACT: ARIA announcement for Combo Box available options\\nCOMBOBOX_AVAILABLE_OPTIONS=Verf\\\\u00FCgbare Optionen\\n\\n#XBUT: Button text for ok button in the combo box (mobile version)\\nCOMBOBOX_CLOSE_BUTTON=OK\\n\\n#XBUT: Default title text for picker in the combo box (mobile version)\\nCOMBOBOX_PICKER_TITLE=Ausw\\\\u00E4hlen\\n\\n#XBUT: Button text for cancel button in the select (mobile version)\\nSELECT_CANCEL_BUTTON=Abbrechen\\n\\n#XBLI: List text for no data lists\\nLIST_NO_DATA=Keine Daten\\n\\n#XACT: ARIA announcement for the controls which do not provide any accessibility info\\nCONTROL_EMPTY=Leer\\n\\n#XACT: ARIA announcement for the disabled controls\\nCONTROL_DISABLED=Deaktiviert\\n\\n#XACT: ARIA announcement for the read-only controls\\nCONTROL_READONLY=Schreibgesch\\\\u00FCtzt\\n\\n#XACT: ARIA announcement for the list which allows single selections\\nLIST_SELECTABLE=Enth\\\\u00E4lt ausw\\\\u00E4hlbare Elemente\\n\\n#XACT: ARIA announcement for the list which allows multiple selections\\nLIST_MULTISELECTABLE=Enth\\\\u00E4lt Elemente f\\\\u00FCr Mehrfachauswahl\\n\\n#XACT: ARIA announcement for the list which has deletable items\\nLIST_DELETABLE=Enth\\\\u00E4lt l\\\\u00F6schbare Elemente\\n\\n#XACT: ARIA announcement for the list which is grouped\\nLIST_GROUPED=Gruppiert\\n\\n#XACT: ARIA announcement for the list when all items are selected\\nLIST_ALL_SELECTED=Alle ausgew\\\\u00E4hlt\\n\\n#XACT: ARIA announcement for a required list (e.g. inside a form)\\nLIST_REQUIRED=Erforderlich\\n\\n#XACT: ARIA announcement for the selected list item\\nLIST_ITEM_SELECTED=Ausgew\\\\u00E4hlt\\n\\n#XACT: ARIA keyboard announcement for the unread state of the list items\\nLIST_ITEM_UNREAD=Ungelesen\\n\\n#XACT: ARIA announcement for the navigable list items\\nLIST_ITEM_NAVIGATION=Hat Details\\n\\n#XACT: ARIA announcement for the list item details with edit option\\nLIST_ITEM_DETAIL=Ist bearbeitbar\\n\\n#XACT: ARIA announcement for the active clickable list items\\nLIST_ITEM_ACTIVE=Ist aktiv\\n\\n#XACT: ARIA announcement for the group header list items\\nLIST_ITEM_GROUP_HEADER=Gruppenkopf\\n\\n#XACT: ARIA announcement for the position of the list items in an entire list\\nLIST_ITEM_POSITION={0} von {1}\\n\\n#XACT: ARIA announcement for the position of the list item\\nLIST_ITEM_INDEX=Element {0} \\n\\n#XACT: ARIA announcement for the counter property of the list item\\nLIST_ITEM_COUNTER=Z\\\\u00E4hler {0}\\n\\n#XACT: ARIA announcement for the information state of the list item\\nLIST_ITEM_STATE_INFORMATION=Information\\n\\n#XACT: ARIA announcement for the error state of the list item\\nLIST_ITEM_STATE_ERROR=Fehler\\n\\n#XACT: ARIA announcement for the warning state of the list item\\nLIST_ITEM_STATE_WARNING=Warnung\\n\\n#XACT: ARIA announcement for the success state of the list item\\nLIST_ITEM_STATE_SUCCESS=Erfolg\\n\\n#XTOL: tooltip for the delete icon of the list item\\nLIST_ITEM_DELETE=L\\\\u00F6schen\\n\\n#XTOL: tooltip for the edit icon of the list item\\nLIST_ITEM_EDIT=Bearbeiten\\n\\n#XBUT: Button text for back button on page\\nPAGE_NAVBUTTON_TEXT=Zur\\\\u00FCck\\n\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\nSWITCH_ON=Ein\\n\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\nSWITCH_OFF=Aus\\n\\n#XACT: ARIA keyboard announcement for the accept state in the Switch control\\nSWITCH_ARIA_ACCEPT=Annehmen\\n\\n#XACT: ARIA keyboard announcement for the reject state in the Switch control\\nSWITCH_ARIA_REJECT=Ablehnen\\n\\n#XBUT: Button text for cancel button in the action sheet\\nACTIONSHEET_CANCELBUTTON_TEXT=Abbrechen\\n\\n#XACT: ARIA announcement for index of a button\\nACTIONSHEET_BUTTON_INDEX={0} von {1}\\n\\n#XACT: ARIA announcement for Action Sheet available actions\\nACTIONSHEET_AVAILABLE_ACTIONS=Verf\\\\u00FCgbare Aktionen\\n\\n#XBUT: Button text for cancel button in the busy dialog\\nBUSYDIALOG_CANCELBUTTON_TEXT=Abbrechen\\n\\n#XBUT: Text for growing list - pull button to load more data\\nLOAD_MORE_DATA=Weitere\\n\\n#XBUT: Date Selection text for Date&Time Picker of MobiScroll\\nMOBISCROLL_SET=OK\\n\\n#XBUT: Cancel/Close button of MobiScroll Date&Time Picker\\nMOBISCROLL_CANCEL=Abbrechen\\n\\n#XBUT: MobiScroll Date&Time Picker Month Header\\nMOBISCROLL_MONTH=Monat\\n\\n#XBUT: MobiScroll Date&Time Picker Day Header\\nMOBISCROLL_DAY=Tag\\n\\n#XBUT: MobiScroll Date&Time Picker Year Header\\nMOBISCROLL_YEAR=Jahr\\n\\n#XBUT: MobiScroll Date&Time Picker Hours Header\\nMOBISCROLL_HOURS=Stunden\\n\\n#XBUT: MobiScroll Date&Time Picker Minutes Header\\nMOBISCROLL_MINUTES=Minuten\\n\\n#XBUT: MobiScroll Date&Time Picker Seconds Header\\nMOBISCROLL_SECONDS=Sekunden\\n\\n#XBUT: Show Now button of MobiScroll Date&Time Picker\\nMOBISCROLL_NOW=Jetzt\\n\\n#XBUT: The navigation button text in master area in SplitContainer\\nSPLITCONTAINER_NAVBUTTON_TEXT=Navigation\\n\\n#XTOL: Tooltip for navigation button\\nSPLITCONTAINER_NAVBUTTON_DEFAULT_TOOLTIP=Objektliste anzeigen\\n\\n#XTOL: Tooltip for navigation button\\nSPLITCONTAINER_NAVBUTTON_TOOLTIP={0} anzeigen\\n\\n#XBUT: MessageBox predefined text for OK action\\nMSGBOX_OK=OK\\n\\n#XBUT: MessageBox predefined text for CANCEL action\\nMSGBOX_CANCEL=Abbrechen\\n\\n#XBUT: MessageBox predefined text for YES action\\nMSGBOX_YES=Ja\\n\\n#XBUT: MessageBox predefined text for No action\\nMSGBOX_NO=Nein\\n\\n#XBUT: MessageBox predefined text for ABORT action\\nMSGBOX_ABORT=Abbrechen\\n\\n#XBUT: MessageBox predefined text for RETRY action\\nMSGBOX_RETRY=Wiederholen\\n\\n#XBUT: MessageBox predefined text for IGNORE action\\nMSGBOX_IGNORE=Ignorieren\\n\\n#XBUT: MessageBox predefined text for CLOSE action\\nMSGBOX_CLOSE=Schlie\\\\u00DFen\\n\\n#XBUT: MessageBox predefined text for DELETE action\\nMSGBOX_DELETE=L\\\\u00F6schen\\n\\n#XTIT: MessageBox predefined text for title of alert dialog\\nMSGBOX_TITLE_ALERT=Warnung\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_CONFIRM=Best\\\\u00E4tigung\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_ERROR=Fehler\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_INFO=Informationen\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_WARNING=Warnung\\n\\n#XTIT: MessageBox predefined text for title of confirm dialog\\nMSGBOX_TITLE_SUCCESS=Erfolg\\n\\n#XLNK: MessageBox textLink\\nMSGBOX_LINK_TITLE=Details einblenden\\n\\n#YINS,30: Pull down to refresh text in the hidden area of a scrolled area\\nPULL2REFRESH_PULLDOWN=Zum Aktualisieren ziehen\\n\\n#YINS,30: Release dragged list to start update request\\nPULL2REFRESH_RELEASE=Zum Aktualisieren loslassen\\n\\n#YMSG,25: Refresh request is in process, short text, displayed on all platforms\\nPULL2REFRESH_LOADING=Ladevorgang l\\\\u00E4uft...\\n\\n#YMSG,32: Refresh request is in process, longer text, displayed smaller and only on certain platforms\\nPULL2REFRESH_LOADING_LONG=Daten werden geladen\\n\\n#XBUT: Button to trigger refresh of the displayed data\\nPULL2REFRESH_REFRESH=Aktualisieren\\n\\n#XBUT: Text displayed on the logout button in the top right corner of the Shell\\nSHELL_LOGOUT=Abmelden\\n\\n#XBUT: Text for OK button in the personalization dialog\\nPERSODIALOG_OK=OK\\n\\n#XBUT: Text for Cancel button in the personalization dialog\\nPERSODIALOG_CANCEL=Abbrechen\\n\\n#XTOL: Tooltip for Reset Personalization toolbar button\\nPERSODIALOG_UNDO=Personalisierung zur\\\\u00FCcksetzen\\n\\n#XTOL: Tooltip for Perso Dialog's 'Move Up' button (displays an 'up' arrow)\\nPERSODIALOG_UP=Spalte nach oben verschieben\\n\\n#XTOL: Tooltip for Perso Dialog's 'Move Down' button (displays a 'down' arrow)\\nPERSODIALOG_DOWN=Spalte nach unten verschieben\\n\\n#XTIT: Title text of personalization dialog for columns\\nPERSODIALOG_COLUMNS_TITLE=Spalten\\n\\n#XBUT: Text of personalization dialog for 'Select All' checkbox\\nPERSODIALOG_SELECT_ALL=Alle\\n\\n#XTIT: Text of personalization dialog for its list to indicate no search hits\\nPERSODIALOG_NO_DATA=Keine Spalten gefunden\\n\\n#XTIT: Predefined text for the view settings dialog title\\nVIEWSETTINGS_TITLE=Anzeigen\\n\\n#XTIT: Predefined text for the view settings dialog title when in sort mode\\nVIEWSETTINGS_TITLE_SORT=Sortieren nach\\n\\n#XTIT: Predefined text for the view settings dialog title when in group mode\\nVIEWSETTINGS_TITLE_GROUP=Gruppieren nach\\n\\n#XTIT: Predefined text for the view settings dialog title when in filter mode\\nVIEWSETTINGS_TITLE_FILTER=Filtern nach\\n\\n#XTIT: Predefined text for the view settings dialog title when in filter detail mode (an item name is appended to this string)\\nVIEWSETTINGS_TITLE_FILTERBY=Filtern nach\\\\:\\n\\n#YMSG: Start text for the text representation of the filter state\\nVIEWSETTINGS_FILTERTEXT=Gefiltert nach\\\\:\\n\\n#XBUT: Button to confirm the view settings dialog\\nVIEWSETTINGS_ACCEPT=OK\\n\\n#XBUT: Button to cancel the view settings dialog\\nVIEWSETTINGS_CANCEL=Abbrechen\\n\\n#XBLI: List item text in the view settings dialog that represents a \\\"none of the above\\\" or \\\"none\\\" selection in a single selection list\\nVIEWSETTINGS_NONE_ITEM=Ohne\\n\\n#XBLI: List item text in the view settings for sorting items in ascending order\\nVIEWSETTINGS_ASCENDING_ITEM=Aufsteigend\\n\\n#XBLI: List item text in the view settings for sorting items in descending order\\nVIEWSETTINGS_DESCENDING_ITEM=Absteigend\\n\\n#XTOL: Tooltip for the clear filter button\\nVIEWSETTINGS_CLEAR_FILTER_TOOLTIP=Alle Filter zur\\\\u00FCcksetzen\\n\\n#XTIT: Predefined text for the view settings dialog aria label for the sort list\\nVIEWSETTINGS_SORT_DIRECTION=Sortierrichtung\\n\\n#XTIT: Predefined text for the view settings dialog aria label for the group list\\nVIEWSETTINGS_GROUP_DIRECTION=Gruppenrichtung\\n\\n#XLST: Label for the select all checkbox used to select all facet filter items\\nFACETFILTER_CHECKBOX_ALL=Alle\\n\\n#XLST: All Items in the list with the name of the list as a parameter: ex. Suppliers (All)\\nFACETFILTER_ALL_SELECTED={0} (Alle)\\n\\n#XFLD: Search field prompt\\nFACETFILTER_SEARCH=Suchen\\n\\n#XBUT: Either a single filter value or the number of selected values, displayed on facet filter button: ex. Suppliers (Dell) or Suppliers (6)\\nFACETFILTER_ITEM_SELECTION={0} ({1})\\n\\n#XACT: ARIA announcement for facet filter itself\\nFACETFILTER_ARIA_FACET_FILTER=Facettenfilter\\n\\n#XTIT: Light flow facet filter dialog and facet add dialog title\\nFACETFILTER_TITLE=Filter\\n\\n#XBUT: Button to confirm facet filter dialogs\\nFACETFILTER_ACCEPT=OK\\n\\n#XSEL: Infobar filter summary: ex. Filtered by Suppliers (Supplier1, Supplier2)\\nFACETFILTER_INFOBAR_FILTERED_BY=Gefiltert nach {0} ({1})\\n\\n#XSEL: Infobar filter summary when no filters selected\\nFACETFILTER_INFOBAR_NO_FILTERS=Kein Filter ausgew\\\\u00E4hlt\\n\\n#XSEL: Infobar filter add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\nFACETFILTER_INFOBAR_AND=und\\n\\n#XSEL: Infobar filter after add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\nFACETFILTER_INFOBAR_AFTER_AND={0} ({1})\\n\\n#XSEL: Alternate infobar filter summary\\nFACETFILTER_INFOBAR_FILTERS_APPLIED=Mehrere Filter aktiv\\n\\n#YMSG: Filter bar msg shown when there are more filters available that cannot be displayed because there is not enough room: ex. 2 More...\\nFACETFILTER_MORE_COUNT={0} weitere...\\n\\n#YMSG: Message displayed in filter dialog when there are many more filters available but not shown: ex. 76 more available\\nFACETFILTER_FILTERS_HUGE={0} weitere vorhanden\\n\\n#XLNK: Link to allow searching additional filter values from the server\\nFACETFILTER_SERVER_SEARCH=Auf Server weitersuchen\\n\\n#XBUT: Button to remove a filter from the filter bar\\nFACETFILTER_REMOVE_FILTER=Filter entfernen\\n\\n#XACT: ARIA announcement for the position of the list items in an entire list\\nFACETFILTERLIST_ARIA_POSITION={0} von {1}\\n\\n#YMSG: Message displayed near the list of selection items in the SelectDialg and TableSelectDialog controls. It will be filled with the number of selected items\\nTABLESELECTDIALOG_SELECTEDITEMS=Ausgew\\\\u00E4hlte Elemente\\\\: {0}\\n\\n#YMSG: Default placeholder for the input field of a feed\\nFEEDINPUT_PLACEHOLDER=Hier etwas posten\\n\\n#XTOL: Tooltip for submit button of a feed input\\nFEEDINPUT_SUBMIT=Abschicken\\n\\n#XBUT: A link that can be clicked to display more/all items\\nINPUT_SUGGESTIONS_SHOW_ALL=Alle Elemente anzeigen\\n\\n#XACT: ARIA announcement for the Input suggestion result if one hit\\nINPUT_SUGGESTIONS_ONE_HIT=1 Ergebnis verf\\\\u00FCgbar\\n\\n#XACT: ARIA announcement for the Input suggestion result if more than one hit ({0} is the number of hits)\\nINPUT_SUGGESTIONS_MORE_HITS={0} Ergebnisse sind verf\\\\u00FCgbar\\n\\n#XACT: ARIA announcement for the Input suggestion result if no hit\\nINPUT_SUGGESTIONS_NO_HIT=Keine Ergebnisse\\n\\n#XACT: ARIA announcement for the value help\\nINPUT_VALUEHELP=Wertehilfe verf\\\\u00FCgbar\\n\\n#XACT: ARIA announcement disabled input (e.g. for value help only)\\nINPUT_DISABLED=Texteingabe deaktiviert\\n\\n#XACT: ARIA announcement for suggestions popup\\nINPUT_AVALIABLE_VALUES=Verf\\\\u00FCgbare Werte\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Error\\\"\\nINPUTBASE_VALUE_STATE_ERROR=Wertzustand Fehler\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Warning\\\"\\nINPUTBASE_VALUE_STATE_WARNING=Wertzustand Warnung\\n\\n#XACT: ARIA announcement for the Input's value state \\\"Success\\\"\\nINPUTBASE_VALUE_STATE_SUCCESS=Wertzustand Erfolg\\n\\n#XBUT,10: Tooltip for button to remove facet list\\nFACETFILTER_REMOVE=Facette entfernen\\n\\n#XBUT: ARIA announcement for removable facet\\nFACETFILTER_ARIA_REMOVE=Entfernbare Facette\\\\: entfernen mit L\\\\u00D6SCHEN\\n\\n#XBUT: Tooltip for button to add facet filter list\\nFACETFILTER_ADDFACET=Filter hinzuf\\\\u00FCgen\\n\\n#XBUT: Tooltip for button to reset filter\\nFACETFILTER_RESET=Filter zur\\\\u00FCcksetzen\\n\\n#XBUT: Tooltip for left scrolling arrow\\nFACETFILTER_PREVIOUS=Zur\\\\u00FCck\\n\\n#XBUT: Tooltip for right scrolling arrow\\nFACETFILTER_NEXT=Weiter\\n\\n#XLNK: Link to allow the user to see complete feed post\\nTEXT_SHOW_MORE=MEHR\\n\\n#XLNK: This link allows the user to hide the complete feed post and display only the first lines\\nTEXT_SHOW_LESS=WENIGER\\n\\n#XFLD: Label text for number of attachments in the UploadCollection control\\nUPLOADCOLLECTION_ATTACHMENTS=Anlagen ({0})\\n\\n#XMSG: Message text for deleting a file in the UploadCollection control\\nUPLOADCOLLECTION_DELETE_TEXT=M\\\\u00F6chten Sie ''{0}'' wirklich l\\\\u00F6schen?\\n\\n#XMSG: Message text for deleting a file in the UploadCollection control without filename\\nUPLOADCOLLECTION_DELETE_WITHOUT_FILENAME_TEXT=M\\\\u00F6chten Sie die Datei wirklich l\\\\u00F6schen?\\n\\n#XMSG: Message title for deleting a file in the UploadCollection control\\nUPLOADCOLLECTION_DELETE_TITLE=Datei l\\\\u00F6schen\\n\\n#XMSG: Message text for a popup to terminate a file uploading in the UploadCollection control\\nUPLOADCOLLECTION_TERMINATE_TEXT=Das Hochladen der folgenden Dateien wird beendet\\\\:\\n\\n#XMSG: Message title for a popup to terminate a file uploading in the UploadCollection control\\nUPLOADCOLLECTION_TERMINATE_TITLE=Upload abbrechen\\n\\n#XMSG: Message text file name already exists in the UploadCollection control\\nUPLOADCOLLECTION_EXISTS=Dateiname bereits vorhanden.\\n\\n#XMSG: Message text informing that a file name must be entered during edit file name in the UploadCollection control\\nUPLOADCOLLECTION_TYPE_FILENAME=Geben Sie einen Dateinamen ein.\\n\\n#XMSG: Message text for uploading status to the UploadCollection control\\nUPLOADCOLLECTION_UPLOADING=Hochladen\\\\: {0} %\\n\\n#XMSG: Message title for the Upload Failed message box\\nUPLOADCOLLECTION_FAILED=Hochladen fehlgeschlagen\\n\\n#XMSG: Message text informing that it is not allowed to upload the selected file(s) (MIME type or file extension not allowed)\\nUPLOADCOLLECTION_MISMATCH=Dateityp nicht erlaubt.\\n\\n#XMSG: Message text informing that upload is completed\\nUPLOADCOLLECTION_UPLOAD_COMPLETED=Upload abgeschlossen. Bitte warten Sie, bis der Server die Verarbeitung abgeschlossen hat.\\n\\n#XMSG: Message text informing that only one file can be dropped if uploading multiple files is not allowed\\nUPLOADCOLLECTION_MULTIPLE_FALSE=Nur eine Datei kann hierher gezogen werden.\\n\\n#XBUT: Button text for cancel button in the upload collection\\nUPLOADCOLLECTION_CANCELBUTTON_TEXT=Abbrechen\\n\\n#XBUT: Text for OK button in the upload collection in case of Delete Dialog\\nUPLOADCOLLECTION_OKBUTTON_TEXT=OK\\n\\n#XBUT: Text for Rename button in the upload collection in case of renaming a file\\nUPLOADCOLLECTION_RENAMEBUTTON_TEXT=Umbenennen\\n\\n#XBUT: Text for DELETE button in the upload collection\\nUPLOADCOLLECTION_DELETEBUTTON_TEXT=L\\\\u00F6schen\\n\\n#XBUT: Text for TERMINATE button in the upload collection\\nUPLOADCOLLECTION_TERMINATEBUTTON_TEXT=Beenden\\n\\n#XBUT: Text for RENAME button in the upload collection\\nUPLOADCOLLECTION_EDITBUTTON_TEXT=Umbenennen\\n\\n#XBUT: Text for Add button in the upload collection\\nUPLOADCOLLECTION_ADD=Hinzuf\\\\u00FCgen\\n\\n#XBUT: Text for Upload button in the upload collection\\nUPLOADCOLLECTION_UPLOAD=Hochladen\\n\\n#XMSG: Message text for no data text in the upload collection\\nUPLOADCOLLECTION_NO_DATA_TEXT=Keine Dateien gefunden.\\n\\n#XMSG: Message text for no data description in the upload collection\\nUPLOADCOLLECTION_NO_DATA_DESCRIPTION=Dateien f\\\\u00FCr Upload hierher ziehen oder Taste \\\"+\\\" verwenden.\\n\\n#XMSG: Message text indicating where to drag\\nUPLOADCOLLECTION_DRAG_FILE_INDICATOR=Dateien hierher ziehen\\n\\n#XMSG: Message text indicating where to drop file and upload\\nUPLOADCOLLECTION_DROP_FILE_INDICATOR=Dateien f\\\\u00FCr Upload hierher ziehen\\n\\n#XTIT: Predefined text for title in the personalization dialog - Settings for the view ('view' here is a noun).\\nP13NDIALOG_VIEW_SETTINGS=Anzeigeeinstellungen\\n#XTIT: dialog title if the dialog contains only filter panel\\nP13NDIALOG_TITLE_FILTER=Filter definieren\\n#XTIT: dialog title if the dialog contains only sort panel\\nP13NDIALOG_TITLE_SORT=Sortierung definieren\\n#XTIT: dialog title if the dialog contains only group panel\\nP13NDIALOG_TITLE_GROUP=Gruppen definieren\\n#XTIT: dialog title if the dialog contains only columns panel\\nP13NDIALOG_TITLE_COLUMNS=Spalteneigenschaften definieren\\n#XTIT: dialog title if the dialog contains only panel for dimensions and measures\\nP13NDIALOG_TITLE_DIMEASURE=Diagrammeigenschaften definieren\\n#XBUT: Text for OK button in the personalization dialog\\nP13NDIALOG_OK=OK\\n#XBUT: Text for Cancel button in the personalization dialog\\nP13NDIALOG_CANCEL=Abbrechen\\n#XBUT: Text for Reset button in the personalization dialog\\nP13NDIALOG_RESET=Zur\\\\u00FCcksetzen\\n#XTIT: Text for Fix button in ValidationDialog\\nP13NDIALOG_VALIDATION_FIX=Beheben\\n#XTIT: personalization dialog ValidationDialog predefined title for warning\\nP13NDIALOG_VALIDATION_TITLE=Warnung\\n#XTIT: personalization dialog ValidationDialog predefined title for error\\nP13NDIALOG_VALIDATION_TITLE_ERROR=Fehler\\n#XTIT: personalization dialog ValidationDialog predefined message\\nP13NDIALOG_VALIDATION_MESSAGE=Fehlende oder falsche Filterwerte\\n#XTIT: personalization dialog ValidationDialog predefined message for columns panel\\nP13NDIALOG_VISIBLE_ITEMS_THRESHOLD_MESSAGE=Die Auswahl vieler Spalten kann sich negativ auf die Performance auswirken\\n#XTIT: personalization dialog ValidationDialog predefined message for P13nDimMeasure\\nP13NDIALOG_VALIDATION_CHARTTYPE=Die ausgew\\\\u00E4hlten Dimensionen und Kennzahlen k\\\\u00F6nnen nicht mit diesem Diagrammtyp verwendet werden.\\n#XTIT: personalization dialog ValidationDialog predefined question an the end\\nP13NDIALOG_VALIDATION_MESSAGE_QUESTION=M\\\\u00F6chten Sie Ihre Eintr\\\\u00E4ge korrigieren?\\n\\n#XTIT: on some personalization panels \\\"(none)\\\" as 'column key' means that no criteria was defined\\nP13NDIALOG_SELECTION_NONE=(keine)\\n\\n#XTIT: Filterpanel predefined title for Include filter\\nFILTERPANEL_INCLUDES=Einschlie\\\\u00DFen\\n#XTIT: Filterpanel predefined title for Exclude filter\\nFILTERPANEL_EXCLUDES=Ausschlie\\\\u00DFen\\n#XTIT: Text for title 'Filter' in the personalization dialog\\nFILTERPANEL_TITLE=Filter\\n\\n#XTIT: Text for title 'Sort' in the personalization dialog\\nSORTPANEL_TITLE=Sortierung\\n\\n#XTIT: Text for title 'Group' in the personalization dialog\\nGROUPPANEL_TITLE=Gruppe\\n\\n#XFLD: Label text for combobox control\\nCONDITIONPANEL_FIELD_LABEL=Feld\\\\:\\n#XFLD: Label text for select control\\nCONDITIONPANEL_OPERATOR_LABEL=Operator\\\\:\\n\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONBT=zwischen\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONEQ=gleich\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONContains=enth\\\\u00E4lt\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGT=gr\\\\u00F6\\\\u00DFer als\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGE=gr\\\\u00F6\\\\u00DFer oder gleich\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONLT=kleiner als\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONLE=kleiner oder gleich\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONInitial=initial\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONStartsWith=beginnt mit\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONEndsWith=endet auf\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONAscending=Aufsteigend\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONDescending=Absteigend\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGroupAscending=Aufsteigend\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONGroupDescending=Absteigend\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONTotal=Summe\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONAverage=Durchschnitt\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONMinimum=Minimum\\n#XTIT: ConditionPanel Option\\nCONDITIONPANEL_OPTIONMaximum=Maximum\\n#XTIT: ConditionPanel Empty\\nCONDITIONPANEL_OPTIONEmpty=leer\\n#XTIT: ConditionPanel NotEmpty\\nCONDITIONPANEL_OPTIONNotEmpty=nicht leer\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_BT=zwischen\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_EQ=gleich\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_GT=nach dem\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_GE=am oder nach dem\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_LT=vor dem\\n#XTIT: ConditionPanel Option for date\\nCONDITIONPANEL_OPTION_DATE_LE=vor dem oder am\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_BT=zwischen\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_EQ=gleich\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_GT=gr\\\\u00F6\\\\u00DFer als\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_GE=gr\\\\u00F6\\\\u00DFer oder gleich\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_LT=kleiner als\\n#XTIT: ConditionPanel Option for numeric\\nCONDITIONPANEL_OPTION_NUMERIC_LE=kleiner oder gleich\\n\\n\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELFROM=von\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELTO=bis\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELVALUE=Wert\\n#XTIT: ConditionPanel Option Label\\nCONDITIONPANEL_LABELGROUPING=Feld als Spalte anzeigen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_TOOLTIP=Neue Zeile hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_TOOLTIP=Zeile entfernen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_FILTER_TOOLTIP=Filter hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_FILTER_TOOLTIP=Filter entfernen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_SORT_TOOLTIP=Sortierkriterium hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_SORT_TOOLTIP=Sortierkriterium entfernen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_GROUP_TOOLTIP=Gruppierungskriterium hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_GROUP_TOOLTIP=Gruppierungskriterium entfernen\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\nCONDITIONPANEL_ADD_CONDITION_TOOLTIP=Bedingung hinzuf\\\\u00FCgen\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\nCONDITIONPANEL_REMOVE_CONDITION_TOOLTIP=Bedingung entfernen\\n#XBUT: ConditionPanel predefined text for remove all button\\nCONDITIONPANEL_REMOVE_ALL=Alle entfernen\\n#XTIT: ConditionPanel predefined field warning hint\\nCONDITIONPANEL_FIELDMESSAGE=G\\\\u00FCltigen Wert eingeben\\n\\n#XTIT: Text for title 'Chart' in the personalization dialog\\nCHARTPANEL_TITLE=Diagramm\\n\\n#XTIT: Text for title 'Columns' in the personalization dialog\\nCOLUMSPANEL_TITLE=Spalten\\n#XBUT: ColumnsPanel Show All button\\nCOLUMNSPANEL_SHOW_ALL=Alles anzeigen\\n#XBUT: ColumnsPanel Show Selected button\\nCOLUMNSPANEL_SHOW_SELECTED=Auswahl anzeigen\\n#XLST: ColumnsPanel Select All label\\nCOLUMNSPANEL_SELECT_ALL=Alle ausw\\\\u00E4hlen\\n#XLST: ColumnsPanel Select All label\\nCOLUMNSPANEL_SELECT_ALL_WITH_COUNTER=Alle ausw\\\\u00E4hlen ({0}/{1})\\n#XTOL: Tooltip for MOVE: ToStart button\\nCOLUMNSPANEL_MOVE_TO_TOP=Nach ganz oben\\n#XTOL: Tooltip for MOVE: Up button\\nCOLUMNSPANEL_MOVE_UP=Nach oben\\n#XTOL: Tooltip for MOVE: Down button\\nCOLUMNSPANEL_MOVE_DOWN=Nach unten\\n#XTOL: Tooltip for MOVE: ToEnd button\\nCOLUMNSPANEL_MOVE_TO_BOTTOM=Nach ganz unten\\n\\n#XLST: ColumnsPanel Chart Type caption\\nCOLUMNSPANEL_COLUMN_TYPE=Typ\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_TYPE_DIMENSION=Dimension\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_TYPE_MEASURE=Kennzahl\\n#XLST: ColumnsPanel Chart Role caption\\nCOLUMNSPANEL_COLUMN_ROLE=Rolle\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_CATEGORY=Kategorie\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_SERIES=Serie\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_AXIS1=Achse 1\\n#XLST: ColumnsPanel Chart Role\\nCOLUMNSPANEL_CHARTROLE_AXIS2=Achse 2\\n#XLST: ColumnsPanel Chart Type\\nCOLUMNSPANEL_CHARTTYPE=Diagrammtyp\\n\\n\\n#XFLD: Subtle link description label\\nLINK_SUBTLE=Dezent\\n#XFLD: Emphasized link description label\\nLINK_EMPHASIZED=Hervorgehoben\\n\\n#XACT: ARIA announcement for the search field F5 keyboard shortcut\\nSEARCHFIELD_ARIA_F5=Aktualisieren mit F5\\n\\n#XACT: ARIA announcement for the F4 value help keyboard shortcut\\nVALUEHELP_ARIA_F4=Hilfedialog mit F4-Taste \\\\u00F6ffnen\\n\\n#XTXT: Bar's ARIA description when it is a footer\\nBAR_ARIA_DESCRIPTION_FOOTER=Fu\\\\u00DFbereich\\n#XTXT: Bar's ARIA description when it is a header\\nBAR_ARIA_DESCRIPTION_HEADER=Kopfbereich\\n#XTXT: Bar's ARIA description when it is a subheader\\nBAR_ARIA_DESCRIPTION_SUBHEADER=Zwischen\\\\u00FCberschrift\\n\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Error\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_ERROR=Wertzustand Fehler\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Warning\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_WARNING=Wertzustand Warnung\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Success\\\"\\nOBJECTNUMBER_ARIA_VALUE_STATE_SUCCESS=Wertzustand Erfolg\\n\\n#XACT: ARIA text for tab separator icons\\nICONTABBAR_NEXTSTEP=N\\\\u00E4chster Schritt\\n#XACT: ARIA text for positive icon color\\nICONTABBAR_ICONCOLOR_POSITIVE=Positiv\\n#XACT: ARIA text for critical icon color\\nICONTABBAR_ICONCOLOR_CRITICAL=Kritisch\\n#XACT: ARIA text for negative icon color\\nICONTABBAR_ICONCOLOR_NEGATIVE=Negativ\\n\\n#XACT: ARIA text of current selected value vs. max. possible value of the RatingIndicator control\\nRATING_VALUEARIATEXT={0} von {1}\\n#XACT: ARIA description of the RatingIndicator control\\nRATING_ARIA_NAME=Bewertung\\n\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s favorite property\\nARIA_FAVORITE_MARK_VALUE=Favorit\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s flag property\\nARIA_FLAG_MARK_VALUE=Kennzeichen\\n\\n#XACT: ARIA description for ObjectHeader icon infront of the title when it's active\\nOH_ARIA_ICON=Symbol\\n\\n#XACT: ARIA description for Shell logo\\nSHELL_ARIA_LOGO=Logo\\n\\n#XTXT: MessagePage text\\nMESSAGE_PAGE_TEXT=Keine passenden Elemente gefunden.\\n#XTXT: MessagePage description\\nMESSAGE_PAGE_DESCRIPTION=\\\\u00DCberpr\\\\u00FCfen Sie die Filtereinstellungen\\n\\n#XFLD: Token number indicator which is used to show more tokens in MultiInput when the MultiInput it is in multi-line display mode\\nMULTIINPUT_SHOW_MORE_TOKENS={0} Mehr\\n#XACT: ARIA announcement for multiinput containing label\\nMULTIINPUT_ARIA_CONTAIN_TOKEN=Enth\\\\u00E4lt gegebenenfalls Tokens\\n#XACT: ARIA announcement for multiinput containing one token\\nMULTIINPUT_ARIA_CONTAIN_ONE_TOKEN=Enth\\\\u00E4lt 1 Token\\n#XACT: ARIA announcement for multiinput containing several tokens\\nMULTIINPUT_ARIA_CONTAIN_SEVERAL_TOKENS=Enth\\\\u00E4lt {0} Tokens\\n\\n#XACT: ARIA announcement for tokenizer label\\nTOKENIZER_ARIA_LABEL=Tokenizer\\n\\n#XACT: ARIA announcement for token label\\nTOKEN_ARIA_LABEL=Token\\n#XACT: ARIA announcement for token deletable\\nTOKEN_ARIA_DELETABLE=L\\\\u00F6schbar\\n\\n#XACT: ARIA announcement for the ObjectListItem unread mark\\nOBJECTLISTITEM_ARIA_UNREAD_VALUE=Ungelesen\\n#XACT: ARIA announcement for the ObjectListItem locked mark\\nOBJECTLISTITEM_ARIA_LOCKED_MARK_VALUE=Gesperrt\\n\\n#XBUT: MessagePopover predefined text for CLOSE action\\nMESSAGEPOPOVER_CLOSE=Schlie\\\\u00DFen\\n#XBUT: MessagePopover predefined text for All Button\\nMESSAGEPOPOVER_ALL=Alle\\n#XACT: ARIA announcement for the MessagePopover back buttons tooltip\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON_TOOLTIP=Zur\\\\u00FCck zu Nachrichten\\n#XACT: ARIA announcement for the MessagePopover back buttons\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON=Nachrichtendetails\\n#XACT: ARIA announcement for the MessagePopover heading\\nMESSAGEPOPOVER_ARIA_HEADING=Nachrichten\\n\\n#XACT: ARIA announcement for the accept button\\nBUTTON_ARIA_TYPE_ACCEPT=Positive Aktion\\n#XACT: ARIA announcement for the reject button\\nBUTTON_ARIA_TYPE_REJECT=Negative Aktion\\n#XACT: ARIA announcement for the emphasized button\\nBUTTON_ARIA_TYPE_EMPHASIZED=Hervorgehoben\\n\\n#XACT: ARIA text for position markers\\nCAROUSEL_POSITION=Element {0} von {1} wird angezeigt\\n\\n#XTXT: Text between numbers in the numeric page indicator\\nCAROUSEL_PAGE_INDICATOR_TEXT={0} von {1}\\n\\n#XTXT: colon separator\\nCOLON=\\\\:\\n\\n#XBUT: sap.m.semantic.SemanticControl Edit button text\\nSEMANTIC_CONTROL_EDIT=Bearbeiten\\n#XBUT: sap.m.semantic.SemanticControl Save button text\\nSEMANTIC_CONTROL_SAVE=Sichern\\n#XBUT: sap.m.semantic.SemanticControl Delete button text\\nSEMANTIC_CONTROL_DELETE=L\\\\u00F6schen\\n#XBUT: sap.m.semantic.SemanticControl Cancel button text\\nSEMANTIC_CONTROL_CANCEL=Abbrechen\\n#XBUT: sap.m.semantic.SemanticControl Approve button text\\nSEMANTIC_CONTROL_APPROVE=Genehmigen\\n#XBUT: sap.m.semantic.SemanticControl Reject button text\\nSEMANTIC_CONTROL_REJECT=Ablehnen\\n#XBUT: sap.m.semantic.SemanticControl Forward button text\\nSEMANTIC_CONTROL_FORWARD=Weiterleiten\\n#XBUT: sap.m.semantic.SemanticControl Open in button text\\nSEMANTIC_CONTROL_OPEN_IN=\\\\u00D6ffnen in ...\\n#XBUT: sap.m.semantic.SemanticControl Sort button text\\nSEMANTIC_CONTROL_SORT=Sortierung\\n#XBUT: sap.m.semantic.SemanticControl Filter button text\\nSEMANTIC_CONTROL_FILTER=Filter\\n#XBUT: sap.m.semantic.SemanticControl Group button text\\nSEMANTIC_CONTROL_GROUP=Gruppierung\\n#XBUT: sap.m.semantic.SemanticControl Flag button text\\nSEMANTIC_CONTROL_FLAG=Kennzeichen\\n#XBUT: sap.m.semantic.SemanticControl Favorite button text\\nSEMANTIC_CONTROL_FAVORITE=Favorit\\n#XBUT: sap.m.semantic.SemanticControl Add button text\\nSEMANTIC_CONTROL_ADD=Hinzuf\\\\u00FCgen\\n#XBUT: sap.m.semantic.SemanticControl Send Email button text\\nSEMANTIC_CONTROL_SEND_EMAIL=E-Mail senden\\n#XBUT: sap.m.semantic.SemanticControl Discuss in SAP Jam button text\\nSEMANTIC_CONTROL_DISCUSS_IN_JAM=In SAP Jam diskutieren\\n#XBUT: sap.m.semantic.SemanticControl Share in SAP Jam button text\\nSEMANTIC_CONTROL_SHARE_IN_JAM=\\\\u00DCber SAP Jam teilen\\n#XBUT: sap.m.semantic.SemanticControl Send Message button text\\nSEMANTIC_CONTROL_SEND_MESSAGE=Nachricht senden\\n#XBUT: sap.m.semantic.SemanticControl Save as Tile button text\\nSEMANTIC_CONTROL_SAVE_AS_TILE=Als Kachel sichern\\n#XBUT: sap.m.semantic.SemanticControl Print button text\\nSEMANTIC_CONTROL_PRINT=Drucken\\n#XBUT: sap.m.semantic.SemanticControl Multi select button text\\nSEMANTIC_CONTROL_MULTI_SELECT=Mehrfachauswahl\\n#XBUT: sap.m.semantic.SemanticControl Multi select cancel button text\\nSEMANTIC_CONTROL_MULTI_SELECT_CANCEL=Mehrfachauswahl aufheben\\n#XBUT: sap.m.semantic.SemanticControl Message indicator button text\\nSEMANTIC_CONTROL_MESSAGES_INDICATOR=Nachrichten\\n#XBUT: sap.m.semantic.SemanticControl \\\"Action\\\" Share button text\\nSEMANTIC_CONTROL_ACTION_SHARE=Teilen\\n#XTXT: sap.m.semantic.DetailPage title\\nSEMANTIC_DETAIL_PAGE_TITLE=Details\\n#XTXT: sap.m.semantic.MasterPage title\\nSEMANTIC_MASTER_PAGE_TITLE=Master\\n\\n#XFLD: sap.m.DraftIndicator Saving Draft indicator text\\nDRAFT_INDICATOR_SAVING_DRAFT=Entwurf wird gesichert...\\n#XFLD: sap.m.DraftIndicator Draft saved indicator text\\nDRAFT_INDICATOR_DRAFT_SAVED=Entwurf wurde gesichert\\n\\n#XBUT: Wizard predefined text for Cancel button\\nWIZARD_CANCEL=Abbrechen\\n#XBUT: Wizard predefined text for Next button\\nWIZARD_NEXT=Weiter\\n#XBUT: Wizard predefined text for Finish button\\nWIZARD_FINISH=\\\\u00DCberpr\\\\u00FCfen\\n\\n#XACT: Aria information for the Date Picker\\nDATEPICKER_DATE_TYPE=Datum\\n\\n#XACT: WizardProgressNavigator selected step\\nWIZARD_PROG_NAV_SELECTED=Ausgew\\\\u00E4hlt\\n#XACT: WizardProgressNavigator processed step\\nWIZARD_PROG_NAV_PROCESSED=Verarbeitet\\n#XACT: WizardProgressNavigator predefined text for step\\nWIZARD_PROG_NAV_STEP_TITLE=Schritt\\n#XBUT: Wizard predefined text for Step button\\nWIZARD_STEP=Schritt\\n#XACT: Aria label for the wizard\\nWIZARD_LABEL=Assistent\\n\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectHeader, showing that the item is flagged\\nTOOLTIP_OH_FLAG_MARK_VALUE=Markiert\\n\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectHeader, showing that the item is favorite\\nTOOLTIP_OH_FAVORITE_MARK_VALUE=Favorit\\n\\n#XTOL: Tooltip for the select title arrow inside sap.m.ObjectHeader\\nOH_SELECT_ARROW_TOOLTIP=Verwandte Optionen\\n\\n#XTXT: Text value for marker type Flag\\nOM_FLAG=Markiert\\n\\n#XTXT: Text value for marker type Favorite\\nOM_FAVORITE=Favorit\\n\\n#XTXT: Text value for marker type Draft\\nOM_DRAFT=Entwurf\\n\\n#XTXT: Text value for marker type Locked\\nOM_LOCKED=Gesperrt\\n\\n#XTXT: Text value for marker type LockedBy that shows who has locked the object, e.g. Locked by {User name}\\nOM_LOCKED_BY=Gesperrt von {0}\\n\\n#XTXT: Text value for marker type Locked by another user\\nOM_LOCKED_BY_ANOTHER_USER=Gesperrt durch anderen Benutzer\\n\\n#XTXT: Text value for marker type Unsaved Changes\\nOM_UNSAVED=Nicht gesicherte \\\\u00C4nderungen\\n\\n#XTXT: Text value for marker type UnsavedBy Changes that shows who has unsaved changes, e.g. Unsaved Changes by {User name}\\nOM_UNSAVED_BY=Nicht gesicherte \\\\u00C4nderungen von {0}\\n\\n#XTXT: Text value for marker type Unsaved by another user\\nOM_UNSAVED_BY_ANOTHER_USER=Nicht gesicherte \\\\u00C4nderungen eines anderen Benutzers\\n\\n#XTOL: Tooltip for \\\"Send SMS\\\" in QuickView\\nQUICKVIEW_SEND_SMS=SMS schicken\\n\\n#XTXT: Text for character left\\nTEXTAREA_CHARACTER_LEFT={0} Zeichen \\\\u00FCbrig\\n\\n#XTXT: Text for characters left\\nTEXTAREA_CHARACTERS_LEFT={0} Zeichen \\\\u00FCbrig\\n\\n#XTXT: Text for character exceeded\\nTEXTAREA_CHARACTER_EXCEEDED={0} Zeichen \\\\u00FCberschritten\\n\\n#XTXT: Text for characters exceeded\\nTEXTAREA_CHARACTERS_EXCEEDED={0} Zeichen \\\\u00FCberschritten\\n\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectListItem, showing that the item is flagged\\nTOOLTIP_OLI_FLAG_MARK_VALUE=Markiert\\n\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectListItem, showing that the item is favorite\\nTOOLTIP_OLI_FAVORITE_MARK_VALUE=Favorit\\n\\n#XTOL: Tooltip for the locked icon inside sap.m.ObjectListItem, showing that the item is locked\\nTOOLTIP_OLI_LOCK_MARK_VALUE=Gesperrt\\n\\n#XBUT: Time Selection button text of Time Picker control\\nTIMEPICKER_SET=OK\\n\\n#XBUT: Cancel/Close button text of Time Picker control\\nTIMEPICKER_CANCEL=Abbrech.\\n\\n#YACT: ARIA tag of Time Picker control\\nTIMEPICKER_SCREENREADER_TAG=Uhrzeitauswahl\\n\\n#YACT: ARIA tag of Time Picker control with format as placeholder\\nTIMEPICKER_WITH_PH_SCREENREADER_TAG=Uhrzeitauswahl im Format {0}\\n\\n#XFLD: Label of the hours value slider inside a Time Picker control\\nTIMEPICKER_LBL_HOURS=Stunden\\n\\n#XFLD: Label of the minutes value slider inside a Time Picker control\\nTIMEPICKER_LBL_MINUTES=Minuten\\n\\n#XFLD: Label of the seconds value slider inside a Time Picker control\\nTIMEPICKER_LBL_SECONDS=Sekunden\\n\\n#XFLD: Label of the am/pm value slider inside a Time Picker control\\nTIMEPICKER_LBL_AMPM=AM/PM\\n\\n#XACT: ARIA label for Breadcrumbs\\nBREADCRUMB_LABEL=Navigationspfad\\n\\n#XTOL: Tooltip text for Breadcrumbs select\\nBREADCRUMB_SELECT_TOOLTIP=Mehr\\n\\n#XACT: Unread status of Notification List Item\\nNOTIFICATION_LIST_ITEM_UNREAD=Benachrichtigung ungelesen.\\n\\n#XACT: Read status of Notification List Item\\nNOTIFICATION_LIST_ITEM_READ=Benachrichtigung gelesen.\\n\\n#XACT: ARIA text for datetime and priority\\nNOTIFICATION_LIST_ITEM_DATETIME_PRIORITY=F\\\\u00E4llig in {0}, Priorit\\\\u00E4t {1}.\\n\\n#XFLD: text that will be displayed when tile failed to load\\nINFOTILE_CANNOT_LOAD_TILE=Kachel kann nicht geladen werden\\n\\n#XFLD: text that will be read while tile is loading\\nINFOTILE_LOADING=Ladevorgang l\\\\u00E4uft\\n\\n#XTXT: text for critical color\\nSEMANTIC_COLOR_CRITICAL=Warnung\\n\\n#XTXT: text for good color\\nSEMANTIC_COLOR_GOOD=Gut\\n\\n#XTXT: text for neutral color\\nSEMANTIC_COLOR_NEUTRAL=Neutral\\n\\n#XTXT: text for error color\\nSEMANTIC_COLOR_ERROR=Kritisch\\n\\n#XTOL:\\nNUMERICCONTENT_DEVIATION_UP=Aufsteigend\\n\\n#XTOL:\\nNUMERICCONTENT_DEVIATION_DOWN=Absteigend\\n\\n#YACT: ARIA tag of MaskInput control\\nMASKINPUT_SCREENREADER_TAG=Maskiert\\n\\n#YACT: ARIA description of MaskInput control\\nMASKINPUT_SCREENREADER_DESCRIPTION=Das fokussierte, maskierte Eingabefeld wird formatiert und vorgef\\\\u00FCllt. Das Symbol {0} ist f\\\\u00FCr einen Platzhalter reserviert. Der in dieses Feld einzugebende Wert hat das Format {1}, wobei jedes Symbol einer Regel entspricht. Bei einer Regel handelt es sich um eine Folge von Zeichen, die f\\\\u00FCr ihre konkrete Position erlaubt sind. Symbole, die keine Regel haben, sind unver\\\\u00E4nderbare Zeichen, und Teil der Werteformatierung.\\n\\n#XACT: ARIA scroll back button for tabstrip\\nTABSTRIP_SCROLL_BACK=Bildlauf zur\\\\u00FCck\\n\\n#XACT: ARIA scroll forward button for tabstrip\\nTABSTRIP_SCROLL_FORWARD=Bildlauf vorw\\\\u00E4rts\\n\\n#XACT: ARIA static text for modified tabstrip item\\nTABSTRIP_ITEM_MODIFIED=Nicht gesichert\\n\\n#XACT: ARIA static text for not-modified tabstrip item\\nTABSTRIP_ITEM_NOT_MODIFIED=Gesichert\\n\\n#XACT: ARIA static text for closable tabstrip item\\nTABSTRIP_ITEM_CLOSABLE=Schlie\\\\u00DFbar\\n#XFLD: Footer text for TileContent\\nTILECONTENT_FOOTER_TEXT={0}, {1}\\n\\n#XBUT: Button text for collapsing the Notification List Group\\nNOTIFICATION_LIST_GROUP_COLLAPSE=Gruppe komprimieren\\n\\n#XBUT: Button text for expanding the Notification List Group\\nNOTIFICATION_LIST_GROUP_EXPAND=Gruppe expandieren\\n\\n#XACT: ARIA add new tab button for tabstrip\\nTABCONTAINER_ADD_NEW_TAB=Neue Registerkarte hinzuf\\\\u00FCgen\\n\\n#XACT: ARIA dropdown button for tabstrip\\nTABSTRIP_OPENED_TABS=Offene Registerkarten\\n\\n#XBUT: Button text for expanding a Notification List Item\\nNOTIFICATION_LIST_ITEM_SHOW_MORE=Mehr anzeigen\\n\\n#XBUT: Button text for collapsing a Notification List Item\\nNOTIFICATION_LIST_ITEM_SHOW_LESS=Weniger anzeigen\\n\\n#XBUT: Date button of DateTimePicker on small screens\\nDATETIMEPICKER_DATE=Datum\\n\\n#XBUT: Time button of DateTimePicker on small screens\\nDATETIMEPICKER_TIME=Zeit\\n\\n#XACT: Aria information for the Date Time Picker\\nDATETIMEPICKER_TYPE=Datum und Uhrzeit\\n\\n#XACT: PlanningCalendar accessibility description\\nPLANNINGCALENDAR=Planungskalender\\n\\n#XACT: PlanningCalendar view selector accessibility description\\nPLANNINGCALENDAR_VIEW=Kalender anzeigen nach\\n\\n#XFLD: Name of the \\\"Hours\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_HOURS=Stunden\\n\\n#XFLD: Name of the \\\"Days\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_DAYS=Tage\\n\\n#XFLD: Name of the \\\"Months\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_MONTHS=Monate\\n\\n#XFLD: Name of the \\\"Week\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_WEEK=1 Woche\\n\\n#XFLD: Name of the \\\"OneMonth\\\" view in the PlanningCalendar control\\nPLANNINGCALENDAR_ONE_MONTH=1 Monat\\n\\n#XBUT: Today button of PlanningCalendar control\\nPLANNINGCALENDAR_TODAY=Heute\\n\\n#XFLD: Text for all day event\\nPLANNINGCALENDAR_ALLDAY=Ganzer Tag\\n\\n#XFLD: Text for event with no starting time\\nPLANNINGCALENDAR_UNTIL=bis {0}\\n\\n#XFLD: Text for a placeholder row when there are no appointments\\nPLANNINGCALENDAR_ROW_NO_APPOINTMENTS=Keine Eintr\\\\u00E4ge\\n\\n#XTOL: Tool tip for nextButton of the PagingButton\\nPAGINGBUTTON_NEXT=N\\\\u00E4chste Seite\\n\\n#XTOL: Tool tip for nextButton of the PagingButton\\nPAGINGBUTTON_PREVIOUS=Vorherige Seite\\n\\n#XBUT: Text and number of selected items for toolbar button of SelectionDetails\\nSELECTIONDETAILS_BUTTON_TEXT_WITH_NUMBER=Details ({0})\\n\\n#XBUT: Text for toolbar button of SelectionDetails\\nSELECTIONDETAILS_BUTTON_TEXT=Details\\n\\n#############\\n#Translatable Control Types and States for ACC\\n#############\\n\\n#XACT: type of an UI control is an input field\\nACC_CTR_TYPE_INPUT=Eingabe\\n\\n#XACT: type of an UI control is a input field (which allows setting multiple values)\\nACC_CTR_TYPE_MULTIINPUT=Mehrfache Eingabe\\n\\n#XACT: type of an UI control is a date input field\\nACC_CTR_TYPE_DATEINPUT=Datumseingabe\\n\\n#XACT: type of an UI control is a time input field\\nACC_CTR_TYPE_TIMEINPUT=Zeiteingabe\\n\\n#XACT: type of an UI control is a date and time input field\\nACC_CTR_TYPE_DATETIMEINPUT=Datum/Zeit-Eingabe\\n\\n#XACT: type of an UI control is a rating indicator\\nACC_CTR_TYPE_RATING=Bewertung\\n\\n#XACT: type of an UI control is a button\\nACC_CTR_TYPE_BUTTON=Drucktaste\\n\\n#XACT: type of an UI control is a link\\nACC_CTR_TYPE_LINK=Link\\n\\n#XACT: type of an UI control is an image\\nACC_CTR_TYPE_IMAGE=Bild\\n\\n#XACT: type of an UI control is a checkbox\\nACC_CTR_TYPE_CHECKBOX=Ankreuzfeld\\n\\n#XACT: type of of an UI control is a progess indicator\\nACC_CTR_TYPE_PROGRESS=Fortschritt\\n\\n#XACT: type of an UI control is a combobox\\nACC_CTR_TYPE_COMBO=Combobox\\n\\n#XACT: type of of an UI control is a combobox (which allows multi selection)\\nACC_CTR_TYPE_MULTICOMBO=Mehrfach-Combobox\\n\\n#XACT: type of of an UI control is a list\\nACC_CTR_TYPE_LIST=Listenfeld\\n\\n#XACT: type of of an UI control is a list item\\nACC_CTR_TYPE_OPTION=Listenelement\\n\\n#XACT: type of of an UI control is a tree\\nACC_CTR_TYPE_TREE=Baum\\n\\n#XACT: type of of an UI control is a tree item\\nACC_CTR_TYPE_TREEITEM=Baumelement\\n\\n#XACT: type of of an UI control is a table\\nACC_CTR_TYPE_TABLE=Tabelle\\n\\n#XACT: type of of an UI control is a table row\\nACC_CTR_TYPE_ROW=Zeile\\n\\n#XACT: ARIA announcement for the header row of the table\\nACC_CTR_TYPE_HEADER_ROW=Kopfzeile\\n\\n#XACT: ARIA announcement for the footer row of the table\\nACC_CTR_TYPE_FOOTER_ROW=Fu\\\\u00DFzeile\\n\\n#XACT: \\\"pressed\\\" state of e.g. a togglebutton which should be announced by screenreaders\\nACC_CTR_STATE_PRESSED=Gedr\\\\u00FCckt\\n\\n#XACT: \\\"checked\\\" state of e.g. a checkbox which should be announced by screenreaders\\nACC_CTR_STATE_CHECKED=Aktiviert\\n\\n#XACT: state (current and max. value) of a rating indicator which should be announced by screenreaders\\nACC_CTR_STATE_RATING={0} von {1}\\n\\n#XACT: progress state of a progress indicator which should be announced by screenreaders\\nACC_CTR_STATE_PROGRESS={0} %\\n\\n#############\\n\\n#XACT: Aria information for the Split Button\\nSPLIT_BUTTON_DESCRIPTION=Zweigeteilte Drucktaste\\n\\n#XACT: Aria hint for the keyboard handling support of the Split Button\\nSPLIT_BUTTON_KEYBOARD_HINT=Dr\\\\u00FCcken Sie Enter, um Aktion auszul\\\\u00F6sen und dr\\\\u00FCcken Sie Pfeil nach unten, um Men\\\\u00FC zu \\\\u00F6ffnen\\n\\n#XTOL: Tooltip text for back button inside a Menu Page\\nMENU_PAGE_BACK_BUTTON=Zur\\\\u00FCck zu\\n\\n#XBUT: Menu predefined text for CLOSE action\\nMENU_CLOSE=Abbrechen\\n\\n#XBUT: Button text for closing a Notification List Base control\\nNOTIFICATION_LIST_BASE_CLOSE=Schlie\\\\u00DFen\\n\\n\\n#XBUT: No grouping item in ViewSettingsPopover\\nNO_GROUPING=Keine Gruppierung\\n\\n#XBUT: No filtering item in ViewSettingsPopover\\nREMOVE_FILTER=Filter entfernen\\n\\n#XBUT: ARIA-LabelledBy for ViewSettingsPopover\\nARIA_LABELLED_BY_POPOVER=Einstellungen f\\\\u00FCr Spaltensicht\\n\\n#XBUT: Show selected only for ViewSettingsPopover\\nSHOW_SELECTED_ONLY=Nur ausgew\\\\u00E4hlte anzeigen\\n\\n#XBUT: No sorting item in ViewSettingsPopover\\nNO_SORTING=Keine Sortierung\\n\\n#YACT: ARIA information about multiple content within the SlideTile\\nSLIDETILE_MULTIPLE_CONTENT=Element mit mehrfachem Inhalt\\n\\n#YACT: ARIA information about toggle sliding within the SlideTile\\nSLIDETILE_TOGGLE_SLIDING=Um Sliding umzuschalten, Leertaste dr\\\\u00FCcken\\n\\n#YACT: ARIA information how to activate the SlideTile\\nSLIDETILE_ACTIVATE=Zum Aktivieren, ENTER dr\\\\u00FCcken\\n\\n#YACT: ARIA information how to scroll back in the SlideTile\\nSLIDETILE_SCROLL_BACK=Um zur\\\\u00FCck zu bl\\\\u00E4ttern, B dr\\\\u00FCcken\\n\\n#YACT: ARIA information how to to scroll forward in the SlideTile\\nSLIDETILE_SCROLL_FORWARD=Um weiter zu bl\\\\u00E4ttern, F dr\\\\u00FCcken\\n\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\nSLIDER_HANDLE=Griff des Schiebereglers\\n\\n#XACT: ARIA announcement for the range in RangeSlider\\nRANGE_SLIDER_RANGE_ANNOUNCEMENT=von {0} bis {1}\\n\\n#XACT: ARIA ARIA-LabelledBy for the left handle and tooltip in RangeSlider\\nRANGE_SLIDER_LEFT_HANDLE=Linker Regler\\n\\n#XACT: ARIA ARIA-LabelledBy for the right handle and tooltip in RangeSlider\\nRANGE_SLIDER_RIGHT_HANDLE=Rechter Regler\\n\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\nRANGE_SLIDER_RANGE_HANDLE=Bereich\\n\\n#XBUT: Button text for close button in the LightBox\\nLIGHTBOX_CLOSE_BUTTON=Schlie\\\\u00DFen\\n\\n#XTOL: Tooltip on the button to allow to scroll back\\nHEADERCONTAINER_BUTTON_PREV_SECTION=Zur\\\\u00FCck\\n\\n#XTOL: Tooltip on the button to allow to scroll forward\\nHEADERCONTAINER_BUTTON_NEXT_SECTION=Weiter\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout.\\nLIGHTBOX_IMAGE_TIMED_OUT=Bild kann nicht geladen werden\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\nLIGHTBOX_IMAGE_TIMED_OUT_DETAILS=Das Bild ist zu gro\\\\u00DF, um es jetzt zu laden. Bitte versuchen Sie es sp\\\\u00E4ter erneut.\\n\\n#XTXT: Error message for LightBox image not loaded.\\nLIGHTBOX_IMAGE_ERROR=Ein Fehler ist aufgetreten.\\n\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\nLIGHTBOX_IMAGE_ERROR_DETAILS=Das Bild wurde am angegebenen Speicherort nicht gefunden oder der Server ist nicht aktiv.\\n\\n#XACT: ARIA announcement for enlarged image\\nLIGHTBOX_ARIA_ENLARGED=Vergr\\\\u00F6\\\\u00DFertes Bild von {0}\\n\\n#XACT: ARIA keyboard announcement for the DEL key for removing a tile\\nTILE_REMOVE_BY_DEL_KEY=Um das Element zu entfernen, dr\\\\u00FCcken Sie die L\\\\u00F6schtaste.\\n\\n#XACT: ARIA text for GenericTile in actions scope\\nGENERICTILE_ACTIONS_ARIA_TEXT=Entfernbare Kachel\\n\\n#XTOL: Tooltip for REMOVE button in the GenericTile\\nGENERICTILE_REMOVEBUTTON_TEXT=Entfernen\\n\\n#XTXT: Reached maximum number of notifications in NotificationListGroup title\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_TITLE=Es sind {0} weitere Benachrichtigungen vorhanden\\n\\n#XTXT: Reached maximum number of notifications in NotificationListGroup\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_BODY=Um mehr anzuzeigen, m\\\\u00FCssen Sie die aufgef\\\\u00FChrten Benachrichtigungen schlie\\\\u00DFen oder eine Aktion durchf\\\\u00FChren.\\n\\n#XTOL: Tooltip of the button for increasing for example the quantity of a product inside shopping-cart application\\nSTEP_INPUT_INCREASE_BTN=Vergr\\\\u00F6\\\\u00DFern\\n\\n#XTOL: Tooltip of the button for decreasing for example the quantity of a product inside shopping-cart application\\nSTEP_INPUT_DECREASE_BTN=Verkleinern\\n\\n#XMIT: Radio button control name caption\\nRADIOBUTTON_NAME=Auswahlknopf\\n\\n#XTIT: Radio button control name plural caption\\nRADIOBUTTON_NAME_PLURAL=Auswahlkn\\\\u00F6pfe\\n\\n#XMIT: Text control name caption\\nTEXT_NAME=Text\\n\\n#XTIT: Text control name plural caption\\nTEXT_NAME_PLURAL=Texte\\n\\n#XMIT: Date picker control name caption\\nDATEPICKER_NAME=Date Picker\\n\\n#XACT: ARIA role for the control Object Identifier\\nOI_ARIA_ROLE=Objekt-ID\\n\\n#XTIT: Date picker control name plural caption\\nDATEPICKER_NAME_PLURAL=Date Pickers\\n\\n#XMIT: Check Box control name caption\\nCHECKBOX_NAME=Ankreuzfeld\\n\\n#XTIT: Check Box control name plural caption\\nCHECKBOX_NAME_PLURAL=Ankreuzfelder\\n\\n#XMIT: Rating Indicator control name caption\\nRATINGINDICATOR_NAME=Bewertungssterne\\n\\n#XTIT: Rating Indicator control name plural caption\\nRATINGINDICATOR_NAME_PLURAL=Bewertungssterne\\n\\n#XMIT: Page control name caption\\nPAGE_NAME=Seite\\n\\n#XTIT: Page control name plural caption\\nPAGE_NAME_PLURAL=Seiten\\n\\n#XMIT: Label control name caption\\nLABEL_NAME=Bezeichner\\n\\n#XTIT: Label control name plural caption\\nLABEL_NAME_PLURAL=Bezeichner\\n\\n#XMIT: Link control name caption\\nLINK_NAME=Link\\n\\n#XTIT: Link control name plural caption\\nLINK_NAME_PLURAL=Links\\n\\n#XMIT: Scroll container control name caption\\nSCROLL_CONTAINER_CONTROL_NAME=Container\\n\\n#XTIT: Scroll container control name plural caption\\nSCROLL_CONTAINER_CONTROL_NAME_PLURAL=Container\\n\\n#XMIT: Panel control name caption\\nPANEL_NAME=Panel\\n\\n#XTIT: Panel control name plural caption\\nPANEL_NAME_PLURAL=Panels\\n\\n#XMIT: ListItemBase control name caption\\nLIST_ITEM_BASE_NAME=Listenelement\\n\\n#XTIT: ListItemBase control name plural caption\\nLIST_ITEM_BASE_NAME_PLURAL=Listenelemente\\n\\n#XACT:Author of Notification List Item\\nNOTIFICATION_LIST_ITEM_CREATED_BY=Angelegt von\\n\\n#XACT: Unread status of Notification List Item\\nNOTIFICATION_LIST_GROUP_UNREAD=Benachrichtigungsgruppe ungelesen.\\n\\n#XACT: Read status of Notification List Item\\nNOTIFICATION_LIST_GROUP_READ=Benachrichtigungsgruppe gelesen.\\n\\n#XMIT: Image control name caption\\nIMAGE_NAME=Bild\\n\\n#XTIT: Image control name plural caption\\nIMAGE_NAME_PLURAL=Bilder\\n\\n#XMIT: InputBase control name caption\\nINPUT_BASE_NAME=Eingabe\\n\\n#XTIT: InputBase control name plural caption\\nINPUT_BASE_NAME_PLURAL=Eingaben\\n\\n#XMIT: Title control name caption\\nTITLE_NAME=Titel\\n\\n#XTIT: Title control name plural caption\\nTITLE_NAME_PLURAL=Titel\\n\\n#XMIT: Slider control name caption\\nSLIDER_NAME=Schieberegler\\n\\n#XTIT: Slider control name plural caption\\nSLIDER_NAME_PLURAL=Schieberegler\\n\\n#XMIT: ListBase control name caption\\nLIST_BASE_NAME=Liste\\n\\n#XTIT: ListBase control name plural caption\\nLIST_BASE_NAME_PLURAL=Listen\\n\\n#XMIT: Responsive Table control name caption\\nTABLE_NAME=Tabelle\\n\\n#XTIT: Table control name plural caption\\nTABLE_NAME_PLURAL=Tabellen\\n\\n#XACT: Aria label for Table select all CheckBox\\nTABLE_CHECKBOX_SELECT_ALL=Alle Zeilen ausw\\\\u00E4hlen\\n\\n#XTIT: Column control name caption\\nCOLUMN_NAME=Spalte\\n\\n#XTIT: Column control name plural caption\\nCOLUMN_NAME_PLURAL=Spalten\\n\\n#XMIT: FlexBox control name caption\\nFLEXBOX_CONTROL_NAME=Container\\n\\n#XTIT: FlexBox control name plural caption\\nFLEXBOX_CONTROL_NAME_PLURAL=Container\\n\\n#XBUT: Pdf viewer's popup close button\\nPDF_VIEWER_POPUP_CLOSE_BUTTON=Schlie\\\\u00DFen\\n\\n#XTXT: Pdf viewer's download link\\nPDF_VIEWER_DOWNLOAD_TEXT=Download\\n\\n#XTXT: Text in error placeholder of pdf viewer\\nPDF_VIEWER_PLACEHOLDER_ERROR_TEXT=Die PDF-Datei kann nicht geladen werden.\\n\\n#XACT: PDF viewer's accessibility label\\nPDF_VIEWER_ACCESSIBILITY_LABEL=PDF-Viewer\\n\\n#XTIT: PDF viewer's message box header for source validation error\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_HEADER=Fehler bei der Validierung der Quelle\\n\\n#XMSG: PDF viewer's message box text for source validation error\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_TEXT=Die Quelle der Datei kann nicht validiert werden. Datei trotzdem anzeigen?\\n\\n#XBUT: MultiEditField prefilled Item keep\\nMULTI_EDIT_KEEP_TEXT=Vorhandene Werte beibehalten\\n\\n#XBUT: MultiEditField prefilled Item blank\\nMULTI_EDIT_BLANK_TEXT=Leer lassen\\n\\n#XBUT: MultiEditField prefilled Item new\\nMULTI_EDIT_NEW_TEXT=Wertehilfe verwenden \\n\\n#XTXT: Text representing the Select's picker title text\\nSELECT_PICKER_TITLE_TEXT=Ausw\\\\u00E4hlen\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/openui5-sap.m/resources/sap/m/messagebundle_de.properties\n// module id = RnsF\n// module chunks = 1","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides class sap.ui.core.format.NumberFormat\nsap.ui.define(['jquery.sap.global', 'sap/ui/base/Object', 'sap/ui/core/Locale', 'sap/ui/core/LocaleData'],\n\tfunction(jQuery, BaseObject, Locale, LocaleData) {\n\t\"use strict\";\n\n\n\t/**\n\t * Format classes\n\t *\n\t * @namespace\n\t * @name sap.ui.core.format\n\t * @public\n\t */\n\n\t/**\n\t * Constructor for NumberFormat - must not be used: To get a NumberFormat instance, please use getInstance, getFloatInstance or getIntegerInstance.\n\t *\n\t * @class\n\t * The NumberFormat is a static class for formatting and parsing numeric values according\n\t * to a set of format options.\n\t *\n\t * @public\n\t * @param {object} [oFormatOptions] The option object which support the following parameters. If no options is given, default values according to the type and locale settings are used.\n\t * @param {int} [oFormatOptions.minIntegerDigits] defines minimal number of non-decimal digits\n\t * @param {int} [oFormatOptions.maxIntegerDigits] defines maximum number of non-decimal digits\n\t * @param {int} [oFormatOptions.minFractionDigits] defines minimal number of decimal digits\n\t * @param {int} [oFormatOptions.maxFractionDigits] defines maximum number of decimal digits\n\t * @param {int} [oFormatOptions.decimals] defines the number of decimal digits\n\t * @param {int} [oFormatOptions.shortDecimals] defines the number of decimal in the shortified format string. If this isn't specified, the 'decimals' options is used\n\t * @param {int} [oFormatOptions.shortLimit] only use short number formatting for values above this limit\n\t * @param {int} [oFormatOptions.shortRefNumber] @since 1.40 specifies a number from which the scale factor for 'short' or 'long' style format is generated. The generated scale factor is\n\t *  used for all numbers which are formatted with this format instance. This option has effect only when the option 'style' is set to 'short' or 'long'. This option is by default set\n\t *  with undefined which means the scale factor is selected automatically for each number being formatted.\n\t * @param {boolean} [oFormatOptions.showScale=true] @since 1.40 specifies whether the scale factor is shown in the formatted number. This option takes effect only when the 'style' options is set to either 'short' or 'long'.\n\t * @param {int} [oFormatOptions.precision] defines the number precision, number of decimals is calculated dependent on the integer digits\n\t * @param {string} [oFormatOptions.pattern] CLDR number pattern which is used to format the number\n\t * @param {boolean} [oFormatOptions.groupingEnabled] defines whether grouping is enabled (show the grouping separators)\n\t * @param {string} [oFormatOptions.groupingSeparator] defines the used grouping separator\n\t * @param {int} [oFormatOptions.groupingSize] defines the grouping size in digits, the default is three\n\t * @param {int} [oFormatOptions.groupingBaseSize] defines the grouping base size in digits, in case it is different from the grouping size (e.g. indian grouping)\n\t * @param {string} [oFormatOptions.decimalSeparator] defines the used decimal separator\n\t * @param {string} [oFormatOptions.plusSign] defines the used plus symbol\n\t * @param {string} [oFormatOptions.minusSign] defines the used minus symbol\n\t * @param {boolean} [oFormatOptions.parseAsString] @since 1.28.2 defines whether to output string from parse function in order to keep the precision for big numbers. Numbers in scientific notation are parsed\n\t *  back to the standard notation. For example \".5e-3\" is parsed to \"0.0005\".\n\t * @param {string} [oFormatOptions.style] defines the style of format. Valid values are 'short, 'long' or 'standard' (based on CLDR decimalFormat). Numbers are formatted into compact forms when it's set to\n\t * 'short' or 'long'. When this option is set, the default value of option 'precision' is set to 2. This can be changed by setting either min/maxFractionDigits, decimals, shortDecimals or precision option.\n\t * @param {sap.ui.core.format.NumberFormat.RoundingMode} [oFormatOptions.roundingMode] specifies a rounding behavior for discarding the digits after the maximum fraction digits\n\t *  defined by maxFractionDigits. Rounding will only be applied, if the passed value if of type number. This can be assigned by value in {@link sap.ui.core.format.NumberFormat.RoundingMode RoundingMode}\n\t *  or a function which will be used for rounding the number. The function is called with two parameters: the number and how many decimal digits should be reserved.\n\t * @param {boolean} [oFormatOptions.showMeasure] defines whether the measure according to the format is shown in the formatted string\n\t * @param {boolean} [oFormatOptions.currencyCode] defines whether the currency is shown as code in currency format. The currency symbol is displayed when this is set to false and there's symbol defined\n\t *  for the given currency code.\n\t * @param {string} [oFormatOptions.currencyContext] It can be set either with 'standard' (the default value) or with 'accounting' for an accounting specific currency display\n\t * @param {number} [oFormatOptions.emptyString=NaN] @since 1.30.0 defines what empty string is parsed as and what is formatted as empty string. The allowed values are only NaN, null or 0.\n\t *  The 'format' and 'parse' are done in a symmetric way which means when this parameter is set to NaN, empty string is parsed as NaN and NaN is formatted as empty string.\n\t *\n\t * @alias sap.ui.core.format.NumberFormat\n\t * @extends sap.ui.base.Object\n\t */\n\tvar NumberFormat = BaseObject.extend(\"sap.ui.core.format.NumberFormat\", /** @lends sap.ui.core.format.NumberFormat.prototype */ {\n\t\tconstructor : function(oFormatOptions) {\n\t\t\t// Do not use the constructor\n\t\t\tthrow new Error();\n\t\t}\n\t});\n\n\t// Regex for matching the number placeholder in pattern\n\tvar rNumPlaceHolder = /0+(\\.0+)?/;\n\n\t/**\n\t * Internal enumeration to differentiate number types\n\t */\n\tvar mNumberType = {\n\t\tINTEGER: \"integer\",\n\t\tFLOAT: \"float\",\n\t\tCURRENCY: \"currency\",\n\t\tPERCENT: \"percent\"\n\t};\n\n\t/**\n\t * Specifies a rounding behavior for numerical operations capable of discarding precision. Each rounding mode in this object indicates how the least\n\t * significant returned digits of rounded result is to be calculated.\n\t *\n\t * @public\n\t * @enum {string}\n\t * @alias sap.ui.core.format.NumberFormat.RoundingMode\n\t */\n\tvar mRoundingMode = {\n\t\t/**\n\t\t * Rounding mode to round towards negative infinity\n\t\t * @public\n\t\t */\n\t\tFLOOR: \"floor\",\n\t\t/**\n\t\t * Rounding mode to round towards positive infinity\n\t\t * @public\n\t\t */\n\t\tCEILING: \"ceiling\",\n\t\t/**\n\t\t * Rounding mode to round towards zero\n\t\t * @public\n\t\t */\n\t\tTOWARDS_ZERO: \"towards_zero\",\n\t\t/**\n\t\t * Rounding mode to round away from zero\n\t\t * @public\n\t\t */\n\t\tAWAY_FROM_ZERO: \"away_from_zero\",\n\t\t/**\n\t\t * Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards negative infinity.\n\t\t * @public\n\t\t */\n\t\tHALF_FLOOR: \"half_floor\",\n\t\t/**\n\t\t * Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards positive infinity.\n\t\t * @public\n\t\t */\n\t\tHALF_CEILING: \"half_ceiling\",\n\t\t/**\n\t\t * Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards zero.\n\t\t * @public\n\t\t */\n\t\tHALF_TOWARDS_ZERO: \"half_towards_zero\",\n\t\t/**\n\t\t * Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round away from zero.\n\t\t * @public\n\t\t */\n\t\tHALF_AWAY_FROM_ZERO: \"half_away_from_zero\"\n\t};\n\n\tvar mRoundingFunction = {};\n\tmRoundingFunction[mRoundingMode.FLOOR] = Math.floor;\n\tmRoundingFunction[mRoundingMode.CEILING] = Math.ceil;\n\tmRoundingFunction[mRoundingMode.TOWARDS_ZERO] = function(nValue) {\n\t\treturn nValue > 0 ? Math.floor(nValue) : Math.ceil(nValue);\n\t};\n\tmRoundingFunction[mRoundingMode.AWAY_FROM_ZERO] = function(nValue) {\n\t\treturn nValue > 0 ? Math.ceil(nValue) : Math.floor(nValue);\n\t};\n\tmRoundingFunction[mRoundingMode.HALF_TOWARDS_ZERO] = function(nValue) {\n\t\treturn nValue > 0 ? Math.ceil(nValue - 0.5) : Math.floor(nValue + 0.5);\n\t};\n\tmRoundingFunction[mRoundingMode.HALF_AWAY_FROM_ZERO] = function(nValue) {\n\t\treturn nValue > 0 ? Math.floor(nValue + 0.5) : Math.ceil(nValue - 0.5);\n\t};\n\tmRoundingFunction[mRoundingMode.HALF_FLOOR] = function(nValue) {\n\t\treturn Math.ceil(nValue - 0.5);\n\t};\n\tmRoundingFunction[mRoundingMode.HALF_CEILING] = Math.round;\n\n\tNumberFormat.RoundingMode = mRoundingMode;\n\n\t/*\n\t * Default format options for Integer\n\t */\n\tNumberFormat.oDefaultIntegerFormat = {\n\t\tminIntegerDigits: 1,\n\t\tmaxIntegerDigits: 99,\n\t\tminFractionDigits: 0,\n\t\tmaxFractionDigits: 0,\n\t\tgroupingEnabled: false,\n\t\tgroupingSize: 3,\n\t\tgroupingSeparator: \",\",\n\t\tdecimalSeparator: \".\",\n\t\tplusSign: \"+\",\n\t\tminusSign: \"-\",\n\t\tisInteger: true,\n\t\ttype: mNumberType.INTEGER,\n\t\tshowMeasure: false,\n\t\tstyle: \"standard\",\n\t\tparseAsString: false,\n\t\troundingMode: NumberFormat.RoundingMode.TOWARDS_ZERO,\n\t\temptyString: NaN,\n\t\tshowScale: true\n\t};\n\n\t/*\n\t * Default format options for Float\n\t */\n\tNumberFormat.oDefaultFloatFormat = {\n\t\tminIntegerDigits: 1,\n\t\tmaxIntegerDigits: 99,\n\t\tminFractionDigits: 0,\n\t\tmaxFractionDigits: 99,\n\t\tgroupingEnabled: true,\n\t\tgroupingSize: 3,\n\t\tgroupingSeparator: \",\",\n\t\tdecimalSeparator: \".\",\n\t\tplusSign: \"+\",\n\t\tminusSign: \"-\",\n\t\tisInteger: false,\n\t\ttype: mNumberType.FLOAT,\n\t\tshowMeasure: false,\n\t\tstyle: \"standard\",\n\t\tparseAsString: false,\n\t\troundingMode: NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO,\n\t\temptyString: NaN,\n\t\tshowScale: true\n\t};\n\n\t/*\n\t* Default format options for Percent\n\t*/\n\tNumberFormat.oDefaultPercentFormat = {\n\t\tminIntegerDigits: 1,\n\t\tmaxIntegerDigits: 99,\n\t\tminFractionDigits: 0,\n\t\tmaxFractionDigits: 99,\n\t\tgroupingEnabled: true,\n\t\tgroupingSize: 3,\n\t\tgroupingSeparator: \",\",\n\t\tdecimalSeparator: \".\",\n\t\tplusSign: \"+\",\n\t\tminusSign: \"-\",\n\t\tpercentSign: \"%\",\n\t\tisInteger: false,\n\t\ttype: mNumberType.PERCENT,\n\t\tshowMeasure: false,\n\t\tstyle: \"standard\",\n\t\tparseAsString: false,\n\t\troundingMode: NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO,\n\t\temptyString: NaN,\n\t\tshowScale: true\n\t};\n\n\t/*\n\t * Default format options for Currency\n\t * @name sap.ui.core.format.NumberFormat.oDefaultCurrencyFormat\n\t */\n\tNumberFormat.oDefaultCurrencyFormat = {\n\t\tminIntegerDigits: 1,\n\t\tmaxIntegerDigits: 99,\n\t\t// the default value for min/maxFractionDigits is defined in oLocaleData.getCurrencyDigits\n\t\t// they need to be left undefined here in order to detect whether they are set from outside\n\t\tgroupingEnabled: true,\n\t\tgroupingSize: 3,\n\t\tgroupingSeparator: \",\",\n\t\tdecimalSeparator: \".\",\n\t\tplusSign: \"+\",\n\t\tminusSign: \"-\",\n\t\tisInteger: false,\n\t\ttype: mNumberType.CURRENCY,\n\t\tshowMeasure: true,\n\t\tcurrencyCode: true,\n\t\tcurrencyContext: 'standard',\n\t\tstyle: \"standard\",\n\t\tparseAsString: false,\n\t\troundingMode: NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO,\n\t\temptyString: NaN,\n\t\tshowScale: true\n\t};\n\n\t/**\n\t * An alias for {@link #getFloatInstance}.\n\t *\n\t * @param {object} [oFormatOptions] Object which defines the format options\n\t * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n\t * @return {sap.ui.core.format.NumberFormat} float instance of the NumberFormat\n\t *\n\t */\n\tNumberFormat.getInstance = function(oFormatOptions, oLocale) {\n\t\treturn this.getFloatInstance(oFormatOptions, oLocale);\n\t};\n\n\t/**\n\t * Get a float instance of the NumberFormat, which can be used for formatting.\n\t *\n\t * If no locale is given, the currently configured\n\t * {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\t *\n\t * <p>\n\t * This instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\n\t * Please set the roundingMode property in oFormatOptions to change the\n\t * default value.\n\t * </p>\n\t *\n\t * @param {object} [oFormatOptions] Object which defines the format options\n\t * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n\t * @return {sap.ui.core.format.NumberFormat} float instance of the NumberFormat\n\t * @static\n\t * @public\n\t */\n\tNumberFormat.getFloatInstance = function(oFormatOptions, oLocale) {\n\t\tvar oFormat = this.createInstance(oFormatOptions, oLocale),\n\t\t\toLocaleFormatOptions = this.getLocaleFormatOptions(oFormat.oLocaleData, mNumberType.FLOAT);\n\n\t\toFormat.oFormatOptions = jQuery.extend(false, {}, this.oDefaultFloatFormat, oLocaleFormatOptions, oFormatOptions);\n\t\treturn oFormat;\n\t};\n\n\t/**\n\t * Get an integer instance of the NumberFormat, which can be used for formatting.\n\t *\n\t * If no locale is given, the currently configured\n\t * {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\t *\n\t * <p>\n\t * This instance has TOWARDS_ZERO set as default rounding mode.\n\t * Please set the roundingMode property in oFormatOptions to change the\n\t * default value.\n\t * </p>\n\t *\n\t * @param {object} [oFormatOptions] Object which defines the format options\n\t * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n\t * @return {sap.ui.core.format.NumberFormat} integer instance of the NumberFormat\n\t * @static\n\t * @public\n\t */\n\tNumberFormat.getIntegerInstance = function(oFormatOptions, oLocale) {\n\t\tvar oFormat = this.createInstance(oFormatOptions, oLocale),\n\t\t\toLocaleFormatOptions = this.getLocaleFormatOptions(oFormat.oLocaleData, mNumberType.INTEGER);\n\n\t\toFormat.oFormatOptions = jQuery.extend(false, {}, this.oDefaultIntegerFormat, oLocaleFormatOptions, oFormatOptions);\n\t\treturn oFormat;\n\t};\n\n\t/**\n\t * Get a currency instance of the NumberFormat, which can be used for formatting.\n\t *\n\t * If no locale is given, the currently configured\n\t * {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\t *\n\t * <p>\n\t * This instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\n\t * Please set the roundingMode property in oFormatOptions to change the\n\t * default value.\n\t * </p>\n\t *\n\t * @param {object} [oFormatOptions] Object which defines the format options\n\t * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n\t * @return {sap.ui.core.format.NumberFormat} integer instance of the NumberFormat\n\t * @static\n\t * @public\n\t */\n\tNumberFormat.getCurrencyInstance = function(oFormatOptions, oLocale) {\n\t\tvar oFormat = this.createInstance(oFormatOptions, oLocale),\n\t\t\tsContext = oFormatOptions && oFormatOptions.currencyContext,\n\t\t\toLocaleFormatOptions = this.getLocaleFormatOptions(oFormat.oLocaleData, mNumberType.CURRENCY, sContext);\n\n\t\toFormat.oFormatOptions = jQuery.extend(false, {}, this.oDefaultCurrencyFormat, oLocaleFormatOptions, oFormatOptions);\n\t\treturn oFormat;\n\t};\n\n\t/**\n\t * Get a percent instance of the NumberFormat, which can be used for formatting.\n\t *\n\t * If no locale is given, the currently configured\n\t * {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\t *\n\t * <p>\n\t * This instance has HALF_AWAY_FROM_ZERO set as default rounding mode.\n\t * Please set the roundingMode property in oFormatOptions to change the\n\t * default value.\n\t * </p>\n\t *\n\t * @param {object} [oFormatOptions] Object which defines the format options\n\t * @param {sap.ui.core.Locale} [oLocale] Locale to get the formatter for\n\t * @return {sap.ui.core.format.NumberFormat} integer instance of the NumberFormat\n\t * @static\n\t * @public\n\t*/\n\tNumberFormat.getPercentInstance = function(oFormatOptions, oLocale) {\n\t\tvar oFormat = this.createInstance(oFormatOptions, oLocale),\n\t\t\toLocaleFormatOptions = this.getLocaleFormatOptions(oFormat.oLocaleData, mNumberType.PERCENT);\n\n\t\toFormat.oFormatOptions = jQuery.extend(false, {}, this.oDefaultPercentFormat, oLocaleFormatOptions, oFormatOptions);\n\t\treturn oFormat;\n\t};\n\n\t/**\n\t * Create an instance of the NumberFormat.\n\t *\n\t * @param {object} [oFormatOptions] Object which defines the format options\n\t * @return {sap.ui.core.format.NumberFormat} integer instance of the NumberFormat\n\t * @static\n\t * @private\n\t */\n\tNumberFormat.createInstance = function(oFormatOptions, oLocale) {\n\t\tvar oFormat = Object.create(this.prototype),\n\t\t\toPatternOptions;\n\t\tif ( oFormatOptions instanceof Locale ) {\n\t\t\toLocale = oFormatOptions;\n\t\t\toFormatOptions = undefined;\n\t\t}\n\t\tif (!oLocale) {\n\t\t\toLocale = sap.ui.getCore().getConfiguration().getFormatSettings().getFormatLocale();\n\t\t}\n\t\toFormat.oLocale = oLocale;\n\t\toFormat.oLocaleData = LocaleData.getInstance(oLocale);\n\t\toFormat.oOriginalFormatOptions = oFormatOptions;\n\n\t\t// If a pattern is defined in the format option, parse it and add options\n\t\tif (oFormatOptions) {\n\t\t\tif (oFormatOptions.pattern) {\n\t\t\t\toPatternOptions = this.parseNumberPattern(oFormatOptions.pattern);\n\t\t\t\tjQuery.each(oPatternOptions, function(sName, vOption) {\n\t\t\t\t\toFormatOptions[sName] = vOption;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (oFormatOptions.emptyString !== undefined) {\n\t\t\t\tjQuery.sap.assert(typeof oFormatOptions.emptyString !== \"string\", \"The format option 'emptyString' can not be with type 'string'\");\n\t\t\t\tjQuery.sap.assert(oFormatOptions.emptyString === 0 || oFormatOptions.emptyString === null || /* check if it's NaN (only NaN doesn't equal to itself) */ oFormatOptions.emptyString !== oFormatOptions.emptyString, \"The format option 'emptyString' must be either 0, null or NaN\");\n\t\t\t}\n\t\t}\n\n\t\treturn oFormat;\n\t};\n\n\n\t/**\n\t * Get locale dependent default format options.\n\t *\n\t * @static\n\t */\n\tNumberFormat.getLocaleFormatOptions = function(oLocaleData, iType, sContext) {\n\t\tvar oLocaleFormatOptions = {},\n\t\t\tsNumberPattern;\n\n\t\tswitch (iType) {\n\t\t\tcase mNumberType.PERCENT:\n\t\t\t\tsNumberPattern = oLocaleData.getPercentPattern();\n\t\t\t\tbreak;\n\t\t\tcase mNumberType.CURRENCY:\n\t\t\t\tsNumberPattern = oLocaleData.getCurrencyPattern(sContext);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsNumberPattern = oLocaleData.getDecimalPattern();\n\t\t}\n\n\t\toLocaleFormatOptions = this.parseNumberPattern(sNumberPattern);\n\n\t\toLocaleFormatOptions.plusSign = oLocaleData.getNumberSymbol(\"plusSign\");\n\t\toLocaleFormatOptions.minusSign = oLocaleData.getNumberSymbol(\"minusSign\");\n\t\toLocaleFormatOptions.decimalSeparator = oLocaleData.getNumberSymbol(\"decimal\");\n\t\toLocaleFormatOptions.groupingSeparator = oLocaleData.getNumberSymbol(\"group\");\n\t\toLocaleFormatOptions.percentSign = oLocaleData.getNumberSymbol(\"percentSign\");\n\t\toLocaleFormatOptions.pattern = sNumberPattern;\n\n\t\t// Some options need to be overridden to stay compatible with the formatting defaults\n\t\t// before pattern parsing was added to the NumberFormat\n\t\tswitch (iType) {\n\t\t\tcase mNumberType.FLOAT:\n\t\t\tcase mNumberType.PERCENT:\n\t\t\t\t// Unlimited fraction digits for float and percent values\n\t\t\t\toLocaleFormatOptions.minFractionDigits = 0;\n\t\t\t\toLocaleFormatOptions.maxFractionDigits = 99;\n\t\t\t\tbreak;\n\t\t\tcase mNumberType.INTEGER:\n\t\t\t\t// No fraction digits and no grouping for integer values\n\t\t\t\toLocaleFormatOptions.minFractionDigits = 0;\n\t\t\t\toLocaleFormatOptions.maxFractionDigits = 0;\n\t\t\t\toLocaleFormatOptions.groupingEnabled = false;\n\t\t\t\tbreak;\n\t\t\tcase mNumberType.CURRENCY:\n\t\t\t\t// reset the iMin/MaxFractionDigits because the extracted info from the pattern doesn't contain the currency specific info.\n\t\t\t\toLocaleFormatOptions.minFractionDigits = undefined;\n\t\t\t\toLocaleFormatOptions.maxFractionDigits = undefined;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn oLocaleFormatOptions;\n\t};\n\n\t/**\n\t * Get digit information from number format.\n\t *\n\t * @static\n\t */\n\tNumberFormat.parseNumberPattern = function(sFormatString) {\n\t\tvar iMinIntegerDigits = 0,\n\t\t\tiMinFractionDigits = 0,\n\t\t\tiMaxFractionDigits = 0,\n\t\t\tbGroupingEnabled = false,\n\t\t\tiGroupSize = 0,\n\t\t\tiBaseGroupSize = 0,\n\t\t\tiSeparatorPos = sFormatString.indexOf(\";\"),\n\t\t\tmSection = {\n\t\t\t\tInteger: 0,\n\t\t\t\tFraction: 1\n\t\t\t},\n\t\t\tiSection = mSection.Integer;\n\n\t\t// The sFormatString can be ¤#,##0.00;(¤#,##0.00). If the whole string is parsed, the wrong\n\t\t// iMinFractionDigits and iMaxFractionDigits are wrong.\n\t\t// Only the sub string before ';' is taken into consideration.\n\t\tif (iSeparatorPos !== -1) {\n\t\t\tsFormatString = sFormatString.substring(0, iSeparatorPos);\n\t\t}\n\n\t\tfor (var i = 0; i < sFormatString.length; i++) {\n\t\t\tvar sCharacter = sFormatString[i];\n\t\t\tswitch (sCharacter) {\n\t\t\t\tcase \",\":\n\t\t\t\t\tif (bGroupingEnabled) {\n\t\t\t\t\t\tiGroupSize = iBaseGroupSize;\n\t\t\t\t\t\tiBaseGroupSize = 0;\n\t\t\t\t\t}\n\t\t\t\t\tbGroupingEnabled = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \".\":\n\t\t\t\t\tiSection = mSection.Fraction;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"0\":\n\t\t\t\t\tif (iSection === mSection.Integer) {\n\t\t\t\t\t\tiMinIntegerDigits++;\n\t\t\t\t\t\tif (bGroupingEnabled) {\n\t\t\t\t\t\t\tiBaseGroupSize++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tiMinFractionDigits++;\n\t\t\t\t\t\tiMaxFractionDigits++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"#\":\n\t\t\t\t\tif (iSection === mSection.Integer) {\n\t\t\t\t\t\tif (bGroupingEnabled) {\n\t\t\t\t\t\t\tiBaseGroupSize++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tiMaxFractionDigits++;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!iGroupSize) {\n\t\t\tiGroupSize = iBaseGroupSize;\n\t\t\tiBaseGroupSize = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tminIntegerDigits: iMinIntegerDigits,\n\t\t\tminFractionDigits: iMinFractionDigits,\n\t\t\tmaxFractionDigits: iMaxFractionDigits,\n\t\t\tgroupingEnabled: bGroupingEnabled,\n\t\t\tgroupingSize: iGroupSize,\n\t\t\tgroupingBaseSize: iBaseGroupSize\n\t\t};\n\t};\n\n\t/**\n\t * Format a number according to the given format options.\n\t *\n\t * @param {number|array} oValue the number to format or an array which contains the number to format and the sMeasure parameter\n\t * @param {string} [sMeasure] a measure which has an impact on the formatting\n\t * @return {string} the formatted output value\n\t * @public\n\t */\n\tNumberFormat.prototype.format = function(oValue, sMeasure) {\n\t\tif (Array.isArray(oValue)) {\n\t\t\tsMeasure = oValue[1];\n\t\t\toValue = oValue[0];\n\t\t}\n\n\t\tvar sIntegerPart = \"\",\n\t\t\tsFractionPart = \"\",\n\t\t\tsGroupedIntegerPart = \"\",\n\t\t\tsResult = \"\",\n\t\t\tsNumber = \"\",\n\t\t\tsPattern = \"\",\n\t\t\tiPosition = 0,\n\t\t\tiLength = 0,\n\t\t\tiGroupSize = 0,\n\t\t\tiBaseGroupSize = 0,\n\t\t\tbNegative = oValue < 0,\n\t\t\tiDotPos = -1,\n\t\t\toOptions = jQuery.extend({}, this.oFormatOptions),\n\t\t\toOrigOptions = this.oOriginalFormatOptions,\n\t\t\taPatternParts,\n\t\t\toShortFormat,\n\t\t\tnShortRefNumber,\n\t\t\tsPluralCategory;\n\n\t\tif (oValue === oOptions.emptyString || (isNaN(oValue) && isNaN(oOptions.emptyString))) {\n\t\t\t// if the value equals the 'emptyString' format option, return empty string.\n\t\t\t// the NaN case has to be checked by using isNaN because NaN !== NaN\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (oOptions.decimals !== undefined) {\n\t\t\toOptions.minFractionDigits = oOptions.decimals;\n\t\t\toOptions.maxFractionDigits = oOptions.decimals;\n\t\t}\n\n\t\tif (oOptions.shortLimit === undefined || Math.abs(oValue) >= oOptions.shortLimit) {\n\t\t\tnShortRefNumber = oOptions.shortRefNumber === undefined ? oValue : oOptions.shortRefNumber;\n\t\t\toShortFormat = getShortenedFormat(nShortRefNumber, oOptions, this.oLocaleData);\n\t\t\tif (oShortFormat && oShortFormat.formatString != \"0\") {\n\t\t\t\toValue = oValue / oShortFormat.magnitude;\n\t\t\t\t// If shortDecimals is defined, override the fractionDigits\n\t\t\t\tif (oOptions.shortDecimals !== undefined) {\n\t\t\t\t\toOptions.minFractionDigits = oOptions.shortDecimals;\n\t\t\t\t\toOptions.maxFractionDigits = oOptions.shortDecimals;\n\t\t\t\t} else {\n\t\t\t\t\tif (oOrigOptions.minFractionDigits === undefined\n\t\t\t\t\t\t&& oOrigOptions.maxFractionDigits === undefined\n\t\t\t\t\t\t&& oOrigOptions.decimals === undefined\n\t\t\t\t\t\t&& oOrigOptions.precision === undefined\n\t\t\t\t\t\t&& oOrigOptions.pattern === undefined) {\n\t\t\t\t\t\t// if none of the options which can affect the decimal digits is set, the default precision is set to 2\n\t\t\t\t\t\toOptions.precision = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (oOrigOptions.maxFractionDigits === undefined && oOrigOptions.decimals === undefined) {\n\t\t\t\t\t\t// overwrite the default setting of Integer instance because\n\t\t\t\t\t\t// Integer with short format could have fraction part\n\t\t\t\t\t\toOptions.maxFractionDigits = 99;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Always use HALF_AWAY_FROM_ZERO for short formats\n\t\t\t\toOptions.roundingMode = NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO;\n\t\t\t}\n\t\t}\n\n\t\t// Must be done after calculating the short value, as it depends on the value\n\t\tif (oOptions.precision !== undefined) {\n\t\t\t// the number of decimal digits is calculated using (precision - number of integer digits)\n\t\t\t// the maxFractionDigits is adapted if the calculated value is smaller than the maxFractionDigits\n\t\t\toOptions.maxFractionDigits = Math.min(oOptions.maxFractionDigits, getDecimals(oValue, oOptions.precision));\n\n\t\t\t// if the minFractionDigits is greater than the maxFractionDigits, adapt the minFractionDigits with\n\t\t\t// the same value of the maxFractionDigits\n\t\t\toOptions.minFractionDigits = Math.min(oOptions.minFractionDigits, oOptions.maxFractionDigits);\n\t\t}\n\n\t\tif (oOptions.type == mNumberType.PERCENT) {\n\t\t\toValue = NumberFormat._shiftDecimalPoint(oValue, 2);\n\t\t}\n\n\t\t//handle measure\n\t\tif (oOptions.type == mNumberType.CURRENCY) {\n\t\t\tvar iDigits = this.oLocaleData.getCurrencyDigits(sMeasure);\n\t\t\tif (oOptions.maxFractionDigits === undefined) {\n\t\t\t\toOptions.maxFractionDigits = iDigits;\n\t\t\t}\n\t\t\tif (oOptions.minFractionDigits === undefined) {\n\t\t\t\toOptions.minFractionDigits = iDigits;\n\t\t\t}\n\t\t}\n\n\t\t// Rounding the value with oOptions.maxFractionDigits and oOptions.roundingMode.\n\t\t//\n\t\t// If the number of fraction digits are equal or less than oOptions.maxFractionDigits, the\n\t\t// number isn't changed. After this operation, the number of fraction digits is\n\t\t// equal or less than oOptions.maxFractionDigits.\n\t\tif (typeof oValue == \"number\") {\n\t\t\toValue = rounding(oValue, oOptions.maxFractionDigits, oOptions.roundingMode);\n\t\t}\n\n\t\t// No sign on zero values\n\t\tif (oValue == 0) {\n\t\t\tbNegative = false;\n\t\t}\n\n\t\tsNumber = this.convertToDecimal(oValue);\n\n\t\tif (sNumber == \"NaN\") {\n\t\t\treturn sNumber;\n\t\t}\n\n\t\t// if number is negative remove minus\n\t\tif (bNegative) {\n\t\t\tsNumber = sNumber.substr(1);\n\t\t}\n\n\t\t// if number contains fraction, extract it\n\t\tiDotPos = sNumber.indexOf(\".\");\n\t\tif (iDotPos > -1) {\n\t\t\tsIntegerPart = sNumber.substr(0, iDotPos);\n\t\t\tsFractionPart = sNumber.substr(iDotPos + 1);\n\t\t} else {\n\t\t\tsIntegerPart = sNumber;\n\t\t}\n\n\t\t// integer part length\n\t\tif (sIntegerPart.length < oOptions.minIntegerDigits) {\n\t\t\tsIntegerPart = jQuery.sap.padLeft(sIntegerPart, \"0\", oOptions.minIntegerDigits);\n\t\t} else if (sIntegerPart.length > oOptions.maxIntegerDigits) {\n\t\t\tsIntegerPart = jQuery.sap.padLeft(\"\", \"?\", oOptions.maxIntegerDigits);\n\t\t}\n\n\t\t// fraction part length\n\t\tif (sFractionPart.length < oOptions.minFractionDigits) {\n\t\t\tsFractionPart = jQuery.sap.padRight(sFractionPart, \"0\", oOptions.minFractionDigits);\n\t\t} else if (sFractionPart.length > oOptions.maxFractionDigits) {\n\t\t\tsFractionPart = sFractionPart.substr(0, oOptions.maxFractionDigits);\n\t\t}\n\n\t\t// grouping\n\t\tiLength = sIntegerPart.length;\n\n\t\tif (oOptions.groupingEnabled) {\n\t\t\tiGroupSize = oOptions.groupingSize;\n\t\t\tiBaseGroupSize = oOptions.groupingBaseSize || iGroupSize;\n\t\t\tiPosition = Math.max(iLength - iBaseGroupSize, 0) % iGroupSize || iGroupSize;\n\t\t\tsGroupedIntegerPart = sIntegerPart.substr(0, iPosition);\n\t\t\twhile (iLength - iPosition >= iBaseGroupSize) {\n\t\t\t\tsGroupedIntegerPart += oOptions.groupingSeparator;\n\t\t\t\tsGroupedIntegerPart += sIntegerPart.substr(iPosition, iGroupSize);\n\t\t\t\tiPosition += iGroupSize;\n\t\t\t}\n\t\t\tsGroupedIntegerPart += sIntegerPart.substr(iPosition);\n\t\t} else {\n\t\t\tsGroupedIntegerPart = sIntegerPart;\n\t\t}\n\n\t\t// combine\n\t\tif (bNegative) {\n\t\t\tsResult = oOptions.minusSign;\n\t\t}\n\t\tsResult += sGroupedIntegerPart;\n\t\tif (sFractionPart) {\n\t\t\tsResult += oOptions.decimalSeparator + sFractionPart;\n\t\t}\n\n\t\tif (oShortFormat && oShortFormat.formatString && oOptions.showScale && oOptions.type !== mNumberType.CURRENCY) {\n\t\t\t// Get correct format string based on actual decimal/fraction digits\n\t\t\tsPluralCategory = this.oLocaleData.getPluralCategory(sIntegerPart + \".\" + sFractionPart);\n\t\t\toShortFormat.formatString = this.oLocaleData.getDecimalFormat(oOptions.style, oShortFormat.key, sPluralCategory);\n\t\t\t//inject formatted shortValue in the formatString\n\t\t\tsResult = oShortFormat.formatString.replace(oShortFormat.valueSubString, sResult);\n\t\t\t//formatString may contain '.' (quoted to differentiate them decimal separator)\n\t\t\t//which must be replaced with .\n\t\t\tsResult = sResult.replace(/'.'/g, \".\");\n\t\t}\n\n\t\tif (oOptions.type === mNumberType.CURRENCY) {\n\t\t\tsPattern = oOptions.pattern;\n\n\t\t\tif (oShortFormat && oShortFormat.formatString && oOptions.showScale) {\n\t\t\t\t// Get correct format string based on actual decimal/fraction digits\n\t\t\t\tsPluralCategory = this.oLocaleData.getPluralCategory(sIntegerPart + \".\" + sFractionPart);\n\t\t\t\tsPattern = this.oLocaleData.getCurrencyFormat(\"short\", oShortFormat.key, sPluralCategory);\n\t\t\t\t//formatString may contain '.' (quoted to differentiate them decimal separator)\n\t\t\t\t//which must be replaced with .\n\t\t\t\tsPattern = sPattern.replace(/'.'/g, \".\");\n\t\t\t}\n\n\t\t\t// The currency pattern is definde in some locale, for example in \"ko\", as: ¤#,##0.00;(¤#,##0.00)\n\t\t\t// where the pattern after ';' should be used for negative numbers.\n\t\t\t// Therefore it's needed to check whether the pattern contains ';' and use the later part for\n\t\t\t// negative values\n\t\t\taPatternParts = sPattern.split(\";\");\n\t\t\tif (aPatternParts.length === 2) {\n\t\t\t\tsPattern = bNegative ? aPatternParts[1] : aPatternParts[0];\n\t\t\t\tif (bNegative) {\n\t\t\t\t\tsResult = sResult.substring(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!oOptions.currencyCode) {\n\t\t\t\tsMeasure = this.oLocaleData.getCurrencySymbol(sMeasure);\n\t\t\t}\n\n\t\t\tsResult = this._composeCurrencyResult(sPattern, sResult, sMeasure, {\n\t\t\t\tshowMeasure: oOptions.showMeasure,\n\t\t\t\tnegative: bNegative,\n\t\t\t\tminusSign: oOptions.minusSign\n\t\t\t});\n\t\t}\n\n\t\tif (oOptions.type == mNumberType.PERCENT) {\n\t\t\tsPattern = oOptions.pattern;\n\t\t\tsResult = sPattern.replace(/[0#.,]+/, sResult);\n\t\t\tsResult = sResult.replace(/%/, oOptions.percentSign);\n\t\t}\n\n\t\tif (sap.ui.getCore().getConfiguration().getOriginInfo()) {\n\t\t\tsResult = new String(sResult);\n\t\t\tsResult.originInfo = {\n\t\t\t\tsource: \"Common Locale Data Repository\",\n\t\t\t\tlocale: this.oLocale.toString()\n\t\t\t};\n\t\t}\n\n\t\treturn sResult;\n\n\t};\n\n\tNumberFormat.prototype._composeCurrencyResult = function(sPattern, sFormattedNumber, sMeasure, oOptions) {\n\t\tvar sMinusSign = oOptions.minusSign;\n\n\t\tsPattern = sPattern.replace(/[0#.,]+/, sFormattedNumber);\n\n\t\tif (oOptions.showMeasure && sMeasure) {\n\t\t\tvar sPlaceHolder = \"\\u00a4\",\n\t\t\t\t// convert the PCRE regex in CLDR to the regex supported by Javascript\n\t\t\t\tmRegex = {\n\t\t\t\t\t\"[:digit:]\": /\\d/,\n\t\t\t\t\t\"[:^S:]\": /[^\\$\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BD\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6]/\n\t\t\t\t},\n\t\t\t\tiMeasureStart = sPattern.indexOf(sPlaceHolder),\n\t\t\t\t// determine whether the number is before the measure or after it by comparing the position of measure placeholder with half of the length of the pattern string\n\t\t\t\tsPosition = iMeasureStart < sPattern.length / 2 ? \"after\" : \"before\",\n\t\t\t\toSpacingSetting = this.oLocaleData.getCurrencySpacing(sPosition),\n\t\t\t\tsCurrencyChar = (sPosition === \"after\" ? sMeasure.charAt(sMeasure.length - 1) : sMeasure.charAt(0)),\n\t\t\t\tsNumberChar,\n\t\t\t\trCurrencyChar = mRegex[oSpacingSetting.currencyMatch],\n\t\t\t\trNumberChar = mRegex[oSpacingSetting.surroundingMatch],\n\t\t\t\tiInsertPos;\n\n\t\t\tsPattern = sPattern.replace(sPlaceHolder, sMeasure);\n\n\t\t\tsNumberChar = (sPosition === \"after\" ? sPattern.charAt(iMeasureStart + sMeasure.length) : sPattern.charAt(iMeasureStart - 1));\n\n\t\t\tif (rCurrencyChar && rCurrencyChar.test(sCurrencyChar) && rNumberChar && rNumberChar.test(sNumberChar)) {\n\t\t\t\t// when both checks are valid, insert the defined space\n\n\t\t\t\tif (sPosition === \"after\") {\n\t\t\t\t\tiInsertPos = iMeasureStart + sMeasure.length;\n\t\t\t\t} else {\n\t\t\t\t\tiInsertPos = iMeasureStart;\n\t\t\t\t}\n\n\t\t\t\t// insert the space char between the measure and the number\n\t\t\t\tsPattern = sPattern.slice(0, iInsertPos) + oSpacingSetting.insertBetween + sPattern.slice(iInsertPos);\n\t\t\t} else if (oOptions.negative && sPosition === \"after\") {\n\t\t\t\t// when no space is inserted between measure and number\n\t\t\t\t// and when the number is negative and the measure is shown before the number\n\t\t\t\t// a zero-width non-breakable space (\"\\ufeff\") is inserted before the minus sign\n\t\t\t\t// in order to prevent the formatted currency number from being wrapped after the\n\t\t\t\t// minus sign when the space isn't enough for displaying the currency number within\n\t\t\t\t// one line\n\t\t\t\tsMinusSign = \"\\ufeff\" + oOptions.minusSign;\n\t\t\t}\n\t\t} else {\n\t\t\t// If measure is not shown, also remove whitespace next to the measure symbol\n\t\t\tsPattern = sPattern.replace(/\\s*\\u00a4\\s*/, \"\");\n\t\t}\n\n\t\tif (oOptions.negative) {\n\t\t\tsPattern = sPattern.replace(/-/, sMinusSign);\n\t\t}\n\n\t\treturn sPattern;\n\t};\n\n\t/**\n\t * Parse a string which is formatted according to the given format options.\n\t *\n\t * @param {string} sValue the string containing a formatted numeric value\n\t * @return {number|array} the parsed value or an array which contains the parsed value and the currency code (symbol) when the NumberFormat is a currency instance\n\t * @public\n\t */\n\tNumberFormat.prototype.parse = function(sValue) {\n\t\tvar oOptions = this.oFormatOptions,\n\t\t\tsPlusMinusSigns = quote(oOptions.plusSign + oOptions.minusSign),\n\t\t\tsGroupingSeparator = quote(oOptions.groupingSeparator),\n\t\t\tsDecimalSeparator = quote(oOptions.decimalSeparator),\n\t\t\tsRegExpFloat = \"^\\\\s*([\" + sPlusMinusSigns + \"]?(?:[0-9\" + sGroupingSeparator + \"]+|[0-9\" + sGroupingSeparator + \"]*\" + sDecimalSeparator + \"[0-9]*)(?:[eE][+-][0-9]+)?)\\\\s*$\",\n\t\t\tsRegExpInt = \"^\\\\s*([\" + sPlusMinusSigns + \"]?[0-9\" + sGroupingSeparator + \"]+)\\\\s*$\",\n\t\t\toGroupingRegExp = new RegExp(sGroupingSeparator, \"g\"),\n\t\t\toDecimalRegExp = new RegExp(sDecimalSeparator, \"g\"),\n\t\t\tsPercentPattern = this.oLocaleData.getPercentPattern(),\n\t\t\tsPercentSign = this.oLocaleData.getNumberSymbol(\"percentSign\"),\n\t\t\toRegExp, bPercent, sRegExpCurrency, sRegExpCurrencyMeasure, aParsed, sCurrencyMeasure,\n\t\t\tvResult = 0,\n\t\t\toShort, vEmptyParseValue;\n\n\t\tif (sValue === \"\") {\n\t\t\tvEmptyParseValue = oOptions.emptyString;\n\t\t\t// If the 'emptyString' option is set to 0 or NaN and parseAsString is set to true, the return value should be converted to a string.\n\t\t\t// Because null is a valid value for string type, therefore null is not converted to a string.\n\t\t\tif (oOptions.parseAsString && (oOptions.emptyString === 0 || isNaN(oOptions.emptyString))) {\n\t\t\t\tvEmptyParseValue = oOptions.emptyString + \"\";\n\t\t\t}\n\t\t\tif (oOptions.type === mNumberType.CURRENCY) {\n\t\t\t\treturn [vEmptyParseValue, undefined];\n\t\t\t} else {\n\t\t\t\treturn vEmptyParseValue;\n\t\t\t}\n\t\t}\n\n\t\tif (sPercentPattern.charAt(0) === \"%\") {\n\t\t\tsRegExpFloat = sRegExpFloat.slice(0, 1) + \"%?\" + sRegExpFloat.slice(1);\n\t\t} else if (sPercentPattern.charAt(sPercentPattern.length - 1) === \"%\") {\n\t\t\tsRegExpFloat = sRegExpFloat.slice(0, sRegExpFloat.length - 1) + \"%?\" + sRegExpFloat.slice(sRegExpFloat.length - 1);\n\t\t}\n\n\t\t// remove all white spaces because when grouping separator is a non-breaking space (russian and french for example)\n\t\t// user will not input it this way. Also white spaces or grouping separator can be ignored by determining the value\n\t\tsValue = sValue.replace(/\\s/g, \"\");\n\n\t\toShort = getNumberFromShortened(sValue, this.oFormatOptions.style, this.oLocaleData);\n\n\t\t// Check for valid syntax\n\t\tif (oShort) {\n\t\t\tsValue = oShort.number;\n\t\t\toRegExp = new RegExp(sRegExpFloat);\n\t\t} else if (oOptions.isInteger) {\n\t\t\toRegExp = new RegExp(sRegExpInt);\n\t\t} else if (oOptions.type === mNumberType.CURRENCY) {\n\t\t\tsRegExpCurrencyMeasure = \"[^\\\\d\\\\s+-]*\";\n\t\t\tsRegExpCurrency = \"(?:^(\" + sRegExpCurrencyMeasure + \")\" + sRegExpFloat.substring(1, sRegExpFloat.length - 1) + \"$)|(?:^\" + sRegExpFloat.substring(1, sRegExpFloat.length - 1) + \"(\" + sRegExpCurrencyMeasure + \")\\\\s*$)\";\n\t\t\toRegExp = new RegExp(sRegExpCurrency);\n\t\t} else {\n\t\t\toRegExp = new RegExp(sRegExpFloat);\n\t\t}\n\t\tif (!oRegExp.test(sValue)) {\n\t\t\treturn oOptions.type === mNumberType.CURRENCY ? null : NaN;\n\t\t}\n\n\t\tif (oOptions.type === mNumberType.CURRENCY) {\n\t\t\taParsed = oRegExp.exec(sValue);\n\t\t\t// checks whether the currency code (symbol) is at the beginnig or end of the string\n\t\t\tif (aParsed[2]) {\n\t\t\t\t// currency code is at the beginning\n\t\t\t\tsValue = aParsed[2];\n\t\t\t\tsCurrencyMeasure = aParsed[1] || undefined;\n\t\t\t} else {\n\t\t\t\t// currency code is at the end\n\t\t\t\tsValue = aParsed[3];\n\t\t\t\tsCurrencyMeasure = aParsed[4] || undefined;\n\t\t\t}\n\t\t\tif (sCurrencyMeasure && !oOptions.showMeasure) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (sCurrencyMeasure) {\n\t\t\tsCurrencyMeasure = this.oLocaleData.getCurrencyCodeBySymbol(sCurrencyMeasure) || sCurrencyMeasure;\n\t\t}\n\n\t\t// Remove grouping separator and replace locale dependant decimal separator,\n\t\t// before calling parseInt/parseFloat\n\t\tsValue = sValue.replace(oGroupingRegExp, \"\");\n\t\tsValue = sValue.replace(oOptions.plusSign, \"+\");\n\t\tsValue = sValue.replace(oOptions.minusSign, \"-\");\n\n\t\t// Remove the leading \"+\" sign because when \"parseAsString\" is set to true the \"parseInt\" or \"parseFloat\" isn't called and the leading \"+\" has to be moved manually\n\t\tsValue = sValue.replace(/^\\+/, \"\");\n\n\t\t// Expanding short value before using parseInt/parseFloat\n\t\tif (oShort) {\n\t\t\tsValue = sValue.replace(oDecimalRegExp, \".\");\n\t\t\tsValue = NumberFormat._shiftDecimalPoint(sValue, Math.round(Math.log(oShort.factor) / Math.LN10));\n\t\t}\n\n\t\tif (oOptions.isInteger) {\n\t\t\tvResult = oOptions.parseAsString ? sValue : parseInt(sValue, 10);\n\t\t} else {\n\t\t\tsValue = sValue.replace(oDecimalRegExp, \".\");\n\t\t\tif (sValue.indexOf(sPercentSign) !== -1) {\n\t\t\t\tbPercent = true;\n\t\t\t\tsValue = sValue.replace(sPercentSign, \"\");\n\t\t\t}\n\t\t\tvResult = oOptions.parseAsString ? sValue : parseFloat(sValue);\n\t\t\tif (bPercent) {\n\t\t\t\tvResult = NumberFormat._shiftDecimalPoint(vResult, -2);\n\t\t\t}\n\t\t}\n\n\t\t// Get rid of leading zeros\n\t\tif (oOptions.parseAsString) {\n\t\t\tvResult = NumberFormat._shiftDecimalPoint(sValue, 0);\n\t\t}\n\n\t\treturn oOptions.type === mNumberType.CURRENCY ? [vResult, sCurrencyMeasure] : vResult;\n\t};\n\n\t/**\n\t * Convert to decimal representation\n\t * Floats larger than 1e+20 or smaller than 1e-6 are shown in exponential format,\n\t * but need to be converted to decimal format for further formatting\n\t *\n\t * @param {float} fValue\n\t * @private\n\t */\n\tNumberFormat.prototype.convertToDecimal = function(fValue) {\n\t\tvar sValue = \"\" + fValue,\n\t\t\tbNegative, sBase, iDecimalLength, iFractionLength, iExponent, iPos;\n\t\tif (sValue.indexOf(\"e\") == -1 && sValue.indexOf(\"E\") == -1) {\n\t\t\treturn sValue;\n\t\t}\n\t\tvar aResult = sValue.match(/^([+-]?)((\\d+)(?:\\.(\\d+))?)[eE]([+-]?\\d+)$/);\n\t\tbNegative = aResult[1] == \"-\";\n\t\tsBase = aResult[2].replace(/\\./g,\"\");\n\t\tiDecimalLength = aResult[3] ? aResult[3].length : 0;\n\t\tiFractionLength = aResult[4] ? aResult[4].length : 0;\n\t\tiExponent = parseInt(aResult[5], 10);\n\n\t\tif (iExponent > 0) {\n\t\t\tif (iExponent < iFractionLength) {\n\t\t\t\tiPos = iDecimalLength + iExponent;\n\t\t\t\tsValue = sBase.substr(0, iPos) + \".\" + sBase.substr(iPos);\n\t\t\t} else {\n\t\t\t\tsValue = sBase;\n\t\t\t\tiExponent -= iFractionLength;\n\t\t\t\tfor (var i = 0; i < iExponent; i++) {\n\t\t\t\t\tsValue += \"0\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (-iExponent < iDecimalLength) {\n\t\t\t\tiPos = iDecimalLength + iExponent;\n\t\t\t\tsValue = sBase.substr(0, iPos) + \".\" + sBase.substr(iPos);\n\t\t\t} else {\n\t\t\t\tsValue = sBase;\n\t\t\t\tiExponent += iDecimalLength;\n\t\t\t\tfor (var i = 0; i > iExponent; i--) {\n\t\t\t\t\tsValue = \"0\" + sValue;\n\t\t\t\t}\n\t\t\t\tsValue = \"0.\" + sValue;\n\t\t\t}\n\t\t}\n\t\tif (bNegative) {\n\t\t\tsValue = \"-\" + sValue;\n\t\t}\n\t\treturn sValue;\n\t};\n\n\n\t/**\n\t * Returns the scaling factor which is calculated based on the format options and the current locale being used.\n\t *\n\t * This function returns meaningful scaling factor only when the formatting option 'style' is set to 'short' or 'long' and the option 'shortRefNumber' is set which\n\t * is used for calculating the scale factor.\n\t *\n\t * Consider using this function when the option 'showScale' is set to false which makes the scale factor not to appear in every formatted number but in a shared place.\n\t *\n\t * @since 1.40\n\t * @returns {string|undefined} The scale string if it exists based on the given 'shortRefNumber' option. Otherwise it returns undefined.\n\t */\n\tNumberFormat.prototype.getScale = function() {\n\t\tif ((this.oFormatOptions.style !== \"short\" && this.oFormatOptions.style !== \"long\") || this.oFormatOptions.shortRefNumber === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar oShortFormat = getShortenedFormat(this.oFormatOptions.shortRefNumber, this.oFormatOptions, this.oLocaleData),\n\t\t\tsScale;\n\t\tif (oShortFormat && oShortFormat.formatString) {\n\t\t\t// remove the placeholder of number\n\t\t\t// replace the \"'.'\" with \".\"\n\t\t\t// trim to remove the space and non-breakable space\n\t\t\tsScale = oShortFormat.formatString.replace(rNumPlaceHolder, \"\").replace(/'.'/g, \".\").trim();\n\t\t\tif (sScale) {\n\t\t\t\t// sScale could be an empty string and undefined should be returned in this case\n\t\t\t\treturn sScale;\n\t\t\t}\n\t\t}\n\t};\n\n\tNumberFormat._shiftDecimalPoint = function(vValue, iStep) {\n\t\tif (typeof iStep !== \"number\") {\n\t\t\treturn NaN;\n\t\t}\n\n\t\tvar aExpParts = vValue.toString().toLowerCase().split(\"e\");\n\n\t\tif (typeof vValue === \"number\") {\n\t\t\t// Exponential operation is used instead of simply multiply the number by\n\t\t\t// Math.pow(10, maxFractionDigits) because Exponential operation returns exact float\n\t\t\t// result but multiply doesn't. For example 1.005*100 = 100.49999999999999.\n\n\t\t\tiStep = aExpParts[1] ? (+aExpParts[1] + iStep) : iStep;\n\n\t\t\treturn +(aExpParts[0] + \"e\" + iStep);\n\t\t} else if (typeof vValue === \"string\") {\n\t\t\tif (parseInt(vValue, 10) === 0 && iStep >= 0) {\n\t\t\t\treturn vValue;\n\t\t\t}\n\n\t\t\tvValue = aExpParts[0];\n\n\t\t\tvar iDecimalPos = vValue.indexOf(\".\"),\n\t\t\t\t\t// the expected position after move\n\t\t\t\t\tiAfterMovePos,\n\t\t\t\t\t// the integer part in the final result\n\t\t\t\t\tsInt,\n\t\t\t\t\t// the decimal part in the final result\n\t\t\t\t\tsDecimal;\n\n\t\t\tif (iDecimalPos === -1) {\n\t\t\t\t// when there's no decimal point, add one to the end\n\t\t\t\tvValue = vValue + \".\";\n\t\t\t\tiDecimalPos = vValue.length - 1;\n\t\t\t}\n\n\t\t\tif (aExpParts[1]) {\n\t\t\t\tiDecimalPos += (+aExpParts[1]);\n\t\t\t}\n\n\t\t\tiAfterMovePos = iDecimalPos + iStep;\n\t\t\tif (iAfterMovePos <= 0) {\n\t\t\t\t// pad 0 to the left when decimal point should be shifted far left\n\t\t\t\tvValue = jQuery.sap.padLeft(vValue, '0', vValue.length - iAfterMovePos + 1);\n\t\t\t\tiAfterMovePos = 1;\n\t\t\t} else if (iAfterMovePos >= vValue.length - 1) {\n\t\t\t\t// pad 0 to the right\n\t\t\t\tvValue = jQuery.sap.padRight(vValue, '0', iAfterMovePos + 1);\n\t\t\t\tiAfterMovePos = vValue.length - 1;\n\t\t\t}\n\n\t\t\tvValue = vValue.replace(\".\", \"\");\n\n\t\t\tsInt = vValue.substring(0, iAfterMovePos);\n\t\t\tsDecimal = vValue.substring(iAfterMovePos);\n\n\t\t\t// remove unnecessary leading zeros\n\t\t\tsInt = sInt.replace(/^(-?)0+(\\d)/, \"$1$2\");\n\n\t\t\treturn sInt + (sDecimal ? (\".\" + sDecimal) : \"\");\n\t\t} else {\n\t\t\t// can't shift decimal point in this case\n\t\t\treturn null;\n\t\t}\n\t};\n\n\tfunction getShortenedFormat(fValue, oOptions, oLocaleData) {\n\t\tvar oShortFormat, iKey, sKey,\n\t\t\tsStyle = oOptions.style,\n\t\t\tiPrecision = oOptions.precision !== undefined ? oOptions.precision : 2;\n\n\t\tif (sStyle != \"short\" && sStyle != \"long\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfor (var i = 0; i < 14; i++) {\n\t\t\tiKey = Math.pow(10, i);\n\t\t\tif (rounding(Math.abs(fValue) / iKey, iPrecision - 1) < 10) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsKey = iKey.toString();\n\n\t\t// Use \"other\" format to find the right magnitude, the actual format will be retrieved later\n\t\t// after the value has been calculated\n\t\tvar sCldrFormat = oLocaleData.getDecimalFormat(sStyle, sKey, \"other\");\n\n\t\tif (!sCldrFormat || sCldrFormat == \"0\") {\n\t\t\t//no format or special \"0\" format => number doesn't need to be shortified\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\toShortFormat = {};\n\t\t\toShortFormat.key = sKey;\n\t\t\toShortFormat.formatString = sCldrFormat;\n\t\t\tvar match = sCldrFormat.match(rNumPlaceHolder);\n\t\t\tif (match) {\n\t\t\t\t//to get magnitude, we need to remove from key the number of zeros\n\t\t\t\t//contained in valueSubString before decimal separator minus 1\n\t\t\t\t//    \"0.0\" => magnitude = key\n\t\t\t\t//    \"00\"  => magnitude = key / 10\n\t\t\t\t//    \"000\" => magnitude = key / 100\n\t\t\t\toShortFormat.valueSubString = match[0];\n\t\t\t\tvar decimalSeparatorPosition =  oShortFormat.valueSubString.indexOf(\".\");\n\t\t\t\tif (decimalSeparatorPosition == -1) {\n\t\t\t\t\toShortFormat.decimals = 0;\n\t\t\t\t\toShortFormat.magnitude = iKey * Math.pow(10,1 - oShortFormat.valueSubString.length);\n\t\t\t\t} else {\n\t\t\t\t\toShortFormat.decimals = oShortFormat.valueSubString.length -  decimalSeparatorPosition - 1;\n\t\t\t\t\toShortFormat.magnitude = iKey * Math.pow(10,1 - decimalSeparatorPosition);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//value pattern has not be recognized\n\t\t\t\t//we cannot shortify\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn oShortFormat;\n\n\t}\n\n\tfunction getNumberFromShortened(sValue, sStyle, oLocaleData) {\n\t\tif (sStyle != \"short\" && sStyle != \"long\") {\n\t\t\treturn;\n\t\t}\n\t\tvar sNumber,\n\t\t\tiFactor = 1,\n\t\t\tiKey = 10,\n\t\t\taPluralCategories = oLocaleData.getPluralCategories(),\n\t\t\tsCldrFormat,\n\t\t\tfnGetFactor = function(sPlural) {\n\t\t\t\tsCldrFormat = oLocaleData.getDecimalFormat(sStyle, iKey.toString(), sPlural);\n\n\t\t\t\tif (sCldrFormat) {\n\t\t\t\t\t// Note: CLDR uses a non-breaking space in the forma tstring\n\t\t\t\t\tsCldrFormat = sCldrFormat.replace(/[\\s\\u00a0]/g, \"\");\n\t\t\t\t\t//formatString may contain '.' (quoted to differentiate them decimal separator)\n\t\t\t\t\t//which must be replaced with .\n\t\t\t\t\tsCldrFormat = sCldrFormat.replace(/'.'/g, \".\");\n\t\t\t\t\tvar match = sCldrFormat.match(rNumPlaceHolder);\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\t// determine unit -> may be on the beginning e.g. for he\n\t\t\t\t\t\tvar sValueSubString = match[0];\n\t\t\t\t\t\tvar sUnit = sCldrFormat.replace(sValueSubString, \"\");\n\t\t\t\t\t\tif (!sUnit) {\n\t\t\t\t\t\t\t// If there's no scale defined in the pattern, skip the pattern\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar iIndex = sValue.indexOf(sUnit);\n\t\t\t\t\t\tif (iIndex >= 0) {\n\t\t\t\t\t\t\t// parse the number part like every other number and then use the factor to get the real number\n\t\t\t\t\t\t\tsNumber = sValue.replace(sUnit, \"\");\n\t\t\t\t\t\t\tiFactor = iKey;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\twhile (iKey < 1e14) {\n\t\t\tif (aPluralCategories.some(fnGetFactor)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tiKey = iKey * 10;\n\t\t}\n\n\t\tif (!sNumber) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {number: sNumber, factor: iFactor};\n\n\t}\n\n\tfunction rounding(fValue, iMaxFractionDigits, sRoundingMode) {\n\t\tif (typeof fValue !== \"number\") {\n\t\t\treturn NaN;\n\t\t}\n\n\t\tsRoundingMode = sRoundingMode || NumberFormat.RoundingMode.HALF_AWAY_FROM_ZERO;\n\t\tiMaxFractionDigits = parseInt(iMaxFractionDigits, 10);\n\n\t\tif (typeof sRoundingMode === \"function\") {\n\t\t\t// Support custom function for rounding the number\n\t\t\tfValue = sRoundingMode(fValue, iMaxFractionDigits);\n\t\t} else {\n\t\t\tif (!iMaxFractionDigits) {\n\t\t\t\treturn mRoundingFunction[sRoundingMode](fValue);\n\t\t\t}\n\n\t\t\t// First move the decimal point towards right by maxFactionDigits\n\t\t\t// Then using the rounding function to round the first digit after decimal point\n\t\t\t// In the end, move the decimal point back to the original position\n\t\t\t//\n\t\t\t// For example rounding 1.005 by maxFractionDigits 2\n\t\t\t// \t1. Move the decimal point to right by 2 digits, result 100.5\n\t\t\t// \t2. Using the round function, for example, Math.round(100.5) = 101\n\t\t\t// \t3. Move the decimal point back by 2 digits, result 1.01\n\t\t\tfValue =  NumberFormat._shiftDecimalPoint(mRoundingFunction[sRoundingMode](NumberFormat._shiftDecimalPoint(fValue, iMaxFractionDigits)), -iMaxFractionDigits);\n\t\t}\n\n\t\treturn fValue;\n\t}\n\n\tfunction quote(sRegex) {\n\t\treturn sRegex.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n\t}\n\n\tfunction getDecimals(fValue, iPrecision) {\n\t\tvar iIntegerDigits = Math.floor(Math.log(Math.abs(fValue)) / Math.LN10);\n\t\treturn Math.max(0, iPrecision - iIntegerDigits - 1);\n\t}\n\n\treturn NumberFormat;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.ui.core/resources/sap/ui/core/format/NumberFormat.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['jquery.sap.global', 'sap/ui/core/Renderer', './ListBaseRenderer'],\n\tfunction(jQuery, Renderer, ListBaseRenderer) {\n\t\"use strict\";\n\n\n\t/**\n\t * List renderer.\n\t *\n\t * ListRenderer extends the ListBaseRenderer\n\t * @namespace\n\t * @alias sap.m.ListRenderer\n\t */\n\tvar ListRenderer = Renderer.extend(ListBaseRenderer);\n\n\tListRenderer.render = function(rm, oControl) {\n\t\t// if \"columns\" aggregation is not in use then we do not need backwards compatibility\n\t\tif (!oControl.getColumns().length) {\n\t\t\tListBaseRenderer.render.call(this, rm, oControl);\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * For backwards compatibility we need to render List with columns\n\t\t * However, if the compatibility version is 1.16 or higher then\n\t\t * we stop rendering to force using Table control with columns\n\t\t */\n\t\tif (oControl._isColumnsIncompatible()) {\n\t\t\tjQuery.sap.log.warning(\"Does not render sap.m.List#\" + oControl.getId() + \" with columns aggregation when compatibility version is 1.16 or higher. Instead use sap.m.Table control!\");\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * FIXME: Here to support old API if columns are set\n\t\t * We are trying to extend renderer to render list as table\n\t\t * This is so ugly and we need to get rid of it ASAP\n\t\t */\n\t\tjQuery.sap.require(\"sap.m.TableRenderer\");\n\t\tvar oRenderer = jQuery.extend({}, this, sap.m.TableRenderer);\n\t\tListBaseRenderer.render.call(oRenderer, rm, oControl);\n\t};\n\n\n\n\treturn ListRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ListRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// sap.ui.core.message.MessageMixin\nsap.ui.define([], function() {\n\t\"use strict\";\n\n\t/**\n\t * Applying the MessageMixin to a Control's prototype augments the refreshDataState function to support Label-texts.\n\t * For all messages, the additionalText property of the message will be set based on the associated Label-texts for the control instances.\n\t *\n\t * Please be aware, that only controls supporting a value state should apply this mixin to their prototype.\n\t *\n\t * @protected\n\t * @alias sap.ui.core.message.MessageMixin\n\t * @mixin\n\t * @since 1.44.0\n\t */\n\tvar MessageMixin = function () {\n\t\tthis.refreshDataState = refreshDataState;\n\t};\n\n\t/**\n\t * If messages are present:\n\t * - Adds an additional text to the message from the label(s) of the corresponding control instance\n\t * - Propagates the value state\n\t */\n\tfunction refreshDataState (sName, oDataState) {\n\t\tif (oDataState.getChanges().messages) {\n\t\t\tvar aMessages = oDataState.getMessages();\n\t\t\tvar aLabels = sap.ui.core.LabelEnablement.getReferencingLabels(this);\n\n\t\t\tif (aLabels && aLabels.length > 0) {\n\t\t\t\t// we simply take the first label text and ignore all others\n\t\t\t\tvar sLabelId = aLabels[0];\n\t\t\t\taMessages.forEach(function(oMessage) {\n\t\t\t\t\tvar oLabel = sap.ui.getCore().byId(sLabelId);\n\t\t\t\t\tif (oLabel.getMetadata().isInstanceOf(\"sap.ui.core.Label\") && oLabel.getText) {\n\t\t\t\t\t\toMessage.setAdditionalText(oLabel.getText());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjQuery.sap.log.warning(\n\t\t\t\t\t\t\t\"sap.ui.core.message.Message: Can't create labelText.\" +\n\t\t\t\t\t\t\t\"Label with id \" + sLabelId + \" is no valid sap.ui.core.Label.\",\n\t\t\t\t\t\t\tthis\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\t\t\t}\n\n\t\t\t// Update the model to apply the changes\n\t\t\tvar oMessageModel = sap.ui.getCore().getMessageManager().getMessageModel();\n\t\t\toMessageModel.checkUpdate();\n\n\t\t\t// propagate messages\n\t\t\tif (aMessages && aMessages.length > 0) {\n\t\t\t\tvar oMessage = aMessages[0];\n\t\t\t\t// check if the message type is a valid sap.ui.core.ValueState\n\t\t\t\tif (sap.ui.core.ValueState[oMessage.type]) {\n\t\t\t\t\tthis.setValueState(oMessage.type);\n\t\t\t\t\tthis.setValueStateText(oMessage.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.setValueState(sap.ui.core.ValueState.None);\n\t\t\t\tthis.setValueStateText('');\n\t\t\t}\n\t\t}\n\t}\n\n\treturn MessageMixin;\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.ui.core/resources/sap/ui/core/message/MessageMixin.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['./ListItemBaseRenderer', 'sap/ui/core/Renderer'],\n\tfunction(ListItemBaseRenderer, Renderer) {\n\t\"use strict\";\n\n\n\t/**\n\t * CustomListItem renderer.\n\t * @namespace\n\t */\n\tvar CustomListItemRenderer = Renderer.extend(ListItemBaseRenderer);\n\n\t/**\n\t * Renders the HTML for the given control, using the provided\n\t * {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager}\n\t *            oRenderManager the RenderManager that can be used for writing to\n\t *            the Render-Output-Buffer\n\t * @param {sap.ui.core.Control}\n\t *            oControl an object representation of the control that should be\n\t *            rendered\n\t */\n\tCustomListItemRenderer.renderLIAttributes = function(rm, oLI) {\n\t\trm.addClass(\"sapMCLI\");\n\t};\n\n\tCustomListItemRenderer.renderLIContent = function(rm, oLI) {\n\t\tvar aContent = oLI.getContent();\n\t\tvar cLength = aContent.length;\n\t\tfor ( var i = 0; i < cLength; i++) {\n\t\t\trm.renderControl(aContent[i]);\n\t\t}\n\t};\n\n\treturn CustomListItemRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/CustomListItemRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides the default renderer for control sap.m.Label\nsap.ui.define(['sap/ui/core/Renderer', 'sap/m/library', 'sap/ui/core/library'],\n\tfunction(Renderer, library, coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.m.LabelDesign\n\tvar LabelDesign = library.LabelDesign;\n\n\t/**\n\t * Label renderer.\n\t *\n\t * @author SAP SE\n\t * @namespace\n\t */\n\tvar LabelRenderer = {};\n\n\t/**\n\t * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the renderer output buffer\n\t * @param {sap.ui.core.Control} oLabel An object representation of the control that should be rendered\n\t */\n\tLabelRenderer.render = function(rm, oLabel){\n\t\t// convenience variable\n\t\tvar r = LabelRenderer,\n\t\t\tsTextDir = oLabel.getTextDirection(),\n\t\t\tsTextAlign = oLabel.getTextAlign(),\n\t\t\tsWidth = oLabel.getWidth(),\n\t\t\tsLabelText = oLabel.getText(),\n\t\t\tsTooltip = oLabel.getTooltip_AsString(),\n\t\t\tlabelForRendering = oLabel.getLabelForRendering(),\n\t\t\thtmlTagToRender = labelForRendering ? \"label\" : \"span\",\n\t\t\tbDisplayOnly = oLabel.isDisplayOnly();\n\n\t\t// write the HTML into the render manager\n\t\t// for accessibility reasons when a label doesn't have a \"for\" attribute, pointing at a HTML element it is rendered as span\n\t\trm.write(\"<\" + htmlTagToRender);\n\t\trm.writeControlData(oLabel);\n\n\t\t// styles\n\t\trm.addClass(\"sapMLabel\");\n\t\trm.addClass(\"sapUiSelectable\");\n\n\t\t// label wrapping\n\t\tif (oLabel.getWrapping()) {\n\t\t\trm.addClass(\"sapMLabelWrapped\");\n\t\t}\n\t\t// set design to bold\n\t\tif (oLabel.getDesign() == LabelDesign.Bold) {\n\t\t\trm.addStyle(\"font-weight\", \"bold\");\n\t\t}\n\n\t\tif (oLabel.isRequired()) {\n\t\t\trm.addClass(\"sapMLabelRequired\");\n\t\t}\n\n\t\tif (labelForRendering) {\n\t\t\tsap.ui.core.LabelEnablement.writeLabelForAttribute(rm, oLabel);\n\t\t} else if (oLabel.getParent() instanceof sap.m.Toolbar) {\n\t\t\trm.addClass(\"sapMLabelTBHeader\");\n\t\t}\n\n\t\t// text direction\n\t\tif (sTextDir !== TextDirection.Inherit){\n\t\t\trm.writeAttribute(\"dir\", sTextDir.toLowerCase());\n\t\t}\n\n\t\t// style for width\n\t\tif (sWidth) {\n\t\t\trm.addStyle(\"width\", sWidth);\n\t\t} else {\n\t\t\trm.addClass(\"sapMLabelMaxWidth\");\n\t\t}\n\n\t\t// style for text alignment\n\t\tif (sTextAlign) {\n\t\t\tsTextAlign = r.getTextAlign(sTextAlign, sTextDir);\n\t\t\tif (sTextAlign) {\n\t\t\t\trm.addStyle(\"text-align\", sTextAlign);\n\t\t\t}\n\t\t}\n\n\t\tif (sLabelText == \"\") {\n\t\t\trm.addClass(\"sapMLabelNoText\");\n\t\t}\n\n\t\tif (bDisplayOnly) {\n\t\t\trm.addClass(\"sapMLabelDisplayOnly\");\n\t\t}\n\n\t\trm.writeStyles();\n\t\trm.writeClasses();\n\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\trm.write(\">\");\n\n\t\t// write the label text\n\t\trm.write(\"<bdi id=\\\"\" + oLabel.getId() + \"-bdi\\\" >\");\n\t\tif (sLabelText) {\n\t\t\trm.writeEscaped(sLabelText);\n\t\t}\n\t\trm.write(\"</bdi>\");\n\n\t\trm.write(\"</\" + htmlTagToRender + \">\");\n\t};\n\n\t/**\n\t * Dummy inheritance of static methods/functions.\n\t * @see sap.ui.core.Renderer.getTextAlign\n\t * @private\n\t */\n\tLabelRenderer.getTextAlign = Renderer.getTextAlign;\n\n\treturn LabelRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/LabelRenderer.js","require(\"sap/m/themes/base/CustomListItem.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.CustomListItem.\nsap.ui.define(['./ListItemBase', './library'],\n\tfunction(ListItemBase, library) {\n\t\"use strict\";\n\n\n\n\t/**\n\t * Constructor for a new CustomListItem.\n\t *\n\t * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * This control with a content aggregation can be used to customize standard list items that we don't provide. List mode and ListItem type are applied to CustomListItems as well.\n\t * <b>Note:</b> Even though the content aggregation allows any control, complex responsive layout controls (e.g. <code>Table, Form</code>) should not be aggregated as content.\n\t *\n\t * @extends sap.m.ListItemBase\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.CustomListItem\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar CustomListItem = ListItemBase.extend(\"sap.m.CustomListItem\", /** @lends sap.m.CustomListItem.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tdefaultAggregation : \"content\",\n\t\taggregations : {\n\n\t\t\t/**\n\t\t\t * The content of this list item\n\t\t\t */\n\t\t\tcontent : {type : \"sap.ui.core.Control\", multiple : true, singularName : \"content\", bindable : \"bindable\"}\n\t\t},\n\t\tdesignTime: true\n\t}});\n\n\tCustomListItem.prototype.getContentAnnouncement = function() {\n\t\treturn this.getContent().map(function(oContent) {\n\t\t\treturn ListItemBase.getAccessibilityText(oContent);\n\t\t}).join(\" \").trim();\n\t};\n\n\treturn CustomListItem;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.CustomListItemRenderer\", require(\"sap/m/CustomListItemRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/CustomListItem.js","require(\"sap/m/themes/sap_belize/Input.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Input.\nsap.ui.define(['jquery.sap.global', './Bar', './Dialog', './InputBase', './List', './Popover',\n\t\t'sap/ui/core/Item', './ColumnListItem', './StandardListItem', './DisplayListItem', 'sap/ui/core/ListItem',\n\t\t'./Table', './Toolbar', './ToolbarSpacer', './library', 'sap/ui/core/IconPool', 'sap/ui/core/InvisibleText',\n\t\t'sap/ui/Device', 'sap/ui/core/ResizeHandler', 'sap/ui/core/Control'],\n\tfunction(jQuery, Bar, Dialog, InputBase, List, Popover,\n\t\t\tItem, ColumnListItem, StandardListItem, DisplayListItem, ListItem,\n\t\t\tTable, Toolbar, ToolbarSpacer, library, IconPool, InvisibleText,\n\t\t\tDevice, ResizeHandler, Control) {\n\t\"use strict\";\n\n\n\n\t// shortcut for sap.m.ListMode\n\tvar ListMode = library.ListMode;\n\n\t// shortcut for sap.m.PlacementType\n\tvar PlacementType = library.PlacementType;\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.m.InputTextFormatMode\n\tvar InputTextFormatMode = library.InputTextFormatMode;\n\n\t// shortcut for sap.m.InputType\n\tvar InputType = library.InputType;\n\n\n\n\t/**\n\t * Constructor for a new <code>Input</code>.\n\t *\n\t * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * Allows the user to enter and edit text or numeric values in one line.\n\t *\n\t * <h3>Overview</h3>\n\t *\n\t * You can enable the autocomplete suggestion feature and the value help option to easily enter a valid value.\n\t *\n\t * <h3>Guidelines</h3>\n\t *\n\t * <ul>\n\t * <li> Always provide a meaningful label for any input field </li>\n\t * <li> Limit the length of the input field. This will visually emphasize the constraints for the field. </li>\n\t * <li> Do not use the <code>placeholder</code> property as a label.</li>\n\t * <li> Use the <code>description</code> property only for small fields with no placeholders (i.e. for currencies).</li>\n\t * </ul>\n\t *\n\t * <h3>Structure</h3>\n\t *\n\t * The controls inherits from {@link sap.m.InputBase} which controls the core properties like:\n\t * <ul>\n\t * <li> editable / read-only </li>\n\t * <li> enabled / disabled</li>\n\t * <li> placeholder</li>\n\t * <li> text direction</li>\n\t * <li> value states</li>\n\t * </ul>\n\t * To aid the user during input, you can enable value help (<code>showValueHelp</code>) or autocomplete (<code>showSuggestion</code>).\n\t * <strong>Value help</strong> will open a new dialog where you can refine your input.\n\t * <strong>Autocomplete</strong> has three types of suggestions:\n\t * <ul>\n\t * <li> Single value - a list of suggestions of type <code>sap.ui.core.Item</code> or <code>sap.ui.core.ListItem</code> </li>\n\t * <li> Two values - a list of two suggestions (ID and description) of type <code>sap.ui.core.Item</code> or <code>sap.ui.core.ListItem</code> </li>\n\t * <li> Tabular suggestions of type <code>sap.m.ColumnListItem</code> </li>\n\t * </ul>\n\t * The suggestions are stored in two aggregations <code>suggestionItems</code> (for single and double values) and <code>suggestionRows</code> (for tabular values).\n\t *\n\t * <h3>Usage</h3>\n\t *\n\t * <b>When to use:</b>\n\t * Use the control for short inputs like emails, phones, passwords, fields for assisted value selection.\n\t *\n\t * <b>When not to use:</b>\n\t * Don't use the control for long texts, dates, designated search fields, fields for multiple selection.\n\t *\n\t * @extends sap.m.InputBase\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.Input\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar Input = InputBase.extend(\"sap.m.Input\", /** @lends sap.m.Input.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * HTML type of the internal <code>input</code> tag (e.g. Text, Number, Email, Phone).\n\t\t\t * The particular effect of this property differs depending on the browser and the current language settings,\n\t\t\t * especially for the type Number.<br>\n\t\t\t * This parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<br>\n\t\t\t * Only the default value <code>sap.m.InputType.Text</code> may be used in combination with data model formats.\n\t\t\t * <code>sap.ui.model</code> defines extended formats that are mostly incompatible with normal HTML\n\t\t\t * representations for numbers and dates.\n\t\t\t */\n\t\t\ttype : {type : \"sap.m.InputType\", group : \"Data\", defaultValue : InputType.Text},\n\n\t\t\t/**\n\t\t\t * Maximum number of characters. Value '0' means the feature is switched off.\n\t\t\t * This parameter is not compatible with the input type <code>sap.m.InputType.Number</code>.\n\t\t\t * If the input type is set to <code>Number</code>, the <code>maxLength</code> value is ignored.\n\t\t\t */\n\t\t\tmaxLength : {type : \"int\", group : \"Behavior\", defaultValue : 0},\n\n\t\t\t/**\n\t\t\t * Only used if type=date and no datepicker is available.\n\t\t\t * The data is displayed and the user input is parsed according to this format.\n\t\t\t * NOTE: The value property is always of the form RFC 3339 (YYYY-MM-dd).\n\t\t\t * @deprecated Since version 1.9.1.\n\t\t\t * <code>sap.m.DatePicker</code>, <code>sap.m.TimePicker</code> or <code>sap.m.DateTimePicker</code> should be used for date/time inputs and formating.\n\t\t\t */\n\t\t\tdateFormat : {type : \"string\", group : \"Misc\", defaultValue : 'YYYY-MM-dd', deprecated: true},\n\n\t\t\t/**\n\t\t\t * If set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired.\n\t\t\t * @since 1.16\n\t\t\t */\n\t\t\tshowValueHelp : {type : \"boolean\", group : \"Behavior\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input.\n\t\t\t * @since 1.16.1\n\t\t\t */\n\t\t\tshowSuggestion : {type : \"boolean\", group : \"Behavior\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * If set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect\n\t\t\t * @since 1.21.0\n\t\t\t */\n\t\t\tvalueHelpOnly : {type : \"boolean\", group : \"Behavior\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Defines whether to filter the provided suggestions before showing them to the user.\n\t\t\t */\n\t\t\tfilterSuggests : {type : \"boolean\", group : \"Behavior\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * If set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field.\n\t\t\t * Note: The value will be ignored if the actual width of the input field is larger than the specified parameter value.\n\t\t\t * @since 1.21.1\n\t\t\t */\n\t\t\tmaxSuggestionWidth : {type : \"sap.ui.core.CSSSize\", group : \"Appearance\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Minimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input. When it's set to 0, suggest event is fired when input with no text gets focus.\n\t\t\t * @since 1.21.2\n\t\t\t */\n\t\t\tstartSuggestion : {type : \"int\", group : \"Behavior\", defaultValue : 1},\n\n\t\t\t/**\n\t\t\t * For tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true.\n\t\t\t *\n\t\t\t * NOTE: If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect.\n\t\t\t * @since 1.22.1\n\t\t\t */\n\t\t\tshowTableSuggestionValueHelp : {type : \"boolean\", group : \"Behavior\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * The description is a text after the input field, e.g. units of measurement, currencies.\n\t\t\t */\n\t\t\tdescription : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * This property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description.\n\t\t\t */\n\t\t\tfieldWidth : {type : \"sap.ui.core.CSSSize\", group : \"Appearance\", defaultValue : '50%'},\n\n\t\t\t/**\n\t\t\t * Indicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false).\n\t\t\t * @since 1.24\n\t\t\t */\n\t\t\tvalueLiveUpdate : {type : \"boolean\", group : \"Behavior\", defaultValue : false},\n\n\t\t\t/**\n\t\t\t * Defines the key of the selected item.\n\t\t\t *\n\t\t\t * <b>Note:</b> If duplicate keys exist, the first item matching the key is used.\n\t\t\t * @since 1.44\n\t\t\t */\n\t\t\tselectedKey: {type: \"string\", group: \"Data\", defaultValue: \"\"},\n\t\t\t/**\n\t\t\t * Defines the display text format mode.\n\t\t\t * @since 1.44\n\t\t\t */\n\t\t\ttextFormatMode: {type: \"sap.m.InputTextFormatMode\", group: \"Misc\", defaultValue: InputTextFormatMode.Value},\n\t\t\t/**\n\t\t\t * Defines the display text formatter function.\n\t\t\t * @since 1.44\n\t\t\t */\n\t\t\ttextFormatter: {type: \"any\", group: \"Misc\", defaultValue: \"\"},\n\t\t\t/**\n\t\t\t * Defines the validation callback function called when a suggestion row gets selected.\n\t\t\t * @since 1.44\n\t\t\t */\n\t\t\tsuggestionRowValidator: {type: \"any\", group: \"Misc\", defaultValue: \"\"},\n\n\t\t\t/**\n\t\t\t * Specifies whether the suggestions highlighting is enabled.\n\t\t\t * @since 1.46\n\t\t\t */\n\t\t\tenableSuggestionsHighlighting: {type: \"boolean\", group: \"Behavior\", defaultValue: true}\n\t\t},\n\t\tdefaultAggregation : \"suggestionItems\",\n\t\taggregations : {\n\n\t\t\t/**\n\t\t\t * SuggestItems are the items which will be shown in the suggestion popup. Changing this aggregation (by calling addSuggestionItem, insertSuggestionItem, removeSuggestionItem, removeAllSuggestionItems, destroySuggestionItems) after input is rendered will open/close the suggestion popup. o display suggestions with two text values, it is also possible to add sap.ui.core/ListItems as SuggestionItems (since 1.21.1). For the selected ListItem, only the first value is returned to the input field.\n\t\t\t * @since 1.16.1\n\t\t\t */\n\t\t\tsuggestionItems : {type : \"sap.ui.core.Item\", multiple : true, singularName : \"suggestionItem\"},\n\n\t\t\t/**\n\t\t\t * The suggestionColumns and suggestionRows are for tabular input suggestions. This aggregation allows for binding the table columns; for more details see the aggregation \"suggestionRows\".\n\t\t\t * @since 1.21.1\n\t\t\t */\n\t\t\tsuggestionColumns : {type : \"sap.m.Column\", multiple : true, singularName : \"suggestionColumn\", bindable : \"bindable\"},\n\n\t\t\t/**\n\t\t\t * The suggestionColumns and suggestionRows are for tabular input suggestions. This aggregation allows for binding the table cells.\n\t\t\t * The items of this aggregation are to be bound directly or to set in the suggest event method.\n\t\t\t * Note: If this aggregation is filled, the aggregation suggestionItems will be ignored.\n\t\t\t * @since 1.21.1\n\t\t\t */\n\t\t\tsuggestionRows : {type : \"sap.m.ColumnListItem\", multiple : true, singularName : \"suggestionRow\", bindable : \"bindable\"},\n\n\t\t\t/**\n\t\t\t * The icon on the right side of the Input\n\t\t\t */\n\t\t\t_valueHelpIcon : {type : \"sap.ui.core.Icon\", multiple: false, visibility: \"hidden\"}\n\t\t},\n\t\tassociations: {\n\n\t\t\t/**\n\t\t\t * Sets or retrieves the selected item from the suggestionItems.\n\t\t\t * @since 1.44\n\t\t\t */\n\t\t\tselectedItem: {type: \"sap.ui.core.Item\", multiple: false},\n\n\t\t\t/**\n\t\t\t * Sets or retrieves the selected row from the suggestionRows.\n\t\t\t * @since 1.44\n\t\t\t */\n\t\t\tselectedRow: {type: \"sap.m.ColumnListItem\", multiple: false}\n\t\t},\n\t\tevents : {\n\n\t\t\t/**\n\t\t\t * This event is fired when the value of the input is changed - e.g. at each keypress\n\t\t\t */\n\t\t\tliveChange : {\n\t\t\t\tparameters : {\n\t\t\t\t\t/**\n\t\t\t\t\t * The new value of the input.\n\t\t\t\t\t */\n\t\t\t\t\tvalue : {type : \"string\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Indicate that ESC key triggered the event.\n\t\t\t\t\t * @since 1.48\n\t\t\t\t\t */\n\t\t\t\t\tescPressed : {type : \"boolean\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The value of the input before pressing ESC key.\n\t\t\t\t\t * @since 1.48\n\t\t\t\t\t */\n\t\t\t\t\tpreviousValue : {type : \"string\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * When the value help indicator is clicked, this event will be fired.\n\t\t\t * @since 1.16\n\t\t\t */\n\t\t\tvalueHelpRequest : {\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The event parameter is set to true, when the button at the end of the suggestion table is clicked, otherwise false. It can be used to determine whether the \"value help\" trigger or the \"show all items\" trigger has been pressed.\n\t\t\t\t\t */\n\t\t\t\t\tfromSuggestions : {type : \"boolean\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup.\n\t\t\t * @since 1.16.1\n\t\t\t */\n\t\t\tsuggest : {\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The current value which has been typed in the input.\n\t\t\t\t\t */\n\t\t\t\t\tsuggestValue : {type : \"string\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The suggestion list is passed to this event for convenience. If you use list-based or tabular suggestions, fill the suggestionList with the items you want to suggest. Otherwise, directly add the suggestions to the \"suggestionItems\" aggregation of the input control.\n\t\t\t\t\t */\n\t\t\t\t\tsuggestionColumns : {type : \"sap.m.ListBase\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup.\n\t\t\t * @since 1.16.3\n\t\t\t */\n\t\t\tsuggestionItemSelected : {\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * This is the item selected in the suggestion popup for one and two-value suggestions. For tabular suggestions, this value will not be set.\n\t\t\t\t\t */\n\t\t\t\t\tselectedItem : {type : \"sap.ui.core.Item\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * This is the row selected in the tabular suggestion popup represented as a ColumnListItem. For one and two-value suggestions, this value will not be set.\n\t\t\t\t\t *\n\t\t\t\t\t * Note: The row result function to select a result value for the string is already executed at this time. To pick different value for the input field or to do follow up steps after the item has been selected.\n\t\t\t\t\t * @since 1.21.1\n\t\t\t\t\t */\n\t\t\t\t\tselectedRow : {type : \"sap.m.ColumnListItem\"}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This event is fired when user presses the <code>Enter</code> key on the input.\n\t\t\t *\n\t\t\t * <b>Note:</b>\n\t\t\t * The event is fired independent of whether there was a change before or not. If a change was performed the event is fired after the change event.\n\t\t\t * The event is also fired when an item of the select list is selected via <code>Enter</code>.\n\t\t\t * The event is only fired on an input which allows text input (<code>editable</code>, <code>enabled</code> and not <code>valueHelpOnly</code>).\n\t\t\t *\n\t\t\t * @since 1.33.0\n\t\t\t */\n\t\t\tsubmit : {\n\t\t\t\tparameters: {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The new value of the input.\n\t\t\t\t\t */\n\t\t\t\t\tvalue: { type: \"string\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}});\n\n\n\tIconPool.insertFontFaceStyle();\n\n\t/**\n\t * Returns true if some word from the text starts with specific value.\n\t *\n\t * @name sap.m.Input._wordStartsWithValue\n\t * @method\n\t * @private\n\t * @param {string} sText The text of the word.\n\t * @param {string} sValue The value which must be compared to the word.\n\t * @returns {boolean} Indication if the word starts with the passed value.\n\t */\n\tInput._wordStartsWithValue = function(sText, sValue) {\n\n\t\tvar index;\n\n\t\twhile (sText) {\n\t\t\tif (jQuery.sap.startsWithIgnoreCase(sText, sValue)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tindex = sText.indexOf(' ');\n\t\t\tif (index == -1) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsText = sText.substring(index + 1);\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n\t * The default filter function for one and two-value. It checks whether the item text begins with the typed value.\n\t *\n\t * @name sap.m.Input._DEFAULTFILTER\n\t * @private\n\t * @param {string} sValue the current filter string.\n\t * @param {sap.ui.core.Item} oItem the filtered list item.\n\t * @returns {boolean} true for items that start with the parameter sValue, false for non matching items.\n\t */\n\tInput._DEFAULTFILTER = function(sValue, oItem) {\n\n\t\tif (oItem instanceof ListItem && Input._wordStartsWithValue(oItem.getAdditionalText(), sValue)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Input._wordStartsWithValue(oItem.getText(), sValue);\n\t};\n\n\t/**\n\t * The default filter function for tabular suggestions. It checks whether some item text begins with the typed value.\n\t *\n\t * @name sap.m.Input._DEFAULTFILTER_TABULAR\n\t * @private\n\t * @param {string} sValue the current filter string.\n\t * @param {sap.m.ColumnListItem} oColumnListItem The filtered list item.\n\t * @returns {boolean} true for items that start with the parameter sValue, false for non matching items.\n\t */\n\tInput._DEFAULTFILTER_TABULAR = function(sValue, oColumnListItem) {\n\t\tvar aCells = oColumnListItem.getCells(),\n\t\t\ti = 0;\n\n\t\tfor (; i < aCells.length; i++) {\n\n\t\t\tif (aCells[i].getText) {\n\t\t\t\tif (Input._wordStartsWithValue(aCells[i].getText(), sValue)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n\t * The default result function for tabular suggestions. It returns the value of the first cell with a \"text\" property.\n\t *\n\t * @name sap.m.Input._DEFAULTRESULT_TABULAR\n\t * @private\n\t * @param {sap.m.ColumnListItem} oColumnListItem The selected list item.\n\t * @returns {string} The value to be displayed in the input field.\n\t */\n\tInput._DEFAULTRESULT_TABULAR = function (oColumnListItem) {\n\t\tvar aCells = oColumnListItem.getCells(),\n\t\t\ti = 0;\n\n\t\tfor (; i < aCells.length; i++) {\n\t\t\t// take first cell with a text method and compare value\n\t\t\tif (aCells[i].getText) {\n\t\t\t\treturn aCells[i].getText();\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t/**\n\t * Initializes the control.\n\t *\n\t * @name sap.m.Input.init\n\t * @private\n\t */\n\tInput.prototype.init = function() {\n\t\tInputBase.prototype.init.call(this);\n\t\tthis._fnFilter = Input._DEFAULTFILTER;\n\n\t\t// Show suggestions in a dialog on phones:\n\t\tthis._bUseDialog = Device.system.phone;\n\n\t\t// Show suggestions in a full screen dialog on phones:\n\t\tthis._bFullScreen = Device.system.phone;\n\n\t\t// Counter for concurrent issues with setValue:\n\t\tthis._iSetCount = 0;\n\n\t\tthis._oRb = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\");\n\n\t\t// Init static hidden text for ARIA\n\t\tif (!Input._sAriaPopupLabelId) {\n\t\t\tInput._sAriaPopupLabelId = new InvisibleText({\n\t\t\t\ttext: this._oRb.getText(\"INPUT_AVALIABLE_VALUES\")\n\t\t\t}).toStatic().getId();\n\t\t}\n\t};\n\n\t/**\n\t * Destroys the Input.\n\t *\n\t * @name sap.m.Input.exit\n\t * @private\n\t */\n\tInput.prototype.exit = function() {\n\n\t\tthis._deregisterEvents();\n\n\t\t// clear delayed calls\n\t\tthis.cancelPendingSuggest();\n\n\t\tif (this._iRefreshListTimeout) {\n\t\t\tjQuery.sap.clearDelayedCall(this._iRefreshListTimeout);\n\t\t\tthis._iRefreshListTimeout = null;\n\t\t}\n\n\t\tif (this._oSuggestionPopup) {\n\t\t\tthis._oSuggestionPopup.destroy();\n\t\t\tthis._oSuggestionPopup = null;\n\t\t}\n\n\t\t// CSN# 1404088/2014: list is not destroyed when it has not been attached to the popup yet\n\t\tif (this._oList) {\n\t\t\tthis._oList.destroy();\n\t\t\tthis._oList = null;\n\t\t}\n\n\t\tif (this._oSuggestionTable) {\n\t\t\tthis._oSuggestionTable.destroy();\n\t\t\tthis._oSuggestionTable = null;\n\t\t}\n\n\t\tif (this._oButtonToolbar) {\n\t\t\tthis._oButtonToolbar.destroy();\n\t\t\tthis._oButtonToolbar = null;\n\t\t}\n\n\t\tif (this._oShowMoreButton) {\n\t\t\tthis._oShowMoreButton.destroy();\n\t\t\tthis._oShowMoreButton = null;\n\t\t}\n\t};\n\n\t/**\n\t * Resize the popup to the input width and makes sure that the input is never bigger than the popup.\n\t *\n\t * @name sap.m.Input._resizePopup\n\t * @private\n\t */\n\tInput.prototype._resizePopup = function(bForceResize) {\n\t\tvar that = this;\n\n\t\tif (bForceResize) {\n\t\t\tthis._shouldResizePopup = true;\n\t\t}\n\n\t\tif (this._oList && this._oSuggestionPopup && this._shouldResizePopup) {\n\n\t\t\tif (this.getMaxSuggestionWidth()) {\n\t\t\t\tthis._oSuggestionPopup.setContentWidth(this.getMaxSuggestionWidth());\n\t\t\t} else {\n\t\t\t\tthis._oSuggestionPopup.setContentWidth((this.$().outerWidth()) + \"px\");\n\t\t\t}\n\n\t\t\t// resize suggestion popup to minimum size of the input field\n\t\t\tsetTimeout(function() {\n\t\t\t\tif (that._oSuggestionPopup && that._oSuggestionPopup.isOpen() && that._oSuggestionPopup.$().outerWidth() < that.$().outerWidth()) {\n\t\t\t\t\tthat._oSuggestionPopup.setContentWidth((that.$().outerWidth()) + \"px\");\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t};\n\n\t/**\n\t * Overwrites the onBeforeRendering.\n\t *\n\t * @name sap.m.Input.onBeforeRendering\n\t * @public\n\t */\n\tInput.prototype.onBeforeRendering = function() {\n\t\tvar sSelectedKey = this.getSelectedKey();\n\t\tInputBase.prototype.onBeforeRendering.call(this);\n\n\t\tthis._deregisterEvents();\n\n\t\tif (sSelectedKey) {\n\t\t\tthis.setSelectedKey(sSelectedKey);\n\t\t}\n\n\t\tif (this.getShowSuggestion()) {\n\t\t\tif (this.getShowTableSuggestionValueHelp()) {\n\t\t\t\tthis._addShowMoreButton();\n\t\t\t} else {\n\t\t\t\tthis._removeShowMoreButton();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Overwrites the onAfterRendering.\n\t *\n\t * @name sap.m.Input.onAfterRendering\n\t * @public\n\t */\n\tInput.prototype.onAfterRendering = function() {\n\t\tvar that = this;\n\n\t\tInputBase.prototype.onAfterRendering.call(this);\n\n\t\tif (!this._bFullScreen) {\n\t\t\tthis._sPopupResizeHandler = ResizeHandler.register(this.getDomRef(), function() {\n\t\t\t\tthat._resizePopup();\n\t\t\t});\n\t\t}\n\n\t\tif (this._bUseDialog && this.getEditable() && this.getEnabled()) {\n\t\t\t// click event has to be used in order to focus on the input in dialog\n\t\t\t// do not open suggestion dialog by click over the value help icon\n\t\t\tthis.$().on(\"click\", jQuery.proxy(function (oEvent) {\n\t\t\t\tif (this._onclick) {\n\t\t\t\t\tthis._onclick(oEvent);\n\t\t\t\t}\n\n\t\t\t\tif (this.getShowSuggestion() && this._oSuggestionPopup && oEvent.target.id != this.getId() + \"-vhi\") {\n\t\t\t\t\tthis._resizePopup(true);\n\t\t\t\t\tthis._oSuggestionPopup.open();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t}\n\t};\n\n\t/**\n\t * Returns input display text.\n\t *\n\t * @name sap.m.Input._getDisplayText\n\t * @private\n\t * @param {sap.ui.core.Item} oItem The displayed item.\n\t * @returns {string} The key for the text format mode.\n\t */\n\tInput.prototype._getDisplayText = function(oItem) {\n\n\t\tvar fTextFormatter = this.getTextFormatter();\n\t\tif (fTextFormatter) {\n\t\t\treturn fTextFormatter(oItem);\n\t\t}\n\n\t\tvar sText = oItem.getText(),\n\t\t\tsKey = oItem.getKey(),\n\t\t\ttextFormatMode = this.getTextFormatMode();\n\n\t\tswitch (textFormatMode) {\n\t\t\tcase InputTextFormatMode.Key:\n\t\t\t\treturn sKey;\n\t\t\tcase InputTextFormatMode.ValueKey:\n\t\t\t\treturn sText + ' (' + sKey + ')';\n\t\t\tcase InputTextFormatMode.KeyValue:\n\t\t\t\treturn '(' + sKey + ') ' + sText;\n\t\t\tdefault:\n\t\t\t\treturn sText;\n\t\t}\n\t};\n\n\t/**\n\t * Handles value updates.\n\t *\n\t * @name sap.m.Input._onValueUpdated\n\t * @private\n\t * @param {string} newValue The new selected value.\n\t */\n\tInput.prototype._onValueUpdated = function (newValue) {\n\t\tif (this._bSelectingItem || newValue === this._sSelectedValue) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sKey = this.getSelectedKey(),\n\t\t\tbHasSelectedItem;\n\n\t\tif (sKey === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._hasTabularSuggestions()) {\n\t\t\tbHasSelectedItem = !!this._oSuggestionTable.getSelectedItem();\n\t\t} else {\n\t\t\tbHasSelectedItem = !!this._oList.getSelectedItem();\n\t\t}\n\n\t\tif (bHasSelectedItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setProperty(\"selectedKey\", '', true);\n\t\tthis.setAssociation(\"selectedRow\", null, true);\n\t\tthis.setAssociation(\"selectedItem\", null, true);\n\n\t\tthis.fireSuggestionItemSelected({\n\t\t\tselectedItem: null,\n\t\t\tselectedRow: null\n\t\t});\n\t};\n\n\t/**\n\t * Updates and synchronizes the <code>selectedItem</code> association and <code>selectedKey</code> properties.\n\t *\n\t * @name sap.m.Input.setSelectionItem\n\t * @private\n\t * @param {sap.ui.core.Item | null} oItem Selected item.\n\t * @param {boolean} bInteractionChange Specifies if the change is triggered by user interaction.\n\t */\n\tInput.prototype.setSelectionItem = function (oItem, bInteractionChange) {\n\n\t\tif (!oItem) {\n\t\t\tthis.setAssociation(\"selectedItem\", null, true);\n\t\t\tthis.setProperty(\"selectedKey\", '', true);\n\n\t\t\tthis.setValue('');\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._bSelectingItem = true;\n\n\t\tvar iCount = this._iSetCount,\n\t\t\tsNewValue;\n\n\t\tthis.setAssociation(\"selectedItem\", oItem, true);\n\t\tthis.setProperty(\"selectedKey\", oItem.getKey(), true);\n\n\t\t// fire suggestion item select event\n\t\tif (bInteractionChange) {\n\t\t\tthis.fireSuggestionItemSelected({\n\t\t\t\tselectedItem: oItem\n\t\t\t});\n\t\t}\n\n\t\t// choose which field should be used for the value\n\t\tif (iCount !== this._iSetCount) {\n\t\t\t// if the event handler modified the input value we take this one as new value\n\t\t\tsNewValue = this.getValue();\n\t\t} else {\n\t\t\tsNewValue = this._getDisplayText(oItem);\n\t\t}\n\n\t\tthis._sSelectedValue = sNewValue;\n\n\t\t// update the input field\n\t\tif (this._bUseDialog) {\n\t\t\tthis._oPopupInput.setValue(sNewValue);\n\t\t\tthis._oPopupInput._doSelect();\n\t\t} else {\n\t\t\t// call _getInputValue to apply the maxLength to the typed value\n\t\t\tsNewValue = this._getInputValue(sNewValue);\n\t\t\tthis.setDOMValue(sNewValue);\n\t\t\tthis.onChange(null, null, sNewValue);\n\t\t}\n\n\t\tthis._iPopupListSelectedIndex = -1;\n\n\t\tif (!(this._bUseDialog && this instanceof sap.m.MultiInput && this._isMultiLineMode)) {\n\t\t\tthis._closeSuggestionPopup();\n\t\t}\n\n\t\tif (!Device.support.touch) {\n\t\t\tthis._doSelect();\n\t\t}\n\n\t\tthis._bSelectingItem = false;\n\t};\n\n\t/**\n\t * Sets the <code>selectedItem</code> association.\n\t *\n\t *\n\t * @name sap.m.Input.setSelectedItem\n\t * @public\n\t * @param {sap.ui.core.Item} oItem New value for the <code>selectedItem</code> association.\n\t * Default value is <code>null</code>.\n\t * If an ID of a <code>sap.ui.core.Item</code> is given, the item with this ID becomes the\n\t * <code>selectedItem</code> association.\n\t * Alternatively, a <code>sap.ui.core.Item</code> instance may be given or <code>null</code> to clear\n\t * the selection.\n\t * @returns {sap.m.Input} <code>this</code> to allow method chaining.\n\t * @since 1.44\n\t */\n\tInput.prototype.setSelectedItem = function(oItem) {\n\n\t\tif (typeof oItem === \"string\") {\n\t\t\toItem = sap.ui.getCore().byId(oItem);\n\t\t}\n\n\t\tif (oItem !== null && !(oItem instanceof Item)) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.setSelectionItem(oItem);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the <code>selectedKey</code> property.\n\t *\n\t * Default value is an empty string <code>\"\"</code> or <code>undefined</code>.\n\t *\n\t * @name sap.m.Input.setSelectedKey\n\t * @public\n\t * @param {string} sKey New value for property <code>selectedKey</code>.\n\t * If the provided <code>sKey</code> is an empty string <code>\"\"</code> or <code>undefined</code>,\n\t * the selection is cleared.\n\t * If duplicate keys exist, the first item matching the key is selected.\n\t * @returns {sap.m.Input} <code>this</code> to allow method chaining.\n\t * @since 1.44\n\t */\n\tInput.prototype.setSelectedKey = function(sKey) {\n\t\tsKey = this.validateProperty(\"selectedKey\", sKey);\n\n\t\tif (this._hasTabularSuggestions()) {\n\t\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!sKey) {\n\t\t\tthis.setSelectionItem();\n\t\t\treturn this;\n\t\t}\n\n\t\tvar oItem = this.getSuggestionItemByKey(sKey);\n\n\t\tif (oItem) {\n\t\t\tthis.setSelectionItem(oItem);\n\t\t} else {\n\t\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Gets the item with the given key from the aggregation <code>suggestionItems</code>.\n\t * <b>Note:</b> If duplicate keys exist, the first item matching the key is returned.\n\t *\n\t * @public\n\t * @name sap.m.Input.getSuggestionItemByKey\n\t * @param {string} sKey An item key that specifies the item to retrieve.\n\t * @returns {sap.ui.core.Item} Suggestion item.\n\t * @since 1.44\n\t */\n\tInput.prototype.getSuggestionItemByKey = function(sKey) {\n\t\tvar aItems = this.getSuggestionItems() || [],\n\t\t\toItem,\n\t\t\ti;\n\n\t\tfor (i = 0; i < aItems.length; i++) {\n\t\t\toItem = aItems[i];\n\t\t\tif (oItem.getKey() === sKey) {\n\t\t\t\treturn oItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Updates and synchronizes the <code>selectedRow</code> association and <code>selectedKey</code> properties.\n\t *\n\t * @name sap.m.Input.setSelectionRow\n\t * @private\n\t * @param {sap.m.ColumnListItem} oListItem Selected item.\n\t * @param {boolean} bInteractionChange Specifies if the change is triggered by user interaction.\n\t */\n\tInput.prototype.setSelectionRow = function (oListItem, bInteractionChange) {\n\n\t\tif (!oListItem) {\n\t\t\tthis.setAssociation(\"selectedRow\", null, true);\n\t\t\tthis.setProperty(\"selectedKey\", '', true);\n\n\t\t\tthis.setValue('');\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._bSelectingItem = true;\n\n\t\tvar oItem,\n\t\t\tfSuggestionRowValidator = this.getSuggestionRowValidator();\n\n\t\tif (fSuggestionRowValidator) {\n\t\t\toItem = fSuggestionRowValidator(oListItem);\n\t\t\tif (!(oItem instanceof Item)) {\n\t\t\t\toItem = null;\n\t\t\t}\n\t\t}\n\n\t\tvar iCount = this._iSetCount,\n\t\t\tsKey = \"\",\n\t\t\tsNewValue;\n\n\t\tthis.setAssociation(\"selectedRow\", oListItem, true);\n\n\t\tif (oItem) {\n\t\t\tsKey = oItem.getKey();\n\t\t}\n\n\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\n\t\t// fire suggestion item select event\n\t\tif (bInteractionChange) {\n\t\t\tthis.fireSuggestionItemSelected({\n\t\t\t\tselectedRow: oListItem\n\t\t\t});\n\t\t}\n\n\t\t// choose which field should be used for the value\n\t\tif (iCount !== this._iSetCount) {\n\t\t\t// if the event handler modified the input value we take this one as new value\n\t\t\tsNewValue = this.getValue();\n\t\t} else {\n\t\t\t// for tabular suggestions we call a result filter function\n\t\t\tif (oItem) {\n\t\t\t\tsNewValue = this._getDisplayText(oItem);\n\t\t\t} else {\n\t\t\t\tsNewValue = this._fnRowResultFilter(oListItem);\n\t\t\t}\n\t\t}\n\n\t\tthis._sSelectedValue = sNewValue;\n\n\t\t// update the input field\n\t\tif (this._bUseDialog) {\n\t\t\tthis._oPopupInput.setValue(sNewValue);\n\t\t\tthis._oPopupInput._doSelect();\n\t\t} else {\n\t\t\t// call _getInputValue to apply the maxLength to the typed value\n\t\t\tsNewValue = this._getInputValue(sNewValue);\n\t\t\tthis.setDOMValue(sNewValue);\n\t\t\tthis.onChange(null, null, sNewValue);\n\t\t}\n\t\tthis._iPopupListSelectedIndex = -1;\n\n\t\tif (!(this._bUseDialog && this instanceof sap.m.MultiInput && this._isMultiLineMode)) {\n\t\t\tthis._closeSuggestionPopup();\n\t\t}\n\n\t\tif (!Device.support.touch) {\n\t\t\tthis._doSelect();\n\t\t}\n\n\t\tthis._bSelectingItem = false;\n\t};\n\n\t/**\n\t * Sets the <code>selectedRow</code> association.\n\t * Default value is <code>null</code>.\n\t *\n\t * @name sap.m.Input.setSelectedRow\n\t * @public\n\t * @param {sap.m.ColumnListItem} oListItem New value for the <code>selectedRow</code> association.\n\t * If an ID of a <code>sap.m.ColumnListItem</code> is given, the item with this ID becomes the\n\t * <code>selectedRow</code> association.\n\t * Alternatively, a <code>sap.m.ColumnListItem</code> instance may be given or <code>null</code> to clear\n\t * the selection.\n\t * @returns {sap.m.Input} <code>this</code> to allow method chaining.\n\t * @since 1.44\n\t */\n\tInput.prototype.setSelectedRow = function(oListItem) {\n\n\t\tif (typeof oListItem === \"string\") {\n\t\t\toListItem = sap.ui.getCore().byId(oListItem);\n\t\t}\n\n\t\tif (oListItem !== null && !(oListItem instanceof ColumnListItem)) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.setSelectionRow(oListItem);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns/Instantiates the value help icon control when needed.\n\t *\n\t * @name sap.m.Input._getValueHelpIcon\n\t * @private\n\t * @returns {object} Value help icon of the input.\n\t */\n\tInput.prototype._getValueHelpIcon = function () {\n\t\tvar that = this,\n\t\t\tvalueHelpIcon = this.getAggregation(\"_valueHelpIcon\"),\n\t\t\tsURI;\n\n\t\tif (valueHelpIcon) {\n\t\t\treturn valueHelpIcon;\n\t\t}\n\n\t\tsURI = IconPool.getIconURI(\"value-help\");\n\t\tvalueHelpIcon = IconPool.createControlByURI({\n\t\t\tid: this.getId() + \"-vhi\",\n\t\t\tsrc: sURI,\n\t\t\tuseIconTooltip: false,\n\t\t\tnoTabStop: true\n\t\t});\n\n\t\tvalueHelpIcon.addStyleClass(\"sapMInputValHelpInner\");\n\t\tvalueHelpIcon.attachPress(function (evt) {\n\t\t\t// if the property valueHelpOnly is set to true, the event is triggered in the ontap function\n\t\t\tif (!that.getValueHelpOnly()) {\n\t\t\t\tthis.getParent().focus();\n\t\t\t\tthat.fireValueHelpRequest({fromSuggestions: false});\n\t\t\t}\n\t\t});\n\n\t\tthis.setAggregation(\"_valueHelpIcon\", valueHelpIcon);\n\n\t\treturn valueHelpIcon;\n\t};\n\n\t/**\n\t * Fire valueHelpRequest event if conditions for ValueHelpOnly property are met.\n\t *\n\t * @name sap.m.Input._fireValueHelpRequestForValueHelpOnly\n\t * @private\n\t */\n\tInput.prototype._fireValueHelpRequestForValueHelpOnly = function() {\n\t\t// if all the named properties are set to true, the control triggers \"valueHelpRequest\" for all user interactions\n\t\tif (this.getEnabled() && this.getEditable() && this.getShowValueHelp() && this.getValueHelpOnly()) {\n\t\t\tthis.fireValueHelpRequest({fromSuggestions: false});\n\t\t}\n\t};\n\n\t/**\n\t * Fire valueHelpRequest event on tap.\n\t *\n\t * @name sap.m.Input.ontap\n\t * @public\n\t * @param {jQuery.Event} oEvent Ontap event.\n\t */\n\tInput.prototype.ontap = function(oEvent) {\n\t\tInputBase.prototype.ontap.call(this, oEvent);\n\t\tthis._fireValueHelpRequestForValueHelpOnly();\n\t};\n\n\t/**\n\t * Defines the width of the input. Default value is 100%.\n\t *\n\t * @name sap.m.Input.setWidth\n\t * @public\n\t * @param {string} sWidth The new width of the input.\n\t * @returns {void} Sets the width of the Input.\n\t */\n\tInput.prototype.setWidth = function(sWidth) {\n\t\treturn InputBase.prototype.setWidth.call(this, sWidth || \"100%\");\n\t};\n\n\t/**\n\t * Returns the width of the input.\n\t *\n\t * @name sap.m.Input.getWidth\n\t * @public\n\t * @return {string} The current width or 100% as default.\n\t */\n\tInput.prototype.getWidth = function() {\n\t\treturn this.getProperty(\"width\") || \"100%\";\n\t};\n\n\t/**\n\t * Sets a custom filter function for suggestions. The default is to check whether the first item text begins with the typed value. For one and two-value suggestions this callback function will operate on sap.ui.core.Item types, for tabular suggestions the function will operate on sap.m.ColumnListItem types.\n\t *\n\t * @name sap.m.Input.setFilterFunction\n\t * @public\n\t * @param {function} fnFilter The filter function is called when displaying suggestion items and has two input parameters: the first one is the string that is currently typed in the input field and the second one is the item that is being filtered. Returning true will add this item to the popup, returning false will not display it.\n\t * @returns {sap.m.Input} this pointer for chaining\n\t * @since 1.16.1\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tInput.prototype.setFilterFunction = function(fnFilter) {\n\t\t// reset to default function when calling with null or undefined\n\t\tif (fnFilter === null || fnFilter === undefined) {\n\t\t\tthis._fnFilter = Input._DEFAULTFILTER;\n\t\t\treturn this;\n\t\t}\n\t\t// set custom function\n\t\tjQuery.sap.assert(typeof (fnFilter) === \"function\", \"Input.setFilterFunction: first argument fnFilter must be a function on \" + this);\n\t\tthis._fnFilter = fnFilter;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets a custom result filter function for tabular suggestions to select the text that is passed to the input field. Default is to check whether the first cell with a \"text\" property begins with the typed value. For one value and two-value suggestions this callback function is not called.\n\t *\n\t * @name sap.m.Input.setRowResultFunction\n\t * @method\n\t * @public\n\t * @param {function} fnFilter The result function is called with one parameter: the sap.m.ColumnListItem that is selected. The function must return a result string that will be displayed as the input field's value.\n\t * @returns {sap.m.Input} this pointer for chaining\n\t * @since 1.21.1\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tInput.prototype.setRowResultFunction = function(fnFilter) {\n\t\t// reset to default function when calling with null or undefined\n\t\tif (fnFilter === null || fnFilter === undefined) {\n\t\t\tthis._fnRowResultFilter = Input._DEFAULTRESULT_TABULAR;\n\t\t\treturn this;\n\t\t}\n\t\t// set custom function\n\t\tjQuery.sap.assert(typeof (fnFilter) === \"function\", \"Input.setRowResultFunction: first argument fnFilter must be a function on \" + this);\n\t\tthis._fnRowResultFilter = fnFilter;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Closes the suggestion list.\n\t *\n\t * @name sap.m.Input.closeSuggestions\n\t * @method\n\t * @public\n\t * @since 1.48\n\t */\n\tInput.prototype.closeSuggestions = function() {\n\t\tthis._closeSuggestionPopup();\n\t};\n\n\t/**\n\t * Shows the value help.\n\t *\n\t * @name sap.m.Input.setShowValueHelp\n\t * @method\n\t * @public\n\t * @param {boolean} bShowValueHelp Indication for showing the value help.\n\t * @returns {sap.m.Input} this pointer for chaining.\n\t */\n\tInput.prototype.setShowValueHelp = function(bShowValueHelp) {\n\n\t\tthis.setProperty(\"showValueHelp\", bShowValueHelp);\n\n\t\tif (bShowValueHelp && !Input.prototype._sAriaValueHelpLabelId) {\n\t\t\t// create an F4 ARIA announcement and remember its ID for later use in the renderer:\n\t\t\tInput.prototype._sAriaValueHelpLabelId = new InvisibleText({\n\t\t\t\ttext: this._oRb.getText(\"INPUT_VALUEHELP\")\n\t\t\t}).toStatic().getId();\n\t\t}\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * Sets the value help.\n\t *\n\t * @name sap.m.Input.setValueHelpOnly\n\t * @method\n\t * @public\n\t * @param {boolean} bValueHelpOnly New value for the value help.\n\t * @returns {sap.m.Input} this pointer for chaining.\n\t */\n\tInput.prototype.setValueHelpOnly = function(bValueHelpOnly) {\n\n\t\tthis.setProperty(\"valueHelpOnly\", bValueHelpOnly);\n\n\t\tif (bValueHelpOnly && !Input.prototype._sAriaInputDisabledLabelId) {\n\t\t\t// create an F4 ARIA announcement and remember its ID for later use in the renderer:\n\t\t\tInput.prototype._sAriaInputDisabledLabelId = new InvisibleText({\n\t\t\t\ttext: this._oRb.getText(\"INPUT_DISABLED\")\n\t\t\t}).toStatic().getId();\n\t\t}\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * Selects the text of the InputDomRef in the given range.\n\t *\n\t * @name sap.m.Input._doSelect\n\t * @private\n\t * @param {int} iStart Start of selection.\n\t * @param {iEnd} iEnd End of selection.\n\t * @returns {sap.m.Input} this Input instance for chaining.\n\t */\n\tInput.prototype._doSelect = function(iStart, iEnd) {\n\t\tif (Device.support.touch) {\n\t\t\treturn;\n\t\t}\n\t\tvar oDomRef = this._$input[0];\n\t\tif (oDomRef) {\n\t\t\t// if no Dom-Ref - no selection (Maybe popup closed)\n\t\t\tvar $Ref = this._$input;\n\t\t\toDomRef.focus();\n\t\t\t$Ref.selectText(iStart ? iStart : 0, iEnd ? iEnd : $Ref.val().length);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Scrolls to item.\n\t *\n\t * @name sap.m.Input._scrollToItem\n\t * @method\n\t * @private\n\t * @param {int} iIndex Index of the item to scroll to.\n\t */\n\tInput.prototype._scrollToItem = function(iIndex) {\n\t\tvar oPopup = this._oSuggestionPopup,\n\t\t\toList = this._oList,\n\t\t\toScrollDelegate,\n\t\t\toPopupRect,\n\t\t\toItemRect,\n\t\t\tiTop,\n\t\t\tiBottom;\n\n\t\tif (!(oPopup instanceof Popover) || !oList) {\n\t\t\treturn;\n\t\t}\n\t\toScrollDelegate = oPopup.getScrollDelegate();\n\t\tif (!oScrollDelegate) {\n\t\t\treturn;\n\t\t}\n\t\tvar oListItem = oList.getItems()[iIndex],\n\t\t\toListItemDom = oListItem && oListItem.getDomRef();\n\t\tif (!oListItemDom) {\n\t\t\treturn;\n\t\t}\n\t\toPopupRect = oPopup.getDomRef(\"cont\").getBoundingClientRect();\n\t\toItemRect = oListItemDom.getBoundingClientRect();\n\n\t\tiTop = oPopupRect.top - oItemRect.top;\n\t\tiBottom = oItemRect.bottom - oPopupRect.bottom;\n\t\tif (iTop > 0) {\n\t\t\toScrollDelegate.scrollTo(oScrollDelegate._scrollX, Math.max(oScrollDelegate._scrollY - iTop, 0));\n\t\t} else if (iBottom > 0) {\n\t\t\toScrollDelegate.scrollTo(oScrollDelegate._scrollX, oScrollDelegate._scrollY + iBottom);\n\t\t}\n\t};\n\n\t/**\n\t * Helper method for keyboard navigation in suggestion items.\n\t *\n\t * @name sap.m.Input._isSuggestionItemSelectable\n\t * @method\n\t * @private\n\t * @param {sap.ui.core.Item} oItem Suggestion item.\n\t * @returns {boolean} Is the suggestion item selectable.\n\t */\n\tInput.prototype._isSuggestionItemSelectable = function(oItem) {\n\t\t// CSN# 1390866/2014: The default for ListItemBase type is \"Inactive\", therefore disabled entries are only supported for single and two-value suggestions\n\t\t// for tabular suggestions: only check visible\n\t\t// for two-value and single suggestions: check also if item is not inactive\n\t\treturn oItem.getVisible() && (this._hasTabularSuggestions() || oItem.getType() !== ListType.Inactive);\n\t};\n\n\t/**\n\t *  Helper method for distinguishing between incremental and non-incremental types of input.\n\t *\n\t * @name sap.m.Input._isIncrementalType\n\t * @method\n\t * @private\n\t * @returns {boolean} Is it incremental type.\n\t */\n\tInput.prototype._isIncrementalType = function () {\n\t\tvar sTypeOfInput = this.getType();\n\t\tif (sTypeOfInput === \"Number\" || sTypeOfInput === \"Date\" ||\n\t\t\tsTypeOfInput === \"Datetime\" || sTypeOfInput === \"Month\" ||\n\t\t\tsTypeOfInput === \"Time\" || sTypeOfInput === \"Week\") {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Keyboard handler helper.\n\t *\n\t * @name sap.m.Input._onsaparrowkey\n\t * @method\n\t * @private\n\t * @param {jQuery.Event} oEvent Arrow key event.\n\t * @param {string} sDir Arrow direction.\n\t * @param {int} iItems Items to be changed.\n\t */\n\tInput.prototype._onsaparrowkey = function(oEvent, sDir, iItems) {\n\t\tif (!this.getEnabled() || !this.getEditable()) {\n\t\t\treturn;\n\t\t}\n\t\tif (sDir !== \"up\" && sDir !== \"down\") {\n\t\t\treturn;\n\t\t}\n\t\tif (this._isIncrementalType()){\n\t\t\toEvent.setMarked();\n\t\t}\n\n\t\tif (!this._oSuggestionPopup || !this._oSuggestionPopup.isOpen()) {\n\t\t\treturn;\n\t\t}\n\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\n\t\tvar bFirst = false,\n\t\t\toList = this._oList,\n\t\t\taItems = this.getSuggestionItems(),\n\t\t\taListItems = oList.getItems(),\n\t\t\tiSelectedIndex = this._iPopupListSelectedIndex,\n\t\t\tsNewValue,\n\t\t\tiOldIndex = iSelectedIndex;\n\n\t\tif (sDir === \"up\" && iSelectedIndex === 0) {\n\t\t\t// if key is 'up' and selected Item is first -> do nothing\n\t\t\treturn;\n\t\t}\n\t\tif (sDir == \"down\" && iSelectedIndex === aListItems.length - 1) {\n\t\t\t//if key is 'down' and selected Item is last -> do nothing\n\t\t\treturn;\n\t\t}\n\n\t\tvar iStopIndex;\n\t\tif (iItems > 1) {\n\t\t\t// if iItems would go over the borders, search for valid item in other direction\n\t\t\tif (sDir == \"down\" && iSelectedIndex + iItems >= aListItems.length) {\n\t\t\t\tsDir = \"up\";\n\t\t\t\tiItems = 1;\n\t\t\t\taListItems[iSelectedIndex].setSelected(false);\n\t\t\t\tiStopIndex = iSelectedIndex;\n\t\t\t\tiSelectedIndex = aListItems.length - 1;\n\t\t\t\tbFirst = true;\n\t\t\t} else if (sDir == \"up\" && iSelectedIndex - iItems < 0){\n\t\t\t\tsDir = \"down\";\n\t\t\t\tiItems = 1;\n\t\t\t\taListItems[iSelectedIndex].setSelected(false);\n\t\t\t\tiStopIndex = iSelectedIndex;\n\t\t\t\tiSelectedIndex = 0;\n\t\t\t\tbFirst = true;\n\t\t\t}\n\t\t}\n\n\t\t// always select the first item from top when nothing is selected so far\n\t\tif (iSelectedIndex === -1) {\n\t\t\tiSelectedIndex = 0;\n\t\t\tif (this._isSuggestionItemSelectable(aListItems[iSelectedIndex])) {\n\t\t\t\t// if first item is visible, don't go into while loop\n\t\t\t\tiOldIndex = iSelectedIndex;\n\t\t\t\tbFirst = true;\n\t\t\t} else {\n\t\t\t\t// detect first visible item with while loop\n\t\t\t\tsDir = \"down\";\n\t\t\t}\n\t\t}\n\n\t\tif (sDir === \"down\") {\n\t\t\twhile (iSelectedIndex < aListItems.length - 1 && (!bFirst || !this._isSuggestionItemSelectable(aListItems[iSelectedIndex]))) {\n\t\t\t\taListItems[iSelectedIndex].setSelected(false);\n\t\t\t\tiSelectedIndex = iSelectedIndex + iItems;\n\t\t\t\tbFirst = true;\n\t\t\t\tiItems = 1; // if wanted item is not selectable just search the next one\n\t\t\t\tif (iStopIndex === iSelectedIndex) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\twhile (iSelectedIndex > 0 && (!bFirst || !aListItems[iSelectedIndex].getVisible() || !this._isSuggestionItemSelectable(aListItems[iSelectedIndex]))) {\n\t\t\t\taListItems[iSelectedIndex].setSelected(false);\n\t\t\t\tiSelectedIndex = iSelectedIndex - iItems;\n\t\t\t\tbFirst = true;\n\t\t\t\tiItems = 1; // if wanted item is not selectable just search the next one\n\t\t\t\tif (iStopIndex === iSelectedIndex) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this._isSuggestionItemSelectable(aListItems[iSelectedIndex])) {\n\t\t\t// if no further visible item can be found -> do nothing (e.g. set the old item as selected again)\n\t\t\tif (iOldIndex >= 0) {\n\t\t\t\taListItems[iOldIndex].setSelected(true).updateAccessibilityState();\n\t\t\t\tthis.$(\"inner\").attr(\"aria-activedescendant\", aListItems[iOldIndex].getId());\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\taListItems[iSelectedIndex].setSelected(true).updateAccessibilityState();\n\t\t\tthis.$(\"inner\").attr(\"aria-activedescendant\", aListItems[iSelectedIndex].getId());\n\t\t}\n\n\t\tif (Device.system.desktop) {\n\t\t\tthis._scrollToItem(iSelectedIndex);\n\t\t}\n\n\t\t// make sure the value doesn't exceed the maxLength\n\t\tif (ColumnListItem && aListItems[iSelectedIndex] instanceof ColumnListItem) {\n\t\t\t// for tabular suggestions we call a result filter function\n\t\t\tsNewValue = this._getInputValue(this._fnRowResultFilter(aListItems[iSelectedIndex]));\n\t\t} else {\n\t\t\tvar bListItem = (aItems[0] instanceof ListItem ? true : false);\n\t\t\tif (bListItem) {\n\t\t\t\t// for two value suggestions we use the item label\n\t\t\t\tsNewValue = this._getInputValue(aListItems[iSelectedIndex].getLabel());\n\t\t\t} else {\n\t\t\t\t// otherwise we use the item title\n\t\t\t\tsNewValue = this._getInputValue(aListItems[iSelectedIndex].getTitle());\n\t\t\t}\n\t\t}\n\n\t\t// setValue isn't used because here is too early to modify the lastValue of input\n\t\tthis.setDOMValue(sNewValue);\n\n\t\t// memorize the value set by calling jQuery.val, because browser doesn't fire a change event when the value is set programmatically.\n\t\tthis._sSelectedSuggViaKeyboard = sNewValue;\n\n\t\tthis._doSelect();\n\t\tthis._iPopupListSelectedIndex = iSelectedIndex;\n\t};\n\n\t/**\n\t * Keyboard handler for up arrow key.\n\t *\n\t * @name sap.m.Input.onsapup\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsapup = function(oEvent) {\n\t\tthis._onsaparrowkey(oEvent, \"up\", 1);\n\t};\n\n\t/**\n\t * Keyboard handler for down arrow key.\n\t *\n\t * @name sap.m.Input.onsapdown\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsapdown = function(oEvent) {\n\t\tthis._onsaparrowkey(oEvent, \"down\", 1);\n\t};\n\n\t/**\n\t * Keyboard handler for page up key.\n\t *\n\t * @name sap.m.Input.onsappageup\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsappageup = function(oEvent) {\n\t\tthis._onsaparrowkey(oEvent, \"up\", 5);\n\t};\n\n\t/**\n\t * Keyboard handler for page down key.\n\t *\n\t * @name sap.m.Input.onsappagedown\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsappagedown = function(oEvent) {\n\t\tthis._onsaparrowkey(oEvent, \"down\", 5);\n\t};\n\n\t/**\n\t * Keyboard handler for home key.\n\t *\n\t * @name sap.m.Input.onsaphome\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsaphome = function(oEvent) {\n\n\t\tif (this._oList) {\n\t\t\tthis._onsaparrowkey(oEvent, \"up\", this._oList.getItems().length);\n\t\t}\n\n\t};\n\n\t/**\n\t * Keyboard handler for end key.\n\t *\n\t * @name sap.m.Input.onsapend\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsapend = function(oEvent) {\n\n\t\tif (this._oList) {\n\t\t\tthis._onsaparrowkey(oEvent, \"down\", this._oList.getItems().length);\n\t\t}\n\n\t};\n\n\t/**\n\t * Keyboard handler for escape key.\n\t *\n\t * @name sap.m.Input.onsapescape\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsapescape = function(oEvent) {\n\t\tvar lastValue;\n\n\t\tif (this._oSuggestionPopup && this._oSuggestionPopup.isOpen()) {\n\t\t\t// mark the event as already handled\n\t\t\toEvent.originalEvent._sapui_handledByControl = true;\n\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t\tthis._closeSuggestionPopup();\n\n\t\t\t// restore the initial value that was there before suggestion dialog\n\t\t\tif (this._sBeforeSuggest !== undefined) {\n\t\t\t\tif (this._sBeforeSuggest !== this.getValue()) {\n\t\t\t\t\tlastValue = this._lastValue;\n\t\t\t\t\tthis.setValue(this._sBeforeSuggest);\n\t\t\t\t\tthis._lastValue = lastValue; // override InputBase.onsapescape()\n\t\t\t\t}\n\t\t\t\tthis._sBeforeSuggest = undefined;\n\t\t\t}\n\t\t\treturn; // override InputBase.onsapescape()\n\t\t}\n\n\t\tif (InputBase.prototype.onsapescape) {\n\t\t\tInputBase.prototype.onsapescape.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Keyboard handler for enter key.\n\t *\n\t * @name sap.m.Input.onsapenter\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsapenter = function(oEvent) {\n\t\tif (InputBase.prototype.onsapenter) {\n\t\t\tInputBase.prototype.onsapenter.apply(this, arguments);\n\t\t}\n\n\t\t// when enter is pressed before the timeout of suggestion delay, suggest event is cancelled\n\t\tthis.cancelPendingSuggest();\n\n\t\tif (this._oSuggestionPopup && this._oSuggestionPopup.isOpen()) {\n\t\t\tvar oSelectedItem = this._oList.getSelectedItem();\n\t\t\tif (oSelectedItem) {\n\t\t\t\tif (this._hasTabularSuggestions()){\n\t\t\t\t\tthis.setSelectionRow(oSelectedItem, true);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setSelectionItem(oSelectedItem._oItem, true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._iPopupListSelectedIndex >= 0) {\n\t\t\t\t\tthis._fireSuggestionItemSelectedEvent();\n\t\t\t\t\tthis._doSelect();\n\n\t\t\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t\t\t}\n\t\t\t\tthis._closeSuggestionPopup();\n\t\t\t}\n\t\t}\n\n\t\tif (this.getEnabled() && this.getEditable() && !(this.getValueHelpOnly() && this.getShowValueHelp())) {\n\t\t\tthis.fireSubmit({value: this.getValue()});\n\t\t}\n\t};\n\n\t/**\n\t * Keyboard handler for the onFocusLeave event.\n\t *\n\t * @name sap.m.Input.onsapfocusleave\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsapfocusleave = function(oEvent) {\n\t\tvar oPopup = this._oSuggestionPopup;\n\n\t\tif (oPopup instanceof Popover) {\n\t\t\tif (oEvent.relatedControlId && jQuery.sap.containsOrEquals(oPopup.getDomRef(), sap.ui.getCore().byId(oEvent.relatedControlId).getFocusDomRef())) {\n\t\t\t\t// Force the focus to stay in input\n\t\t\t\tthis._bPopupHasFocus = true;\n\t\t\t\tthis.focus();\n\t\t\t} else {\n\t\t\t\t// When the input still has the value of the last jQuery.val call, a change event has to be\n\t\t\t\t// fired manually because browser doesn't fire an input event in this case.\n\t\t\t\tif (this.getDOMValue() === this._sSelectedSuggViaKeyboard) {\n\t\t\t\t\tthis._sSelectedSuggViaKeyboard = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Inform InputBase to fire the change event on Input only when focus doesn't go into the suggestion popup\n\t\tvar oFocusedControl = sap.ui.getCore().byId(oEvent.relatedControlId);\n\t\tif (!(oPopup\n\t\t\t\t&& oFocusedControl\n\t\t\t\t&& jQuery.sap.containsOrEquals(oPopup.getDomRef(), oFocusedControl.getFocusDomRef())\n\t\t\t)) {\n\t\t\tInputBase.prototype.onsapfocusleave.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Keyboard handler for the onMouseDown event.\n\t *\n\t * @name sap.m.Input.onmousedown\n\t * @method\n\t * @public\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onmousedown = function(oEvent) {\n\t\tvar oPopup = this._oSuggestionPopup;\n\n\t\tif ((oPopup instanceof Popover) && oPopup.isOpen()) {\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\t/**\n\t * Removes events from the input.\n\t *\n\t * @name sap.m.Input._deregisterEvents\n\t * @method\n\t * @private\n\t */\n\tInput.prototype._deregisterEvents = function() {\n\t\tif (this._sPopupResizeHandler) {\n\t\t\tResizeHandler.deregister(this._sPopupResizeHandler);\n\t\t\tthis._sPopupResizeHandler = null;\n\t\t}\n\n\t\tif (this._bUseDialog && this._oSuggestionPopup) {\n\t\t\tthis.$().off(\"click\");\n\t\t}\n\t};\n\n\t/**\n\t * Update suggestion items.\n\t *\n\t * @name sap.m.Input.updateSuggestionItems\n\t * @method\n\t * @public\n\t * @return {sap.m.Input} this Input instance for chaining.\n\t */\n\tInput.prototype.updateSuggestionItems = function() {\n\t\tthis._bSuspendInvalidate = true;\n\t\tthis.updateAggregation(\"suggestionItems\");\n\t\tthis._bShouldRefreshListItems = true;\n\t\tthis._refreshItemsDelayed();\n\t\tthis._bSuspendInvalidate = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Invalidates the control.\n\t * @override\n\t * @protected\n\t */\n\tInput.prototype.invalidate = function() {\n\t\tif (!this._bSuspendInvalidate) {\n\t\t\tControl.prototype.invalidate.apply(this, arguments);\n\t\t}\n\t};\n\n\t\t/**\n\t * Cancels any pending suggestions.\n\t *\n\t * @name sap.m.Input.cancelPendingSuggest\n\t * @method\n\t * @public\n\t */\n\tInput.prototype.cancelPendingSuggest = function() {\n\t\tif (this._iSuggestDelay) {\n\t\t\tjQuery.sap.clearDelayedCall(this._iSuggestDelay);\n\t\t\tthis._iSuggestDelay = null;\n\t\t}\n\t};\n\n\t/**\n\t * Triggers suggestions.\n\t *\n\t * @name sap.m.Input._triggerSuggest\n\t * @method\n\t * @private\n\t * @param {string} sValue User input.\n\t */\n\tInput.prototype._triggerSuggest = function(sValue) {\n\n\t\tthis.cancelPendingSuggest();\n\t\tthis._bShouldRefreshListItems = true;\n\n\t\tif (!sValue) {\n\t\t\tsValue = \"\";\n\t\t}\n\n\t\tif (sValue.length >= this.getStartSuggestion()) {\n\t\t\tthis._iSuggestDelay = jQuery.sap.delayedCall(300, this, function(){\n\n\t\t\t\t// when using non ASCII characters the value might be the same as previous\n\t\t\t\t// don't re populate the suggestion items in this case\n\t\t\t\tif (this._sPrevSuggValue !== sValue) {\n\n\t\t\t\t\tthis._bBindingUpdated = false;\n\t\t\t\t\tthis.fireSuggest({\n\t\t\t\t\t\tsuggestValue: sValue\n\t\t\t\t\t});\n\t\t\t\t\t// if binding is updated during suggest event, the list items don't need to be refreshed here\n\t\t\t\t\t// because they will be refreshed in updateItems function.\n\t\t\t\t\t// This solves the popup blinking problem\n\t\t\t\t\tif (!this._bBindingUpdated) {\n\t\t\t\t\t\tthis._refreshItemsDelayed();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._sPrevSuggValue = sValue;\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (this._bUseDialog) {\n\t\t\tif (this._oList instanceof Table) {\n\t\t\t\t// CSN# 1421140/2014: hide the table for empty/initial results to not show the table columns\n\t\t\t\tthis._oList.addStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t} else if (this._oList && this._oList.destroyItems) {\n\t\t\t\tthis._oList.destroyItems();\n\t\t\t}\n\t\t} else if (this._oSuggestionPopup && this._oSuggestionPopup.isOpen()) {\n\n\t\t\t// when compose a non ASCII character, in Chrome the value is updated in the next browser tick cycle\n\t\t\tjQuery.sap.delayedCall(0, this, function () {\n\t\t\t\tvar sNewValue = this.getDOMValue() || '';\n\t\t\t\tif (sNewValue < this.getStartSuggestion()) {\n\t\t\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t\t\t\tthis._closeSuggestionPopup();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t(function(){\n\t\t/**\n\t\t * Shows suggestions.\n\t\t *\n\t\t * @name sap.m.Input.setShowSuggestion\n\t\t * @method\n\t\t * @public\n\t\t * @param {boolean} bValue Show suggestions.\n\t\t * @return {sap.m.Input} this Input instance for chaining.\n\t \t */\n\t\tInput.prototype.setShowSuggestion = function(bValue){\n\t\t\tthis.setProperty(\"showSuggestion\", bValue, true);\n\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t\tif (bValue) {\n\t\t\t\tthis._lazyInitializeSuggestionPopup(this);\n\t\t\t} else {\n\t\t\t\tdestroySuggestionPopup(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Shows value help suggestions in table.\n\t\t *\n\t\t * @name sap.m.Input.setShowTableSuggestionValueHelp\n\t\t * @method\n\t\t * @public\n\t\t * @param {boolean} bValue Show suggestions.\n\t\t * @return {sap.m.Input} this Input instance for chaining.\n\t \t */\n\t\tInput.prototype.setShowTableSuggestionValueHelp = function(bValue) {\n\t\t\tthis.setProperty(\"showTableSuggestionValueHelp\", bValue, true);\n\n\t\t\tif (!this._oSuggestionPopup) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (bValue) {\n\t\t\t\tthis._addShowMoreButton();\n\t\t\t} else {\n\t\t\t\tthis._removeShowMoreButton();\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Gets show more button.\n\t\t *\n\t\t * @name sap.m.Input._getShowMoreButton\n\t\t * @method\n\t\t * @private\n\t\t * @return {sap.m.Button} Show more button.\n\t \t */\n\t\tInput.prototype._getShowMoreButton = function() {\n\t\t\tvar that = this,\n\t\t\t\toMessageBundle = this._oRb;\n\n\t\t\treturn this._oShowMoreButton || (this._oShowMoreButton = new sap.m.Button({\n\t\t\t\ttext : oMessageBundle.getText(\"INPUT_SUGGESTIONS_SHOW_ALL\"),\n\t\t\t\tpress : function() {\n\t\t\t\t\tif (that.getShowTableSuggestionValueHelp()) {\n\t\t\t\t\t\tthat.fireValueHelpRequest({fromSuggestions: true});\n\t\t\t\t\t\tthat._iPopupListSelectedIndex = -1;\n\t\t\t\t\t\tthat._closeSuggestionPopup();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t};\n\n\t\t/**\n\t\t * Gets button toolbar.\n\t\t *\n\t\t * @name sap.m.Input._getButtonToolbar\n\t\t * @method\n\t\t * @private\n\t\t * @return {sap.m.Toolbar} Button toolbar.\n\t \t */\n\t\tInput.prototype._getButtonToolbar = function() {\n\t\t\tvar oShowMoreButton = this._getShowMoreButton();\n\n\t\t\treturn this._oButtonToolbar || (this._oButtonToolbar = new Toolbar({\n\t\t\t\tcontent: [\n\t\t\t\t\tnew ToolbarSpacer(),\n\t\t\t\t\toShowMoreButton\n\t\t\t\t]\n\t\t\t}));\n\t\t};\n\n\t\t/**\n\t\t * Adds a show more button to the footer of the tabular suggestion popup/dialog.\n\t\t *\n\t\t * @name sap.m.Input._addShowMoreButton\n\t\t * @method\n\t\t * @private\n\t\t * @param{boolean} [bTabular] optional parameter to force override the tabular suggestions check\n\t\t */\n\t\tInput.prototype._addShowMoreButton = function(bTabular) {\n\t\t\tif (!this._oSuggestionPopup || !bTabular && !this._hasTabularSuggestions()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._oSuggestionPopup instanceof Dialog) {\n\t\t\t\t// phone variant, use endButton (beginButton is close)\n\t\t\t\tvar oShowMoreButton = this._getShowMoreButton();\n\t\t\t\tthis._oSuggestionPopup.setEndButton(oShowMoreButton);\n\t\t\t} else {\n\t\t\t\tvar oButtonToolbar = this._getButtonToolbar();\n\t\t\t\t// desktop/tablet variant, use popover footer\n\t\t\t\tthis._oSuggestionPopup.setFooter(oButtonToolbar);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Removes the show more button from the footer of the tabular suggestion popup/dialog.\n\t\t *\n\t\t * @name sap.m.Input._removeShowMoreButton\n\t\t * @method\n\t\t * @private\n\t\t */\n\t\tInput.prototype._removeShowMoreButton = function() {\n\t\t\tif (!this._oSuggestionPopup || !this._hasTabularSuggestions()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._oSuggestionPopup instanceof Dialog) {\n\t\t\t\tthis._oSuggestionPopup.setEndButton(null);\n\t\t\t} else {\n\t\t\t\tthis._oSuggestionPopup.setFooter(null);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Event handler for user input.\n\t\t *\n\t\t * @name sap.m.Input.oninput\n\t\t * @method\n\t\t * @public\n\t\t * @param {jQuery.Event} oEvent User input.\n\t\t */\n\t\tInput.prototype.oninput = function(oEvent) {\n\t\t\tInputBase.prototype.oninput.call(this, oEvent);\n\t\t\tif (oEvent.isMarked(\"invalid\")) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar value = this.getDOMValue();\n\n\t\t\tif (this.getValueLiveUpdate()) {\n\t\t\t\tthis.setProperty(\"value\",value, true);\n\t\t\t\tthis._onValueUpdated(value);\n\t\t\t}\n\n\t\t\tthis.fireLiveChange({\n\t\t\t\tvalue: value,\n\t\t\t\t// backwards compatibility\n\t\t\t\tnewValue: value\n\t\t\t});\n\n\t\t\t// No need to fire suggest event when suggestion feature isn't enabled or runs on the phone.\n\t\t\t// Because suggest event should only be fired by the input in dialog when runs on the phone.\n\t\t\tif (this.getShowSuggestion() && !this._bUseDialog) {\n\t\t\t\tthis._triggerSuggest(value);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Gets the input value.\n\t\t *\n\t\t * @name sap.m.Input.getValue\n\t\t * @method\n\t\t * @public\n\t\t * @return {sap.m.Input} Value of the input.\n\t\t */\n\t\tInput.prototype.getValue = function(){\n\t\t\treturn this.getDomRef(\"inner\") && this._$input ? this.getDOMValue() : this.getProperty(\"value\");\n\t\t};\n\n\t\t/**\n\t\t * Refreshes delayed items.\n\t\t *\n\t\t * @name sap.m.Input._refreshItemsDelayed\n\t\t * @method\n\t\t * @public\n\t\t */\n\t\tInput.prototype._refreshItemsDelayed = function() {\n\t\t\tjQuery.sap.clearDelayedCall(this._iRefreshListTimeout);\n\t\t\tthis._iRefreshListTimeout = jQuery.sap.delayedCall(0, this, refreshListItems, [ this ]);\n\t\t};\n\n\t\t/**\n\t\t * Adds suggestion item.\n\t\t *\n\t\t * @name sap.m.Input.addSuggestionItem\n\t\t * @method\n\t\t * @public\n\t\t * @param {sap.ui.core.Item} oItem Suggestion item.\n\t\t * @return {sap.m.Input} this Input instance for chaining.\n\t\t */\n\t\tInput.prototype.addSuggestionItem = function(oItem) {\n\t\t\tthis.addAggregation(\"suggestionItems\", oItem, true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\tcreateSuggestionPopupContent(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Inserts suggestion item.\n\t\t *\n\t\t * @name sap.m.Input.insertSuggestionItem\n\t\t * @method\n\t\t * @public\n\t\t * @param {sap.ui.core.Item} oItem Suggestion item.\n\t\t * @param {int} iIndex Index to be inserted.\n\t\t * @returns {sap.m.Input} this Input instance for chaining.\n\t\t */\n\t\tInput.prototype.insertSuggestionItem = function(oItem, iIndex) {\n\t\t\tthis.insertAggregation(\"suggestionItems\", iIndex, oItem, true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\tcreateSuggestionPopupContent(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Removes suggestion item.\n\t\t *\n\t\t * @name sap.m.Input.removeSuggestionItem\n\t\t * @method\n\t\t * @public\n\t\t * @param {sap.ui.core.Item} oItem Suggestion item.\n\t\t * @returns {boolean} Determines whether the suggestion item has been removed.\n\t\t */\n\t\tInput.prototype.removeSuggestionItem = function(oItem) {\n\t\t\tvar res = this.removeAggregation(\"suggestionItems\", oItem, true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn res;\n\t\t};\n\n\t\t/**\n\t\t * Removes all suggestion items.\n\t\t *\n\t\t * @name sap.m.Input.removeAllSuggestionItems\n\t\t * @method\n\t\t * @public\n\t\t * @returns {boolean} Determines whether the suggestion items are removed.\n\t\t */\n\t\tInput.prototype.removeAllSuggestionItems = function() {\n\t\t\tvar res = this.removeAllAggregation(\"suggestionItems\", true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn res;\n\t\t};\n\n\t\t/**\n\t\t * Destroys suggestion items.\n\t\t *\n\t\t * @name sap.m.Input.destroySuggestionItems\n\t\t * @method\n\t\t * @public\n\t\t * @return {sap.m.Input} this Input instance for chaining.\n\t\t */\n\t\tInput.prototype.destroySuggestionItems = function() {\n\t\t\tthis.destroyAggregation(\"suggestionItems\", true);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Adds suggestion row.\n\t\t *\n\t\t * @name sap.m.Input.addSuggestionRow\n\t\t * @method\n\t\t * @public\n\t\t * @param {sap.ui.core.Item} oItem Suggestion item.\n\t\t * @return {sap.m.Input} this Input instance for chaining.\n\t\t */\n\t\tInput.prototype.addSuggestionRow = function(oItem) {\n\t\t\toItem.setType(ListType.Active);\n\t\t\tthis.addAggregation(\"suggestionRows\", oItem);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\tcreateSuggestionPopupContent(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Inserts suggestion row.\n\t\t *\n\t\t * @name sap.m.Input.insertSuggestionRow\n\t\t * @method\n\t\t * @public\n\t\t * @param {sap.ui.core.Item} oItem Suggestion row\n\t\t * @param {int} iIndex Row index.\n\t\t * @return {sap.m.Input} this Input instance for chaining.\n\t\t */\n\t\tInput.prototype.insertSuggestionRow = function(oItem, iIndex) {\n\t\t\toItem.setType(ListType.Active);\n\t\t\tthis.insertAggregation(\"suggestionRows\", iIndex, oItem);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\tcreateSuggestionPopupContent(this);\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Removes suggestion row.\n\t\t *\n\t\t * @name sap.m.Input.removeSuggestionRow\n\t\t * @method\n\t\t * @public\n\t\t * @param {sap.ui.core.Item} oItem Suggestion row.\n\t\t * @returns {boolean} Determines whether the suggestion row is removed.\n\t\t */\n\t\tInput.prototype.removeSuggestionRow = function(oItem) {\n\t\t\tvar res = this.removeAggregation(\"suggestionRows\", oItem);\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn res;\n\t\t};\n\n\t\t/**\n\t\t * Removes all suggestion rows.\n\t\t *\n\t\t * @name sap.m.Input.removeAllSuggestionRows\n\t\t * @method\n\t\t * @public\n\t\t * @returns {boolean} Determines whether the suggestion rows are removed.\n\t\t */\n\t\tInput.prototype.removeAllSuggestionRows = function() {\n\t\t\tvar res = this.removeAllAggregation(\"suggestionRows\");\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn res;\n\t\t};\n\n\t\t/**\n\t\t * Destroys all suggestion rows.\n\t\t *\n\t\t * @name sap.m.Input.destroySuggestionRows\n\t\t * @method\n\t\t * @public\n\t\t * @return {sap.m.Input} this Input instance for chaining.\n\t\t */\n\t\tInput.prototype.destroySuggestionRows = function() {\n\t\t\tthis.destroyAggregation(\"suggestionRows\");\n\t\t\tthis._bShouldRefreshListItems = true;\n\t\t\tthis._refreshItemsDelayed();\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Forwards aggregations with the name of items or columns to the internal table.\n\t\t *\n\t\t * @overwrite\n\t\t * @name sap.m.Input.bindAggregation\n\t\t * @method\n\t\t * @public\n\t\t * @param {string} sAggregationName the name for the binding\n\t\t * @param {object} oBindingInfo the configuration parameters for the binding\n\t\t * @returns {sap.m.Input} this pointer for chaining\n\t\t */\n\t\tInput.prototype.bindAggregation = function() {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t\tif (args[0] === \"suggestionRows\" || args[0] === \"suggestionColumns\" || args[0] === \"suggestionItems\") {\n\t\t\t\tcreateSuggestionPopupContent(this, args[0] === \"suggestionRows\" || args[0] === \"suggestionColumns\");\n\t\t\t\tthis._bBindingUpdated = true;\n\t\t\t}\n\n\t\t\t// propagate the bind aggregation function to list\n\t\t\tthis._callMethodInManagedObject.apply(this, [\"bindAggregation\"].concat(args));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Forwards aggregations with the name of items or columns to the internal table.\n\t\t *\n\t\t * @overwrite\n\t\t * @name sap.m.Input.unbindAggregation\n\t\t * @method\n\t\t * @public\n\t\t * @param {string} sAggregationName the name for the binding\n\t\t * @returns {sap.m.Input} this pointer for chaining\n\t\t */\n\t\tInput.prototype.unbindAggregation = function() {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t\t// propagate the unbind aggregation function to list\n\t\t\tthis._callMethodInManagedObject.apply(this, [\"unbindAggregation\"].concat(args));\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Initialize suggestion popup with lazy loading.\n\t\t *\n\t\t * @name sap.m.Input._lazyInitializeSuggestionPopup\n\t\t * @private\n\t\t * @method\n\t\t */\n\t\tInput.prototype._lazyInitializeSuggestionPopup = function() {\n\t\t\tif (!this._oSuggestionPopup) {\n\t\t\t\tcreateSuggestionPopup(this);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Closes suggestion popup.\n\t\t *\n\t\t * @name sap.m.Input._closeSuggestionPopup\n\t\t * @private\n\t\t * @method\n\t\t */\n\t\tInput.prototype._closeSuggestionPopup = function() {\n\n\t\t\tif (this._oSuggestionPopup) {\n\t\t\t\tthis._bShouldRefreshListItems = false;\n\t\t\t\tthis.cancelPendingSuggest();\n\t\t\t\tthis._oSuggestionPopup.close();\n\n\t\t\t\t// Ensure the valueStateMessage is opened after the suggestion popup is closed.\n\t\t\t\t// Only do this for desktop (not required for mobile) when the focus is on the input.\n\t\t\t\tif (!this._bUseDialog && this.$().hasClass(\"sapMInputFocused\")) {\n\t\t\t\t\tthis.openValueStateMessage();\n\t\t\t\t}\n\t\t\t\tthis.$(\"SuggDescr\").text(\"\"); // initialize suggestion ARIA text\n\t\t\t\tthis.$(\"inner\").removeAttr(\"aria-haspopup\");\n\t\t\t\tthis.$(\"inner\").removeAttr(\"aria-activedescendant\");\n\n\t\t\t\tthis._sPrevSuggValue = null;\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Helper function that creates suggestion popup.\n\t\t *\n\t\t * @name createSuggestionPopup\n\t\t * @function\n\t\t * @param {sap.m.Input} oInput Input instance where the popup will be created.\n\t\t */\n\t\tfunction createSuggestionPopup(oInput) {\n\t\t\tvar oMessageBundle = oInput._oRb;\n\n\t\t\tif (oInput._bUseDialog) {\n\t\t\t\toInput._oPopupInput = new Input(oInput.getId() + \"-popup-input\", {\n\t\t\t\t\twidth : \"100%\",\n\t\t\t\t\tvalueLiveUpdate: true,\n\t\t\t\t\tshowValueHelp: oInput.getShowValueHelp(),\n\t\t\t\t\tvalueHelpRequest: function(oEvent) {\n\t\t\t\t\t\t// it is the same behavior as by ShowMoreButton:\n\t\t\t\t\t\toInput.fireValueHelpRequest({fromSuggestions: true});\n\t\t\t\t\t\toInput._iPopupListSelectedIndex = -1;\n\t\t\t\t\t\toInput._closeSuggestionPopup();\n\t\t\t\t\t},\n\t\t\t\t\tliveChange : function(oEvent) {\n\t\t\t\t\t\tvar sValue = oEvent.getParameter(\"newValue\");\n\t\t\t\t\t\t// call _getInputValue to apply the maxLength to the typed value\n\t\t\t\t\t\toInput.setDOMValue(oInput\n\t\t\t\t\t\t\t\t._getInputValue(oInput._oPopupInput\n\t\t\t\t\t\t\t\t\t\t.getValue()));\n\n\t\t\t\t\t\toInput._triggerSuggest(sValue);\n\n\t\t\t\t\t\t// make sure the live change handler on the original input is also called\n\t\t\t\t\t\toInput.fireLiveChange({\n\t\t\t\t\t\t\tvalue: sValue,\n\n\t\t\t\t\t\t\t// backwards compatibility\n\t\t\t\t\t\t\tnewValue: sValue\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}).addStyleClass(\"sapMInputSuggInDialog\");\n\t\t\t}\n\n\t\t\toInput._oSuggestionPopup = !oInput._bUseDialog ?\n\t\t\t\t(new Popover(oInput.getId() + \"-popup\", {\n\t\t\t\t\tshowArrow: false,\n\t\t\t\t\tshowHeader: false,\n\t\t\t\t\tplacement: PlacementType.Vertical,\n\t\t\t\t\tinitialFocus: oInput,\n\t\t\t\t\thorizontalScrolling: true\n\t\t\t\t}).attachAfterClose(function() {\n\t\t\t\t\tif (oInput._iPopupListSelectedIndex  >= 0) {\n\t\t\t\t\t\toInput._fireSuggestionItemSelectedEvent();\n\t\t\t\t\t}\n\t\t\t\t\t// only destroy items in simple suggestion mode\n\t\t\t\t\tif (oInput._oList instanceof Table) {\n\t\t\t\t\t\toInput._oList.removeSelections(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\toInput._oList.destroyItems();\n\t\t\t\t\t}\n\t\t\t\t\toInput._shouldResizePopup = false;\n\t\t\t\t}).attachBeforeOpen(function() {\n\t\t\t\t\toInput._sBeforeSuggest = oInput.getValue();\n\t\t\t\t}))\n\t\t\t:\n\t\t\t\t(new Dialog(oInput.getId() + \"-popup\", {\n\t\t\t\t\tbeginButton : new sap.m.Button(oInput.getId()\n\t\t\t\t\t\t\t+ \"-popup-closeButton\", {\n\t\t\t\t\t\ttext : oMessageBundle.getText(\"MSGBOX_CLOSE\"),\n\t\t\t\t\t\tpress : function() {\n\t\t\t\t\t\t\toInput._closeSuggestionPopup();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tstretch : oInput._bFullScreen,\n\t\t\t\t\tcontentHeight : oInput._bFullScreen ? undefined : \"20rem\",\n\t\t\t\t\tcustomHeader : new Bar(oInput.getId()\n\t\t\t\t\t\t\t+ \"-popup-header\", {\n\t\t\t\t\t\tcontentMiddle : oInput._oPopupInput.addEventDelegate({onsapenter: function(){\n\t\t\t\t\t\t\tif (!(sap.m.MultiInput && oInput instanceof sap.m.MultiInput)) {\n\t\t\t\t\t\t\t\toInput._closeSuggestionPopup();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}, this)\n\t\t\t\t\t}),\n\t\t\t\t\thorizontalScrolling : false,\n\t\t\t\t\tinitialFocus : oInput._oPopupInput\n\t\t\t\t}).attachBeforeOpen(function() {\n\t\t\t\t\t// set the same placeholder and maxLength as the original input\n\t\t\t\t\toInput._oPopupInput.setPlaceholder(oInput.getPlaceholder());\n\t\t\t\t\toInput._oPopupInput.setMaxLength(oInput.getMaxLength());\n\t\t\t\t}).attachBeforeClose(function(){\n\t\t\t\t\t// call _getInputValue to apply the maxLength to the typed value\n\t\t\t\t\toInput.setDOMValue(oInput\n\t\t\t\t\t\t\t._getInputValue(oInput._oPopupInput\n\t\t\t\t\t\t\t\t\t.getValue()));\n\t\t\t\t\toInput.onChange();\n\n\t\t\t\t\tif (oInput instanceof sap.m.MultiInput && oInput._bUseDialog) {\n\t\t\t\t\t\toInput._onDialogClose();\n\t\t\t\t\t}\n\n\t\t\t\t}).attachAfterClose(function() {\n\n\t\t\t\t\tif (oInput instanceof sap.m.MultiInput && oInput._isMultiLineMode) {\n\n\t\t\t\t\t\toInput._showIndicator();\n\t\t\t\t\t}\n\n\t\t\t\t\t// only destroy items in simple suggestion mode\n\t\t\t\t\tif (oInput._oList) {\n\t\t\t\t\t\tif (Table && !(oInput._oList instanceof Table)) {\n\t\t\t\t\t\t\toInput._oList.destroyItems();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toInput._oList.removeSelections(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t}).attachAfterOpen(function() {\n\t\t\t\t\tvar sValue = oInput.getValue();\n\n\t\t\t\t\toInput._oPopupInput.setValue(sValue);\n\t\t\t\t\toInput._triggerSuggest(sValue);\n\t\t\t\t\trefreshListItems(oInput);\n\t\t\t\t}));\n\n\t\t\toInput._oSuggestionPopup.addStyleClass(\"sapMInputSuggestionPopup\");\n\t\t\toInput._oSuggestionPopup.addAriaLabelledBy(Input._sAriaPopupLabelId);\n\n\t\t\t// add popup as dependent to also propagate the model and bindings to the content of the popover\n\t\t\toInput.addDependent(oInput._oSuggestionPopup);\n\t\t\tif (!oInput._bUseDialog) {\n\t\t\t\toverwritePopover(oInput._oSuggestionPopup, oInput);\n\t\t\t}\n\n\t\t\tif (oInput._oList) {\n\t\t\t\toInput._oSuggestionPopup.addContent(oInput._oList);\n\t\t\t}\n\n\t\t\tif (oInput.getShowTableSuggestionValueHelp()) {\n\t\t\t\toInput._addShowMoreButton();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Helper function that creates content for the suggestion popup.\n\t\t *\n\t\t * @name createSuggestionPopupContent\n\t\t * @function\n\t\t * @param {sap.m.Input} oInput Input instance where the popup will be created.\n\t\t * @param {boolean | null } bTabular Content for the popup.\n\t\t */\n\t\tfunction createSuggestionPopupContent(oInput, bTabular) {\n\t\t\t// only initialize the content once\n\t\t\tif (oInput._oList) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!oInput._hasTabularSuggestions() && !bTabular) {\n\t\t\t\toInput._oList = new List(oInput.getId() + \"-popup-list\", {\n\t\t\t\t\tshowNoData : false,\n\t\t\t\t\tmode : ListMode.SingleSelectMaster,\n\t\t\t\t\trememberSelections : false,\n\t\t\t\t\titemPress : function(oEvent) {\n\t\t\t\t\t\tvar oListItem = oEvent.getParameter(\"listItem\");\n\t\t\t\t\t\toInput.setSelectionItem(oListItem._oItem, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\toInput._oList.addEventDelegate({\n\t\t\t\t\tonAfterRendering: oInput._highlightListText.bind(oInput)\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\t// tabular suggestions\n\t\t\t\t// if no custom filter is set we replace the default filter function here\n\t\t\t\tif (oInput._fnFilter === Input._DEFAULTFILTER) {\n\t\t\t\t\toInput._fnFilter = Input._DEFAULTFILTER_TABULAR;\n\t\t\t\t}\n\n\t\t\t\t// if not custom row result function is set we set the default one\n\t\t\t\tif (!oInput._fnRowResultFilter) {\n\t\t\t\t\toInput._fnRowResultFilter = Input._DEFAULTRESULT_TABULAR;\n\t\t\t\t}\n\n\t\t\t\toInput._oList = oInput._getSuggestionsTable();\n\n\t\t\t\tif (oInput.getShowTableSuggestionValueHelp()) {\n\t\t\t\t\toInput._addShowMoreButton(bTabular);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oInput._oSuggestionPopup) {\n\t\t\t\tif (oInput._bUseDialog) {\n\t\t\t\t\t// oInput._oList needs to be manually rendered otherwise it triggers a rerendering of the whole\n\t\t\t\t\t// dialog and may close the opened on screen keyboard\n\t\t\t\t\toInput._oSuggestionPopup.addAggregation(\"content\", oInput._oList, true);\n\t\t\t\t\tvar oRenderTarget = oInput._oSuggestionPopup.$(\"scrollCont\")[0];\n\t\t\t\t\tif (oRenderTarget) {\n\t\t\t\t\t\tvar rm = sap.ui.getCore().createRenderManager();\n\t\t\t\t\t\trm.renderControl(oInput._oList);\n\t\t\t\t\t\trm.flush(oRenderTarget);\n\t\t\t\t\t\trm.destroy();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toInput._oSuggestionPopup.addContent(oInput._oList);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Helper function that destroys suggestion popup.\n\t\t *\n\t\t * @name destroySuggestionPopup\n\t\t * @function\n\t\t * @param {sap.m.Input} oInput Input instance.\n\t\t */\n\t\tfunction destroySuggestionPopup(oInput) {\n\n\t\t\tif (oInput._oSuggestionPopup) {\n\n\t\t\t\t// if the table is not removed before destroying the popup the table is also destroyed (table needs to stay because we forward the column and row aggregations to the table directly, they would be destroyed as well)\n\t\t\t\tif (oInput._oList instanceof Table) {\n\t\t\t\t\toInput._oSuggestionPopup.removeAllContent();\n\t\t\t\t\t// also remove the button/toolbar aggregation\n\t\t\t\t\toInput._removeShowMoreButton();\n\t\t\t\t}\n\n\t\t\t\toInput._oSuggestionPopup.destroy();\n\t\t\t\toInput._oSuggestionPopup = null;\n\t\t\t}\n\t\t\t// CSN# 1404088/2014: list is not destroyed when it has not been attached to the popup yet\n\t\t\tif (oInput._oList instanceof List) {\n\t\t\t\toInput._oList.destroy();\n\t\t\t\toInput._oList = null;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Helper function that overwrites popover in the Input.\n\t\t *\n\t\t * @name overwritePopover\n\t\t * @function\n\t\t * @param {sap.m.Popover} oPopover Popover instance.\n\t\t * @param {sap.m.Input} oInput Input instance.\n\t\t */\n\t\tfunction overwritePopover(oPopover, oInput) {\n\t\t\toPopover.open = function() {\n\t\t\t\tthis.openBy(oInput, false, true);\n\t\t\t};\n\n\t\t\t// remove animation from popover\n\t\t\toPopover.oPopup.setAnimations(function($Ref, iRealDuration, fnOpened) {\n\t\t\t\tfnOpened();\n\t\t\t}, function($Ref, iRealDuration, fnClosed) {\n\t\t\t\tfnClosed();\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Helper function that refreshes list all items.\n\t\t *\n\t\t * @name refreshListItems\n\t\t * @function\n\t\t * @param {sap.m.Input} oInput Input instance.\n\t\t */\n\t\tfunction refreshListItems(oInput) {\n\t\t\tvar bShowSuggestion = oInput.getShowSuggestion();\n\t\t\tvar oRb = oInput._oRb;\n\t\t\toInput._iPopupListSelectedIndex = -1;\n\n\t\t\tif (!bShowSuggestion ||\n\t\t\t\t!oInput._bShouldRefreshListItems ||\n\t\t\t\t!oInput.getDomRef() ||\n\t\t\t\t(!oInput._bUseDialog && !oInput.$().hasClass(\"sapMInputFocused\"))) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar oItem,\n\t\t\t\taItems = oInput.getSuggestionItems(),\n\t\t\t\taTabularRows = oInput.getSuggestionRows(),\n\t\t\t\tsTypedChars = oInput.getDOMValue() || \"\",\n\t\t\t\toList = oInput._oList,\n\t\t\t\tbFilter = oInput.getFilterSuggests(),\n\t\t\t\taHitItems = [],\n\t\t\t\tiItemsLength = 0,\n\t\t\t\toPopup = oInput._oSuggestionPopup,\n\t\t\t\toListItemDelegate = {\n\t\t\t\t\tontouchstart : function(oEvent) {\n\t\t\t\t\t\t(oEvent.originalEvent || oEvent)._sapui_cancelAutoClose = true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\toListItem,\n\t\t\t\ti;\n\n\t\t\t// only destroy items in simple suggestion mode\n\t\t\tif (oInput._oList) {\n\t\t\t\tif (oInput._oList instanceof Table) {\n\t\t\t\t\toList.removeSelections(true);\n\t\t\t\t} else {\n\t\t\t\t\t//TODO: avoid flickering when !bFilter\n\t\t\t\t\toList.destroyItems();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// hide suggestions list/table if the number of characters is smaller than limit\n\t\t\tif (sTypedChars.length < oInput.getStartSuggestion()) {\n\t\t\t\t// when the input has no value, close the Popup when not runs on the phone because the opened dialog on phone shouldn't be closed.\n\t\t\t\tif (!oInput._bUseDialog) {\n\t\t\t\t\toInput._iPopupListSelectedIndex = -1;\n\t\t\t\t\tthis.cancelPendingSuggest();\n\t\t\t\t\toPopup.close();\n\t\t\t\t} else {\n\t\t\t\t\t// hide table on phone when value is empty\n\t\t\t\t\tif (oInput._hasTabularSuggestions() && oInput._oList) {\n\t\t\t\t\t\toInput._oList.addStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toInput.$(\"SuggDescr\").text(\"\"); // clear suggestion text\n\t\t\t\toInput.$(\"inner\").removeAttr(\"aria-haspopup\");\n\t\t\t\toInput.$(\"inner\").removeAttr(\"aria-activedescendant\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (oInput._hasTabularSuggestions()) {\n\t\t\t\t// show list on phone (is hidden when search string is empty)\n\t\t\t\tif (oInput._bUseDialog && oInput._oList) {\n\t\t\t\t\toInput._oList.removeStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t\t}\n\n\t\t\t\t// filter tabular items\n\t\t\t\tfor (i = 0; i < aTabularRows.length; i++) {\n\t\t\t\t\tif (!bFilter || oInput._fnFilter(sTypedChars, aTabularRows[i])) {\n\t\t\t\t\t\taTabularRows[i].setVisible(true);\n\t\t\t\t\t\taHitItems.push(aTabularRows[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taTabularRows[i].setVisible(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toInput._oSuggestionTable.invalidate();\n\t\t\t} else {\n\t\t\t\t// filter standard items\n\t\t\t\tvar bListItem = (aItems[0] instanceof ListItem ? true : false);\n\t\t\t\tfor (i = 0; i < aItems.length; i++) {\n\t\t\t\t\toItem = aItems[i];\n\t\t\t\t\tif (!bFilter || oInput._fnFilter(sTypedChars, oItem)) {\n\t\t\t\t\t\tif (bListItem) {\n\t\t\t\t\t\t\toListItem = new DisplayListItem(oItem.getId() + \"-dli\");\n\t\t\t\t\t\t\toListItem.setLabel(oItem.getText());\n\t\t\t\t\t\t\toListItem.setValue(oItem.getAdditionalText());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toListItem = new StandardListItem(oItem.getId() + \"-sli\");\n\t\t\t\t\t\t\toListItem.setTitle(oItem.getText());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toListItem.setType(oItem.getEnabled() ? ListType.Active : ListType.Inactive);\n\t\t\t\t\t\toListItem._oItem = oItem;\n\t\t\t\t\t\toListItem.addEventDelegate(oListItemDelegate);\n\t\t\t\t\t\taHitItems.push(oListItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tiItemsLength = aHitItems.length;\n\t\t\tvar sAriaText = \"\";\n\t\t\tif (iItemsLength > 0) {\n\t\t\t\t// add items to list\n\t\t\t\tif (iItemsLength == 1) {\n\t\t\t\t\tsAriaText = oRb.getText(\"INPUT_SUGGESTIONS_ONE_HIT\");\n\t\t\t\t} else {\n\t\t\t\t\tsAriaText = oRb.getText(\"INPUT_SUGGESTIONS_MORE_HITS\", iItemsLength);\n\t\t\t\t}\n\t\t\t\toInput.$(\"inner\").attr(\"aria-haspopup\", \"true\");\n\n\t\t\t\tif (!oInput._hasTabularSuggestions()) {\n\t\t\t\t\tfor (i = 0; i < iItemsLength; i++) {\n\t\t\t\t\t\toList.addItem(aHitItems[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!oInput._bUseDialog) {\n\t\t\t\t\tif (oInput._sCloseTimer) {\n\t\t\t\t\t\tclearTimeout(oInput._sCloseTimer);\n\t\t\t\t\t\toInput._sCloseTimer = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!oPopup.isOpen() && !oInput._sOpenTimer && (this.getValue().length >= this.getStartSuggestion())) {\n\t\t\t\t\t\toInput._sOpenTimer = setTimeout(function() {\n\t\t\t\t\t\t\toInput._resizePopup(true);\n\t\t\t\t\t\t\toInput._sOpenTimer = null;\n\t\t\t\t\t\t\toPopup.open();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsAriaText = oRb.getText(\"INPUT_SUGGESTIONS_NO_HIT\");\n\t\t\t\toInput.$(\"inner\").removeAttr(\"aria-haspopup\");\n\t\t\t\toInput.$(\"inner\").removeAttr(\"aria-activedescendant\");\n\n\t\t\t\tif (!oInput._bUseDialog) {\n\t\t\t\t\tif (oPopup.isOpen()) {\n\t\t\t\t\t\toInput._sCloseTimer = setTimeout(function() {\n\t\t\t\t\t\t\toInput._iPopupListSelectedIndex = -1;\n\t\t\t\t\t\t\toInput.cancelPendingSuggest();\n\t\t\t\t\t\t\toPopup.close();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// hide table on phone when there are no items to display\n\t\t\t\t\tif (oInput._hasTabularSuggestions() && oInput._oList) {\n\t\t\t\t\t\toInput._oList.addStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update Accessibility text for suggestion\n\t\t\toInput.$(\"SuggDescr\").text(sAriaText);\n\t\t}\n\t})();\n\n\t/**\n\t * Creates highlighted text.\n\t *\n\t * @name sap.m.Input._createHighlightedText\n\t * @private\n\t * @method\n\t * @param {sap.m.Label} label Label within the input.\n\t * @returns {string} newText Created text.\n\t */\n\tInput.prototype._createHighlightedText = function(label) {\n\t\tvar text = label.innerText,\n\t\t\tvalue = this.getValue().toLowerCase(),\n\t\t\tcount = value.length,\n\t\t\tlowerText = text.toLowerCase(),\n\t\t\tsubString,\n\t\t\tnewText = '';\n\n\t\tif (!Input._wordStartsWithValue(text, value)) {\n\t\t\treturn text;\n\t\t}\n\n\t\tvar index = lowerText.indexOf(value);\n\n\t\t// search for the first word which starts with these characters\n\t\tif (index > 0) {\n\t\t\tindex = lowerText.indexOf(' ' + value) + 1;\n\t\t}\n\n\t\tif (index > -1) {\n\t\t\tnewText += text.substring(0, index);\n\t\t\tsubString = text.substring(index, index + count);\n\t\t\tnewText += '<span class=\"sapMInputHighlight\">' + subString + '</span>';\n\t\t\tnewText += text.substring(index + count);\n\t\t} else {\n\t\t\tnewText = text;\n\t\t}\n\n\t\treturn newText;\n\t};\n\n\t/**\n\t * Highlights matched text in the suggestion list.\n\t *\n\t * @name sap.m.Input._highlightListText\n\t * @private\n\t * @method\n\t */\n\tInput.prototype._highlightListText = function() {\n\n\t\tif (!this.getEnableSuggestionsHighlighting()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar i,\n\t\t\tlabel,\n\t\t\tlabels = this._oList.$().find('.sapMDLILabel, .sapMSLITitleOnly, .sapMDLIValue');\n\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tlabel = labels[i];\n\t\t\tlabel.innerHTML = this._createHighlightedText(label);\n\t\t}\n\t};\n\n\t/**\n\t * Highlights matched text in the suggestion table.\n\t *\n\t * @name sap.m.Input._highlightTableText\n\t * @private\n\t * @method\n\t */\n\tInput.prototype._highlightTableText = function() {\n\n\t\tif (!this.getEnableSuggestionsHighlighting()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar i,\n\t\t\tlabel,\n\t\t\tlabels = this._oSuggestionTable.$().find('tbody .sapMLabel');\n\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tlabel = labels[i];\n\t\t\tlabel.innerHTML = this._createHighlightedText(label);\n\t\t}\n\t};\n\n\t/**\n\t * Event handler for the onFocusIn event.\n\t *\n\t * @name sap.m.Input.onfocusin\n\t * @public\n\t * @method\n\t * @param {jQuery.Event} oEvent On focus in event.\n\t */\n\tInput.prototype.onfocusin = function(oEvent) {\n\t\tInputBase.prototype.onfocusin.apply(this, arguments);\n\t\tthis.$().addClass(\"sapMInputFocused\");\n\n\t\t// Close the ValueStateMessage when the suggestion popup is being opened.\n\t\t// Only do this in case a popup is used.\n\t\tif (!this._bUseDialog && this._oSuggestionPopup\n\t\t\t&& this._oSuggestionPopup.isOpen()) {\n\t\t\tthis.closeValueStateMessage();\n\t\t}\n\n\t\t// fires suggest event when startSuggestion is set to 0 and input has no text\n\t\tif (!this._bPopupHasFocus && !this.getStartSuggestion() && !this.getValue()) {\n\t\t\tthis._triggerSuggest(this.getValue());\n\t\t}\n\t\tthis._bPopupHasFocus = undefined;\n\n\t\tthis._sPrevSuggValue = null;\n\t};\n\n\t/**\n\t * Register F4 to trigger the valueHelpRequest event\n\t *\n\t * @name sap.m.Input.onsapshow\n\t * @private\n\t * @method\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsapshow = function (oEvent) {\n\t\tif (!this.getEnabled() || !this.getEditable() || !this.getShowValueHelp()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireValueHelpRequest({fromSuggestions: false});\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\t};\n\n\tInput.prototype.onsaphide = Input.prototype.onsapshow;\n\n\t/**\n\t * Event handler for input select.\n\t *\n\t * @name sap.m.Input.onsapselect\n\t * @private\n\t * @method\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onsapselect = function(oEvent) {\n\t\tthis._fireValueHelpRequestForValueHelpOnly();\n\t};\n\n\t/**\n\t * Event handler for the onFocusOut event.\n\t *\n\t * @name sap.m.Input.onfocusout\n\t * @private\n\t * @method\n\t * @param {jQuery.Event} oEvent Keyboard event.\n\t */\n\tInput.prototype.onfocusout = function(oEvent) {\n\t\tInputBase.prototype.onfocusout.apply(this, arguments);\n\t\tthis.$().removeClass(\"sapMInputFocused\");\n\t\tthis.closeValueStateMessage(this);\n\t};\n\n\t/**\n\t * Check for tabular suggestions in the input.\n\t *\n\t * @name sap.m.Input._hasTabularSuggestions\n\t * @private\n\t * @method\n\t * @returns {boolean} Determines if the Input has tabular suggestions.\n\t */\n\tInput.prototype._hasTabularSuggestions = function() {\n\t\treturn !!(this.getAggregation(\"suggestionColumns\") && this.getAggregation(\"suggestionColumns\").length);\n\t};\n\n\t/**\n\t * Gets suggestion table with lazy loading.\n\t *\n\t * @name sap.m.Input._getSuggestionsTable\n\t * @private\n\t * @method\n\t * @returns {sap.m.Table} Suggestion table.\n\t */\n\tInput.prototype._getSuggestionsTable = function() {\n\n\t\tif (this._bIsBeingDestroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this;\n\n\t\tif (!this._oSuggestionTable) {\n\t\t\tthis._oSuggestionTable = new Table(this.getId() + \"-popup-table\", {\n\t\t\t\tmode: ListMode.SingleSelectMaster,\n\t\t\t\tshowNoData: false,\n\t\t\t\tshowSeparators: \"All\",\n\t\t\t\twidth: \"100%\",\n\t\t\t\tenableBusyIndicator: false,\n\t\t\t\trememberSelections : false,\n\t\t\t\tselectionChange: function (oEvent) {\n\t\t\t\t\tvar oSelectedListItem = oEvent.getParameter(\"listItem\");\n\t\t\t\t\tthat.setSelectionRow(oSelectedListItem, true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._oSuggestionTable.addEventDelegate({\n\t\t\t\tonAfterRendering: this._highlightTableText.bind(this)\n\t\t\t});\n\n\t\t\t// initially hide the table on phone\n\t\t\tif (this._bUseDialog) {\n\t\t\t\tthis._oSuggestionTable.addStyleClass(\"sapMInputSuggestionTableHidden\");\n\t\t\t}\n\n\t\t\tthis._oSuggestionTable.updateItems = function() {\n\t\t\t\tTable.prototype.updateItems.apply(this, arguments);\n\t\t\t\tthat._refreshItemsDelayed();\n\t\t\t\treturn this;\n\t\t\t};\n\t\t}\n\n\t\treturn this._oSuggestionTable;\n\t};\n\n\t/**\n\t * Fires suggestion selected event.\n\t *\n\t * @name sap.m.Input._fireSuggestionItemSelectedEvent\n\t * @private\n\t * @method\n\t */\n\tInput.prototype._fireSuggestionItemSelectedEvent = function () {\n\t\tif (this._iPopupListSelectedIndex >= 0) {\n\t\t\tvar oSelectedListItem = this._oList.getItems()[this._iPopupListSelectedIndex];\n\t\t\tif (oSelectedListItem) {\n\t\t\t\tif (ColumnListItem && oSelectedListItem instanceof ColumnListItem) {\n\t\t\t\t\tthis.fireSuggestionItemSelected({selectedRow : oSelectedListItem});\n\t\t\t\t} else {\n\t\t\t\t\tthis.fireSuggestionItemSelected({selectedItem : oSelectedListItem._oItem});\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._iPopupListSelectedIndex = -1;\n\t\t}\n\t};\n\n\t\t/* =========================================================== */\n\t/*           begin: forward aggregation methods to table       */\n\t/* =========================================================== */\n\n\t/*\n\t * Forwards a function call to a managed object based on the aggregation name.\n\t * If the name is items, it will be forwarded to the table, otherwise called\n\t * locally\n\t * @name sap.m.Input._callMethodInManagedObject\n\t * @private\n\t * @param {string} sFunctionName the name of the function to be called.\n\t * @param {string} sAggregationName the name of the aggregation asociated.\n\t * @returns {any} the return type of the called function.\n\t */\n\tInput.prototype._callMethodInManagedObject = function(sFunctionName, sAggregationName) {\n\t\tvar aArgs = Array.prototype.slice.call(arguments),\n\t\t\toSuggestionsTable;\n\n\t\tif (sAggregationName === \"suggestionColumns\") {\n\t\t\t// apply to the internal table (columns)\n\t\t\toSuggestionsTable = this._getSuggestionsTable();\n\t\t\tif (!oSuggestionsTable) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn oSuggestionsTable[sFunctionName].apply(oSuggestionsTable, [\"columns\"].concat(aArgs.slice(2)));\n\t\t} else if (sAggregationName === \"suggestionRows\") {\n\t\t\t// apply to the internal table (rows = table items)\n\t\t\toSuggestionsTable = this._getSuggestionsTable();\n\t\t\tif (!oSuggestionsTable) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn oSuggestionsTable[sFunctionName].apply(oSuggestionsTable, [\"items\"].concat(aArgs.slice(2)));\n\t\t} else {\n\t\t\t// apply to this control\n\t\t\treturn Control.prototype[sFunctionName].apply(this, aArgs .slice(1));\n\t\t}\n\t};\n\n\t/**\n\t * Validates aggregation.\n\t *\n\t * @name sap.m.Input.validateAggregation\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Name of the aggregation to be validated.\n\t * @param {object} oObject Object to be validated.\n\t * @param {boolean} bMultiple Multiple objects to be validated.\n\t * @returns {any} the return type of the called function.\n\t */\n\tInput.prototype.validateAggregation = function(sAggregationName, oObject, bMultiple) {\n\t\treturn this._callMethodInManagedObject(\"validateAggregation\", sAggregationName, oObject, bMultiple);\n\t};\n\n\t/**\n\t * Sets aggregation.\n\t *\n\t * @name sap.m.Input.setAggregation\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @param {string} oObject Object that will set the aggregation to.\n\t * @param {string} bSuppressInvalidate Check for suppressing invalidate.\n\t * @returns {sap.m.Input} this Input instance for chaining.\n\t */\n\tInput.prototype.setAggregation = function(sAggregationName, oObject, bSuppressInvalidate) {\n\t\tthis._callMethodInManagedObject(\"setAggregation\", sAggregationName,\toObject, bSuppressInvalidate);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Gets aggregation.\n\t *\n\t * @name sap.m.Input.getAggregation\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @param {object} oDefaultForCreation Object that we will get the aggregation from.\n\t * @returns {any} The return type of the called function.\n\t */\n\tInput.prototype.getAggregation = function(sAggregationName, oDefaultForCreation) {\n\t\treturn this._callMethodInManagedObject(\"getAggregation\", sAggregationName, oDefaultForCreation);\n\t};\n\n\t/**\n\t * Index of given aggregation.\n\t *\n\t * @name sap.m.Input.indexOfAggregation\n\t * @param {string} sAggregationName Aggregation name.\n\t * @param {object} oObject Object\n\t * @returns {any} The return type of the called function.\n\t */\n\tInput.prototype.indexOfAggregation = function(sAggregationName, oObject) {\n\t\treturn this._callMethodInManagedObject(\"indexOfAggregation\", sAggregationName, oObject);\n\t};\n\n\t/**\n\t * Inserts aggregation.\n\t *\n\t * @name sap.m.Input.insertAggregation\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @param {object} oObject Object that will insert aggregation.\n\t * @param {int} iIndex Index of the aggregation.\n\t * @param {boolean} bSuppressInvalidate Suppress invalidate.\n\t * @returns {sap.m.Input} this Input instance for chaining.\n\t */\n\tInput.prototype.insertAggregation = function(sAggregationName, oObject, iIndex, bSuppressInvalidate) {\n\t\tthis._callMethodInManagedObject(\"insertAggregation\", sAggregationName, oObject, iIndex, bSuppressInvalidate);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Adds aggregation.\n\t *\n\t * @name sap.m.Input.addAggregation\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @param {object} oObject Object which will contain the new aggregation.\n\t * @param {boolean} bSuppressInvalidate Suppress invalidate.\n\t * @returns {sap.m.Input} this Input instance for chaining.\n\t */\n\tInput.prototype.addAggregation = function(sAggregationName, oObject, bSuppressInvalidate) {\n\t\tthis._callMethodInManagedObject(\"addAggregation\", sAggregationName,oObject, bSuppressInvalidate);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Removes aggregation.\n\t *\n\t * @name sap.m.Input.removeAggregation\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @param {object} oObject Object from which we will remove the aggregation.\n\t * @param {boolean} bSuppressInvalidate Suppress invalidate.\n\t * @returns {any} The return type of the called function.\n\t */\n\tInput.prototype.removeAggregation = function(sAggregationName, oObject, bSuppressInvalidate) {\n\t\treturn this._callMethodInManagedObject(\"removeAggregation\", sAggregationName, oObject, bSuppressInvalidate);\n\t};\n\n\t/**\n\t * Removes all aggregations.\n\t *\n\t * @name sap.m.Input.removeAllAggregation\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @param {boolean} bSuppressInvalidate Suppress invalidate.\n\t * @returns {any} The return type of the called function.\n\t */\n\tInput.prototype.removeAllAggregation = function(sAggregationName, bSuppressInvalidate) {\n\t\treturn this._callMethodInManagedObject(\"removeAllAggregation\", sAggregationName, bSuppressInvalidate);\n\t};\n\n\t/**\n\t * Destroys aggregation.\n\t *\n\t * @name sap.m.Input.destroyAggregation\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @param {boolean} bSuppressInvalidate Suppress invalidate.\n\t * @returns {sap.m.Input} this Input instance for chaining.\n\t */\n\tInput.prototype.destroyAggregation = function(sAggregationName, bSuppressInvalidate) {\n\t\tthis._callMethodInManagedObject(\"destroyAggregation\", sAggregationName, bSuppressInvalidate);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Gets binding.\n\t *\n\t * @name sap.m.Input.getBinding\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @returns {any} The binding.\n\t */\n\tInput.prototype.getBinding = function(sAggregationName) {\n\t\treturn this._callMethodInManagedObject(\"getBinding\", sAggregationName);\n\t};\n\n\t/**\n\t * Gets binding information.\n\t *\n\t * @name sap.m.Input.getBindingInfo\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @returns {any} The binding information.\n\t */\n\tInput.prototype.getBindingInfo = function(sAggregationName) {\n\t\treturn this._callMethodInManagedObject(\"getBindingInfo\", sAggregationName);\n\t};\n\n\t/**\n\t * Gets binding path.\n\t *\n\t * @name sap.m.Input.getBindingPath\n\t * @public\n\t * @method\n\t * @param {string} sAggregationName Aggregation name.\n\t * @returns {any} Binding path.\n\t */\n\tInput.prototype.getBindingPath = function(sAggregationName) {\n\t\treturn this._callMethodInManagedObject(\"getBindingPath\", sAggregationName);\n\t};\n\n\t/**\n\t * Clones input.\n\t *\n\t * @name sap.m.Input.clone\n\t * @public\n\t * @method\n\t * @returns {sap.m.Input} Cloned input.\n\t */\n\tInput.prototype.clone = function() {\n\t\tvar oInputClone = Control.prototype.clone.apply(this, arguments),\n\t\t\tbindingInfo;\n\n\t\t// add suggestion columns\n\t\tbindingInfo = this.getBindingInfo(\"suggestionColumns\");\n\t\tif (bindingInfo) {\n\t\t\toInputClone.bindAggregation(\"suggestionColumns\", jQuery.extend({}, bindingInfo));\n\t\t} else {\n\t\t\tthis.getSuggestionColumns().forEach(function(oColumn){\n\t\t\t\toInputClone.addSuggestionColumn(oColumn.clone(), true);\n\t\t\t});\n\t\t}\n\n\t\t// add suggestion rows\n\t\tbindingInfo = this.getBindingInfo(\"suggestionRows\");\n\t\tif (bindingInfo) {\n\t\t\toInputClone.bindAggregation(\"suggestionRows\", jQuery.extend({}, bindingInfo));\n\t\t} else {\n\t\t\tthis.getSuggestionRows().forEach(function(oRow){\n\t\t\t\toInputClone.addSuggestionRow(oRow.clone(), true);\n\t\t\t});\n\t\t}\n\n\t\treturn oInputClone;\n\t};\n\n\t/* =========================================================== */\n\t/*           end: forward aggregation methods to table         */\n\t/* =========================================================== */\n\n\t/**\n\t * Setter for property <code>value</code>.\n\t *\n\t * Default value is empty/<code>undefined</code>.\n\t *\n\t * @param {string} sValue New value for property <code>value</code>.\n\t * @return {sap.m.Input} <code>this</code> to allow method chaining.\n\t * @public\n\t */\n\tInput.prototype.setValue = function(sValue) {\n\t\tthis._iSetCount++;\n\t\tInputBase.prototype.setValue.call(this, sValue);\n\t\tthis._onValueUpdated(sValue);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the inner input DOM value.\n\t *\n\t * @protected\n\t * @param {string} value Dom value which will be set.\n\t */\n\tInput.prototype.setDOMValue = function(value) {\n\t\tthis._$input.val(value);\n\t};\n\n\t/**\n\t * Gets the inner input DOM value.\n\t *\n\t * @protected\n\t * @returns {any} The value of the input.\n\t */\n\tInput.prototype.getDOMValue = function() {\n\t\treturn this._$input.val();\n\t};\n\n\t/**\n\t * Gets accessibility information for the input.\n\t *\n\t * @see sap.ui.core.Control#getAccessibilityInfo\n\t * @protected\n\t * @returns {object} Accesibility information.\n\t */\n\tInput.prototype.getAccessibilityInfo = function() {\n\t\tvar oInfo = InputBase.prototype.getAccessibilityInfo.apply(this, arguments);\n\t\toInfo.description = ((oInfo.description || \"\") + \" \" + this.getDescription()).trim();\n\t\treturn oInfo;\n\t};\n\n\t/**\n\t * Getter for property <code>valueStateText</code>.\n\t * The text which is shown in the value state message popup. If not specfied a default text is shown. This property is already available for sap.m.Input since 1.16.0.\n\t *\n\t * Default value is empty/<code>undefined</code>\n\t *\n\t * @return {string} the value of property <code>valueStateText</code>\n\t * @public\n\t * @since 1.16\n\t * @name sap.m.Input#getValueStateText\n\t * @function\n\t */\n\n\t/**\n\t * Setter for property <code>valueStateText</code>.\n\t *\n\t * Default value is empty/<code>undefined</code>\n\t *\n\t * @param {string} sValueStateText  new value for property <code>valueStateText</code>\n\t * @return {sap.m.InputBase} <code>this</code> to allow method chaining\n\t * @public\n\t * @since 1.16\n\t * @name sap.m.Input#setValueStateText\n\t * @function\n\t */\n\n\t/**\n\t* Getter for property <code>showValueStateMessage</code>.\n\t* Whether the value state message should be shown. This property is already available for sap.m.Input since 1.16.0.\n\t*\n\t* Default value is <code>true</code>\n\t*\n\t* @return {boolean} the value of property <code>showValueStateMessage</code>\n\t* @public\n\t* @since 1.16\n\t* @name sap.m.Input#getShowValueStateMessage\n\t* @function\n\t*/\n\n\t/**\n\t * Setter for property <code>showValueStateMessage</code>.\n\t *\n\t * Default value is <code>true</code>\n\t *\n\t * @param {boolean} bShowValueStateMessage  new value for property <code>showValueStateMessage</code>\n\t * @return {sap.m.InputBase} <code>this</code> to allow method chaining\n\t * @public\n\t * @since 1.16\n\t * @name sap.m.Input#setShowValueStateMessage\n\t * @function\n\t */\n\n\n\n\treturn Input;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.InputRenderer\", require(\"sap/m/InputRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/Input.js","module.exports = {\"sap.app\":{\"id\":\"sap.ui.demo.todo\",\"type\":\"application\"},\"sap.ui5\":{\"dependencies\":{\"libs\":{\"sap.ui.core\":{},\"sap.m\":{}}},\"rootView\":{\"viewName\":\"sap.ui.demo.todo.view.App\",\"type\":\"XML\",\"id\":\"app\"},\"models\":{\"i18n\":{\"type\":\"sap.ui.model.resource.ResourceModel\",\"settings\":{\"bundleName\":\"sap.ui.demo.todo.i18n.i18n\"}},\"\":{\"type\":\"sap.ui.model.json.JSONModel\",\"uri\":\"model/todoitems.json\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./manifest.json\n// module id = ZcXo\n// module chunks = 1","require(\"sap/m/themes/sap_belize/Page.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.Page.\nsap.ui.define([\"jquery.sap.global\", \"./library\", \"sap/ui/core/Control\", \"sap/ui/core/delegate/ScrollEnablement\", \"sap/m/Title\", \"sap/m/Button\", \"sap/m/Bar\", \"sap/ui/core/ContextMenuSupport\", \"sap/ui/core/library\", \"sap/ui/Device\", \"sap/ui/core/Element\"],\n\tfunction(jQuery, library, Control, ScrollEnablement, Title, Button, Bar, ContextMenuSupport, coreLibrary, Device, Element) {\n\t\t\"use strict\";\n\n\n\t\t// shortcut for sap.ui.core.AccessibleLandmarkRole\n\t\tvar AccessibleLandmarkRole = coreLibrary.AccessibleLandmarkRole;\n\n\t\t// shortcut for sap.m.ButtonType\n\t\tvar ButtonType = library.ButtonType;\n\n\t\t// shortcut for sap.m.PageBackgroundDesign\n\t\tvar PageBackgroundDesign = library.PageBackgroundDesign;\n\n\t\t// shortcut for sap.ui.core.TitleLevel\n\t\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\t\tvar DIV = \"div\";\n\t\tvar HEADER = \"header\";\n\t\tvar FOOTER = \"footer\";\n\n\n\t\t/**\n\t\t * Constructor for a new Page.\n\t\t *\n\t\t * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n\t\t * @param {object} [mSettings] Initial settings for the new control\n\t\t *\n\t\t * @class\n\t\t * A container control that holds one whole screen of an application.\n\t\t *\n\t\t * <h3>Overview</h3>\n\t\t * The sap.m.Page is a container control that holds one whole screen of an application.\n\t\t * The page has three distinct areas that can hold content - a header, content area and a footer.\n\t\t * <h3>Structure</h3>\n\t\t * <h4>Header</h4>\n\t\t * The top most area of the page is occupied by the header. The standard header includes a navigation button and a title.\n\t\t * Alternatively, you can create your own custom header, which is defined in the <code>customHeader</code> aggregation.\n\t\t * <h4>Content</h4>\n\t\t * The content occupies the main part of the page. Only the content area is scrollable by default.\n\t\t * This can be prevented by setting  <code>enableScrolling</code> to <code>false</code>.\n\t\t * <h4>Footer</h4>\n\t\t * The footer is optional and occupies the fixed bottom part of the page. Alternatively, the footer can be floating above the bottom part of the content.\n\t\t * This is enabled with the <code>floatingFooter</code> property.\n\t\t *\n\t\t * <b>Note:</b> All accessibility information for the different areas and their corresponding ARIA roles is set in the aggregation <code>landmarkInfo</code> of type {@link sap.m.PageAccessibleLandmarkInfo}\n\t\t *\n\t\t * @extends sap.ui.core.Control\n\t\t * @mixes sap.ui.core.ContextMenuSupport\n\t\t * @author SAP SE\n\t\t * @version 1.52.3\n\t\t *\n\t\t * @public\n\t\t * @alias sap.m.Page\n\t\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t\t */\n\t\tvar Page = Control.extend(\"sap.m.Page\", /** @lends sap.m.Page.prototype */ {\n\t\t\tmetadata: {\n\n\t\t\t\tlibrary: \"sap.m\",\n\t\t\t\tproperties: {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The title text appearing in the page header bar.\n\t\t\t\t\t */\n\t\t\t\t\ttitle: {type: \"string\", group: \"Data\", defaultValue: null},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Defines the semantic level of the title. Using \"Auto\" no explicit level information is written.\n\t\t\t\t\t * Used for accessibility purposes only.\n\t\t\t\t\t */\n\t\t\t\t\ttitleLevel: {\n\t\t\t\t\t\ttype: \"sap.ui.core.TitleLevel\",\n\t\t\t\t\t\tgroup: \"Appearance\",\n\t\t\t\t\t\tdefaultValue: TitleLevel.Auto\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * A nav button will be rendered on the left area of header bar if this property is set to true.\n\t\t\t\t\t */\n\t\t\t\t\tshowNavButton: {type: \"boolean\", group: \"Appearance\", defaultValue: false},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Whether this page shall have a header.\n\t\t\t\t\t * If set to true, either the control under the \"customHeader\" aggregation is used, or if there is no such control, a Header control is constructed from the properties \"title\", \"showNavButton\", \"navButtonText\" and \"icon\" depending on the platform.\n\t\t\t\t\t */\n\t\t\t\t\tshowHeader: {type: \"boolean\", group: \"Appearance\", defaultValue: true},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Whether this page shall show the subheader.\n\t\t\t\t\t * @since 1.28\n\t\t\t\t\t */\n\t\t\t\t\tshowSubHeader: {type: \"boolean\", group: \"Appearance\", defaultValue: true},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The text of the nav button when running in iOS (if shown) in case it deviates from the default, which is \"Back\". This property is mvi-theme-dependent and will not have any effect in other themes.\n\t\t\t\t\t * @deprecated Since version 1.20.\n\t\t\t\t\t * Deprecated since the MVI theme is removed now. This property only affected the NavButton in that theme.\n\t\t\t\t\t */\n\t\t\t\t\tnavButtonText: {type: \"string\", group: \"Misc\", defaultValue: null, deprecated: true},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The tooltip of the nav button\n\t\t\t\t\t *\n\t\t\t\t\t * Since version 1.34\n\t\t\t\t\t */\n\t\t\t\t\tnavButtonTooltip: {type: \"string\", group: \"Misc\", defaultValue: null},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Enable vertical scrolling of page contents. Page headers and footers are fixed and do not scroll.\n\t\t\t\t\t * If set to false, there will be no scrolling at all.\n\t\t\t\t\t *\n\t\t\t\t\t * The Page only allows vertical scrolling because horizontal scrolling is discouraged in general for full-page content. If it still needs to be achieved, disable the Page scrolling and use a ScrollContainer as full-page content of the Page. This allows you to freely configure scrolling. It can also be used to create horizontally-scrolling sub-areas of (vertically-scrolling) Pages.\n\t\t\t\t\t */\n\t\t\t\t\tenableScrolling: {type: \"boolean\", group: \"Behavior\", defaultValue: true},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * the icon that is rendered in the page header bar in non-iOS phone/tablet platforms. This property is theme-dependent and only has an effect in the MVI theme.\n\t\t\t\t\t * @deprecated Since version 1.20.\n\t\t\t\t\t * Deprecated since the MVI theme is removed now. This property only affected the NavButton in that theme.\n\t\t\t\t\t */\n\t\t\t\t\ticon: {type: \"sap.ui.core.URI\", group: \"Appearance\", defaultValue: null, deprecated: true},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * This property is used to set the background color of a page. When a list is placed inside a page, the value \"List\" should be used to display a gray background. \"Standard\", with the value white, is used as default if not specified.\n\t\t\t\t\t */\n\t\t\t\t\tbackgroundDesign: {\n\t\t\t\t\t\ttype: \"sap.m.PageBackgroundDesign\",\n\t\t\t\t\t\tgroup: \"Appearance\",\n\t\t\t\t\t\tdefaultValue: PageBackgroundDesign.Standard\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * This property is used to set the appearance of the NavButton. By default when showNavButton is set to true, a back button will be shown in iOS and an up button in other platforms. In case you want to show a normal button in the left header area, you can set the value to \"Default\".\n\t\t\t\t\t * @since 1.12\n\t\t\t\t\t * @deprecated Since version 1.20.\n\t\t\t\t\t * Deprecated since the MVI theme is removed now. This property is only usable with a Button text in that theme.\n\t\t\t\t\t */\n\t\t\t\t\tnavButtonType: {\n\t\t\t\t\t\ttype: \"sap.m.ButtonType\",\n\t\t\t\t\t\tgroup: \"Appearance\",\n\t\t\t\t\t\tdefaultValue: ButtonType.Back,\n\t\t\t\t\t\tdeprecated: true\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Whether this page shall have a footer\n\t\t\t\t\t * @since 1.13.1\n\t\t\t\t\t */\n\t\t\t\t\tshowFooter: {type: \"boolean\", group: \"Appearance\", defaultValue: true},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Decides which area is covered by the local BusyIndicator when <code>page.setBusy()</code> is called. By default the entire page is covered, including headers and footer. When this property is set to \"true\", only the content area is covered (not header/sub header and footer), which is useful e.g. when there is a SearchField in the sub header and live search continuously updates the content area while the user is still able to type.\n\t\t\t\t\t * @since 1.29.0\n\t\t\t\t\t */\n\t\t\t\t\tcontentOnlyBusy: {type: \"boolean\", group: \"Appearance\", defaultValue: false},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Decides whether the footer can float.\n\t\t\t\t\t * When set to true, the footer is not fixed below the content area anymore, but rather floats over it with a slight offset from the bottom.\n\t\t\t\t\t */\n\t\t\t\t\tfloatingFooter: {type: \"boolean\", group:\"Appearance\", defaultValue: false }\n\t\t\t\t},\n\t\t\t\tdefaultAggregation: \"content\",\n\t\t\t\taggregations: {\n\t\t\t\t\t/**\n\t\t\t\t\t * The content of this page\n\t\t\t\t\t */\n\t\t\t\t\tcontent: {type: \"sap.ui.core.Control\", multiple: true, singularName: \"content\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The (optional) custom header of this page.\n\t\t\t\t\t * Use this aggregation only when a custom header is constructed where the default header consisting of title text + nav button is not sufficient.\n\t\t\t\t\t * If this aggregation is set, the simple properties \"title\", \"showNavButton\", \"NavButtonText\" and \"icon\" are not used.\n\t\t\t\t\t */\n\t\t\t\t\tcustomHeader: {type: \"sap.m.IBar\", multiple: false},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The (optional) footer of this page. It is always located at the bottom of the page\n\t\t\t\t\t */\n\t\t\t\t\tfooter: {type: \"sap.m.IBar\", multiple: false},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * a subHeader will be rendered directly under the header\n\t\t\t\t\t */\n\t\t\t\t\tsubHeader: {type: \"sap.m.IBar\", multiple: false},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Controls to be added to the right side of the page header. Usually an application would use Button controls and limit the number to one when the application needs to run on smartphones. There is no automatic overflow handling when the space is insufficient.\n\t\t\t\t\t * When a customHeader is used, this aggregation will be ignored.\n\t\t\t\t\t */\n\t\t\t\t\theaderContent: {type: \"sap.ui.core.Control\", multiple: true, singularName: \"headerContent\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Accessible landmark settings to be applied on the containers of the <code>sap.m.Page</code> control.\n\t\t\t\t\t *\n\t\t\t\t\t * If not set, no landmarks will be written.\n\t\t\t\t\t */\n\t\t\t\t\tlandmarkInfo : {type : \"sap.m.PageAccessibleLandmarkInfo\", multiple : false},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * A header bar which is managed internally by the Page control\n\t\t\t\t\t */\n\t\t\t\t\t_internalHeader: {type: \"sap.m.IBar\", multiple: false, visibility: \"hidden\"}\n\t\t\t\t},\n\t\t\t\tevents: {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * this event is fired when Nav Button is tapped\n\t\t\t\t\t * @deprecated Since version 1.12.2.\n\t\t\t\t\t * the navButtonPress event is replacing this event\n\t\t\t\t\t */\n\t\t\t\t\tnavButtonTap: {deprecated: true},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * this event is fired when Nav Button is pressed\n\t\t\t\t\t * @since 1.12.2\n\t\t\t\t\t */\n\t\t\t\t\tnavButtonPress: {}\n\t\t\t\t},\n\t\t\t\tdesignTime: true\n\t\t\t}\n\t\t});\n\n\t\tContextMenuSupport.apply(Page.prototype);\n\n\t\tPage.FOOTER_ANIMATION_DURATION = 350;\n\n\t\t// Return true if scrolling is allowed\n\t\tPage.prototype._hasScrolling = function () {\n\t\t\treturn this.getEnableScrolling();\n\t\t};\n\n\t\tPage.prototype.onBeforeRendering = function () {\n\t\t\tif (this._oScroller && !this._hasScrolling()) {\n\t\t\t\tthis._oScroller.destroy();\n\t\t\t\tthis._oScroller = null;\n\t\t\t} else if (this._hasScrolling() && !this._oScroller) {\n\t\t\t\tthis._oScroller = new ScrollEnablement(this, null, {\n\t\t\t\t\tscrollContainerId: this.getId() + \"-cont\",\n\t\t\t\t\thorizontal: false,\n\t\t\t\t\tvertical: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (this._headerTitle) {\n\t\t\t\tthis._headerTitle.setLevel(this.getTitleLevel());\n\t\t\t}\n\t\t};\n\n\t\tPage.prototype.onAfterRendering = function () {\n\t\t\tjQuery.sap.delayedCall(10, this, this._adjustFooterWidth);\n\t\t};\n\n\t\t/**\n\t\t * Called when the control is destroyed.\n\t\t *\n\t\t * @private\n\t\t */\n\t\tPage.prototype.exit = function () {\n\t\t\tif (this._oScroller) {\n\t\t\t\tthis._oScroller.destroy();\n\t\t\t\tthis._oScroller = null;\n\t\t\t}\n\t\t\tif (this._headerTitle) {\n\t\t\t\tthis._headerTitle.destroy();\n\t\t\t\tthis._headerTitle = null;\n\t\t\t}\n\t\t\tif (this._navBtn) {\n\t\t\t\tthis._navBtn.destroy();\n\t\t\t\tthis._navBtn = null;\n\t\t\t}\n\t\t\tif (this._appIcon) {\n\t\t\t\tthis._appIcon.destroy();\n\t\t\t\tthis._appIcon = null;\n\t\t\t}\n\t\t};\n\n\t\tPage.prototype.setBackgroundDesign = function (sBgDesign) {\n\t\t\tvar sBgDesignOld = this.getBackgroundDesign();\n\n\t\t\tthis.setProperty(\"backgroundDesign\", sBgDesign, true);\n\t\t\tthis.$().removeClass(\"sapMPageBg\" + sBgDesignOld).addClass(\"sapMPageBg\" + this.getBackgroundDesign());\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype.setTitle = function (sTitle) {\n\t\t\tvar bWasNull = !this._headerTitle;\n\n\t\t\tthis._headerTitle = this._headerTitle || new Title(this.getId() + \"-title\", {\n\t\t\t\t\ttext: sTitle,\n\t\t\t\t\tlevel: this.getTitleLevel()\n\t\t\t\t});\n\t\t\tthis._headerTitle.setText(sTitle);\n\n\t\t\tif (bWasNull) {\n\t\t\t\tthis._updateHeaderContent(this._headerTitle, \"middle\", 0);\n\t\t\t}\n\n\t\t\tthis.setProperty(\"title\", sTitle, true);\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype._ensureNavButton = function () {\n\t\t\tvar sBackText = this.getNavButtonTooltip() || sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"PAGE_NAVBUTTON_TEXT\"); // any other types than \"Back\" do not make sense anymore in Blue Crystal\n\n\t\t\tif (!this._navBtn) {\n\t\t\t\tvar sNavButtonType = this.getNavButtonType();\n\n\t\t\t\tthis._navBtn = new Button(this.getId() + \"-navButton\", {\n\t\t\t\t\tpress: jQuery.proxy(function () {\n\t\t\t\t\t\tthis.fireNavButtonPress();\n\t\t\t\t\t\tthis.fireNavButtonTap();\n\t\t\t\t\t}, this)\n\t\t\t\t});\n\n\t\t\t\tif (Device.os.android && sNavButtonType == ButtonType.Back) {\n\t\t\t\t\tthis._navBtn.setType(ButtonType.Up);\n\t\t\t\t} else {\n\t\t\t\t\tthis._navBtn.setType(sNavButtonType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._navBtn.setTooltip(sBackText);\n\t\t};\n\n\t\tPage.prototype.setShowNavButton = function (bShowNavBtn) {\n\t\t\tvar bOldValue = !!this.getShowNavButton();\n\t\t\tif (bShowNavBtn === bOldValue) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.setProperty(\"showNavButton\", bShowNavBtn, true);\n\n\t\t\tif (bShowNavBtn) {\n\t\t\t\tthis._ensureNavButton(); // creates this._navBtn, if required\n\t\t\t\tif (this._appIcon) {\n\t\t\t\t\tthis._updateHeaderContent(this._appIcon, \"left\", -1);\n\t\t\t\t}\n\n\t\t\t\tthis._updateHeaderContent(this._navBtn, \"left\", 0);\n\t\t\t} else if (this._navBtn) {\n\t\t\t\t// remove back button from header bar\n\t\t\t\tthis._updateHeaderContent(this._navBtn, \"left\", -1);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype.setShowFooter = function (bShowFooter) {\n\t\t\tif (this.getDomRef()) {\n\t\t\t\t(bShowFooter) ? this.$().addClass(\"sapMPageWithFooter\") : this.$().removeClass(\"sapMPageWithFooter\");\n\t\t\t}\n\n\t\t\tvar $footer = jQuery(this.getDomRef()).find(\".sapMPageFooter\").last(),\n\t\t\t\tuseAnimation = sap.ui.getCore().getConfiguration().getAnimation();\n\n\t\t\tif (!this.getFloatingFooter()) {\n\t\t\t\tthis.setProperty(\"showFooter\", bShowFooter);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.setProperty(\"showFooter\", bShowFooter, true);\n\n\t\t\t$footer.removeClass(\"sapUiHidden\");\n\t\t\t$footer.toggleClass(\"sapMPageFooterControlShow\", bShowFooter);\n\t\t\t$footer.toggleClass(\"sapMPageFooterControlHide\", !bShowFooter);\n\n\t\t\tif (bShowFooter) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (useAnimation) {\n\t\t\t\tjQuery.sap.delayedCall(Page.FOOTER_ANIMATION_DURATION, this, function () {\n\t\t\t\t\t$footer.toggleClass(\"sapUiHidden\", bShowFooter);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t$footer.toggleClass(\"sapUiHidden\", bShowFooter);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype.setNavButtonType = function (sNavButtonType) {\n\t\t\tthis._ensureNavButton(); // creates this._navBtn, if required\n\t\t\tif (!Device.os.ios && sNavButtonType == ButtonType.Back) {\n\t\t\t\t// internal conversion from Back to Up for non-iOS platform\n\t\t\t\tthis._navBtn.setType(ButtonType.Up);\n\t\t\t} else {\n\t\t\t\tthis._navBtn.setType(sNavButtonType);\n\t\t\t}\n\t\t\tthis.setProperty(\"navButtonType\", sNavButtonType, true);\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype.setNavButtonText = function (sText) {\n\t\t\tthis._ensureNavButton(); // creates this._navBtn, if required\n\t\t\tthis.setProperty(\"navButtonText\", sText, true);\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype.setNavButtonTooltip = function (sText) {\n\t\t\tthis.setProperty(\"navButtonTooltip\", sText, true);\n\t\t\tthis._ensureNavButton(); // creates this._navBtn, if required\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype.setIcon = function (sIconSrc) {\n\t\t\tvar sOldValue = this.getIcon();\n\t\t\tif (sOldValue === sIconSrc) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.setProperty(\"icon\", sIconSrc, true);\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype._adjustFooterWidth = function () {\n\t\t\tif (!this.getShowFooter() || !this.getFloatingFooter() || !this.getFooter()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar $footer = jQuery(this.getDomRef()).find(\".sapMPageFooter\").last();\n\n\t\t\tif (this._contentHasScroll()) {\n\t\t\t\t$footer.css(\"right\", jQuery.position.scrollbarWidth() + \"px\");\n\t\t\t\t$footer.css(\"width\", \"initial\");\n\t\t\t} else {\n\t\t\t\t$footer.css(\"right\", 0);\n\t\t\t\t$footer.css(\"width\", \"\");\n\t\t\t}\n\t\t};\n\n\t\tPage.prototype._contentHasScroll = function () {\n\t\t\tvar $section = jQuery.sap.byId(this.getId() + \"-cont\", this.getDomRef());\n\t\t\treturn $section[0].scrollHeight > $section.innerHeight();\n\t\t};\n\n\t\t/**\n\t\t * Update content of internal header\n\t\t * @param {sap.ui.core.Control} oContent control to be added\n\t\t * @param {string} sContentPosition position where the control should be located, possible values left/middle/right\n\t\t * @param {number} iContentIndex the order of the control to be placed. If set to -1, the control will be removed from the header\n\t\t * @private\n\t\t */\n\t\tPage.prototype._updateHeaderContent = function (oContent, sContentPosition, iContentIndex) {\n\t\t\tvar oInternalHeader = this._getInternalHeader();\n\n\t\t\tif (oInternalHeader) {\n\t\t\t\tswitch (sContentPosition) {\n\t\t\t\t\tcase \"left\":\n\t\t\t\t\t\tif (iContentIndex == -1) {\n\t\t\t\t\t\t\tif (oInternalHeader.getContentLeft()) {\n\t\t\t\t\t\t\t\toInternalHeader.removeContentLeft(oContent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (oInternalHeader.indexOfContentLeft(oContent) != iContentIndex) {\n\t\t\t\t\t\t\t\toInternalHeader.insertContentLeft(oContent, iContentIndex);\n\t\t\t\t\t\t\t\toInternalHeader.invalidate(); // workaround for bOutput problem\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\tif (iContentIndex == -1) {\n\t\t\t\t\t\t\tif (oInternalHeader.getContentMiddle()) {\n\t\t\t\t\t\t\t\toInternalHeader.removeContentMiddle(oContent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (oInternalHeader.indexOfContentMiddle(oContent) != iContentIndex) {\n\t\t\t\t\t\t\t\toInternalHeader.insertContentMiddle(oContent, iContentIndex);\n\t\t\t\t\t\t\t\toInternalHeader.invalidate();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\tif (iContentIndex == -1) {\n\t\t\t\t\t\t\tif (oInternalHeader.getContentRight()) {\n\t\t\t\t\t\t\t\toInternalHeader.removeContentRight(oContent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (oInternalHeader.indexOfContentRight(oContent) != iContentIndex) {\n\t\t\t\t\t\t\t\toInternalHeader.insertContentRight(oContent, iContentIndex);\n\t\t\t\t\t\t\t\toInternalHeader.invalidate();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Create internal header\n\t\t * @returns {sap.m.IBar} The header instance\n\t\t * @private\n\t\t */\n\n\t\tPage.prototype._getInternalHeader = function () {\n\t\t\tvar oInternalHeader = this.getAggregation(\"_internalHeader\");\n\t\t\tif (!oInternalHeader) {\n\t\t\t\tthis.setAggregation(\"_internalHeader\", new Bar(this.getId() + \"-intHeader\"), true); // don\"t invalidate - this is only called before/during rendering, where invalidation would lead to double rendering,  or when invalidation anyway happens\n\t\t\t\toInternalHeader = this.getAggregation(\"_internalHeader\");\n\n\t\t\t\tif (this.getShowNavButton() && this._navBtn) {\n\t\t\t\t\tthis._updateHeaderContent(this._navBtn, \"left\", 0);\n\t\t\t\t}\n\t\t\t\tif (this.getTitle() && this._headerTitle) {\n\t\t\t\t\tthis._updateHeaderContent(this._headerTitle, \"middle\", 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn oInternalHeader;\n\t\t};\n\n\t\t/**\n\t\t * Returns the custom or internal header\n\t\t * @returns {sap.m.IBar} The header instance\n\t\t * @private\n\t\t */\n\t\tPage.prototype._getAnyHeader = function () {\n\t\t\tvar oCustomHeader = this.getCustomHeader();\n\n\t\t\tif (oCustomHeader) {\n\t\t\t\t// return aggregated header, if it exists\n\t\t\t\treturn oCustomHeader.addStyleClass(\"sapMPageHeader\");\n\t\t\t}\n\n\t\t\treturn this._getInternalHeader().addStyleClass(\"sapMPageHeader\");\n\t\t};\n\n\t\t/**\n\t\t * Returns the sap.ui.core.ScrollEnablement delegate which is used with this control.\n\t\t * @returns {sap.ui.core.ScrollEnablement} The scroll enablement delegate\n\t\t * @private\n\t\t */\n\t\tPage.prototype.getScrollDelegate = function () {\n\t\t\treturn this._oScroller;\n\t\t};\n\n\t\t/**\n\t\t * Formats <code>PageAccessibleLandmarkInfo</code> role and label of the provided <code>Page</code> part.\n\t\t *\n\t\t * @param {sap.m.PageAccessibleLandmarkInfo} oLandmarkInfo Page LandmarkInfo\n\t\t * @param {string} sPartName part of the page\n\t\t * @returns {object}\n\t\t * @private\n\t\t */\n\t\tPage.prototype._formatLandmarkInfo = function (oLandmarkInfo, sPartName) {\n\t\t\tif (oLandmarkInfo) {\n\t\t\t\tvar sRole = oLandmarkInfo[\"get\" + sPartName + \"Role\"]() || \"\",\n\t\t\t\t\tsLabel = oLandmarkInfo[\"get\" + sPartName + \"Label\"]() || \"\";\n\n\t\t\t\tif (sRole === AccessibleLandmarkRole.None) {\n\t\t\t\t\tsRole = '';\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\trole: sRole.toLowerCase(),\n\t\t\t\t\tlabel: sLabel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {};\n\t\t};\n\n\t\t/**\n\t\t * Returns HTML tag of the page header.\n\t\t *\n\t\t * @param {sap.m.PageAccessibleLandmarkInfo} oLandmarkInfo Page LandmarkInfo\n\t\t * @returns {string}\n\t\t * @private\n\t\t */\n\t\tPage.prototype._getHeaderTag = function (oLandmarkInfo) {\n\t\t\tif (oLandmarkInfo && oLandmarkInfo.getHeaderRole() !== AccessibleLandmarkRole.None) {\n\t\t\t\treturn DIV;\n\t\t\t}\n\n\t\t\treturn HEADER;\n\t\t};\n\n\t\t/**\n\t\t * Returns HTML tag of the page sub-header.\n\t\t *\n\t\t * @param {sap.m.PageAccessibleLandmarkInfo} oLandmarkInfo Page LandmarkInfo\n\t\t * @returns {string}\n\t\t * @private\n\t\t */\n\t\tPage.prototype._getSubHeaderTag = function (oLandmarkInfo) {\n\t\t\tif (oLandmarkInfo && oLandmarkInfo.getSubHeaderRole() !== AccessibleLandmarkRole.None) {\n\t\t\t\treturn DIV;\n\t\t\t}\n\n\t\t\treturn HEADER;\n\t\t};\n\n\t\t/**\n\t\t * Returns HTML tag of the page footer.\n\t\t *\n\t\t * @param {sap.m.PageAccessibleLandmarkInfo} oLandmarkInfo Page LandmarkInfo\n\t\t * @returns {string}\n\t\t * @private\n\t\t */\n\t\tPage.prototype._getFooterTag = function (oLandmarkInfo) {\n\t\t\tif (oLandmarkInfo && oLandmarkInfo.getFooterRole() !== AccessibleLandmarkRole.None) {\n\t\t\t\treturn DIV;\n\t\t\t}\n\n\t\t\treturn FOOTER;\n\t\t};\n\n\t\t//*** API Methods ***\n\n\n\t\t/**\n\t\t * Scrolls to the given position. Only available if enableScrolling is set to \"true\".\n\t\t *\n\t\t * @param {int} y The vertical pixel position to scroll to. Scrolling down happens with positive values.\n\t\t * @param {int} time The duration of animated scrolling. To scroll immediately without animation, give 0 as value. 0 is also the default value, when this optional parameter is omitted.\n\t\t * @returns {sap.m.Page} <code>this</code> to facilitate method chaining.\n\t\t * @public\n\t\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t\t */\n\t\tPage.prototype.scrollTo = function (y, time) {\n\t\t\tif (this._oScroller) {\n\t\t\t\tthis._oScroller.scrollTo(0, y, time);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t * Scrolls to an element(DOM or sap.ui.core.Element) within the page if the element is rendered.\n\t\t * @param {HTMLElement | sap.ui.core.Element} oElement The element to which should be scrolled.\n\t\t * @param {int} [iTime=0] The duration of animated scrolling. To scroll immediately without animation, give 0 as value or leave it default.\n\t\t * @returns {sap.m.Page} <code>this</code> to facilitate method chaining.\n\t\t * @since 1.30\n\t\t * @public\n\t\t */\n\t\tPage.prototype.scrollToElement = function (oElement, iTime) {\n\t\t\tif (oElement instanceof Element) {\n\t\t\t\toElement = oElement.getDomRef();\n\t\t\t}\n\n\t\t\tif (this._oScroller) {\n\t\t\t\tthis._oScroller.scrollToElement(oElement, iTime);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype.setContentOnlyBusy = function (bContentOnly) {\n\t\t\tthis.setProperty(\"contentOnlyBusy\", bContentOnly, true); // no re-rendering\n\t\t\tthis.$().toggleClass(\"sapMPageBusyCoversAll\", !bContentOnly);\n\t\t\treturn this;\n\t\t};\n\n\t\t//*** Methods forwarding the \"headerContent\" pseudo-aggregation calls ***\n\n\t\tPage.prototype.getHeaderContent = function () {\n\t\t\treturn this._getInternalHeader().getContentRight();\n\t\t};\n\n\t\tPage.prototype.indexOfHeaderContent = function (oControl) {\n\t\t\treturn this._getInternalHeader().indexOfContentRight(oControl);\n\t\t};\n\n\t\tPage.prototype.insertHeaderContent = function (oControl, iIndex) {\n\t\t\treturn this._getInternalHeader().insertContentRight(oControl, iIndex);\n\t\t};\n\n\t\tPage.prototype.addHeaderContent = function (oControl) {\n\t\t\treturn this._getInternalHeader().addContentRight(oControl);\n\t\t};\n\n\t\tPage.prototype.removeHeaderContent = function (oControl) {\n\t\t\treturn this._getInternalHeader().removeContentRight(oControl);\n\t\t};\n\n\t\tPage.prototype.removeAllHeaderContent = function () {\n\t\t\treturn this._getInternalHeader().removeAllContentRight();\n\t\t};\n\n\t\tPage.prototype.destroyHeaderContent = function () {\n\t\t\treturn this._getInternalHeader().destroyContentRight();\n\t\t};\n\n\n\t\tPage.prototype.setCustomHeader = function(oHeader) {\n\n\t\t\tthis.setAggregation(\"customHeader\", oHeader);\n\t\t\t/*\n\t\t\t * Runs Fiori 2.0 adaptation for the header\n\t\t\t */\n\t\t\tif (oHeader && this.mEventRegistry[\"_adaptableContentChange\"] ) {\n\t\t\t\tthis.fireEvent(\"_adaptableContentChange\", {\n\t\t\t\t\t\"parent\": this,\n\t\t\t\t\t\"adaptableContent\": oHeader\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\tPage.prototype._getAdaptableContent = function () {\n\t\t\treturn this._getAnyHeader();\n\t\t};\n\n\t\treturn Page;\n\t});\n\n\njQuery.sap.setObject(\"sap.m.PageRenderer\", require(\"sap/m/PageRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/Page.js","module.exports = \"#This is the resource bundle for the sap.ui.core library\\r\\n#__ldi.translation.uuid=79738ed0-fe50-11e0-be50-0800200c9a66\\r\\n\\r\\n#NOTR\\r\\nSAPUI5_FRIDAY=Friday\\r\\n#NOTR\\r\\nSAPUI5_GM_ZSTEP=Zoom step {0}\\r\\n\\r\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have an error\\r\\nVALUE_STATE_ERROR=Invalid entry\\r\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have a warning\\r\\nVALUE_STATE_WARNING=Warning issued\\r\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to be in success state\\r\\nVALUE_STATE_SUCCESS=Entry successfully validated\\r\\n\\r\\n#XTOL: text that could be show if BusyIndicator is active\\r\\nBUSY_TEXT=Please wait\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.core.format.DateFormat\\r\\n#########\\r\\n\\r\\n#XTXT: the long pattern for formatting a date using calendar week number\\r\\ndate.week.calendarweek.wide=Calendar Week {0}\\r\\n#XTXT: the short pattern for formatting a date using calendar week number\\r\\ndate.week.calendarweek.narrow=CW {0}\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.core.format.FileSizeFormat\\r\\n#########\\r\\n\\r\\n#YMSG,20: File Size Unit one Byte\\r\\nFileSize.Byte={0} Byte\\r\\n#YMSG,20: File Size Unit Bytes\\r\\nFileSize.Bytes={0} Bytes\\r\\n\\r\\n#YMSG,20: File Size Unit Kilobyte (short)\\r\\nFileSize.Kilobyte={0} KB\\r\\n#YMSG,20: File Size Unit Megabyte (short)\\r\\nFileSize.Megabyte={0} MB\\r\\n#YMSG,20: File Size Unit Gigabyte (short)\\r\\nFileSize.Gigabyte={0} GB\\r\\n#YMSG,20: File Size Unit Terabyte (short)\\r\\nFileSize.Terabyte={0} TB\\r\\n#YMSG,20: File Size Unit Petabyte (short)\\r\\nFileSize.Petabyte={0} PB\\r\\n#YMSG,20: File Size Unit Exabyte (short)\\r\\nFileSize.Exabyte={0} EB\\r\\n#YMSG,20: File Size Unit Zettabyte (short)\\r\\nFileSize.Zettabyte={0} ZB\\r\\n#YMSG,20: File Size Unit Yottabyte (short)\\r\\nFileSize.Yottabyte={0} YB\\r\\n\\r\\n#YMSG,20: File Size Unit Kibibyte (short)\\r\\nFileSize.Kibibyte={0} KiB\\r\\n#YMSG,20: File Size Unit Mebibyte (short)\\r\\nFileSize.Mebibyte={0} MiB\\r\\n#YMSG,20: File Size Unit Gibibyte (short)\\r\\nFileSize.Gibibyte={0} GiB\\r\\n#YMSG,20: File Size Unit Tebibyte (short)\\r\\nFileSize.Tebibyte={0} TiB\\r\\n#YMSG,20: File Size Unit Pebibyte (short)\\r\\nFileSize.Pebibyte={0} PiB\\r\\n#YMSG,20: File Size Unit Exbibyte (short)\\r\\nFileSize.Exbibyte={0} EiB\\r\\n#YMSG,20: File Size Unit Zebibyte (short)\\r\\nFileSize.Zebibyte={0} ZiB\\r\\n#YMSG,20: File Size Unit Yobibyte (short)\\r\\nFileSize.Yobibyte={0} YiB\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.model.odata.AnnotationHelper\\r\\n#########\\r\\n\\r\\n#XTOL: mathematical term for a number greater than anything else\\r\\nINFINITY=Infinity\\r\\n#XTOL: mathematical term for a number smaller than anything else\\r\\nMINUS_INFINITY=Minus infinity\\r\\n#XTOL\\r\\nNAN=Not a number\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.model.odata.type.*\\r\\n#########\\r\\n\\r\\n#XTOL: No\\r\\nNO=No\\r\\n#XTOL: Yes\\r\\nYES=Yes\\r\\n#YMSG: Enter \\\"{0}\\\" or \\\"{1}\\\"\\r\\nEnterYesOrNo=Enter \\\"{0}\\\" or \\\"{1}\\\".\\r\\n#YMSG: Enter only digits\\r\\nEnterDigitsOnly=Enter only digits\\r\\n#YMSG: Enter a maximum of {0} digits\\r\\nEnterMaximumOfDigits=Enter a maximum of {0} digits.\\r\\n#YMSG: Enter a number\\r\\nEnterNumber=Enter a number\\r\\n#YMSG: Enter a number with a maximum of {0} digits, including any decimal places\\r\\nEnterNumberPrecision=Enter a number with a maximum of {0} digits, including any decimal places\\r\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator\\r\\nEnterNumberInteger=Enter a number with a maximum of {0} digits to the left of the decimal separator\\r\\n#YMSG: Enter a number with a maximum of {0} decimal places\\r\\nEnterNumberFraction=Enter a number with a maximum of {0} decimal places\\r\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\r\\nEnterNumberIntegerFraction=Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\r\\n#YMSG: Enter a number with a minimum value of {0}\\r\\nEnterNumberMin=Enter a number with a minimum value of {0}\\r\\n#YMSG: Enter a number greater than {0}\\r\\nEnterNumberMinExclusive=Enter a number greater than {0}\\r\\n#YMSG: Enter a number with a maximum value of {0}\\r\\nEnterNumberMax=Enter a number with a maximum value of {0}\\r\\n#YMSG: Enter a number less than {0}\\r\\nEnterNumberMaxExclusive=Enter a number less than {0}\\r\\n#YMSG: Enter a text\\r\\nEnterText=Enter a text\\r\\n#YMSG: Enter a text with a maximum of {0} characters and spaces\\r\\nEnterTextMaxLength=Enter a text with a maximum of {0} characters and spaces\\r\\n#YMSG: Enter a number with no decimal places\\r\\nEnterInt=Enter a number with no decimal places\\r\\n#YMSG: Enter a valid date and a valid time in the following format\\\\: {0}\\r\\nEnterDateTime=Enter a valid date and a valid time in the following format\\\\: {0}\\r\\n#YMSG: Enter a valid date in the following format\\\\: {0}\\r\\nEnterDate=Enter a valid date in the following format\\\\: {0}\\r\\n#YMSG: Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\r\\nEnterGuid=Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\r\\n#YMSG: Enter a valid time in the following format\\\\: {0}\\r\\nEnterTime=Enter a valid time in the following format\\\\: {0}\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.model.type.*\\r\\n#########\\r\\n\\r\\n#YMSG,100: Enter a valid boolean\\r\\nBoolean.Invalid=Enter a valid Boolean value\\r\\n\\r\\n#YMSG,100: Enter a valid number\\r\\nInteger.Invalid=Enter a valid number\\r\\n#YMSG,100: Enter a number greater than or equal to {0}\\r\\nInteger.Minimum=Enter a number greater than or equal to {0}\\r\\n#YMSG,100: Enter a number lower than or equal to {0}\\r\\nInteger.Maximum=Enter a number less than or equal to {0}\\r\\n\\r\\n#YMSG,100: Enter a valid number.\\r\\nFloat.Invalid=Enter a valid number\\r\\n#YMSG,100: Enter a number greater than or equal to {0}\\r\\nFloat.Minimum=Enter a number greater than or equal to {0}\\r\\n#YMSG,100: Enter a number lower than or equal to {0}\\r\\nFloat.Maximum=Enter a number less than or equal to {0}\\r\\n\\r\\n#YMSG,100: Enter a valid currency amount\\r\\nCurrency.Invalid=Enter a valid currency amount\\r\\n#YMSG,100: Enter an amount greater than or equal to {0}\\r\\nCurrency.Minimum=Enter an amount greater than or equal to {0}\\r\\n#YMSG,100: Enter an amount lower than or equal to {0}\\r\\nCurrency.Maximum=Enter an amount less than or equal to {0}\\r\\n\\r\\n#YMSG,100: Enter a valid file size\\r\\nFileSize.Invalid=Enter a valid file size\\r\\n#YMSG,100: EEnter a file size greater than or equal to {0}\\r\\nFileSize.Minimum=Enter a file size greater than or equal to {0}\\r\\n#YMSG,100: Enter a file size lower than or equal to {0}\\r\\nFileSize.Maximum=Enter a file size lower than or equal to {0}\\r\\n\\r\\n#YMSG,100: Enter a valid date\\r\\nDate.Invalid=Enter a date\\r\\n#YMSG,100: Enter a date after {0}\\r\\nDate.Minimum=Enter a date after {0}\\r\\n#YMSG,100: Enter a date before {0}\\r\\nDate.Maximum=Enter a date before {0}\\r\\n\\r\\n#YMSG,100: Enter a valid time\\r\\nTime.Invalid=Enter a valid time\\r\\n#YMSG,100: Enter a time after {0}\\r\\nTime.Minimum=Enter a time after {0}\\r\\n#YMSG,100: Enter a time before {0}\\r\\nTime.Maximum=Enter a time before {0}\\r\\n\\r\\n#YMSG,100: Enter a valid date and time\\r\\nDateTime.Invalid=Enter a valid date and time\\r\\n#YMSG,100: Enter a date and time after {0}\\r\\nDateTime.Minimum=Enter a date and time after {0}\\r\\n#YMSG,100: Enter a date and time before {0}\\r\\nDateTime.Maximum=Enter a date and time before {0}\\r\\n\\r\\n#YMSG,100: Enter a valid date interval\\r\\nDateInterval.Invalid=Enter a valid date interval\\r\\n\\r\\n#YMSG,100: Enter a value with at least {0} characters\\r\\nString.MinLength=Enter a value with at least {0} characters\\r\\n#YMSG,100: Enter a value with no more than {0} characters\\r\\nString.MaxLength=Enter a value with no more than {0} characters\\r\\n#YMSG,100: Enter a value starting with \\\"{0}\\\"\\r\\nString.StartsWith=Enter a value starting with \\\"{0}\\\"\\r\\n#YMSG,100: Enter a value ending with \\\"{0}\\\"\\r\\nString.EndsWith=Enter a value ending with \\\"{0}\\\"\\r\\n#YMSG,100: Enter a value containing \\\"{0}\\\"\\r\\nString.Contains=Enter a value containing \\\"{0}\\\"\\r\\n#YMSG,100: Enter value \\\"{0}\\\"\\r\\nString.Equals=Enter value \\\"{0}\\\"\\r\\n#YMSG,100: Enter a value matching \\\"{0}\\\"\\r\\nString.Search=Enter a value matching \\\"{0}\\\"\\r\\n\\r\\n#XACT: ARIA announcement for the MessageStrip's \\\"Error\\\" state\\r\\nMESSAGE_STRIP_ERROR=Message Strip Error\\r\\n#XACT: ARIA announcement for the MessageStrip's \\\"Warning\\\" state\\r\\nMESSAGE_STRIP_WARNING=Message Strip Warning\\r\\n#XACT: ARIA announcement for the MessageStrip's \\\"Success\\\" state\\r\\nMESSAGE_STRIP_SUCCESS=Message Strip Success\\r\\n#XACT: ARIA announcement for the MessageStrip's \\\"Information\\\" state\\r\\nMESSAGE_STRIP_INFORMATION=Message Strip Information\\r\\n#XACT: ARIA announcement for the MessageStrip's closable state\\r\\nMESSAGE_STRIP_CLOSABLE=Closable\\r\\n\\r\\n#XACT: type of an UI control is an image\\r\\nACC_CTR_TYPE_IMAGE=Image\\r\\n#XACT: type of an UI control is a button\\r\\nACC_CTR_TYPE_BUTTON=Button\\r\\n\\r\\n#XFLD: Close\\r\\nCLOSE=Close\\r\\n\\r\\n#########\\r\\n# Texts for sap-icon Font\\r\\n#\\r\\n# Update \\\"sap.ui.core.IconPool\\\" (mIconI18nKey)\\r\\n# when adding a new key here\\r\\n#########\\r\\n\\r\\n#XTXT\\r\\nIcon.action-settings=Settings\\r\\n#XTXT\\r\\nIcon.activate=Activate\\r\\n#XTXT\\r\\nIcon.add=Add\\r\\n#XTXT\\r\\nIcon.add-contact=Add Contact\\r\\n#XTXT\\r\\nIcon.add-filter=Add Filter\\r\\n#XTXT\\r\\nIcon.add-photo=Add Photo\\r\\n#XTXT\\r\\nIcon.back-to-top=Back to Top\\r\\n#XTXT\\r\\nIcon.collapse=Collapse\\r\\n#XTXT\\r\\nIcon.collapse-group=Collapse Group\\r\\n#XTXT: Crop parts of an image\\r\\nIcon.crop=Crop\\r\\n#XTXT: To decline an offer\\r\\nIcon.decline=Decline\\r\\n#XTXT\\r\\nIcon.delete=Delete\\r\\n#XTXT\\r\\nIcon.display=Display\\r\\n#XTXT\\r\\nIcon.down=Down\\r\\n#XTXT\\r\\nIcon.download=Download\\r\\n#XTXT\\r\\nIcon.drill-down=Drill Down\\r\\n#XTXT\\r\\nIcon.drill-up=Drill Up\\r\\n#XTXT\\r\\nIcon.error=Error\\r\\n#XTXT\\r\\nIcon.exit-full-screen=Exit Full Screen\\r\\n#XTXT\\r\\nIcon.expand=Expand\\r\\n#XTXT\\r\\nIcon.expand-group=Expand Group\\r\\n#XTXT: Action to filter on a group of elements\\r\\nIcon.filter=Filter\\r\\n#XTXT: To flag or mark an item\\r\\nIcon.flag=Flag\\r\\n#XTXT: To forward an item to a recipients\\r\\nIcon.forward=Forward\\r\\n#XTXT\\r\\nIcon.full-screen=Enter Full Screen\\r\\n#XTXT\\r\\nIcon.generate-shortcut=Create Shortcut\\r\\n#XTXT: To group items\\r\\nIcon.group-2=Group\\r\\n#XTXT: To hide an element from display\\r\\nIcon.hide=Hide\\r\\n#XTXT\\r\\nIcon.ipad=Tablet\\r\\n#XTXT\\r\\nIcon.ipad-2=Tablet\\r\\n#XTXT\\r\\nIcon.iphone=Phone\\r\\n#XTXT\\r\\nIcon.iphone-2=Phone\\r\\n#XTXT\\r\\nIcon.laptop=Laptop\\r\\n#XTXT\\r\\nIcon.message-error=Error\\r\\n#XTXT\\r\\nIcon.message-information=Information\\r\\n#XTXT\\r\\nIcon.message-success=Successful\\r\\n#XTXT\\r\\nIcon.message-warning=Warning\\r\\n#XTXT: To manipulate the position of an element\\r\\nIcon.move=Move\\r\\n#XTXT\\r\\nIcon.multi-select=Multi Select\\r\\n#XTXT\\r\\nIcon.nav-back=Navigate Back\\r\\n#XTXT\\r\\nIcon.overflow=More\\r\\n#XTXT\\r\\nIcon.redo=Redo\\r\\n#XTXT\\r\\nIcon.refresh=Refresh\\r\\n#XTXT\\r\\nIcon.resize=Resize\\r\\n#XTXT\\r\\nIcon.resize-horizontal=Resize Horizontally\\r\\n#XTXT\\r\\nIcon.resize-vertical=Resize Vertically\\r\\n#XTXT\\r\\nIcon.response=Reply\\r\\n#XTXT\\r\\nIcon.save=Save\\r\\n#XTXT\\r\\nIcon.search=Search\\r\\n#XTXT\\r\\nIcon.settings=Settings\\r\\n#XTXT: To show an element previously hidden\\r\\nIcon.show=Show\\r\\n#XTXT\\r\\nIcon.sort=Sort\\r\\n#XTXT\\r\\nIcon.sort-ascending=Sort Ascending\\r\\n#XTXT\\r\\nIcon.sort-descending=Sort Descending\\r\\n#XTXT\\r\\nIcon.synchronize=Synchronize\\r\\n#XTXT\\r\\nIcon.undo=Undo\\r\\n#XTXT\\r\\nIcon.up=Up\\r\\n#XTXT\\r\\nIcon.upload=Upload\\r\\n#XTXT\\r\\nIcon.zoom-in=Zoom In\\r\\n#XTXT\\r\\nIcon.zoom-out=Zoom Out\\r\\n\\r\\n#########\\r\\n# Texts for sap.ui.debug.TechnicalInfo\\r\\n#########\\r\\n\\r\\n#XTIT: Title for the technical information dialog\\r\\nTechInfo.DialogTitle=Technical Information Dialog\\r\\n\\r\\n#XTOL: Tooltip for info button in header\\r\\nTechInfo.HelpButton.Tooltip=Open documentation\\r\\n\\r\\n#XTOL: Tooltip for version information link\\r\\nTechInfo.VersionLink.Tooltip=Open version information in a new tab\\r\\n\\r\\n#XTOL: Tooltip for copy to clipboard button\\r\\nTechInfo.CopyButton.Tooltip=Copy technical information to clipboard\\r\\n\\r\\n#XBUT: SAPUI5 Diagnostics button text\\r\\nTechnInfo.DiagnosticsButton.Text=Open Diagnostics\\r\\n\\r\\n#XBUT: Support assistant button text\\r\\nTechnInfo.AssistantButton.Text=Activate Support Assistant\\r\\n\\r\\n#XFLD: User agent field label\\r\\nTechInfo.UserAgent.Label=User Agent\\r\\n\\r\\n#XFLD: Application URL label\\r\\nTechInfo.AppUrl.Label=App URL\\r\\n\\r\\n#XFLD: Debug sources label\\r\\nTechInfo.DebugSources.Label=Use Debug Sources\\r\\n\\r\\n#XTOL: Debug sources tooltip\\r\\nTechInfo.DebugSources.Tooltip=Reloads the current page with unminified sources for debugging\\r\\n\\r\\n#XLNK: Debug sources select packages link\\r\\nTechInfo.DebugSourcesModules.Link=Select specific modules\\r\\n\\r\\n#XFLD: Text for the version build time string\\r\\nTechInfo.VersionBuildTime.Text=(built at {0})\\r\\n\\r\\n#YMSG: success message for copying to clipboard\\r\\nTechInfo.CopyToClipboard.Success=Technical information copied to clipboard\\r\\n\\r\\n#YMSG: error message for copying to clipboard\\r\\nTechInfo.CopyToClipboard.Error=Technical information could not be copied to clipboard\\r\\n\\r\\n#XTIT: Confirmation title for enabling/disabling debug sources\\r\\nTechInfo.DebugSources.ConfirmTitle=Reload App\\r\\n\\r\\n#YMSG: Confirmation message for enabling/disabling debug sources\\r\\nTechInfo.DebugSources.ConfirmMessage=Reload the app to enable or disable the debug sources\\r\\n\\r\\n#XTIT: Title for the custom bootstrap UPL configuration popup\\r\\nTechInfo.SupportAssistantConfigPopup.Title=Support Assistant Settings\\r\\n\\r\\n#XFLD: Standard bootstrap locations option for the custom bootstrap UPL configuration popup\\r\\nTechInfo.SupportAssistantConfigPopup.StandardLocation=Recommended Locations\\r\\n\\r\\n#XFLD: Custom bootstrap location option for the custom bootstrap UPL configuration popup\\r\\nTechInfo.SupportAssistantConfigPopup.CustomLocation=Custom Location\\r\\n\\r\\n#XFLD: Application version bootstrap location option for the custom bootstrap UPL configuration popup\\r\\nTechInfo.SupportAssistantConfigPopup.AppVersionOption=Application Version ({0})\\r\\n\\r\\n#YMSG: Custom bootstrap location validation error message\\r\\nTechInfo.SupportAssistantConfigPopup.URLValidationMessage=Incorrect syntax of the location address. Correct syntax should be http://<Valid custom URI>/resources/sap/ui/support.\\r\\n\\r\\n#YMSG: Error message when support Assistant is not found\\r\\nTechInfo.SupportAssistantConfigPopup.SupportAssistantNotFound=Support Assistant is not available in this location:\\r\\n\\r\\n#YMSG: Error message when protocols did not match\\r\\nTechInfo.SupportAssistantConfigPopup.ProtocolError=App protocol does not match the Support Assistant protocol (HTTP/HTTPS)\\r\\n\\r\\n#YMSG: Error message when Ajax return code is different than [200]\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorTryingToGetRecourse=Ajax return code is different than [200]\\r\\n\\r\\n#YMSG: Error message when file not Found [404]\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorNotFound=Not Found [404]\\r\\n\\r\\n#YMSG: Error message when internal server error occurs\\r\\nTechInfo.SupportAssistantConfigPopup.InternalServerError=Internal Server Error [500]\\r\\n\\r\\n#YMSG: Error message when request timeout.\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorOnTimeout=Time out error\\r\\n\\r\\n#YMSG: Error message when trying to parse JSON\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorOnJsonParse=Requested JSON parse failed\\r\\n\\r\\n#YMSG: Error message when uncaught Error occurs\\r\\nTechInfo.SupportAssistantConfigPopup.UncaughtError=Uncaught Error\\r\\n\\r\\n#YMSG: Error message when request is aborted\\r\\nTechInfo.SupportAssistantConfigPopup.ErrorWhenAborted=Ajax request aborted\\r\\n\\r\\n#YMSG: Error message when default locations are not available\\r\\nTechInfo.SupportAssistantConfigPopup.NotAvailableAtTheMoment=This location is not available at the moment.\\r\\n\\r\\n#XFLD: Title for enabling Support Assistant to open in new window.\\r\\nTechInfo.SupportAssistantConfigPopup.OpenInNewWindow=Open Support Assistant in New Window\\r\\n\\r\\n#XFLD: Title for location section in support Assistant settings popover\\r\\nTechInfo.SupportAssistantConfigPopup.Locations=Resource Location\\r\\n\\r\\n#XFLD: Title for options section in support Assistant settings popover\\r\\nTechInfo.SupportAssistantConfigPopup.Options=Options\\r\\n\\r\\n#XTIT: Title for the debug modules configuration selection\\r\\nTechInfo.DebugModulesConfigPopup.SelectionCounter=Select Debug Modules ({0} Selected)\\r\\n\\r\\n#YMSG: sap-ui-debug mode custom value validation error message\\r\\nTechInfo.DebugModulesConfigPopup.ModeValidationMessage=Value for parameter sap-ui-debug is invalid\\r\\n\\r\\n#XTOL: Tooltip for copy to clipboard button\\r\\nTechInfo.DebugModulesCopy.Tooltip=Copy the sap-ui-debug value to clipboard\\r\\n\\r\\n#XTOL: Tooltip for copy to clipboard button\\r\\nTechInfo.DebugModulesReset.Tooltip=Reset the currently selected modules\\r\\n\\r\\n#YMSG: success message for copying to clipboard\\r\\nTechInfo.DebugModulesCopyToClipboard.Success=Custom sap-ui-debug value copied to clipboard\\r\\n\\r\\n#YMSG: error message for copying to clipboard\\r\\nTechInfo.DebugModulesCopyToClipboard.Error=Custom sap-ui-debug value could not be copied to clipboard\\r\\n\\r\\n#XTIT: Title for the debug modules configuration popup confirmation button\\r\\nTechInfo.DebugModulesConfigPopup.Confirm=Apply\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/openui5-sap.ui.core/resources/sap/ui/core/messagebundle.properties\n// module id = cNzD\n// module chunks = 1","require(\"sap/m/themes/base/DisplayListItem.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.DisplayListItem.\nsap.ui.define(['./ListItemBase', './library', 'sap/ui/core/library'],\n\tfunction(ListItemBase, library, coreLibrary) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\n\t/**\n\t * Constructor for a new DisplayListItem.\n\t *\n\t * @param {string} [sId] Id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * <code>sap.m.DisplayListItem</code> can be used to represent a label and a value.\n\t * @extends sap.m.ListItemBase\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.DisplayListItem\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar DisplayListItem = ListItemBase.extend(\"sap.m.DisplayListItem\", /** @lends sap.m.DisplayListItem.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Defines the label of the list item.\n\t\t\t */\n\t\t\tlabel : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the value of the list item.\n\t\t\t */\n\t\t\tvalue : {type : \"string\", group : \"Data\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the <code>value</code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\t\t\t * @since 1.28.0\n\t\t\t */\n\t\t\tvalueTextDirection : {type : \"sap.ui.core.TextDirection\", group : \"Appearance\", defaultValue : TextDirection.Inherit}\n\t\t}\n\t}});\n\n\tDisplayListItem.prototype.getContentAnnouncement = function() {\n\t\treturn this.getLabel() + \" \" + this.getValue();\n\t};\n\n\treturn DisplayListItem;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.DisplayListItemRenderer\", require(\"sap/m/DisplayListItemRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/DisplayListItem.js","module.exports = \"TITLE=Todos\\nINPUT_PLACEHOLDER=Was muss getan werden?\\nITEM_LEFT=Eintrag \\\\u00fcbrig\\nITEMS_LEFT=Eintr\\\\u00e4ge \\\\u00fcbrig\\nCLEAR_COMPLETED=Erledigte Eintr\\\\u00e4ge entfernen\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./i18n/i18n_de.properties\n// module id = dpi6\n// module chunks = 1","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define([\"sap/ui/core/library\"],\n\tfunction(coreLibrary) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t/**\n\t * Segmented renderer.\n\t * @namespace\n\t */\n\tvar SegmentedButtonRenderer = {\n\t};\n\n\t/**\n\t * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager} oRM the RenderManager that can be used for writing to the Render-Output-Buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tSegmentedButtonRenderer.render = function(oRM, oControl){\n\t\tvar aButtons = oControl.getButtons(),\n\t\t\tsSelectedButton = oControl.getSelectedButton(),\n\t\t\toButton,\n\t\t\tsTooltip,\n\t\t\tsButtonWidth,\n\t\t\tsButtonTextDirection;\n\n\t\t// Select representation mockup\n\t\tif (oControl._bInOverflow) {\n\t\t\toRM.write(\"<div\");\n\t\t\toRM.writeControlData(oControl);\n\t\t\toRM.writeClasses();\n\t\t\toRM.write(\">\");\n\t\t\toRM.renderControl(oControl.getAggregation(\"_select\"));\n\t\t\toRM.write(\"</div>\");\n\t\t\treturn;\n\t\t}\n\n\t\t// write the HTML into the render manager\n\t\toRM.write(\"<ul\");\n\n\n\t\tif (SegmentedButtonRenderer._addAllIconsClass(aButtons)) {\n\t\t\toRM.addClass(\"sapMSegBIcons\");\n\t\t}\n\t\toRM.addClass(\"sapMSegB\");\n\t\toRM.writeClasses();\n\t\tif (oControl.getWidth() && oControl.getWidth() !== '') {\n\t\t\toRM.addStyle('width', oControl.getWidth());\n\t\t}\n\t\toRM.writeStyles();\n\t\toRM.writeControlData(oControl);\n\t\tsTooltip = oControl.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\toRM.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\t// ARIA\n\t\toRM.writeAccessibilityState(oControl, {\n\t\t\trole : \"radiogroup\"\n\t\t});\n\n\t\toRM.write(\">\");\n\n\t\tfor (var i = 0; i < aButtons.length; i++) {\n\t\t\toButton = aButtons[i];\n\n\t\t\t// instead of the button API we render a li element but with the id of the button\n\t\t\t// only the button properties enabled, width, icon, text, and tooltip are evaluated here\n\t\t\toRM.write(\"<li\");\n\n\t\t\tif (oButton.getVisible()) {\n\t\t\t\tvar sButtonText = oButton.getText(),\n\t\t\t\t\toButtonIcon = oButton.getIcon(),\n\t\t\t\t\tsIconAriaLabel = \"\",\n\t\t\t\t\toImage;\n\n\t\t\t\tif (oButtonIcon) {\n\t\t\t\t\toImage = oButton._getImage((oButton.getId() + \"-img\"), oButtonIcon);\n\t\t\t\t\tif (oImage instanceof sap.m.Image) {\n\t\t\t\t\t\toControl._overwriteImageOnload(oImage);\n\t\t\t\t\t} else if (!oButton.getTooltip()) { //BCP: 1670076777- Put aria-label only for icon or icon+text\n\t\t\t\t\t\tsIconAriaLabel = oControl._getIconAriaLabel(oImage);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toRM.writeControlData(oButton);\n\t\t\t\toRM.writeAttribute(\"aria-posinset\", i + 1);\n\t\t\t\toRM.writeAttribute(\"aria-setsize\", aButtons.length);\n\t\t\t\toRM.addClass(\"sapMSegBBtn\");\n\t\t\t\tif (oButton.aCustomStyleClasses !== undefined && oButton.aCustomStyleClasses instanceof Array) {\n\t\t\t\t\tfor (var j = 0; j < oButton.aCustomStyleClasses.length; j++) {\n\t\t\t\t\t\toRM.addClass(oButton.aCustomStyleClasses[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oButton.getEnabled()) {\n\t\t\t\t\toRM.addClass(\"sapMSegBBtnFocusable\");\n\t\t\t\t} else {\n\t\t\t\t\toRM.addClass(\"sapMSegBBtnDis\");\n\t\t\t\t}\n\t\t\t\tif (sSelectedButton === oButton.getId()) {\n\t\t\t\t\toRM.addClass(\"sapMSegBBtnSel\");\n\t\t\t\t}\n\t\t\t\tif (oButtonIcon && sButtonText !== '') {\n\t\t\t\t\toRM.addClass(\"sapMSegBBtnMixed\");\n\t\t\t\t}\n\t\t\t\toRM.writeClasses();\n\t\t\t\tsButtonWidth = oButton.getWidth();\n\t\t\t\tif (sButtonWidth) {\n\t\t\t\t\toRM.addStyle('width', sButtonWidth);\n\t\t\t\t\toRM.writeStyles();\n\t\t\t\t}\n\n\t\t\t\tsTooltip = oButton.getTooltip_AsString();\n\t\t\t\tif (sTooltip) {\n\t\t\t\t\toRM.writeAttributeEscaped(\"title\", sTooltip);\n\t\t\t\t}\n\t\t\t\toRM.writeAttribute(\"tabindex\", oButton.getEnabled() ? \"0\" : \"-1\");\n\n\t\t\t\tsButtonTextDirection = oButton.getTextDirection();\n\t\t\t\tif (sButtonTextDirection !== TextDirection.Inherit) {\n\t\t\t\t\toRM.writeAttribute(\"dir\", sButtonTextDirection.toLowerCase());\n\t\t\t\t}\n\n\t\t\t\t// ARIA\n\t\t\t\toRM.writeAccessibilityState(oButton, {\n\t\t\t\t\trole : \"radio\",\n\t\t\t\t\tchecked : sSelectedButton === oButton.getId()\n\t\t\t\t});\n\n\t\t\t\t// BCP:1570027826 If button has an icon add ARIA label containing the generic icon name\n\t\t\t\tif (oImage && sIconAriaLabel !== \"\") {\n\t\t\t\t\t// If there is text inside the button add it in the aria-label\n\t\t\t\t\tif (sButtonText !== \"\") {\n\t\t\t\t\t\tsIconAriaLabel += \" \" + sButtonText;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if we have no text for the button set tooltip the name of the Icon\n\t\t\t\t\t\toRM.writeAttributeEscaped(\"title\", sIconAriaLabel);\n\t\t\t\t\t}\n\t\t\t\t\toRM.writeAttributeEscaped(\"aria-label\", sIconAriaLabel);\n\t\t\t\t}\n\n\t\t\t\toRM.write('>');\n\n\t\t\t\tif (oButtonIcon && oImage) {\n\t\t\t\t\toRM.renderControl(oImage);\n\t\t\t\t}\n\n\t\t\t\t// render text\n\t\t\t\tif (sButtonText !== '') {\n\t\t\t\t\toRM.writeEscaped(sButtonText, false);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toRM.writeInvisiblePlaceholderData(oButton);\n\t\t\t\toRM.write('>');\n\t\t\t}\n\t\t\toRM.write(\"</li>\");\n\t\t}\n\t\toRM.write(\"</ul>\");\n\t};\n\n\tSegmentedButtonRenderer._addAllIconsClass = function (aButtons) {\n\t\tfor (var i = 0; i < aButtons.length; i++) {\n\t\t\tif (!aButtons[i].getIcon()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\n\treturn SegmentedButtonRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/SegmentedButtonRenderer.js","require(\"sap/m/themes/sap_belize/SegmentedButton.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.SegmentedButton.\nsap.ui.define(['./library', 'sap/ui/core/Control', 'sap/ui/core/EnabledPropagator', 'sap/ui/core/delegate/ItemNavigation', 'sap/ui/core/ResizeHandler', 'sap/ui/core/Item', 'sap/ui/core/IconPool'],\n\tfunction(library, Control, EnabledPropagator, ItemNavigation, ResizeHandler, Item, IconPool) {\n\t\"use strict\";\n\n\n\n\t/**\n\t * Constructor for a new <code>SegmentedButton</code>.\n\t *\n\t * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * A horizontal control made of multiple buttons, which can display a title or an image.\n\t *\n\t * <h3>Overview</h3>\n\t *\n\t * The <code>SegmentedButton</code> shows a group of buttons. When the user clicks or taps\n\t * one of the buttons, it stays in a pressed state. It automatically resizes the buttons\n\t * to fit proportionally within the control. When no width is set, the control uses the available width.\n\t *\n\t * @extends sap.ui.core.Control\n\t * @implements sap.ui.core.IFormContent\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.SegmentedButton\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar SegmentedButton = Control.extend(\"sap.m.SegmentedButton\", /** @lends sap.m.SegmentedButton.prototype */ { metadata : {\n\n\t\tinterfaces : [\"sap.ui.core.IFormContent\"],\n\t\tlibrary : \"sap.m\",\n\t\tpublicMethods : [\"createButton\"],\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Defines the width of the SegmentedButton control. If not set, it uses the minimum required width to make all buttons inside of the same size (based on the biggest button).\n\t\t\t *\n\t\t\t */\n\t\t\twidth : {type : \"sap.ui.core.CSSSize\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Disables all the buttons in the SegmentedButton control. When disabled all the buttons look grey and you cannot focus or click on them.\n\t\t\t */\n\t\t\tenabled : {type : \"boolean\", group : \"Behavior\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Key of the selected item. If no item to this key is found in the items aggregation, no changes will apply. Only the items aggregation is affected. If duplicate keys exist, the first item matching the key is used.\n\t\t\t * @since 1.28.0\n\t\t\t */\n\t\t\tselectedKey: { type: \"string\", group: \"Data\", defaultValue: \"\", bindable: \"bindable\" }\n\t\t},\n\t\tdefaultAggregation : \"buttons\",\n\t\taggregations : {\n\n\t\t\t/**\n\t\t\t * The buttons of the SegmentedButton control. The items set in this aggregation are used as an interface for the buttons displayed by the control. Only the properties ID, icon, text, enabled and textDirections of the Button control are evaluated. Setting other properties of the button will have no effect. Alternatively, you can use the createButton method to add buttons.\n\t\t\t * @deprecated Since 1.28.0 Instead use the \"items\" aggregation.\n\t\t\t */\n\t\t\tbuttons : {type : \"sap.m.Button\", multiple : true, singularName : \"button\"},\n\n\t\t\t/**\n\t\t\t * Aggregation of items to be displayed. The items set in this aggregation are used as an interface for the buttons displayed by the control.\n\t\t\t * The \"items\" and \"buttons\" aggregations should NOT be used simultaneously as it causes the control to work incorrectly.\n\t\t\t * @since 1.28\n\t\t\t */\n\t\t\titems : { type : \"sap.m.SegmentedButtonItem\", multiple : true, singularName : \"item\", bindable : \"bindable\" },\n\n\t\t\t/**\n\t\t\t * Hidden aggregation that holds an instance of sap.m.Select to be used in some contexts as a representation of the segmented button (for example, in a popover with little space).\n\t\t\t */\n\t\t\t_select: { type : \"sap.m.Select\", multiple : false, visibility : \"hidden\"}\n\t\t},\n\t\tassociations : {\n\n\t\t\t/**\n\t\t\t * A reference to the currently selected button control. By default or if the association is set to false (null, undefined, \"\", false), the first button will be selected.\n\t\t\t * If the association is set to an invalid value (for example, an ID of a button that does not exist) the selection on the SegmentedButton will be removed.\n\t\t\t * @deprecated As of version 1.52, use the <code>selectedItem</code> association instead.\n\t\t\t */\n\t\t\tselectedButton : {deprecated: true, type : \"sap.m.Button\", multiple : false},\n\n\t\t\t/**\n\t\t\t * A reference to the currently selected item control.\n\t\t\t * @since 1.52\n\t\t\t */\n\t\t\tselectedItem : {type : \"sap.m.SegmentedButtonItem\", multiple : false},\n\n\t\t\t/**\n\t\t\t * Association to controls / IDs, which describe this control (see WAI-ARIA attribute aria-describedby).\n\t\t\t */\n\t\t\tariaDescribedBy : {type : \"sap.ui.core.Control\", multiple : true, singularName : \"ariaDescribedBy\"},\n\n\t\t\t/**\n\t\t\t * Association to controls / IDs, which label this control (see WAI-ARIA attribute aria-labelledby).\n\t\t\t */\n\t\t\tariaLabelledBy : {type : \"sap.ui.core.Control\", multiple : true, singularName : \"ariaLabelledBy\"}\n\t\t},\n\t\tevents : {\n\n\t\t\t/**\n\t\t\t * Fires when the user selects a button, which returns the ID and button object.\n\t\t\t * @deprecated As of version 1.52, use the <code>selectionChange</code> event instead.\n\t\t\t */\n\t\t\tselect : {\n\t\t\t\tdeprecated: true,\n\t\t\t\tparameters : {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Reference to the button, that has been selected.\n\t\t\t\t\t */\n\t\t\t\t\tbutton : {type : \"sap.m.Button\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * ID of the button, which has been selected.\n\t\t\t\t\t */\n\t\t\t\t\tid : {type : \"string\"},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Key of the button, which has been selected. This property is only filled when the control is initiated with the items aggregation.\n\t\t\t\t\t * @since 1.28.0\n\t\t\t\t\t */\n\t\t\t\t\tkey : {type : \"string\"}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * Fires when the user selects an item, which returns the item object.\n\t\t\t * @since 1.52\n\t\t\t */\n\t\t\tselectionChange : {\n\t\t\t\tparameters : {\n\t\t\t\t\t/**\n\t\t\t\t\t * Reference to the item, that has been selected.\n\t\t\t\t\t */\n\t\t\t\t\titem : {type : \"sap.m.SegmentedButtonItem\"}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}});\n\n\n\tEnabledPropagator.call(SegmentedButton.prototype);\n\n\tSegmentedButton.prototype.init = function () {\n\t\t// Used to store individual button widths\n\t\tthis._aWidths = [];\n\n\t\t// Delegate keyboard processing to ItemNavigation, see commons.SegmentedButton\n\t\tthis._oItemNavigation = new ItemNavigation();\n\t\tthis._oItemNavigation.setCycling(false);\n\t\t//this way we do not hijack the browser back/forward navigation\n\t\tthis._oItemNavigation.setDisabledModifiers({\n\t\t\tsapnext: [\"alt\"],\n\t\t\tsapprevious: [\"alt\"]\n\t\t});\n\t\tthis.addDelegate(this._oItemNavigation);\n\n\t\t//Make sure when a button gets removed to reset the selected button\n\t\tthis.removeButton = function (sButton) {\n\t\t\tSegmentedButton.prototype.removeButton.call(this, sButton);\n\t\t\tthis.setSelectedButton(this.getButtons()[0]);\n\t\t};\n\t};\n\n\tSegmentedButton.prototype.onBeforeRendering = function () {\n\t\tvar aButtons = this._getVisibleButtons();\n\n\t\tthis._bCustomButtonWidth = aButtons.some(function(oButton) {\n\t\t\treturn oButton.getWidth();\n\t\t});\n\n\t\tif (this._sResizeListenerId) {\n\t\t\tResizeHandler.deregister(this._sResizeListenerId);\n\t\t\tthis._sResizeListenerId = null;\n\t\t}\n\n\t\t// Update the selectedKey because here we have all the aggregations loaded\n\t\tthis.setSelectedKey(this.getProperty(\"selectedKey\"));\n\n\t\tif (!this.getSelectedButton()) {\n\t\t\tthis._selectDefaultButton();\n\t\t}\n\t};\n\n\tSegmentedButton.prototype.onAfterRendering = function () {\n\t\tvar aButtons = this._getVisibleButtons(),\n\t\t\toParentDom;\n\n\t\t//register resize listener on parent\n\t\tif (!this._sResizeListenerId) {\n\t\t\toParentDom = this.getDomRef().parentNode;\n\t\t\tif (oParentDom) {\n\t\t\t\tthis._sResizeListenerId = ResizeHandler.register(oParentDom,\n\t\t\t\t\tthis._handleContainerResize.bind(this));\n\t\t\t}\n\t\t}\n\n\t\t// Keyboard\n\t\tthis._setItemNavigation();\n\n\t\t// Calculate and apply widths\n\t\tthis._aWidths = this._getRenderedButtonWidths(aButtons);\n\t\tthis._updateWidth();\n\t};\n\n\t/**\n\t * Method to handle container resize events and trigger needed reset/recalculation if needed.\n\t * @private\n\t */\n\tSegmentedButton.prototype._handleContainerResize = function () {\n\t\tvar aButtons = this._getVisibleButtons();\n\n\t\t// Needed to provide correct width recalculation\n\t\tthis._clearAutoWidthAppliedToControl();\n\n\t\t// Get new widths and apply to button\n\t\tthis._aWidths = this._getRenderedButtonWidths(aButtons);\n\t\tthis._updateWidth();\n\t};\n\n\t/**\n\t * Clear width, previously calculated by the SegmentedButton and applied to the control\n\t * @private\n\t */\n\tSegmentedButton.prototype._clearAutoWidthAppliedToControl = function () {\n\t\tvar aButtons = this._getVisibleButtons(),\n\t\t\tiButtonsLength = aButtons.length,\n\t\t\toButton,\n\t\t\ti = 0;\n\n\t\tif (!this.getWidth()) {\n\t\t\tthis.$().css(\"width\", \"\");\n\t\t}\n\t\twhile (i < iButtonsLength) {\n\t\t\toButton = aButtons[i];\n\t\t\tif (!oButton.getWidth()) {\n\t\t\t\toButton.$().css(\"width\", \"\");\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t};\n\n\t/**\n\t * Returns a new array with all rendered button widths.\n\t * @param {array} aButtons with buttons\n\t * @returns {array} The array of the widths\n\t * @private\n\t */\n\tSegmentedButton.prototype._getRenderedButtonWidths = function (aButtons) {\n\t\treturn aButtons.map(function (oButton) {\n\t\t\treturn oButton.$().outerWidth();\n\t\t});\n\t};\n\n\t/**\n\t * Returns button width for button without pre-setted width depending on the other buttons in the control.\n\t * @param {array} aButtons Array containing all visible buttons\n\t * @returns {string|boolean} CSS Width or false\n\t * @private\n\t */\n\tSegmentedButton.prototype._getButtonWidth = function (aButtons) {\n\t\tvar iButtons = aButtons.length,\n\t\t\tsWidth,\n\t\t\tiNoWidths = 0,\n\t\t\tiSumPercents = 0,\n\t\t\tiSumPixels = 0,\n\t\t\tiPercent,\n\t\t\tiPixels,\n\t\t\ti = 0;\n\n\t\tif (this._bCustomButtonWidth) {\n\t\t\twhile (i < iButtons) {\n\t\t\t\tsWidth = aButtons[i].getWidth();\n\t\t\t\tif (sWidth) {\n\t\t\t\t\tif (sWidth.indexOf(\"%\") !== -1) {\n\t\t\t\t\t\t// Width in Percent\n\t\t\t\t\t\tiSumPercents += parseInt(sWidth.slice(0, -1), 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Width in Pixels\n\t\t\t\t\t\tiSumPixels += parseInt(sWidth.slice(0, -2), 10);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tiNoWidths++;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\t// If there are no buttons without width setted return\n\t\t\tif (iNoWidths === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tiPercent = (100 - iSumPercents) / iNoWidths;\n\t\t\tiPixels = (iSumPixels / iNoWidths);\n\n\t\t\t// Handle invalid negative numbers or other button occupying more than 100% of the width\n\t\t\tif (iPercent < 0) {\n\t\t\t\tiPercent = 0;\n\t\t\t}\n\t\t\tif (iPixels < 0) {\n\t\t\t\tiPixels = 0;\n\t\t\t}\n\n\t\t\tif (iPixels > 0) {\n\t\t\t\treturn \"calc(\" + iPercent + \"% - \" + iPixels + \"px)\";\n\t\t\t} else {\n\t\t\t\treturn iPercent + \"%\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn (100 / iButtons) + \"%\";\n\t\t}\n\t};\n\n\t/**\n\t * Recalculates and updates the width of the control and the rendered buttons\n\t * @private\n\t */\n\tSegmentedButton.prototype._updateWidth = function () {\n\t\t// If this method is called before the dom is rendered or sapUiSegmentedButtonNoAutoWidth style class is applied\n\t\t// we skip width calculations\n\t\tif (this.$().length === 0 || this.hasStyleClass(\"sapMSegmentedButtonNoAutoWidth\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sControlWidth = this.getWidth(),\n\t\t\taButtons = this._getVisibleButtons(),\n\t\t\tiButtonsCount = aButtons.length,\n\t\t\tiMaxWidth = (this._aWidths.length > 0) ? Math.max.apply(Math, this._aWidths) : 0,\n\t\t\tiButtonWidthPercent = (100 / iButtonsCount),\n\t\t\tiParentWidth = this.$().parent().innerWidth(),\n\t\t\tsWidth = this._getButtonWidth(aButtons),\n\t\t\toButton,\n\t\t\ti;\n\n\t\tif (!sControlWidth) {\n\t\t\t// Modify whole control width if needed\n\t\t\tif ((iMaxWidth * iButtonsCount) > iParentWidth) {\n\t\t\t\tthis.$().css(\"width\", \"100%\");\n\t\t\t} else if (iMaxWidth > 0) {\n\t\t\t\t// Here we add 1px to compensate for the border which is taken within the calculation of max width\n\t\t\t\tthis.$().width((iMaxWidth * iButtonsCount) + 1);\n\t\t\t}\n\t\t\t// Modify button widths\n\t\t\ti = 0;\n\t\t\twhile (i < iButtonsCount) {\n\t\t\t\toButton = aButtons[i];\n\t\t\t\toButton.$().css(\"width\", oButton.getWidth() ? oButton.getWidth() : sWidth);\n\t\t\t\ti++;\n\t\t\t}\n\t\t} else if (sControlWidth && !this._bCustomButtonWidth) {\n\t\t\t// Modify button widths\n\t\t\ti = 0;\n\t\t\twhile (i < iButtonsCount) {\n\t\t\t\taButtons[i].$().css(\"width\", iButtonWidthPercent + \"%\");\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t};\n\n\tSegmentedButton.prototype.exit = function () {\n\t\tif (this._sResizeListenerId) {\n\t\t\tResizeHandler.deregister(this._sResizeListenerId);\n\t\t\tthis._sResizeListenerId = null;\n\t\t}\n\t\tif (this._oItemNavigation) {\n\t\t\tthis.removeDelegate(this._oItemNavigation);\n\t\t\tthis._oItemNavigation.destroy();\n\t\t\tdelete this._oItemNavigation;\n\t\t}\n\t\tthis._bCustomButtonWidth = null;\n\t\tthis._aWidths = null;\n\t};\n\n\t/**\n\t * @private\n\t */\n\tSegmentedButton.prototype._setItemNavigation = function () {\n\t\tvar aButtons,\n\t\t\toDomRef = this.getDomRef();\n\n\t\tif (oDomRef) {\n\t\t\tthis._oItemNavigation.setRootDomRef(oDomRef);\n\t\t\taButtons = this.$().find(\".sapMSegBBtn:not(.sapMSegBBtnDis)\");\n\t\t\tthis._oItemNavigation.setItemDomRefs(aButtons);\n\t\t\tthis._focusSelectedButton();\n\t\t}\n\t};\n\n\t/**\n\t * Adds a Button with a text as title, a URI for an icon, enabled and textDirection.\n\t * Only one is allowed.\n\t *\n\t * @param {string} sText\n\t *         Defines the title text of the newly created Button\n\t * @param {sap.ui.core.URI} sURI\n\t *         Icon to be displayed as graphical element within the Button.\n\t *         Density related image will be loaded if image with density awareness name in format [imageName]@[densityValue].[extension] is provided.\n\t * @param {boolean} bEnabled\n\t *         Enables the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\t * @param {sap.ui.core.TextDirection} [sTextDirection]\n\t *         Element's text directionality with enumerated options\n\t *         @since 1.28.0\n\t * @return {sap.m.Button} The created Button\n\t * @public\n\t * @ui5-metamodel This method also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tSegmentedButton.prototype.createButton = function (sText, sURI, bEnabled, sTextDirection) {\n\t\tvar oButton = new sap.m.Button();\n\n\t\tif (sText !== null) {\n\t\t\toButton.setText(sText);\n\t\t}\n\t\tif (sURI !== null) {\n\t\t\toButton.setIcon(sURI);\n\t\t}\n\t\tif (bEnabled || bEnabled === undefined) {\n\t\t\toButton.setEnabled(true);\n\t\t} else {\n\t\t\toButton.setEnabled(false);\n\t\t}\n\t\tif (sTextDirection) {\n\t\t\toButton.setTextDirection(sTextDirection);\n\t\t}\n\t\tthis.addButton(oButton);\n\n\t\treturn oButton;\n\t};\n\n\t(function (){\n\t\tSegmentedButton.prototype.addButton = function (oButton) {\n\t\t\tif (oButton) {\n\t\t\t\tprocessButton(oButton, this);\n\t\t\t\tthis.addAggregation('buttons', oButton);\n\t\t\t\tthis._syncSelect();\n\t\t\t\treturn this;\n\t\t\t}\n\t\t};\n\n\t\tSegmentedButton.prototype.insertButton = function (oButton, iIndex) {\n\t\t\tif (oButton) {\n\t\t\t\tprocessButton(oButton, this);\n\t\t\t\tthis.insertAggregation('buttons', oButton, iIndex);\n\t\t\t\tthis._syncSelect();\n\t\t\t\treturn this;\n\t\t\t}\n\t\t};\n\n\t\tfunction processButton(oButton, oParent){\n\t\t\toButton.attachPress(function (oEvent) {\n\t\t\t\toParent._buttonPressed(oEvent);\n\t\t\t});\n\n\t\t\toButton.attachEvent(\"_change\", oParent._syncSelect, oParent);\n\t\t\toButton.attachEvent(\"_change\", oParent._forwardChangeEvent, oParent);\n\n\t\t\tvar fnOriginalSetEnabled = sap.m.Button.prototype.setEnabled;\n\t\t\toButton.setEnabled = function (bEnabled) {\n\t\t\t\toButton.$().toggleClass(\"sapMSegBBtnDis\", !bEnabled)\n\t\t\t\t\t.toggleClass(\"sapMFocusable\", bEnabled);\n\n\t\t\t\tfnOriginalSetEnabled.apply(oButton, arguments);\n\t\t\t};\n\n\t\t\toButton.setVisible = function (bVisible) {\n\t\t\t\tsap.m.Button.prototype.setVisible.apply(this, arguments);\n\t\t\t\toParent.invalidate();\n\t\t\t};\n\t\t}\n\n\t})();\n\n\t/**\n\t * Gets the <code>selectedKey</code> and is usable only when the control is initiated with the <code>items</code> aggregation.\n\t *\n\t * @return {string} Current selected key\n\t * @public\n\t * @override\n\t * @since 1.28\n\t */\n\tSegmentedButton.prototype.getSelectedKey = function() {\n\t\tvar aButtons = this.getButtons(),\n\t\t\taItems = this.getItems(),\n\t\t\tsSelectedButtonId = this.getSelectedButton(),\n\t\t\ti = 0;\n\n\t\tif (aItems.length > 0) {\n\t\t\tfor (; i < aButtons.length; i++) {\n\t\t\t\tif (aButtons[i] && aButtons[i].getId() === sSelectedButtonId) {\n\t\t\t\t\tthis.setProperty(\"selectedKey\", aItems[i].getKey(), true);\n\t\t\t\t\treturn aItems[i].getKey();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t/**\n\t * Sets the <code>selectedKey</code> and is usable only when the control is initiated with the <code>items</code> aggregation.\n\t *\n\t * @param {string} sKey The key of the button to be selected\n\t * @returns {sap.m.SegmentedButton} <code>this</code> pointer for chaining\n\t * @public\n\t * @override\n\t * @since 1.28\n\t */\n\tSegmentedButton.prototype.setSelectedKey = function(sKey) {\n\t\tvar aButtons = this.getButtons(),\n\t\t\taItems = this.getItems(),\n\t\t\ti = 0;\n\n\t\t// If sKey is empty, undefined or falsy we don't select nothing\n\t\tif (!sKey) {\n\t\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tif (aItems.length > 0 && aButtons.length > 0) {\n\t\t\tfor (; i < aItems.length; i++) {\n\t\t\t\tif (aItems[i] && aItems[i].getKey() === sKey) {\n\t\t\t\t\tthis.setSelectedItem(aItems[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setProperty(\"selectedKey\", sKey, true);\n\t\treturn this;\n\t};\n\n\tSegmentedButton.prototype.removeButton = function (oButton) {\n\t\tvar oRemovedButton = this.removeAggregation(\"buttons\", oButton);\n\t\tif (oRemovedButton) {\n\t\t\tdelete oRemovedButton.setEnabled;\n\t\t\toRemovedButton.detachEvent(\"_change\", this._syncSelect, this);\n\t\t\toRemovedButton.detachEvent(\"_change\", this._forwardChangeEvent, this);\n\t\t\tthis._syncSelect();\n\t\t}\n\t};\n\n\tSegmentedButton.prototype.removeAllButtons = function () {\n\t\tvar aButtons = this.getButtons();\n\t\tif (aButtons) {\n\t\t\tfor ( var i = 0; i < aButtons.length; i++) {\n\t\t\t\tvar oButton = aButtons[i];\n\t\t\t\tif (oButton) {\n\t\t\t\t\tdelete oButton.setEnabled;\n\t\t\t\t\tthis.removeAggregation(\"buttons\", oButton);\n\t\t\t\t\toButton.detachEvent(\"_change\", this._syncSelect, this);\n\t\t\t\t\toButton.detachEvent(\"_change\", this._forwardChangeEvent, this);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._syncSelect();\n\t\t}\n\t};\n\n\t/**\n\t * Adds item to <code>items</code> aggregation.\n\t * @param {sap.m.SegmentedButtonItem} oItem The item to be added\n\t * @param {boolean} [bSuppressInvalidate=false] If <code>true</code> the control invalidation will be suppressed\n\t * @public\n\t * @override\n\t */\n\tSegmentedButton.prototype.addItem = function (oItem, bSuppressInvalidate) {\n\t\tthis.addAggregation(\"items\", oItem, bSuppressInvalidate);\n\t\tthis.addButton(oItem.oButton);\n\t};\n\n\t/**\n\t * Removes an item from <code>items</code> aggregation.\n\t * @param {sap.m.SegmentedButtonItem} oItem The item to be removed\n\t * @param {boolean} [bSuppressInvalidate=false] If <code>true</code> the control invalidation will be suppressed\n\t * @public\n\t * @override\n\t */\n\tSegmentedButton.prototype.removeItem = function (oItem, bSuppressInvalidate) {\n\t\tif (oItem !== null && oItem !== undefined) {\n\t\t\tthis.removeAggregation(\"buttons\", oItem.oButton, true);\n\t\t\tthis.removeAggregation(\"items\", oItem, bSuppressInvalidate);\n\t\t}\n\t\t// Reset selected button if the removed button is the currently selected one\n\t\tif (oItem && oItem instanceof sap.m.SegmentedButtonItem && this.getSelectedButton() === oItem.oButton.getId()) {\n\t\t\tthis.setSelectedKey(\"\");\n\t\t\tthis.setSelectedButton(\"\");\n\t\t\tthis.setSelectedItem(\"\");\n\t\t}\n\n\t\tthis.setSelectedItem(this.getItems()[0]);\n\t};\n\n\t/**\n\t * Inserts item into <code>items</code> aggregation.\n\t * @param {sap.m.SegmentedButtonItem} oItem The item to be inserted\n\t * @param {int} iIndex index the item should be inserted at\n\t * @param {boolean} [bSuppressInvalidate=false] If <code>true</code> the control invalidation will be suppressed\n\t * @public\n\t * @override\n\t */\n\tSegmentedButton.prototype.insertItem = function (oItem, iIndex, bSuppressInvalidate) {\n\t\tthis.insertAggregation(\"items\", oItem, iIndex, bSuppressInvalidate);\n\t\tthis.insertButton(oItem.oButton, iIndex);\n\t};\n\n\t/**\n\t * Removes all items from <code>items</code> aggregation\n\t * @param {boolean} [bSuppressInvalidate=false] If <code>true</code> the control invalidation will be suppressed\n\t * @public\n\t * @override\n\t */\n\tSegmentedButton.prototype.removeAllItems = function (bSuppressInvalidate) {\n\t\tthis.removeAllAggregation(\"items\", bSuppressInvalidate);\n\t\tthis.removeAllButtons();\n\n\t\t// Reset selectedKey, selectedButton and selectedItem\n\t\tthis.setSelectedKey(\"\");\n\t\tthis.setSelectedButton(\"\");\n\t\tthis.setSelectedItem(\"\");\n\t};\n\n\t/** Event handler for the internal button press events.\n\t * @param {Object} oEvent The event to be fired\n\t * @private\n\t */\n\tSegmentedButton.prototype._buttonPressed = function (oEvent) {\n\t\tvar oButtonPressed = oEvent.getSource(),\n\t\t\toItemPressed;\n\n\t\tif (this.getSelectedButton() !== oButtonPressed.getId()) {\n\t\t\t// CSN# 0001429454/2014: remove class for all other items\n\t\t\tthis.getButtons().forEach(function (oButton) {\n\t\t\t\toButton.$().removeClass(\"sapMSegBBtnSel\");\n\t\t\t\toButton.$().attr(\"aria-checked\", false);\n\t\t\t});\n\n\t\t\t//get the corresponding item regarding the pressed button\n\t\t\toItemPressed = this.getItems().filter(function (oItem) {\n\t\t\t\treturn oItem.oButton === oButtonPressed;\n\t\t\t})[0];\n\n\t\t\toButtonPressed.$().addClass(\"sapMSegBBtnSel\");\n\t\t\toButtonPressed.$().attr(\"aria-checked\", true);\n\n\t\t\tthis.setAssociation('selectedButton', oButtonPressed, true);\n\t\t\tthis.setProperty(\"selectedKey\", this.getSelectedKey(), true);\n\n\t\t\tthis.setAssociation('selectedItem', oItemPressed, true);\n\t\t\tthis.fireSelectionChange({\n\t\t\t\titem: oItemPressed\n\t\t\t});\n\n\t\t\t// support old API\n\t\t\tthis.fireSelect({\n\t\t\t\tbutton: oButtonPressed,\n\t\t\t\tid: oButtonPressed.getId(),\n\t\t\t\tkey: this.getSelectedKey()\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Internal helper function that sets the association <code>selectedButton</code> to the first button.\n\t * @private\n\t */\n\tSegmentedButton.prototype._selectDefaultButton = function () {\n\t\tvar aButtons = this._getVisibleButtons();\n\n\t\t// CSN# 0001429454/2014: when the id evaluates to false (null, undefined, \"\") the first button should be selected\n\t\tif (aButtons.length > 0) {\n\t\t\tthis.setAssociation('selectedButton', aButtons[0], true);\n\n\t\t\tif (this.getItems().length > 0) {\n\t\t\t\tthis.setAssociation('selectedItem', this.getItems()[0], true);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Setter for association <code>selectedButton</code>.\n\t *\n\t * @param {string | sap.m.Button | null | undefined} vButton New value for association <code>setSelectedButton</code>\n\t *    An sap.m.Button instance which becomes the new target of this <code>selectedButton</code> association.\n\t *    Alternatively, the ID of an sap.m.Button instance may be given as a string.\n\t *    If the value of null, undefined, or an empty string is provided the first item will be selected.\n\t * @returns {sap.m.SegmentedButton} <code>this</code> this pointer for chaining\n\t * @public\n\t */\n\tSegmentedButton.prototype.setSelectedButton = function (vButton) {\n\t\tvar sSelectedButtonBefore = this.getSelectedButton(),\n\t\t\toSelectedButton,\n\t\t\taButtons = this.getButtons();\n\n\t\t// set the new value\n\t\tthis.setAssociation(\"selectedButton\", vButton, true);\n\n\t\t// CSN# 1143859/2014: update selection state in DOM when calling API method to change the selection\n\t\tif (sSelectedButtonBefore !== this.getSelectedButton()) {\n\t\t\t// CSN# 0001429454/2014: only update DOM when control is already rendered (otherwise it will be done in onBeforeRendering)\n\t\t\tif (this.$().length) {\n\t\t\t\t// Select default button if there is no selected button and if there is more than one button available\n\t\t\t\tif (!this.getSelectedButton() && aButtons.length > 1) {\n\t\t\t\t\tthis._selectDefaultButton();\n\t\t\t\t}\n\t\t\t\toSelectedButton = sap.ui.getCore().byId(this.getSelectedButton());\n\t\t\t\taButtons.forEach(function (oButton) {\n\t\t\t\t\toButton.$().removeClass(\"sapMSegBBtnSel\");\n\t\t\t\t\toButton.$().attr(\"aria-checked\", false);\n\t\t\t\t});\n\t\t\t\tif (oSelectedButton) {\n\t\t\t\t\toSelectedButton.$().addClass(\"sapMSegBBtnSel\");\n\t\t\t\t\toSelectedButton.$().attr(\"aria-checked\", true);\n\t\t\t\t}\n\t\t\t\tthis._focusSelectedButton();\n\t\t\t}\n\t\t}\n\n\t\tthis._syncSelect();\n\t\treturn this;\n\t};\n\n\t/**\n\t * Setter for association <code>selectedItem</code>.\n\t *\n\t * @param {string | <code>sap.m.SegmentedButtonItem</code> | null | undefined} vItem New value for association <code>setSelectedItem</code>\n\t *    An sap.m.SegmentedButtonItem instance which becomes the new target of this <code>selectedItem</code> association.\n\t *    Alternatively, the ID of an <code>sap.m.SegmentedButtonItem</code> instance may be given as a string.\n\t *    If the value of null, undefined, or an empty string is provided, the first item will be selected.\n\t * @returns {sap.m.SegmentedButton} <code>this</code> pointer for chaining\n\t * @public\n\t * @override\n\t */\n\tSegmentedButton.prototype.setSelectedItem = function (vItem) {\n\t\tvar oItem = typeof vItem === \"string\" && vItem !== \"\" ? sap.ui.getCore().byId(vItem) : vItem,\n\t\t\toItemInstanceOfSegBtnItem = oItem instanceof sap.m.SegmentedButtonItem,\n\t\t\tvButton = oItemInstanceOfSegBtnItem ? oItem.oButton : vItem;\n\n\t\t// set the new value\n\t\tthis.setAssociation(\"selectedItem\", vItem, true);\n\t\tthis.setSelectedButton(vButton);\n\n\t\treturn this;\n\t};\n\n\tSegmentedButton.prototype._focusSelectedButton = function () {\n\t\tvar aButtons = this.getButtons(),\n\t\t\tselectedButtonId = this.getSelectedButton(),\n\t\t\ti = 0;\n\n\t\tfor (; i < aButtons.length; i++) {\n\t\t\tif (aButtons[i] && aButtons[i].getId() === selectedButtonId) {\n\t\t\t\tthis._oItemNavigation.setFocusedIndex(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tSegmentedButton.prototype.onsappagedown = function(oEvent) {\n\t\tthis._oItemNavigation.onsapend(oEvent);\n\t};\n\n\tSegmentedButton.prototype.onsappageup = function(oEvent) {\n\t\tthis._oItemNavigation.onsaphome(oEvent);\n\t};\n\n\n\n\n\t/** Select form function **/\n\n\t/**\n\t * Lazy loader for the select hidden aggregation.\n\t * @private\n\t */\n\tSegmentedButton.prototype._lazyLoadSelectForm = function() {\n\t\tvar oSelect = this.getAggregation(\"_select\");\n\n\t\tif (!oSelect) {\n\t\t\toSelect = new sap.m.Select(this.getId() + \"-select\");\n\t\t\toSelect.attachChange(this._selectChangeHandler, this);\n\t\t\toSelect.addStyleClass(\"sapMSegBSelectWrapper\");\n\t\t\tthis.setAggregation(\"_select\", oSelect, true);\n\t\t}\n\t};\n\n\t/**\n\t * Called when the select is changed so that the SegmentedButton internals stay in sync.\n\t * @param {Object} oEvent The event fired\n\t * @private\n\t */\n\tSegmentedButton.prototype._selectChangeHandler = function(oEvent) {\n\t\tvar oSelectedItem = oEvent.getParameter(\"selectedItem\"),\n\t\t\tsNewKey = parseInt(oSelectedItem.getKey(), 10),\n\t\t\toButton = this.getButtons()[sNewKey],\n\t\t\tsButtonId = oButton.getId();\n\n\t\toButton.firePress();\n\t\tthis.setSelectedButton(sButtonId);\n\t};\n\n\tSegmentedButton.prototype._forwardChangeEvent = function () {\n\t\tthis.fireEvent(\"_change\");\n\t};\n\n\t/**\n\t * Builds/rebuilds the select from the buttons in the SegmentedButton.\n\t * @private\n\t */\n\tSegmentedButton.prototype._syncSelect = function() {\n\t\tvar iKey = 0,\n\t\t\tiSelectedKey = 0,\n\t\t\tsButtonText,\n\t\t\toSelect = this.getAggregation(\"_select\");\n\n\n\t\tif (!oSelect) {\n\t\t\treturn;\n\t\t}\n\n\t\toSelect.destroyItems();\n\t\tthis._getVisibleButtons().forEach(function (oButton) {\n\t\t\tsButtonText = oButton.getText();\n\t\t\toSelect.addItem(new Item({\n\t\t\t\tkey: iKey.toString(),\n\t\t\t\ttext: sButtonText ? sButtonText : oButton.getTooltip_AsString(),\n\t\t\t\tenabled: oButton.getEnabled()\n\t\t\t}));\n\t\t\tif (oButton.getId() === this.getSelectedButton()) {\n\t\t\t\tiSelectedKey = iKey;\n\t\t\t}\n\t\t\tiKey++;\n\t\t}, this);\n\t\toSelect.setSelectedKey(iSelectedKey.toString());\n\t};\n\n\t/**\n\t * To be called to make the control go to select mode.\n\t * @private\n\t */\n\tSegmentedButton.prototype._toSelectMode = function() {\n\t\tthis._bInOverflow = true;\n\t\tthis.addStyleClass(\"sapMSegBSelectWrapper\");\n\t\tthis._lazyLoadSelectForm();\n\t\tthis._syncSelect();\n\t};\n\n\t/**\n\t * To be called to make the control go back to the default mode.\n\t * @private\n\t */\n\tSegmentedButton.prototype._toNormalMode = function() {\n\t\tdelete this._bInOverflow;\n\t\tthis.removeStyleClass(\"sapMSegBSelectWrapper\");\n\t\tthis.getAggregation(\"_select\").removeAllItems();\n\t\tthis.destroyAggregation(\"_select\");\n\t};\n\n\t/**\n\t * Image does not have an onload event but we need to recalculate the button sizes - after the image is loaded\n\t * we override the onload method once and call the calculation method after the original method is called.\n\t * @param {sap.m.Image} oImage instance of the image\n\t * @private\n\t */\n\tSegmentedButton.prototype._overwriteImageOnload = function (oImage) {\n\t\tvar that = this;\n\n\t\tif (oImage.onload === sap.m.Image.prototype.onload) {\n\t\t\toImage.onload = function () {\n\t\t\t\tif (sap.m.Image.prototype.onload) {\n\t\t\t\t\tsap.m.Image.prototype.onload.apply(this, arguments);\n\t\t\t\t}\n\t\t\t\twindow.setTimeout(function() {\n\t\t\t\t\tthat._updateWidth();\n\t\t\t\t}, 20);\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Gets native SAP icon name.\n\t * @param {sap.ui.core.Icon} oIcon Icon object\n\t * @returns {string} The generic name of the icon\n\t * @private\n\t */\n\tSegmentedButton.prototype._getIconAriaLabel = function (oIcon) {\n\t\tvar oIconInfo = IconPool.getIconInfo(oIcon.getSrc()),\n\t\t\tsResult = \"\";\n\t\tif (oIconInfo && oIconInfo.name) {\n\t\t\tsResult = oIconInfo.name;\n\t\t}\n\t\treturn sResult;\n\t};\n\n\t/**\n\t * Gets the visible buttons.\n\t * @returns {*} Array of the visible buttons\n\t * @private\n\t */\n\tSegmentedButton.prototype._getVisibleButtons = function() {\n\t\treturn this.getButtons().filter(function(oButton) {\n\t\t\treturn oButton.getVisible();\n\t\t});\n\t};\n\n\tSegmentedButton.prototype.clone = function () {\n\t\tvar sSelectedButtonId = this.getSelectedButton(),\n\t\t\taButtons = this.removeAllAggregation(\"buttons\"),\n\t\t\toClone = Control.prototype.clone.apply(this, arguments),\n\t\t\tiSelectedButtonIndex = aButtons.map(function(b) {\n\t\t\t\treturn b.getId();\n\t\t\t}).indexOf(sSelectedButtonId),\n\t\t\ti;\n\n\t\tif (iSelectedButtonIndex > -1) {\n\t\t\toClone.setSelectedButton(oClone.getButtons()[iSelectedButtonIndex]);\n\t\t}\n\n\t\tfor (i = 0; i < aButtons.length; i++) {\n\t\t\tthis.addAggregation(\"buttons\", aButtons[i]);\n\t\t}\n\n\t\treturn oClone;\n\t};\n\n\treturn SegmentedButton;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.SegmentedButtonRenderer\", require(\"sap/m/SegmentedButtonRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/SegmentedButton.js","module.exports = \"#This is the resource bundle for the sap.ui.core library\\n#\\n\\n#NOTR\\nSAPUI5_FRIDAY=Friday\\n#NOTR\\nSAPUI5_GM_ZSTEP=Zoom step {0}\\n\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have an error\\nVALUE_STATE_ERROR=Ung\\\\u00FCltige Eingabe\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to have a warning\\nVALUE_STATE_WARNING=Warnung liegt vor\\n#XTOL: text that is appended to the tooltips of input fields etc. which are marked to be in success state\\nVALUE_STATE_SUCCESS=Eintrag erfolgreich validiert\\n\\n#XTOL: text that could be show if BusyIndicator is active\\nBUSY_TEXT=Bitte warten\\n\\n#########\\n# Texts for sap.ui.core.format.DateFormat\\n#########\\n\\n#XTXT: the long pattern for formatting a date using calendar week number\\ndate.week.calendarweek.wide=Kalenderwoche {0}\\n#XTXT: the short pattern for formatting a date using calendar week number\\ndate.week.calendarweek.narrow=KW {0}\\n\\n#########\\n# Texts for sap.ui.core.format.FileSizeFormat\\n#########\\n\\n#YMSG,20: File Size Unit one Byte\\nFileSize.Byte={0} Byte\\n#YMSG,20: File Size Unit Bytes\\nFileSize.Bytes={0} Bytes\\n\\n#YMSG,20: File Size Unit Kilobyte (short)\\nFileSize.Kilobyte={0} KB\\n#YMSG,20: File Size Unit Megabyte (short)\\nFileSize.Megabyte={0} MB\\n#YMSG,20: File Size Unit Gigabyte (short)\\nFileSize.Gigabyte={0} GB\\n#YMSG,20: File Size Unit Terabyte (short)\\nFileSize.Terabyte={0} TB\\n#YMSG,20: File Size Unit Petabyte (short)\\nFileSize.Petabyte={0} PB\\n#YMSG,20: File Size Unit Exabyte (short)\\nFileSize.Exabyte={0} EB\\n#YMSG,20: File Size Unit Zettabyte (short)\\nFileSize.Zettabyte={0} ZB\\n#YMSG,20: File Size Unit Yottabyte (short)\\nFileSize.Yottabyte={0} YB\\n\\n#YMSG,20: File Size Unit Kibibyte (short)\\nFileSize.Kibibyte={0} KiB\\n#YMSG,20: File Size Unit Mebibyte (short)\\nFileSize.Mebibyte={0} MiB\\n#YMSG,20: File Size Unit Gibibyte (short)\\nFileSize.Gibibyte={0} GiB\\n#YMSG,20: File Size Unit Tebibyte (short)\\nFileSize.Tebibyte={0} TiB\\n#YMSG,20: File Size Unit Pebibyte (short)\\nFileSize.Pebibyte={0} PiB\\n#YMSG,20: File Size Unit Exbibyte (short)\\nFileSize.Exbibyte={0} EiB\\n#YMSG,20: File Size Unit Zebibyte (short)\\nFileSize.Zebibyte={0} ZiB\\n#YMSG,20: File Size Unit Yobibyte (short)\\nFileSize.Yobibyte={0} YiB\\n\\n#########\\n# Texts for sap.ui.model.odata.AnnotationHelper\\n#########\\n\\n#XTOL: mathematical term for a number greater than anything else\\nINFINITY=Unendlich\\n#XTOL: mathematical term for a number smaller than anything else\\nMINUS_INFINITY=Minus unendlich\\n#XTOL\\nNAN=Keine Zahl\\n\\n#########\\n# Texts for sap.ui.model.odata.type.*\\n#########\\n\\n#XTOL: No\\nNO=Nein\\n#XTOL: Yes\\nYES=Ja\\n#YMSG: Enter \\\"{0}\\\" or \\\"{1}\\\"\\nEnterYesOrNo=Geben Sie \\\"{0}\\\" oder \\\"{1}\\\" ein.\\n#YMSG: Enter only digits\\nEnterDigitsOnly=Geben Sie nur Ziffern ein\\n#YMSG: Enter a maximum of {0} digits\\nEnterMaximumOfDigits=Geben Sie maximal {0} Ziffern an.\\n#YMSG: Enter a number\\nEnterNumber=Geben Sie eine Zahl ein\\n#YMSG: Enter a number with a maximum of {0} digits, including any decimal places\\nEnterNumberPrecision=Geben Sie eine Zahl mit maximal {0} Ziffern einschlie\\\\u00DFlich Dezimalstellen ein\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator\\nEnterNumberInteger=Geben Sie eine Zahl mit maximal {0} Ziffern links des Dezimaltrennzeichens ein\\n#YMSG: Enter a number with a maximum of {0} decimal places\\nEnterNumberFraction=Geben Sie eine Zahl mit maximal {0} Dezimalstellen ein\\n#YMSG: Enter a number with a maximum of {0} digits to the left of the decimal separator and a maximum of {1} decimal places\\nEnterNumberIntegerFraction=Geben Sie eine Zahl mit maximal {0} Ziffern links des Dezimaltrennzeichens und maximal {1} Dezimalstellen ein\\n#YMSG: Enter a number with a minimum value of {0}\\nEnterNumberMin=Geben Sie eine Zahl von mindestens {0} ein\\n#YMSG: Enter a number greater than {0}\\nEnterNumberMinExclusive=Geben Sie eine Zahl gr\\\\u00F6\\\\u00DFer als {0} ein\\n#YMSG: Enter a number with a maximum value of {0}\\nEnterNumberMax=Geben Sie eine Zahl kleiner oder gleich {0} ein\\n#YMSG: Enter a number less than {0}\\nEnterNumberMaxExclusive=Geben Sie eine Zahl kleiner als {0} ein\\n#YMSG: Enter a text\\nEnterText=Geben Sie einen Text ein\\n#YMSG: Enter a text with a maximum of {0} characters and spaces\\nEnterTextMaxLength=Geben Sie einen Text mit maximal {0} Zeichen und Leerstellen ein\\n#YMSG: Enter a number with no decimal places\\nEnterInt=Geben Sie eine Zahl ohne Dezimalstellen ein\\n#YMSG: Enter a valid date and a valid time in the following format\\\\: {0}\\nEnterDateTime=Geben Sie ein g\\\\u00FCltiges Datum und eine g\\\\u00FCltige Uhrzeit im folgenden Format ein\\\\: {0}\\n#YMSG: Enter a valid date in the following format\\\\: {0}\\nEnterDate=Geben Sie ein g\\\\u00FCltiges Datum im folgenden Format ein\\\\: {0}\\n#YMSG: Enter a GUID in the following format\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\nEnterGuid=Geben Sie eine GUID im folgenden Format ein\\\\: 12345678-90AB-CDEF-1234-567890ABCDEF\\n#YMSG: Enter a valid time in the following format\\\\: {0}\\nEnterTime=Geben Sie eine g\\\\u00FCltige Zeit im folgenden Format ein\\\\: {0}\\n\\n#########\\n# Texts for sap.ui.model.type.*\\n#########\\n\\n#YMSG,100: Enter a valid boolean\\nBoolean.Invalid=Geben Sie einen g\\\\u00FCltigen Booleschen Ausdruck ein\\n\\n#YMSG,100: Enter a valid number\\nInteger.Invalid=Geben Sie eine g\\\\u00FCltige Zahl ein\\n#YMSG,100: Enter a number greater than or equal to {0}\\nInteger.Minimum=Geben Sie eine Zahl gr\\\\u00F6\\\\u00DFer oder gleich {0} ein\\n#YMSG,100: Enter a number lower than or equal to {0}\\nInteger.Maximum=Geben Sie eine Zahl kleiner oder gleich {0} ein\\n\\n#YMSG,100: Enter a valid number.\\nFloat.Invalid=Geben Sie eine g\\\\u00FCltige Zahl ein\\n#YMSG,100: Enter a number greater than or equal to {0}\\nFloat.Minimum=Geben Sie eine Zahl gr\\\\u00F6\\\\u00DFer oder gleich {0} ein\\n#YMSG,100: Enter a number lower than or equal to {0}\\nFloat.Maximum=Geben Sie eine Zahl kleiner oder gleich {0} ein\\n\\n#YMSG,100: Enter a valid currency amount\\nCurrency.Invalid=Geben Sie einen g\\\\u00FCltigen W\\\\u00E4hrungsbetrag ein\\n#YMSG,100: Enter an amount greater than or equal to {0}\\nCurrency.Minimum=Geben Sie eine Anzahl gr\\\\u00F6\\\\u00DFer oder gleich {0} ein\\n#YMSG,100: Enter an amount lower than or equal to {0}\\nCurrency.Maximum=Geben Sie eine Anzahl kleiner oder gleich {0} ein\\n\\n#YMSG,100: Enter a valid file size\\nFileSize.Invalid=Geben Sie eine g\\\\u00FCltige Dateigr\\\\u00F6\\\\u00DFe ein\\n#YMSG,100: EEnter a file size greater than or equal to {0}\\nFileSize.Minimum=Geben Sie eine Dateigr\\\\u00F6\\\\u00DFe gr\\\\u00F6\\\\u00DFer oder gleich {0} ein\\n#YMSG,100: Enter a file size lower than or equal to {0}\\nFileSize.Maximum=Geben Sie eine Dateigr\\\\u00F6\\\\u00DFe kleiner oder gleich {0} ein\\n\\n#YMSG,100: Enter a valid date\\nDate.Invalid=Geben Sie ein Datum ein\\n#YMSG,100: Enter a date after {0}\\nDate.Minimum=Geben Sie ein Datum nach dem {0} ein\\n#YMSG,100: Enter a date before {0}\\nDate.Maximum=Geben Sie ein Datum vor dem {0} ein\\n\\n#YMSG,100: Enter a valid time\\nTime.Invalid=Geben Sie eine g\\\\u00FCltige Zeit ein\\n#YMSG,100: Enter a time after {0}\\nTime.Minimum=Geben Sie eine Zeit nach {0} ein\\n#YMSG,100: Enter a time before {0}\\nTime.Maximum=Geben Sie eine Zeit vor {0} ein\\n\\n#YMSG,100: Enter a valid date and time\\nDateTime.Invalid=Geben Sie ein g\\\\u00FCltiges Datum und eine g\\\\u00FCltige Uhrzeit ein\\n#YMSG,100: Enter a date and time after {0}\\nDateTime.Minimum=Geben Sie ein Datum und eine Uhrzeit nach {0} ein\\n#YMSG,100: Enter a date and time before {0}\\nDateTime.Maximum=Geben Sie ein Datum und eine Uhrzeit vor {0} ein\\n\\n#YMSG,100: Enter a valid date interval\\nDateInterval.Invalid=Geben Sie ein g\\\\u00FCltiges Datumsintervall ein\\n\\n#YMSG,100: Enter a value with at least {0} characters\\nString.MinLength=Geben Sie einen Wert mit mindestens {0} Zeichen ein\\n#YMSG,100: Enter a value with no more than {0} characters\\nString.MaxLength=Geben Sie einen Wert mit maximal {0} Zeichen ein\\n#YMSG,100: Enter a value starting with \\\"{0}\\\"\\nString.StartsWith=Geben Sie einen Wert ein, der mit \\\"{0}\\\" beginnt\\n#YMSG,100: Enter a value ending with \\\"{0}\\\"\\nString.EndsWith=Geben Sie einen Wert ein, der mit \\\"{0}\\\" endet\\n#YMSG,100: Enter a value containing \\\"{0}\\\"\\nString.Contains=Geben Sie einen Wert ein, der \\\"{0}\\\" enth\\\\u00E4lt\\n#YMSG,100: Enter value \\\"{0}\\\"\\nString.Equals=Geben Sie den Wert \\\"{0}\\\" ein\\n#YMSG,100: Enter a value matching \\\"{0}\\\"\\nString.Search=Geben Sie einen Wert ein, der mit \\\"{0}\\\" \\\\u00FCbereinstimmt\\n\\n#XACT: ARIA announcement for the MessageStrip's \\\"Error\\\" state\\nMESSAGE_STRIP_ERROR=Nachrichtenzeile f\\\\u00FCr Fehler\\n#XACT: ARIA announcement for the MessageStrip's \\\"Warning\\\" state\\nMESSAGE_STRIP_WARNING=Nachrichtenzeile f\\\\u00FCr Warnung\\n#XACT: ARIA announcement for the MessageStrip's \\\"Success\\\" state\\nMESSAGE_STRIP_SUCCESS=Nachrichtenzeile f\\\\u00FCr Erfolg\\n#XACT: ARIA announcement for the MessageStrip's \\\"Information\\\" state\\nMESSAGE_STRIP_INFORMATION=Nachrichtenzeile f\\\\u00FCr Information\\n#XACT: ARIA announcement for the MessageStrip's closable state\\nMESSAGE_STRIP_CLOSABLE=Schlie\\\\u00DFbar\\n\\n#XACT: type of an UI control is an image\\nACC_CTR_TYPE_IMAGE=Bild\\n#XACT: type of an UI control is a button\\nACC_CTR_TYPE_BUTTON=Drucktaste\\n\\n#XFLD: Close\\nCLOSE=Schlie\\\\u00DFen\\n\\n#########\\n# Texts for sap-icon Font\\n#\\n# Update \\\"sap.ui.core.IconPool\\\" (mIconI18nKey)\\n# when adding a new key here\\n#########\\n\\n#XTXT\\nIcon.action-settings=Einstellungen\\n#XTXT\\nIcon.activate=Aktivieren\\n#XTXT\\nIcon.add=Hinzuf\\\\u00FCgen\\n#XTXT\\nIcon.add-contact=Kontakt hinzuf\\\\u00FCgen\\n#XTXT\\nIcon.add-filter=Filter hinzuf\\\\u00FCgen\\n#XTXT\\nIcon.add-photo=Foto hinzuf\\\\u00FCgen\\n#XTXT\\nIcon.back-to-top=Zum Anfang\\n#XTXT\\nIcon.collapse=Komprimieren\\n#XTXT\\nIcon.collapse-group=Gruppe komprimieren\\n#XTXT: Crop parts of an image\\nIcon.crop=Zuschneiden\\n#XTXT: To decline an offer\\nIcon.decline=Ablehnen\\n#XTXT\\nIcon.delete=L\\\\u00F6schen\\n#XTXT\\nIcon.display=Anzeigen\\n#XTXT\\nIcon.down=Nach unten\\n#XTXT\\nIcon.download=Herunterladen\\n#XTXT\\nIcon.drill-down=Eine Ebene tiefer\\n#XTXT\\nIcon.drill-up=Eine Ebene h\\\\u00F6her\\n#XTXT\\nIcon.error=Fehler\\n#XTXT\\nIcon.exit-full-screen=Vollbildmodus beenden\\n#XTXT\\nIcon.expand=Expandieren\\n#XTXT\\nIcon.expand-group=Gruppe expandieren\\n#XTXT: Action to filter on a group of elements\\nIcon.filter=Filtern\\n#XTXT: To flag or mark an item\\nIcon.flag=Markieren\\n#XTXT: To forward an item to a recipients\\nIcon.forward=Weiterleiten\\n#XTXT\\nIcon.full-screen=Vollbildmodus aktivieren\\n#XTXT\\nIcon.generate-shortcut=Verkn\\\\u00FCpfung anlegen\\n#XTXT: To group items\\nIcon.group-2=Gruppe\\n#XTXT: To hide an element from display\\nIcon.hide=Ausblenden\\n#XTXT\\nIcon.ipad=Tablet\\n#XTXT\\nIcon.ipad-2=Tablet\\n#XTXT\\nIcon.iphone=Telefon\\n#XTXT\\nIcon.iphone-2=Telefon\\n#XTXT\\nIcon.laptop=Laptop\\n#XTXT\\nIcon.message-error=Fehler\\n#XTXT\\nIcon.message-information=Information\\n#XTXT\\nIcon.message-success=Erfolgreich\\n#XTXT\\nIcon.message-warning=Warnung\\n#XTXT: To manipulate the position of an element\\nIcon.move=Verschieben\\n#XTXT\\nIcon.multi-select=Mehrfachauswahl\\n#XTXT\\nIcon.nav-back=Zur\\\\u00FCck navigieren\\n#XTXT\\nIcon.overflow=Mehr\\n#XTXT\\nIcon.redo=Wiederholen\\n#XTXT\\nIcon.refresh=Aktualisieren\\n#XTXT\\nIcon.resize=Gr\\\\u00F6\\\\u00DFe \\\\u00E4ndern\\n#XTXT\\nIcon.resize-horizontal=Gr\\\\u00F6\\\\u00DFe horizontal \\\\u00E4ndern\\n#XTXT\\nIcon.resize-vertical=Gr\\\\u00F6\\\\u00DFe vertikal \\\\u00E4ndern\\n#XTXT\\nIcon.response=Antworten\\n#XTXT\\nIcon.save=Sichern\\n#XTXT\\nIcon.search=Suchen\\n#XTXT\\nIcon.settings=Einstellungen\\n#XTXT: To show an element previously hidden\\nIcon.show=Einblenden\\n#XTXT\\nIcon.sort=Sortieren\\n#XTXT\\nIcon.sort-ascending=Aufsteigend sortieren\\n#XTXT\\nIcon.sort-descending=Absteigend sortieren\\n#XTXT\\nIcon.synchronize=Synchronisieren\\n#XTXT\\nIcon.undo=R\\\\u00FCckg\\\\u00E4ngig machen\\n#XTXT\\nIcon.up=Nach oben\\n#XTXT\\nIcon.upload=Hochladen\\n#XTXT\\nIcon.zoom-in=Vergr\\\\u00F6\\\\u00DFern\\n#XTXT\\nIcon.zoom-out=Verkleinern\\n\\n#########\\n# Texts for sap.ui.debug.TechnicalInfo\\n#########\\n\\n#XTIT: Title for the technical information dialog\\nTechInfo.DialogTitle=Dialog f\\\\u00FCr technische Daten\\n\\n#XTOL: Tooltip for info button in header\\nTechInfo.HelpButton.Tooltip=Dokumentation \\\\u00F6ffnen\\n\\n#XTOL: Tooltip for version information link\\nTechInfo.VersionLink.Tooltip=Versionsdaten in neuer Registerkarte \\\\u00F6ffnen\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.CopyButton.Tooltip=Technische Daten in Zwischenablage kopieren\\n\\n#XBUT: SAPUI5 Diagnostics button text\\nTechnInfo.DiagnosticsButton.Text=Diagnose \\\\u00F6ffnen\\n\\n#XBUT: Support assistant button text\\nTechnInfo.AssistantButton.Text=Support-Assistent aktivieren\\n\\n#XFLD: User agent field label\\nTechInfo.UserAgent.Label=Benutzeragent\\n\\n#XFLD: Application URL label\\nTechInfo.AppUrl.Label=App-URL\\n\\n#XFLD: Debug sources label\\nTechInfo.DebugSources.Label=Debug-Quellen verwenden\\n\\n#XTOL: Debug sources tooltip\\nTechInfo.DebugSources.Tooltip=L\\\\u00E4dt die derzeitige Seite mit unverkleinerten Quellen f\\\\u00FCr Debugging\\n\\n#XLNK: Debug sources select packages link\\nTechInfo.DebugSourcesModules.Link=Bestimmte Module ausw\\\\u00E4hlen\\n\\n#XFLD: Text for the version build time string\\nTechInfo.VersionBuildTime.Text=(Build von {0})\\n\\n#YMSG: success message for copying to clipboard\\nTechInfo.CopyToClipboard.Success=Technische Daten wurden in die Zwischenablage kopiert.\\n\\n#YMSG: error message for copying to clipboard\\nTechInfo.CopyToClipboard.Error=Technische Daten k\\\\u00F6nnen nicht in die Zwischenablage kopiert werden.\\n\\n#XTIT: Confirmation title for enabling/disabling debug sources\\nTechInfo.DebugSources.ConfirmTitle=App neu laden\\n\\n#YMSG: Confirmation message for enabling/disabling debug sources\\nTechInfo.DebugSources.ConfirmMessage=Laden Sie die App neu, um die Debug-Quellen zu aktivieren/deaktivieren.\\n\\n#XTIT: Title for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.Title=Einstellungen f\\\\u00FCr Support-Assistent\\n\\n#XFLD: Standard bootstrap locations option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.StandardLocation=Empfohlene Pfade\\n\\n#XFLD: Custom bootstrap location option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.CustomLocation=Eigener Pfad\\n\\n#XFLD: Application version bootstrap location option for the custom bootstrap UPL configuration popup\\nTechInfo.SupportAssistantConfigPopup.AppVersionOption=Anwendungsversion ({0})\\n\\n#YMSG: Custom bootstrap location validation error message\\nTechInfo.SupportAssistantConfigPopup.URLValidationMessage=Die Syntax der Adresse ist nicht korrekt. Die richtige Syntax lautet\\\\: http\\\\://<G\\\\u00FCltiger eigener URI>/resources/sap/ui/support.\\n\\n#YMSG: Error message when support Assistant is not found\\nTechInfo.SupportAssistantConfigPopup.SupportAssistantNotFound=Der Support-Assistent wurde unter folgender Adresse leider nicht gefunden\\\\:\\n\\n#YMSG: Error message when protocols did not match\\nTechInfo.SupportAssistantConfigPopup.ProtocolError=Das App-Protokoll entspricht nicht dem Protokoll des Support-Assistenten (HTTP/HTTPS).\\n\\n#YMSG: Error message when Ajax return code is different than [200]\\nTechInfo.SupportAssistantConfigPopup.ErrorTryingToGetRecourse=Der Ajax-R\\\\u00FCckgabewert ist nicht [200].\\n\\n#YMSG: Error message when file not Found [404]\\nTechInfo.SupportAssistantConfigPopup.ErrorNotFound=Datei nicht gefunden (404)\\n\\n#YMSG: Error message when internal server error occurs\\nTechInfo.SupportAssistantConfigPopup.InternalServerError=Interner Serverfehler\\\\: {500}\\n\\n#YMSG: Error message when request timeout.\\nTechInfo.SupportAssistantConfigPopup.ErrorOnTimeout=Zeit\\\\u00FCberschreitungsfehler\\n\\n#YMSG: Error message when trying to parse JSON\\nTechInfo.SupportAssistantConfigPopup.ErrorOnJsonParse=Beim angeforderten JSON-Parsen ist ein Fehler aufgetreten.\\n\\n#YMSG: Error message when uncaught Error occurs\\nTechInfo.SupportAssistantConfigPopup.UncaughtError=Fehler wurde nicht abgefangen.\\n\\n#YMSG: Error message when request is aborted\\nTechInfo.SupportAssistantConfigPopup.ErrorWhenAborted=Ajax-Anfrage wurde abgebrochen.\\n\\n#YMSG: Error message when default locations are not available\\nTechInfo.SupportAssistantConfigPopup.NotAvailableAtTheMoment=Diese Adresse ist momentan nicht erreichbar.\\n\\n#XFLD: Title for enabling Support Assistant to open in new window.\\nTechInfo.SupportAssistantConfigPopup.OpenInNewWindow=Support-Assistent in neuem Fenster \\\\u00F6ffnen\\n\\n#XFLD: Title for location section in support Assistant settings popover\\nTechInfo.SupportAssistantConfigPopup.Locations=Ressourcenpfad\\n\\n#XFLD: Title for options section in support Assistant settings popover\\nTechInfo.SupportAssistantConfigPopup.Options=Optionen\\n\\n#XTIT: Title for the debug modules configuration selection\\nTechInfo.DebugModulesConfigPopup.SelectionCounter=Auswahl der Debug-Module ({0} ausgew\\\\u00E4hlt)\\n\\n#YMSG: sap-ui-debug mode custom value validation error message\\nTechInfo.DebugModulesConfigPopup.ModeValidationMessage=Wert f\\\\u00FCr Parameter sap-ui-debug ist ung\\\\u00FCltig\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.DebugModulesCopy.Tooltip=Wert von sap-ui-debug in Zwischenablage kopieren\\n\\n#XTOL: Tooltip for copy to clipboard button\\nTechInfo.DebugModulesReset.Tooltip=Aktuell ausgew\\\\u00E4hlte Module zur\\\\u00FCcksetzen\\n\\n#YMSG: success message for copying to clipboard\\nTechInfo.DebugModulesCopyToClipboard.Success=Selbstdefinierter Wert f\\\\u00FCr sap-ui-debug wurde in die Zwischenablege kopiert\\n\\n#YMSG: error message for copying to clipboard\\nTechInfo.DebugModulesCopyToClipboard.Error=Selbstdefinierter Wert sap-ui-debug kann nicht in Zwischenablage kopiert werden\\n\\n#XTIT: Title for the debug modules configuration popup confirmation button\\nTechInfo.DebugModulesConfigPopup.Confirm=\\\\u00DCbernehmen\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/openui5-sap.ui.core/resources/sap/ui/core/messagebundle_de.properties\n// module id = ix2f\n// module chunks = 1","module.exports = \"#This is the resource bundle for the SAPUI5 sap.m library\\r\\n#__ldi.translation.uuid=d5a6d4a0-e171-11e1-9b23-0800200c9a66\\r\\n\\r\\n#XACT: ARIA ColumnHeader control description\\r\\nCOLUMNHEADER_ACCESS_COLUMN_ACTIONS=Access column actions\\r\\n\\r\\n#XACT: ARIA ColumnHeader filtered state announcement\\r\\nCOLUMNHEADER_FILTERED=Filtered\\r\\n\\r\\n#XACT: ARIA ColumnHeader sorted state announcement\\r\\nCOLUMNHEADER_SORTED=Sorted\\r\\n\\r\\n#XACT: ARIA ColumnHeader sort ascending state announcement\\r\\nCOLUMNHEADER_SORTED_ASCENDING=Ascending\\r\\n\\r\\n#XACT: ARIA ColumnHeader sort descending state announcement\\r\\nCOLUMNHEADER_SORTED_DESCENDING=Descending\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the combo box arrow\\r\\nCOMBOBOX_BUTTON=Arrow Down\\r\\n\\r\\n#XACT: ARIA announcement for Combo Box available options\\r\\nCOMBOBOX_AVAILABLE_OPTIONS=Available Options\\r\\n\\r\\n#XBUT: Button text for ok button in the combo box (mobile version)\\r\\nCOMBOBOX_CLOSE_BUTTON=OK\\r\\n\\r\\n#XBUT: Default title text for picker in the combo box (mobile version)\\r\\nCOMBOBOX_PICKER_TITLE=Select\\r\\n\\r\\n#XBUT: Button text for cancel button in the select (mobile version)\\r\\nSELECT_CANCEL_BUTTON=Cancel\\r\\n\\r\\n#XBLI: List text for no data lists\\r\\nLIST_NO_DATA=No data\\r\\n\\r\\n#XACT: ARIA announcement for the controls which do not provide any accessibility info\\r\\nCONTROL_EMPTY=Empty\\r\\n\\r\\n#XACT: ARIA announcement for the disabled controls\\r\\nCONTROL_DISABLED=Disabled\\r\\n\\r\\n#XACT: ARIA announcement for the read-only controls\\r\\nCONTROL_READONLY=Read Only\\r\\n\\r\\n#XACT: ARIA announcement for the list which allows single selections\\r\\nLIST_SELECTABLE=Contains Selectable Items\\r\\n\\r\\n#XACT: ARIA announcement for the list which allows multiple selections\\r\\nLIST_MULTISELECTABLE=Contains Multi-Selectable Items\\r\\n\\r\\n#XACT: ARIA announcement for the list which has deletable items\\r\\nLIST_DELETABLE=Contains Deletable Items\\r\\n\\r\\n#XACT: ARIA announcement for the list which is grouped\\r\\nLIST_GROUPED=Grouped\\r\\n\\r\\n#XACT: ARIA announcement for the list when all items are selected\\r\\nLIST_ALL_SELECTED=All Selected\\r\\n\\r\\n#XACT: ARIA announcement for a required list (e.g. inside a form)\\r\\nLIST_REQUIRED=Required\\r\\n\\r\\n#XACT: ARIA announcement for the selected list item\\r\\nLIST_ITEM_SELECTED=Selected\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the unread state of the list items\\r\\nLIST_ITEM_UNREAD=Unread\\r\\n\\r\\n#XACT: ARIA announcement for the navigable list items\\r\\nLIST_ITEM_NAVIGATION=Has Details\\r\\n\\r\\n#XACT: ARIA announcement for the list item details with edit option\\r\\nLIST_ITEM_DETAIL=Is Editable\\r\\n\\r\\n#XACT: ARIA announcement for the active clickable list items\\r\\nLIST_ITEM_ACTIVE=Is Active\\r\\n\\r\\n#XACT: ARIA announcement for the group header list items\\r\\nLIST_ITEM_GROUP_HEADER=Group Header\\r\\n\\r\\n#XACT: ARIA announcement for the position of the list items in an entire list\\r\\nLIST_ITEM_POSITION={0} of {1}\\r\\n\\r\\n#XACT: ARIA announcement for the position of the list item\\r\\nLIST_ITEM_INDEX=Item {0}\\r\\n\\r\\n#XACT: ARIA announcement for the counter property of the list item\\r\\nLIST_ITEM_COUNTER=Counter {0}\\r\\n\\r\\n#XACT: ARIA announcement for the information state of the list item\\r\\nLIST_ITEM_STATE_INFORMATION=Information\\r\\n\\r\\n#XACT: ARIA announcement for the error state of the list item\\r\\nLIST_ITEM_STATE_ERROR=Error\\r\\n\\r\\n#XACT: ARIA announcement for the warning state of the list item\\r\\nLIST_ITEM_STATE_WARNING=Warning\\r\\n\\r\\n#XACT: ARIA announcement for the success state of the list item\\r\\nLIST_ITEM_STATE_SUCCESS=Success\\r\\n\\r\\n#XTOL: tooltip for the delete icon of the list item\\r\\nLIST_ITEM_DELETE=Delete\\r\\n\\r\\n#XTOL: tooltip for the edit icon of the list item\\r\\nLIST_ITEM_EDIT=Edit\\r\\n\\r\\n#XBUT: Button text for back button on page\\r\\nPAGE_NAVBUTTON_TEXT=Back\\r\\n\\r\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\r\\nSWITCH_ON=On\\r\\n\\r\\n#XBUT: A switch is a user interface control on mobile devices that is used for change between binary states\\r\\nSWITCH_OFF=Off\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the accept state in the Switch control\\r\\nSWITCH_ARIA_ACCEPT=Accept\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the reject state in the Switch control\\r\\nSWITCH_ARIA_REJECT=Reject\\r\\n\\r\\n#XBUT: Button text for cancel button in the action sheet\\r\\nACTIONSHEET_CANCELBUTTON_TEXT=Cancel\\r\\n\\r\\n#XACT: ARIA announcement for index of a button\\r\\nACTIONSHEET_BUTTON_INDEX={0} of {1}\\r\\n\\r\\n#XACT: ARIA announcement for Action Sheet available actions\\r\\nACTIONSHEET_AVAILABLE_ACTIONS=Available Actions\\r\\n\\r\\n#XBUT: Button text for cancel button in the busy dialog\\r\\nBUSYDIALOG_CANCELBUTTON_TEXT=Cancel\\r\\n\\r\\n#XBUT: Text for growing list - pull button to load more data\\r\\nLOAD_MORE_DATA=More\\r\\n\\r\\n#XBUT: Date Selection text for Date&Time Picker of MobiScroll\\r\\nMOBISCROLL_SET=OK\\r\\n\\r\\n#XBUT: Cancel/Close button of MobiScroll Date&Time Picker\\r\\nMOBISCROLL_CANCEL=Cancel\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Month Header\\r\\nMOBISCROLL_MONTH=Month\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Day Header\\r\\nMOBISCROLL_DAY=Day\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Year Header\\r\\nMOBISCROLL_YEAR=Year\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Hours Header\\r\\nMOBISCROLL_HOURS=Hours\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Minutes Header\\r\\nMOBISCROLL_MINUTES=Minutes\\r\\n\\r\\n#XBUT: MobiScroll Date&Time Picker Seconds Header\\r\\nMOBISCROLL_SECONDS=Seconds\\r\\n\\r\\n#XBUT: Show Now button of MobiScroll Date&Time Picker\\r\\nMOBISCROLL_NOW=Now\\r\\n\\r\\n#XBUT: The navigation button text in master area in SplitContainer\\r\\nSPLITCONTAINER_NAVBUTTON_TEXT=Navigation\\r\\n\\r\\n#XTOL: Tooltip for navigation button\\r\\nSPLITCONTAINER_NAVBUTTON_DEFAULT_TOOLTIP=Show Object List\\r\\n\\r\\n#XTOL: Tooltip for navigation button\\r\\nSPLITCONTAINER_NAVBUTTON_TOOLTIP=Show {0}\\r\\n\\r\\n#XBUT: MessageBox predefined text for OK action\\r\\nMSGBOX_OK=OK\\r\\n\\r\\n#XBUT: MessageBox predefined text for CANCEL action\\r\\nMSGBOX_CANCEL=Cancel\\r\\n\\r\\n#XBUT: MessageBox predefined text for YES action\\r\\nMSGBOX_YES=Yes\\r\\n\\r\\n#XBUT: MessageBox predefined text for No action\\r\\nMSGBOX_NO=No\\r\\n\\r\\n#XBUT: MessageBox predefined text for ABORT action\\r\\nMSGBOX_ABORT=Abort\\r\\n\\r\\n#XBUT: MessageBox predefined text for RETRY action\\r\\nMSGBOX_RETRY=Retry\\r\\n\\r\\n#XBUT: MessageBox predefined text for IGNORE action\\r\\nMSGBOX_IGNORE=Ignore\\r\\n\\r\\n#XBUT: MessageBox predefined text for CLOSE action\\r\\nMSGBOX_CLOSE=Close\\r\\n\\r\\n#XBUT: MessageBox predefined text for DELETE action\\r\\nMSGBOX_DELETE=Delete\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of alert dialog\\r\\nMSGBOX_TITLE_ALERT=Alert\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_CONFIRM=Confirmation\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_ERROR=Error\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_INFO=Information\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_WARNING=Warning\\r\\n\\r\\n#XTIT: MessageBox predefined text for title of confirm dialog\\r\\nMSGBOX_TITLE_SUCCESS=Success\\r\\n\\r\\n#XLNK: MessageBox textLink\\r\\nMSGBOX_LINK_TITLE=Show Details\\r\\n\\r\\n#YINS,30: Pull down to refresh text in the hidden area of a scrolled area\\r\\nPULL2REFRESH_PULLDOWN=Pull Down to Refresh\\r\\n\\r\\n#YINS,30: Release dragged list to start update request\\r\\nPULL2REFRESH_RELEASE=Release to Refresh\\r\\n\\r\\n#YMSG,25: Refresh request is in process, short text, displayed on all platforms\\r\\nPULL2REFRESH_LOADING=Loading...\\r\\n\\r\\n#YMSG,32: Refresh request is in process, longer text, displayed smaller and only on certain platforms\\r\\nPULL2REFRESH_LOADING_LONG=Please wait, data is loading\\r\\n\\r\\n#XBUT: Button to trigger refresh of the displayed data\\r\\nPULL2REFRESH_REFRESH=Refresh\\r\\n\\r\\n#XBUT: Text displayed on the logout button in the top right corner of the Shell\\r\\nSHELL_LOGOUT=Logout\\r\\n\\r\\n#XBUT: Text for OK button in the personalization dialog\\r\\nPERSODIALOG_OK=OK\\r\\n\\r\\n#XBUT: Text for Cancel button in the personalization dialog\\r\\nPERSODIALOG_CANCEL=Cancel\\r\\n\\r\\n#XTOL: Tooltip for Reset Personalization toolbar button\\r\\nPERSODIALOG_UNDO=Reset Personalization\\r\\n\\r\\n#XTOL: Tooltip for Perso Dialog's 'Move Up' button (displays an 'up' arrow)\\r\\nPERSODIALOG_UP=Move Column Up\\r\\n\\r\\n#XTOL: Tooltip for Perso Dialog's 'Move Down' button (displays a 'down' arrow)\\r\\nPERSODIALOG_DOWN=Move Column Down\\r\\n\\r\\n#XTIT: Title text of personalization dialog for columns\\r\\nPERSODIALOG_COLUMNS_TITLE=Columns\\r\\n\\r\\n#XBUT: Text of personalization dialog for 'Select All' checkbox\\r\\nPERSODIALOG_SELECT_ALL=All\\r\\n\\r\\n#XTIT: Text of personalization dialog for its list to indicate no search hits\\r\\nPERSODIALOG_NO_DATA=No columns found\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title\\r\\nVIEWSETTINGS_TITLE=View\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title when in sort mode\\r\\nVIEWSETTINGS_TITLE_SORT=Sort By\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title when in group mode\\r\\nVIEWSETTINGS_TITLE_GROUP=Group By\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title when in filter mode\\r\\nVIEWSETTINGS_TITLE_FILTER=Filter By\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog title when in filter detail mode (an item name is appended to this string)\\r\\nVIEWSETTINGS_TITLE_FILTERBY=Filter By\\\\:\\r\\n\\r\\n#YMSG: Start text for the text representation of the filter state\\r\\nVIEWSETTINGS_FILTERTEXT=Filtered by\\\\:\\r\\n\\r\\n#XBUT: Button to confirm the view settings dialog\\r\\nVIEWSETTINGS_ACCEPT=OK\\r\\n\\r\\n#XBUT: Button to cancel the view settings dialog\\r\\nVIEWSETTINGS_CANCEL=Cancel\\r\\n\\r\\n#XBLI: List item text in the view settings dialog that represents a \\\"none of the above\\\" or \\\"none\\\" selection in a single selection list\\r\\nVIEWSETTINGS_NONE_ITEM=None\\r\\n\\r\\n#XBLI: List item text in the view settings for sorting items in ascending order\\r\\nVIEWSETTINGS_ASCENDING_ITEM=Ascending\\r\\n\\r\\n#XBLI: List item text in the view settings for sorting items in descending order\\r\\nVIEWSETTINGS_DESCENDING_ITEM=Descending\\r\\n\\r\\n#XTOL: Tooltip for the clear filter button\\r\\nVIEWSETTINGS_CLEAR_FILTER_TOOLTIP=Clear All Filters\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog aria label for the sort list\\r\\nVIEWSETTINGS_SORT_DIRECTION=Sort Direction\\r\\n\\r\\n#XTIT: Predefined text for the view settings dialog aria label for the group list\\r\\nVIEWSETTINGS_GROUP_DIRECTION=Group Direction\\r\\n\\r\\n#XLST: Label for the select all checkbox used to select all facet filter items\\r\\nFACETFILTER_CHECKBOX_ALL=All\\r\\n\\r\\n#XLST: All Items in the list with the name of the list as a parameter: ex. Suppliers (All)\\r\\nFACETFILTER_ALL_SELECTED={0} (All)\\r\\n\\r\\n#XFLD: Search field prompt\\r\\nFACETFILTER_SEARCH=Search\\r\\n\\r\\n#XBUT: Either a single filter value or the number of selected values, displayed on facet filter button: ex. Suppliers (Dell) or Suppliers (6)\\r\\nFACETFILTER_ITEM_SELECTION={0} ({1})\\r\\n\\r\\n#XACT: ARIA announcement for facet filter itself\\r\\nFACETFILTER_ARIA_FACET_FILTER=Facet Filter\\r\\n\\r\\n#XTIT: Light flow facet filter dialog and facet add dialog title\\r\\nFACETFILTER_TITLE=Filter\\r\\n\\r\\n#XBUT: Button to confirm facet filter dialogs\\r\\nFACETFILTER_ACCEPT=OK\\r\\n\\r\\n#XSEL: Infobar filter summary: ex. Filtered by Suppliers (Supplier1, Supplier2)\\r\\nFACETFILTER_INFOBAR_FILTERED_BY=Filtered by {0} ({1})\\r\\n\\r\\n#XSEL: Infobar filter summary when no filters selected\\r\\nFACETFILTER_INFOBAR_NO_FILTERS=No filters selected\\r\\n\\r\\n#XSEL: Infobar filter add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\r\\nFACETFILTER_INFOBAR_AND=and\\r\\n\\r\\n#XSEL: Infobar filter after add: ex. Filtered by Suppliers (Supplier1, Supplier2) and Items (Item1)\\r\\nFACETFILTER_INFOBAR_AFTER_AND={0} ({1})\\r\\n\\r\\n#XSEL: Alternate infobar filter summary\\r\\nFACETFILTER_INFOBAR_FILTERS_APPLIED=Several filters applied\\r\\n\\r\\n#YMSG: Filter bar msg shown when there are more filters available that cannot be displayed because there is not enough room: ex. 2 More...\\r\\nFACETFILTER_MORE_COUNT={0} more...\\r\\n\\r\\n#YMSG: Message displayed in filter dialog when there are many more filters available but not shown: ex. 76 more available\\r\\nFACETFILTER_FILTERS_HUGE={0} more available\\r\\n\\r\\n#XLNK: Link to allow searching additional filter values from the server\\r\\nFACETFILTER_SERVER_SEARCH=Search Further on Server\\r\\n\\r\\n#XBUT: Button to remove a filter from the filter bar\\r\\nFACETFILTER_REMOVE_FILTER=Remove Filter\\r\\n\\r\\n#XACT: ARIA announcement for the position of the list items in an entire list\\r\\nFACETFILTERLIST_ARIA_POSITION={0} of {1}\\r\\n\\r\\n#YMSG: Message displayed near the list of selection items in the SelectDialg and TableSelectDialog controls. It will be filled with the number of selected items\\r\\nTABLESELECTDIALOG_SELECTEDITEMS=Items selected\\\\: {0}\\r\\n\\r\\n#YMSG: Default placeholder for the input field of a feed\\r\\nFEEDINPUT_PLACEHOLDER=Post something here\\r\\n\\r\\n#XTOL: Tooltip for submit button of a feed input\\r\\nFEEDINPUT_SUBMIT=Submit\\r\\n\\r\\n#XBUT: A link that can be clicked to display more/all items\\r\\nINPUT_SUGGESTIONS_SHOW_ALL=Show All Items\\r\\n\\r\\n#XACT: ARIA announcement for the Input suggestion result if one hit\\r\\nINPUT_SUGGESTIONS_ONE_HIT=1 result available\\r\\n\\r\\n#XACT: ARIA announcement for the Input suggestion result if more than one hit ({0} is the number of hits)\\r\\nINPUT_SUGGESTIONS_MORE_HITS={0} results are available\\r\\n\\r\\n#XACT: ARIA announcement for the Input suggestion result if no hit\\r\\nINPUT_SUGGESTIONS_NO_HIT=No results\\r\\n\\r\\n#XACT: ARIA announcement for the value help\\r\\nINPUT_VALUEHELP=Value help available\\r\\n\\r\\n#XACT: ARIA announcement disabled input (e.g. for value help only)\\r\\nINPUT_DISABLED=Text input disabled\\r\\n\\r\\n#XACT: ARIA announcement for suggestions popup\\r\\nINPUT_AVALIABLE_VALUES=Available Values\\r\\n\\r\\n#XACT: ARIA announcement for the Input's value state \\\"Error\\\"\\r\\nINPUTBASE_VALUE_STATE_ERROR=Value State Error\\r\\n\\r\\n#XACT: ARIA announcement for the Input's value state \\\"Warning\\\"\\r\\nINPUTBASE_VALUE_STATE_WARNING=Value State Warning\\r\\n\\r\\n#XACT: ARIA announcement for the Input's value state \\\"Success\\\"\\r\\nINPUTBASE_VALUE_STATE_SUCCESS=Value State Success\\r\\n\\r\\n#XBUT,10: Tooltip for button to remove facet list\\r\\nFACETFILTER_REMOVE=Remove Facet List\\r\\n\\r\\n#XBUT: ARIA announcement for removable facet\\r\\nFACETFILTER_ARIA_REMOVE=Removable Facet\\\\: Press DELETE to Remove\\r\\n\\r\\n#XBUT: Tooltip for button to add facet filter list\\r\\nFACETFILTER_ADDFACET=Add Filter\\r\\n\\r\\n#XBUT: Tooltip for button to reset filter\\r\\nFACETFILTER_RESET=Reset Filter\\r\\n\\r\\n#XBUT: Tooltip for left scrolling arrow\\r\\nFACETFILTER_PREVIOUS=Previous\\r\\n\\r\\n#XBUT: Tooltip for right scrolling arrow\\r\\nFACETFILTER_NEXT=Next\\r\\n\\r\\n#XLNK: Link to allow the user to see complete feed post\\r\\nTEXT_SHOW_MORE=MORE\\r\\n\\r\\n#XLNK: This link allows the user to hide the complete feed post and display only the first lines\\r\\nTEXT_SHOW_LESS=LESS\\r\\n\\r\\n#XFLD: Label text for number of attachments in the UploadCollection control\\r\\nUPLOADCOLLECTION_ATTACHMENTS=Attachments ({0})\\r\\n\\r\\n#XMSG: Message text for deleting a file in the UploadCollection control\\r\\nUPLOADCOLLECTION_DELETE_TEXT=Are you sure you want to delete ''{0}''?\\r\\n\\r\\n#XMSG: Message text for deleting a file in the UploadCollection control without filename\\r\\nUPLOADCOLLECTION_DELETE_WITHOUT_FILENAME_TEXT=Are you sure you want to delete the file?\\r\\n\\r\\n#XMSG: Message title for deleting a file in the UploadCollection control\\r\\nUPLOADCOLLECTION_DELETE_TITLE=Delete File\\r\\n\\r\\n#XMSG: Message text for a popup to terminate a file uploading in the UploadCollection control\\r\\nUPLOADCOLLECTION_TERMINATE_TEXT=The upload for the following files will be terminated\\\\:\\r\\n\\r\\n#XMSG: Message title for a popup to terminate a file uploading in the UploadCollection control\\r\\nUPLOADCOLLECTION_TERMINATE_TITLE=Terminate upload\\r\\n\\r\\n#XMSG: Message text file name already exists in the UploadCollection control\\r\\nUPLOADCOLLECTION_EXISTS=File name already exists.\\r\\n\\r\\n#XMSG: Message text informing that a file name must be entered during edit file name in the UploadCollection control\\r\\nUPLOADCOLLECTION_TYPE_FILENAME=Please enter a file name.\\r\\n\\r\\n#XMSG: Message text for uploading status to the UploadCollection control\\r\\nUPLOADCOLLECTION_UPLOADING=Uploading\\\\: {0} %\\r\\n\\r\\n#XMSG: Message title for the Upload Failed message box\\r\\nUPLOADCOLLECTION_FAILED=Upload failed\\r\\n\\r\\n#XMSG: Message text informing that it is not allowed to upload the selected file(s) (MIME type or file extension not allowed)\\r\\nUPLOADCOLLECTION_MISMATCH=File type is not allowed.\\r\\n\\r\\n#XMSG: Message text informing that upload is completed\\r\\nUPLOADCOLLECTION_UPLOAD_COMPLETED=Upload completed. Please wait for the server to finish processing.\\r\\n\\r\\n#XMSG: Message text informing that only one file can be dropped if uploading multiple files is not allowed\\r\\nUPLOADCOLLECTION_MULTIPLE_FALSE=Please use single drag & drop here.\\r\\n\\r\\n#XBUT: Button text for cancel button in the upload collection\\r\\nUPLOADCOLLECTION_CANCELBUTTON_TEXT=Cancel\\r\\n\\r\\n#XBUT: Text for OK button in the upload collection in case of Delete Dialog\\r\\nUPLOADCOLLECTION_OKBUTTON_TEXT=OK\\r\\n\\r\\n#XBUT: Text for Rename button in the upload collection in case of renaming a file\\r\\nUPLOADCOLLECTION_RENAMEBUTTON_TEXT=Rename\\r\\n\\r\\n#XBUT: Text for DELETE button in the upload collection\\r\\nUPLOADCOLLECTION_DELETEBUTTON_TEXT=Delete\\r\\n\\r\\n#XBUT: Text for TERMINATE button in the upload collection\\r\\nUPLOADCOLLECTION_TERMINATEBUTTON_TEXT=Terminate\\r\\n\\r\\n#XBUT: Text for RENAME button in the upload collection\\r\\nUPLOADCOLLECTION_EDITBUTTON_TEXT=Rename\\r\\n\\r\\n#XBUT: Text for Add button in the upload collection\\r\\nUPLOADCOLLECTION_ADD=Add\\r\\n\\r\\n#XBUT: Text for Upload button in the upload collection\\r\\nUPLOADCOLLECTION_UPLOAD=Upload\\r\\n\\r\\n#XMSG: Message text for no data text in the upload collection\\r\\nUPLOADCOLLECTION_NO_DATA_TEXT=No files found.\\r\\n\\r\\n#XMSG: Message text for no data description in the upload collection\\r\\nUPLOADCOLLECTION_NO_DATA_DESCRIPTION=Drop files to upload, or use the \\\"+\\\" button.\\r\\n\\r\\n#XMSG: Message text indicating where to drag\\r\\nUPLOADCOLLECTION_DRAG_FILE_INDICATOR=Drag files here\\r\\n\\r\\n#XMSG: Message text indicating where to drop file and upload\\r\\nUPLOADCOLLECTION_DROP_FILE_INDICATOR=Drop files to upload\\r\\n\\r\\n#XTIT: Predefined text for title in the personalization dialog - Settings for the view ('view' here is a noun).\\r\\nP13NDIALOG_VIEW_SETTINGS=View Settings\\r\\n#XTIT: dialog title if the dialog contains only filter panel\\r\\nP13NDIALOG_TITLE_FILTER=Define Filters\\r\\n#XTIT: dialog title if the dialog contains only sort panel\\r\\nP13NDIALOG_TITLE_SORT=Define Sorting\\r\\n#XTIT: dialog title if the dialog contains only group panel\\r\\nP13NDIALOG_TITLE_GROUP=Define Groups\\r\\n#XTIT: dialog title if the dialog contains only columns panel\\r\\nP13NDIALOG_TITLE_COLUMNS=Define Column Properties\\r\\n#XTIT: dialog title if the dialog contains only panel for dimensions and measures\\r\\nP13NDIALOG_TITLE_DIMEASURE=Define Chart Properties\\r\\n#XBUT: Text for OK button in the personalization dialog\\r\\nP13NDIALOG_OK=OK\\r\\n#XBUT: Text for Cancel button in the personalization dialog\\r\\nP13NDIALOG_CANCEL=Cancel\\r\\n#XBUT: Text for Reset button in the personalization dialog\\r\\nP13NDIALOG_RESET=Restore\\r\\n#XTIT: Text for Fix button in ValidationDialog\\r\\nP13NDIALOG_VALIDATION_FIX=Fix\\r\\n#XTIT: personalization dialog ValidationDialog predefined title for warning\\r\\nP13NDIALOG_VALIDATION_TITLE=Warning\\r\\n#XTIT: personalization dialog ValidationDialog predefined title for error\\r\\nP13NDIALOG_VALIDATION_TITLE_ERROR=Error\\r\\n#XTIT: personalization dialog ValidationDialog predefined message\\r\\nP13NDIALOG_VALIDATION_MESSAGE=Some filter values are missing or incorrect\\r\\n#XTIT: personalization dialog ValidationDialog predefined message for columns panel\\r\\nP13NDIALOG_VISIBLE_ITEMS_THRESHOLD_MESSAGE=Selecting a large number of columns can slow down the performance\\r\\n#XTIT: personalization dialog ValidationDialog predefined message for P13nDimMeasure\\r\\nP13NDIALOG_VALIDATION_CHARTTYPE=The dimensions and measures you have selected cannot be used with this chart type\\r\\n#XTIT: personalization dialog ValidationDialog predefined question an the end\\r\\nP13NDIALOG_VALIDATION_MESSAGE_QUESTION=Do you want to correct your entries?\\r\\n\\r\\n#XTIT: on some personalization panels \\\"(none)\\\" as 'column key' means that no criteria was defined\\r\\nP13NDIALOG_SELECTION_NONE=(none)\\r\\n\\r\\n#XTIT: Filterpanel predefined title for Include filter\\r\\nFILTERPANEL_INCLUDES=Include\\r\\n#XTIT: Filterpanel predefined title for Exclude filter\\r\\nFILTERPANEL_EXCLUDES=Exclude\\r\\n#XTIT: Text for title 'Filter' in the personalization dialog\\r\\nFILTERPANEL_TITLE=Filter\\r\\n\\r\\n#XTIT: Text for title 'Sort' in the personalization dialog\\r\\nSORTPANEL_TITLE=Sort\\r\\n\\r\\n#XTIT: Text for title 'Group' in the personalization dialog\\r\\nGROUPPANEL_TITLE=Group\\r\\n\\r\\n#XFLD: Label text for combobox control\\r\\nCONDITIONPANEL_FIELD_LABEL=Field\\\\:\\r\\n#XFLD: Label text for select control\\r\\nCONDITIONPANEL_OPERATOR_LABEL=Operator\\\\:\\r\\n\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONBT=between\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONEQ=equal to\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONContains=contains\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONGT=greater than\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONGE=greater than or equal to\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONLT=less than\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONLE=less than or equal to\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONInitial=initial\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONStartsWith=starts with\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONEndsWith=ends with\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONAscending=Ascending\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONDescending=Descending\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONGroupAscending=Ascending\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONGroupDescending=Descending\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONTotal=Total\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONAverage=Average\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONMinimum=Minimum\\r\\n#XTIT: ConditionPanel Option\\r\\nCONDITIONPANEL_OPTIONMaximum=Maximum\\r\\n#XTIT: ConditionPanel Empty\\r\\nCONDITIONPANEL_OPTIONEmpty=empty\\r\\n#XTIT: ConditionPanel NotEmpty\\r\\nCONDITIONPANEL_OPTIONNotEmpty=not empty\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_BT=between\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_EQ=equal to\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_GT=after\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_GE=on or after\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_LT=before\\r\\n#XTIT: ConditionPanel Option for date\\r\\nCONDITIONPANEL_OPTION_DATE_LE=before or on\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_BT=between\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_EQ=equal to\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_GT=greater than\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_GE=greater than or equal to\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_LT=less than\\r\\n#XTIT: ConditionPanel Option for numeric\\r\\nCONDITIONPANEL_OPTION_NUMERIC_LE=less than or equal to\\r\\n\\r\\n\\r\\n#XTIT: ConditionPanel Option Label\\r\\nCONDITIONPANEL_LABELFROM=from\\r\\n#XTIT: ConditionPanel Option Label\\r\\nCONDITIONPANEL_LABELTO=to\\r\\n#XTIT: ConditionPanel Option Label\\r\\nCONDITIONPANEL_LABELVALUE=Value\\r\\n#XTIT: ConditionPanel Option Label\\r\\nCONDITIONPANEL_LABELGROUPING=Show Field as Column\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_TOOLTIP=Add New Line\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_TOOLTIP=Remove line\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_FILTER_TOOLTIP=Add Filter\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_FILTER_TOOLTIP=Remove Filter\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_SORT_TOOLTIP=Add Sort Criterion\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_SORT_TOOLTIP=Remove Sort Criterion\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_GROUP_TOOLTIP=Add Grouping Criterion\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_GROUP_TOOLTIP=Remove Grouping Criterion\\r\\n#XTOL: ConditionPanel predefined text for tooltip on plus buttons\\r\\nCONDITIONPANEL_ADD_CONDITION_TOOLTIP=Add Condition\\r\\n#XTOL: ConditionPanel predefined text for tooltip on remove buttons\\r\\nCONDITIONPANEL_REMOVE_CONDITION_TOOLTIP=Remove Condition\\r\\n#XBUT: ConditionPanel predefined text for remove all button\\r\\nCONDITIONPANEL_REMOVE_ALL=Remove All\\r\\n#XTIT: ConditionPanel predefined field warning hint\\r\\nCONDITIONPANEL_FIELDMESSAGE=Enter valid value\\r\\n\\r\\n#XTIT: Text for title 'Chart' in the personalization dialog\\r\\nCHARTPANEL_TITLE=Chart\\r\\n\\r\\n#XTIT: Text for title 'Columns' in the personalization dialog\\r\\nCOLUMSPANEL_TITLE=Columns\\r\\n#XBUT: ColumnsPanel Show All button\\r\\nCOLUMNSPANEL_SHOW_ALL=Show All\\r\\n#XBUT: ColumnsPanel Show Selected button\\r\\nCOLUMNSPANEL_SHOW_SELECTED=Show Selected\\r\\n#XLST: ColumnsPanel Select All label\\r\\nCOLUMNSPANEL_SELECT_ALL=Select All\\r\\n#XLST: ColumnsPanel Select All label\\r\\nCOLUMNSPANEL_SELECT_ALL_WITH_COUNTER=Select all ({0}/{1})\\r\\n#XTOL: Tooltip for MOVE: ToStart button\\r\\nCOLUMNSPANEL_MOVE_TO_TOP=Move to Top\\r\\n#XTOL: Tooltip for MOVE: Up button\\r\\nCOLUMNSPANEL_MOVE_UP=Move Up\\r\\n#XTOL: Tooltip for MOVE: Down button\\r\\nCOLUMNSPANEL_MOVE_DOWN=Move Down\\r\\n#XTOL: Tooltip for MOVE: ToEnd button\\r\\nCOLUMNSPANEL_MOVE_TO_BOTTOM=Move to Bottom\\r\\n\\r\\n#XLST: ColumnsPanel Chart Type caption\\r\\nCOLUMNSPANEL_COLUMN_TYPE=Type\\r\\n#XLST: ColumnsPanel Chart Type\\r\\nCOLUMNSPANEL_TYPE_DIMENSION=Dimension\\r\\n#XLST: ColumnsPanel Chart Type\\r\\nCOLUMNSPANEL_TYPE_MEASURE=Measure\\r\\n#XLST: ColumnsPanel Chart Role caption\\r\\nCOLUMNSPANEL_COLUMN_ROLE=Role\\r\\n#XLST: ColumnsPanel Chart Role\\r\\nCOLUMNSPANEL_CHARTROLE_CATEGORY=Category\\r\\n#XLST: ColumnsPanel Chart Role\\r\\nCOLUMNSPANEL_CHARTROLE_SERIES=Series\\r\\n#XLST: ColumnsPanel Chart Role\\r\\nCOLUMNSPANEL_CHARTROLE_AXIS1=Axis 1\\r\\n#XLST: ColumnsPanel Chart Role\\r\\nCOLUMNSPANEL_CHARTROLE_AXIS2=Axis 2\\r\\n#XLST: ColumnsPanel Chart Type\\r\\nCOLUMNSPANEL_CHARTTYPE=Chart Type\\r\\n\\r\\n\\r\\n#XFLD: Subtle link description label\\r\\nLINK_SUBTLE=Subtle\\r\\n#XFLD: Emphasized link description label\\r\\nLINK_EMPHASIZED=Emphasized\\r\\n\\r\\n#XACT: ARIA announcement for the search field F5 keyboard shortcut\\r\\nSEARCHFIELD_ARIA_F5=Press F5 to refresh\\r\\n\\r\\n#XACT: ARIA announcement for the F4 value help keyboard shortcut\\r\\nVALUEHELP_ARIA_F4=Press F4 to open a value help dialog.\\r\\n\\r\\n#XTXT: Bar's ARIA description when it is a footer\\r\\nBAR_ARIA_DESCRIPTION_FOOTER=Footer\\r\\n#XTXT: Bar's ARIA description when it is a header\\r\\nBAR_ARIA_DESCRIPTION_HEADER=Header\\r\\n#XTXT: Bar's ARIA description when it is a subheader\\r\\nBAR_ARIA_DESCRIPTION_SUBHEADER=Subheader\\r\\n\\r\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Error\\\"\\r\\nOBJECTNUMBER_ARIA_VALUE_STATE_ERROR=Value State Error\\r\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Warning\\\"\\r\\nOBJECTNUMBER_ARIA_VALUE_STATE_WARNING=Value State Warning\\r\\n#XACT: ARIA announcement for the ObjectNumber's value state \\\"Success\\\"\\r\\nOBJECTNUMBER_ARIA_VALUE_STATE_SUCCESS=Value State Success\\r\\n\\r\\n#XACT: ARIA text for tab separator icons\\r\\nICONTABBAR_NEXTSTEP=Next Step\\r\\n#XACT: ARIA text for positive icon color\\r\\nICONTABBAR_ICONCOLOR_POSITIVE=Positive\\r\\n#XACT: ARIA text for critical icon color\\r\\nICONTABBAR_ICONCOLOR_CRITICAL=Critical\\r\\n#XACT: ARIA text for negative icon color\\r\\nICONTABBAR_ICONCOLOR_NEGATIVE=Negative\\r\\n\\r\\n#XACT: ARIA text of current selected value vs. max. possible value of the RatingIndicator control\\r\\nRATING_VALUEARIATEXT={0} of {1}\\r\\n#XACT: ARIA description of the RatingIndicator control\\r\\nRATING_ARIA_NAME=Rating\\r\\n\\r\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s favorite property\\r\\nARIA_FAVORITE_MARK_VALUE=Favorite\\r\\n#XACT: ARIA description for ObjectHeader and ObjectListItem`s flag property\\r\\nARIA_FLAG_MARK_VALUE=Flag\\r\\n\\r\\n#XACT: ARIA description for ObjectHeader icon infront of the title when it's active\\r\\nOH_ARIA_ICON=Icon\\r\\n\\r\\n#XACT: ARIA description for Shell logo\\r\\nSHELL_ARIA_LOGO=Logo\\r\\n\\r\\n#XTXT: MessagePage text\\r\\nMESSAGE_PAGE_TEXT=No matching items found.\\r\\n#XTXT: MessagePage description\\r\\nMESSAGE_PAGE_DESCRIPTION=Check the filter settings\\r\\n\\r\\n#XFLD: Token number indicator which is used to show more tokens in MultiInput when the MultiInput it is in multi-line display mode\\r\\nMULTIINPUT_SHOW_MORE_TOKENS={0} More\\r\\n#XACT: ARIA announcement for multiinput containing label\\r\\nMULTIINPUT_ARIA_CONTAIN_TOKEN=May contain tokens\\r\\n#XACT: ARIA announcement for multiinput containing one token\\r\\nMULTIINPUT_ARIA_CONTAIN_ONE_TOKEN=Contains 1 token\\r\\n#XACT: ARIA announcement for multiinput containing several tokens\\r\\nMULTIINPUT_ARIA_CONTAIN_SEVERAL_TOKENS=Contains {0} tokens\\r\\n\\r\\n#XACT: ARIA announcement for tokenizer label\\r\\nTOKENIZER_ARIA_LABEL=Tokenizer\\r\\n\\r\\n#XACT: ARIA announcement for token label\\r\\nTOKEN_ARIA_LABEL=Token\\r\\n#XACT: ARIA announcement for token deletable\\r\\nTOKEN_ARIA_DELETABLE=Deletable\\r\\n\\r\\n#XACT: ARIA announcement for the ObjectListItem unread mark\\r\\nOBJECTLISTITEM_ARIA_UNREAD_VALUE=Unread\\r\\n#XACT: ARIA announcement for the ObjectListItem locked mark\\r\\nOBJECTLISTITEM_ARIA_LOCKED_MARK_VALUE=Locked\\r\\n\\r\\n#XBUT: MessagePopover predefined text for CLOSE action\\r\\nMESSAGEPOPOVER_CLOSE=Close\\r\\n#XBUT: MessagePopover predefined text for All Button\\r\\nMESSAGEPOPOVER_ALL=All\\r\\n#XACT: ARIA announcement for the MessagePopover back buttons tooltip\\r\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON_TOOLTIP=Back to Messages\\r\\n#XACT: ARIA announcement for the MessagePopover back buttons\\r\\nMESSAGEPOPOVER_ARIA_BACK_BUTTON=Message Details\\r\\n#XACT: ARIA announcement for the MessagePopover heading\\r\\nMESSAGEPOPOVER_ARIA_HEADING=Messages\\r\\n\\r\\n#XACT: ARIA announcement for the accept button\\r\\nBUTTON_ARIA_TYPE_ACCEPT=Positive Action\\r\\n#XACT: ARIA announcement for the reject button\\r\\nBUTTON_ARIA_TYPE_REJECT=Negative Action\\r\\n#XACT: ARIA announcement for the emphasized button\\r\\nBUTTON_ARIA_TYPE_EMPHASIZED=Emphasized\\r\\n\\r\\n#XACT: ARIA text for position markers\\r\\nCAROUSEL_POSITION=Item {0} of {1} displayed\\r\\n\\r\\n#XTXT: Text between numbers in the numeric page indicator\\r\\nCAROUSEL_PAGE_INDICATOR_TEXT={0} of {1}\\r\\n\\r\\n#XTXT: colon separator\\r\\nCOLON=\\\\:\\r\\n\\r\\n#XBUT: sap.m.semantic.SemanticControl Edit button text\\r\\nSEMANTIC_CONTROL_EDIT=Edit\\r\\n#XBUT: sap.m.semantic.SemanticControl Save button text\\r\\nSEMANTIC_CONTROL_SAVE=Save\\r\\n#XBUT: sap.m.semantic.SemanticControl Delete button text\\r\\nSEMANTIC_CONTROL_DELETE=Delete\\r\\n#XBUT: sap.m.semantic.SemanticControl Cancel button text\\r\\nSEMANTIC_CONTROL_CANCEL=Cancel\\r\\n#XBUT: sap.m.semantic.SemanticControl Approve button text\\r\\nSEMANTIC_CONTROL_APPROVE=Approve\\r\\n#XBUT: sap.m.semantic.SemanticControl Reject button text\\r\\nSEMANTIC_CONTROL_REJECT=Reject\\r\\n#XBUT: sap.m.semantic.SemanticControl Forward button text\\r\\nSEMANTIC_CONTROL_FORWARD=Forward\\r\\n#XBUT: sap.m.semantic.SemanticControl Open in button text\\r\\nSEMANTIC_CONTROL_OPEN_IN=Open in...\\r\\n#XBUT: sap.m.semantic.SemanticControl Sort button text\\r\\nSEMANTIC_CONTROL_SORT=Sort\\r\\n#XBUT: sap.m.semantic.SemanticControl Filter button text\\r\\nSEMANTIC_CONTROL_FILTER=Filter\\r\\n#XBUT: sap.m.semantic.SemanticControl Group button text\\r\\nSEMANTIC_CONTROL_GROUP=Group\\r\\n#XBUT: sap.m.semantic.SemanticControl Flag button text\\r\\nSEMANTIC_CONTROL_FLAG=Flag\\r\\n#XBUT: sap.m.semantic.SemanticControl Favorite button text\\r\\nSEMANTIC_CONTROL_FAVORITE=Favorite\\r\\n#XBUT: sap.m.semantic.SemanticControl Add button text\\r\\nSEMANTIC_CONTROL_ADD=Add\\r\\n#XBUT: sap.m.semantic.SemanticControl Send Email button text\\r\\nSEMANTIC_CONTROL_SEND_EMAIL=Send E-Mail\\r\\n#XBUT: sap.m.semantic.SemanticControl Discuss in SAP Jam button text\\r\\nSEMANTIC_CONTROL_DISCUSS_IN_JAM=Discuss in SAP Jam\\r\\n#XBUT: sap.m.semantic.SemanticControl Share in SAP Jam button text\\r\\nSEMANTIC_CONTROL_SHARE_IN_JAM=Share on SAP Jam\\r\\n#XBUT: sap.m.semantic.SemanticControl Send Message button text\\r\\nSEMANTIC_CONTROL_SEND_MESSAGE=Send Message\\r\\n#XBUT: sap.m.semantic.SemanticControl Save as Tile button text\\r\\nSEMANTIC_CONTROL_SAVE_AS_TILE=Save as Tile\\r\\n#XBUT: sap.m.semantic.SemanticControl Print button text\\r\\nSEMANTIC_CONTROL_PRINT=Print\\r\\n#XBUT: sap.m.semantic.SemanticControl Multi select button text\\r\\nSEMANTIC_CONTROL_MULTI_SELECT=Multiple Selection\\r\\n#XBUT: sap.m.semantic.SemanticControl Multi select cancel button text\\r\\nSEMANTIC_CONTROL_MULTI_SELECT_CANCEL=Cancel Multiple Selection\\r\\n#XBUT: sap.m.semantic.SemanticControl Message indicator button text\\r\\nSEMANTIC_CONTROL_MESSAGES_INDICATOR=Messages\\r\\n#XBUT: sap.m.semantic.SemanticControl \\\"Action\\\" Share button text\\r\\nSEMANTIC_CONTROL_ACTION_SHARE=Share\\r\\n#XTXT: sap.m.semantic.DetailPage title\\r\\nSEMANTIC_DETAIL_PAGE_TITLE=Details\\r\\n#XTXT: sap.m.semantic.MasterPage title\\r\\nSEMANTIC_MASTER_PAGE_TITLE=Master\\r\\n\\r\\n#XFLD: sap.m.DraftIndicator Saving Draft indicator text\\r\\nDRAFT_INDICATOR_SAVING_DRAFT=Saving draft...\\r\\n#XFLD: sap.m.DraftIndicator Draft saved indicator text\\r\\nDRAFT_INDICATOR_DRAFT_SAVED=Draft saved\\r\\n\\r\\n#XBUT: Wizard predefined text for Cancel button\\r\\nWIZARD_CANCEL=Cancel\\r\\n#XBUT: Wizard predefined text for Next button\\r\\nWIZARD_NEXT=Next\\r\\n#XBUT: Wizard predefined text for Finish button\\r\\nWIZARD_FINISH=Review\\r\\n\\r\\n#XACT: Aria information for the Date Picker\\r\\nDATEPICKER_DATE_TYPE=Date\\r\\n\\r\\n#XACT: WizardProgressNavigator selected step\\r\\nWIZARD_PROG_NAV_SELECTED=Selected\\r\\n#XACT: WizardProgressNavigator processed step\\r\\nWIZARD_PROG_NAV_PROCESSED=Processed\\r\\n#XACT: WizardProgressNavigator predefined text for step\\r\\nWIZARD_PROG_NAV_STEP_TITLE=Step\\r\\n#XBUT: Wizard predefined text for Step button\\r\\nWIZARD_STEP=Step\\r\\n#XACT: Aria label for the wizard\\r\\nWIZARD_LABEL=Wizard\\r\\n\\r\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectHeader, showing that the item is flagged\\r\\nTOOLTIP_OH_FLAG_MARK_VALUE=Flagged\\r\\n\\r\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectHeader, showing that the item is favorite\\r\\nTOOLTIP_OH_FAVORITE_MARK_VALUE=Favorite\\r\\n\\r\\n#XTOL: Tooltip for the select title arrow inside sap.m.ObjectHeader\\r\\nOH_SELECT_ARROW_TOOLTIP=Related Options\\r\\n\\r\\n#XTXT: Text value for marker type Flag\\r\\nOM_FLAG=Flagged\\r\\n\\r\\n#XTXT: Text value for marker type Favorite\\r\\nOM_FAVORITE=Favorite\\r\\n\\r\\n#XTXT: Text value for marker type Draft\\r\\nOM_DRAFT=Draft\\r\\n\\r\\n#XTXT: Text value for marker type Locked\\r\\nOM_LOCKED=Locked\\r\\n\\r\\n#XTXT: Text value for marker type LockedBy that shows who has locked the object, e.g. Locked by {User name}\\r\\nOM_LOCKED_BY=Locked by {0}\\r\\n\\r\\n#XTXT: Text value for marker type Locked by another user\\r\\nOM_LOCKED_BY_ANOTHER_USER=Locked by another user\\r\\n\\r\\n#XTXT: Text value for marker type Unsaved Changes\\r\\nOM_UNSAVED=Unsaved Changes\\r\\n\\r\\n#XTXT: Text value for marker type UnsavedBy Changes that shows who has unsaved changes, e.g. Unsaved Changes by {User name}\\r\\nOM_UNSAVED_BY=Unsaved Changes by {0}\\r\\n\\r\\n#XTXT: Text value for marker type Unsaved by another user\\r\\nOM_UNSAVED_BY_ANOTHER_USER=Unsaved changes by another user\\r\\n\\r\\n#XTOL: Tooltip for \\\"Send SMS\\\" in QuickView\\r\\nQUICKVIEW_SEND_SMS=Send SMS\\r\\n\\r\\n#XTXT: Text for character left\\r\\nTEXTAREA_CHARACTER_LEFT={0} Character Left\\r\\n\\r\\n#XTXT: Text for characters left\\r\\nTEXTAREA_CHARACTERS_LEFT={0} Characters Left\\r\\n\\r\\n#XTXT: Text for character exceeded\\r\\nTEXTAREA_CHARACTER_EXCEEDED={0} Character Exceeded\\r\\n\\r\\n#XTXT: Text for characters exceeded\\r\\nTEXTAREA_CHARACTERS_EXCEEDED={0} Characters Exceeded\\r\\n\\r\\n#XTOL: Tooltip for the flag icon inside sap.m.ObjectListItem, showing that the item is flagged\\r\\nTOOLTIP_OLI_FLAG_MARK_VALUE=Flagged\\r\\n\\r\\n#XTOL: Tooltip for the favorite icon inside sap.m.ObjectListItem, showing that the item is favorite\\r\\nTOOLTIP_OLI_FAVORITE_MARK_VALUE=Favorite\\r\\n\\r\\n#XTOL: Tooltip for the locked icon inside sap.m.ObjectListItem, showing that the item is locked\\r\\nTOOLTIP_OLI_LOCK_MARK_VALUE=Locked\\r\\n\\r\\n#XBUT: Time Selection button text of Time Picker control\\r\\nTIMEPICKER_SET=OK\\r\\n\\r\\n#XBUT: Cancel/Close button text of Time Picker control\\r\\nTIMEPICKER_CANCEL=Cancel\\r\\n\\r\\n#YACT: ARIA tag of Time Picker control\\r\\nTIMEPICKER_SCREENREADER_TAG=Time Picker\\r\\n\\r\\n#YACT: ARIA tag of Time Picker control with format as placeholder\\r\\nTIMEPICKER_WITH_PH_SCREENREADER_TAG=Time Picker in format {0}\\r\\n\\r\\n#XFLD: Label of the hours value slider inside a Time Picker control\\r\\nTIMEPICKER_LBL_HOURS=Hours\\r\\n\\r\\n#XFLD: Label of the minutes value slider inside a Time Picker control\\r\\nTIMEPICKER_LBL_MINUTES=Minutes\\r\\n\\r\\n#XFLD: Label of the seconds value slider inside a Time Picker control\\r\\nTIMEPICKER_LBL_SECONDS=Seconds\\r\\n\\r\\n#XFLD: Label of the am/pm value slider inside a Time Picker control\\r\\nTIMEPICKER_LBL_AMPM=AM/PM\\r\\n\\r\\n#XACT: ARIA label for Breadcrumbs\\r\\nBREADCRUMB_LABEL=Breadcrumb Trail\\r\\n\\r\\n#XTOL: Tooltip text for Breadcrumbs select\\r\\nBREADCRUMB_SELECT_TOOLTIP=More\\r\\n\\r\\n#XACT: Unread status of Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_UNREAD=Notification unread.\\r\\n\\r\\n#XACT: Read status of Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_READ=Notification read.\\r\\n\\r\\n#XACT: ARIA text for datetime and priority\\r\\nNOTIFICATION_LIST_ITEM_DATETIME_PRIORITY=Due in {0}, {1} Priority.\\r\\n\\r\\n#XFLD: text that will be displayed when tile failed to load\\r\\nINFOTILE_CANNOT_LOAD_TILE=Cannot load tile\\r\\n\\r\\n#XFLD: text that will be read while tile is loading\\r\\nINFOTILE_LOADING=Loading\\r\\n\\r\\n#XTXT: text for critical color\\r\\nSEMANTIC_COLOR_CRITICAL=Warning\\r\\n\\r\\n#XTXT: text for good color\\r\\nSEMANTIC_COLOR_GOOD=Good\\r\\n\\r\\n#XTXT: text for neutral color\\r\\nSEMANTIC_COLOR_NEUTRAL=Neutral\\r\\n\\r\\n#XTXT: text for error color\\r\\nSEMANTIC_COLOR_ERROR=Critical\\r\\n\\r\\n#XTOL:\\r\\nNUMERICCONTENT_DEVIATION_UP=Ascending\\r\\n\\r\\n#XTOL:\\r\\nNUMERICCONTENT_DEVIATION_DOWN=Descending\\r\\n\\r\\n#YACT: ARIA tag of MaskInput control\\r\\nMASKINPUT_SCREENREADER_TAG=Masked\\r\\n\\r\\n#YACT: ARIA description of MaskInput control\\r\\nMASKINPUT_SCREENREADER_DESCRIPTION=When focused, the masked input field is formatted and prefilled. The {0} symbol is reserved for a placeholder. The value that has to be entered in this field is in the following format {1} where every symbol corresponds to a rule. A rule is a set of characters that are allowed for their particular position. Symbols that do not have a rule are immutable characters and are part of the value formatting.\\r\\n\\r\\n#XACT: ARIA scroll back button for tabstrip\\r\\nTABSTRIP_SCROLL_BACK=Scroll Back\\r\\n\\r\\n#XACT: ARIA scroll forward button for tabstrip\\r\\nTABSTRIP_SCROLL_FORWARD=Scroll Forward\\r\\n\\r\\n#XACT: ARIA static text for modified tabstrip item\\r\\nTABSTRIP_ITEM_MODIFIED=Unsaved\\r\\n\\r\\n#XACT: ARIA static text for not-modified tabstrip item\\r\\nTABSTRIP_ITEM_NOT_MODIFIED=Saved\\r\\n\\r\\n#XACT: ARIA static text for closable tabstrip item\\r\\nTABSTRIP_ITEM_CLOSABLE=Closable\\r\\n#XFLD: Footer text for TileContent\\r\\nTILECONTENT_FOOTER_TEXT={0}, {1}\\r\\n\\r\\n#XBUT: Button text for collapsing the Notification List Group\\r\\nNOTIFICATION_LIST_GROUP_COLLAPSE=Collapse Group\\r\\n\\r\\n#XBUT: Button text for expanding the Notification List Group\\r\\nNOTIFICATION_LIST_GROUP_EXPAND=Expand Group\\r\\n\\r\\n#XACT: ARIA add new tab button for tabstrip\\r\\nTABCONTAINER_ADD_NEW_TAB=Add New Tab\\r\\n\\r\\n#XACT: ARIA dropdown button for tabstrip\\r\\nTABSTRIP_OPENED_TABS=Opened Tabs\\r\\n\\r\\n#XBUT: Button text for expanding a Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_SHOW_MORE=Show More\\r\\n\\r\\n#XBUT: Button text for collapsing a Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_SHOW_LESS=Show Less\\r\\n\\r\\n#XBUT: Date button of DateTimePicker on small screens\\r\\nDATETIMEPICKER_DATE=Date\\r\\n\\r\\n#XBUT: Time button of DateTimePicker on small screens\\r\\nDATETIMEPICKER_TIME=Time\\r\\n\\r\\n#XACT: Aria information for the Date Time Picker\\r\\nDATETIMEPICKER_TYPE=Date and Time\\r\\n\\r\\n#XACT: PlanningCalendar accessibility description\\r\\nPLANNINGCALENDAR=Planning calendar\\r\\n\\r\\n#XACT: PlanningCalendar view selector accessibility description\\r\\nPLANNINGCALENDAR_VIEW=View calendar by\\r\\n\\r\\n#XFLD: Name of the \\\"Hours\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_HOURS=Hours\\r\\n\\r\\n#XFLD: Name of the \\\"Days\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_DAYS=Days\\r\\n\\r\\n#XFLD: Name of the \\\"Months\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_MONTHS=Months\\r\\n\\r\\n#XFLD: Name of the \\\"Week\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_WEEK=1 Week\\r\\n\\r\\n#XFLD: Name of the \\\"OneMonth\\\" view in the PlanningCalendar control\\r\\nPLANNINGCALENDAR_ONE_MONTH=1 Month\\r\\n\\r\\n#XBUT: Today button of PlanningCalendar control\\r\\nPLANNINGCALENDAR_TODAY=Today\\r\\n\\r\\n#XFLD: Text for all day event\\r\\nPLANNINGCALENDAR_ALLDAY=All Day\\r\\n\\r\\n#XFLD: Text for event with no starting time\\r\\nPLANNINGCALENDAR_UNTIL=until {0}\\r\\n\\r\\n#XFLD: Text for a placeholder row when there are no appointments\\r\\nPLANNINGCALENDAR_ROW_NO_APPOINTMENTS=No Entries\\r\\n\\r\\n#XTOL: Tool tip for nextButton of the PagingButton\\r\\nPAGINGBUTTON_NEXT=Next Page\\r\\n\\r\\n#XTOL: Tool tip for nextButton of the PagingButton\\r\\nPAGINGBUTTON_PREVIOUS=Previous Page\\r\\n\\r\\n#XBUT: Text and number of selected items for toolbar button of SelectionDetails\\r\\nSELECTIONDETAILS_BUTTON_TEXT_WITH_NUMBER=Details ({0})\\r\\n\\r\\n#XBUT: Text for toolbar button of SelectionDetails\\r\\nSELECTIONDETAILS_BUTTON_TEXT=Details\\r\\n\\r\\n#############\\r\\n#Translatable Control Types and States for ACC\\r\\n#############\\r\\n\\r\\n#XACT: type of an UI control is an input field\\r\\nACC_CTR_TYPE_INPUT=Input\\r\\n\\r\\n#XACT: type of an UI control is a input field (which allows setting multiple values)\\r\\nACC_CTR_TYPE_MULTIINPUT=Multi Input\\r\\n\\r\\n#XACT: type of an UI control is a date input field\\r\\nACC_CTR_TYPE_DATEINPUT=Date Input\\r\\n\\r\\n#XACT: type of an UI control is a time input field\\r\\nACC_CTR_TYPE_TIMEINPUT=Time input\\r\\n\\r\\n#XACT: type of an UI control is a date and time input field\\r\\nACC_CTR_TYPE_DATETIMEINPUT=Date/time input\\r\\n\\r\\n#XACT: type of an UI control is a rating indicator\\r\\nACC_CTR_TYPE_RATING=Rating\\r\\n\\r\\n#XACT: type of an UI control is a button\\r\\nACC_CTR_TYPE_BUTTON=Button\\r\\n\\r\\n#XACT: type of an UI control is a link\\r\\nACC_CTR_TYPE_LINK=Link\\r\\n\\r\\n#XACT: type of an UI control is an image\\r\\nACC_CTR_TYPE_IMAGE=Image\\r\\n\\r\\n#XACT: type of an UI control is a checkbox\\r\\nACC_CTR_TYPE_CHECKBOX=Checkbox\\r\\n\\r\\n#XACT: type of of an UI control is a progess indicator\\r\\nACC_CTR_TYPE_PROGRESS=Progress\\r\\n\\r\\n#XACT: type of an UI control is a combobox\\r\\nACC_CTR_TYPE_COMBO=Combo Box\\r\\n\\r\\n#XACT: type of of an UI control is a combobox (which allows multi selection)\\r\\nACC_CTR_TYPE_MULTICOMBO=Multi Combo Box\\r\\n\\r\\n#XACT: type of of an UI control is a list\\r\\nACC_CTR_TYPE_LIST=List Box\\r\\n\\r\\n#XACT: type of of an UI control is a list item\\r\\nACC_CTR_TYPE_OPTION=List Item\\r\\n\\r\\n#XACT: type of of an UI control is a tree\\r\\nACC_CTR_TYPE_TREE=Tree\\r\\n\\r\\n#XACT: type of of an UI control is a tree item\\r\\nACC_CTR_TYPE_TREEITEM=Tree Item\\r\\n\\r\\n#XACT: type of of an UI control is a table\\r\\nACC_CTR_TYPE_TABLE=Table\\r\\n\\r\\n#XACT: type of of an UI control is a table row\\r\\nACC_CTR_TYPE_ROW=Row\\r\\n\\r\\n#XACT: ARIA announcement for the header row of the table\\r\\nACC_CTR_TYPE_HEADER_ROW=Header Row\\r\\n\\r\\n#XACT: ARIA announcement for the footer row of the table\\r\\nACC_CTR_TYPE_FOOTER_ROW=Footer Row\\r\\n\\r\\n#XACT: \\\"pressed\\\" state of e.g. a togglebutton which should be announced by screenreaders\\r\\nACC_CTR_STATE_PRESSED=Pressed\\r\\n\\r\\n#XACT: \\\"checked\\\" state of e.g. a checkbox which should be announced by screenreaders\\r\\nACC_CTR_STATE_CHECKED=Checked\\r\\n\\r\\n#XACT: state (current and max. value) of a rating indicator which should be announced by screenreaders\\r\\nACC_CTR_STATE_RATING={0} out of {1}\\r\\n\\r\\n#XACT: progress state of a progress indicator which should be announced by screenreaders\\r\\nACC_CTR_STATE_PROGRESS={0} %\\r\\n\\r\\n#############\\r\\n\\r\\n#XACT: Aria information for the Split Button\\r\\nSPLIT_BUTTON_DESCRIPTION=Split Button\\r\\n\\r\\n#XACT: Aria hint for the keyboard handling support of the Split Button\\r\\nSPLIT_BUTTON_KEYBOARD_HINT=Press Enter to trigger action and Arrow Down to open menu\\r\\n\\r\\n#XTOL: Tooltip text for back button inside a Menu Page\\r\\nMENU_PAGE_BACK_BUTTON=Back to\\r\\n\\r\\n#XBUT: Menu predefined text for CLOSE action\\r\\nMENU_CLOSE=Cancel\\r\\n\\r\\n#XBUT: Button text for closing a Notification List Base control\\r\\nNOTIFICATION_LIST_BASE_CLOSE=Close\\r\\n\\r\\n\\r\\n#XBUT: No grouping item in ViewSettingsPopover\\r\\nNO_GROUPING=No Grouping\\r\\n\\r\\n#XBUT: No filtering item in ViewSettingsPopover\\r\\nREMOVE_FILTER=Remove Filter\\r\\n\\r\\n#XBUT: ARIA-LabelledBy for ViewSettingsPopover\\r\\nARIA_LABELLED_BY_POPOVER=Column View Settings\\r\\n\\r\\n#XBUT: Show selected only for ViewSettingsPopover\\r\\nSHOW_SELECTED_ONLY=Show Selected Only\\r\\n\\r\\n#XBUT: No sorting item in ViewSettingsPopover\\r\\nNO_SORTING=No Sorting\\r\\n\\r\\n#YACT: ARIA information about multiple content within the SlideTile\\r\\nSLIDETILE_MULTIPLE_CONTENT=Element with multiple content\\r\\n\\r\\n#YACT: ARIA information about toggle sliding within the SlideTile\\r\\nSLIDETILE_TOGGLE_SLIDING=To toggle sliding, press space bar\\r\\n\\r\\n#YACT: ARIA information how to activate the SlideTile\\r\\nSLIDETILE_ACTIVATE=To activate, press enter\\r\\n\\r\\n#YACT: ARIA information how to scroll back in the SlideTile\\r\\nSLIDETILE_SCROLL_BACK=To scroll back, press B\\r\\n\\r\\n#YACT: ARIA information how to to scroll forward in the SlideTile\\r\\nSLIDETILE_SCROLL_FORWARD=To scroll forward, press F\\r\\n\\r\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\r\\nSLIDER_HANDLE=Slider Handle\\r\\n\\r\\n#XACT: ARIA announcement for the range in RangeSlider\\r\\nRANGE_SLIDER_RANGE_ANNOUNCEMENT=From {0} to {1}\\r\\n\\r\\n#XACT: ARIA ARIA-LabelledBy for the left handle and tooltip in RangeSlider\\r\\nRANGE_SLIDER_LEFT_HANDLE=Left Handle\\r\\n\\r\\n#XACT: ARIA ARIA-LabelledBy for the right handle and tooltip in RangeSlider\\r\\nRANGE_SLIDER_RIGHT_HANDLE=Right Handle\\r\\n\\r\\n#XACT: ARIA ARIA-LabelledBy for the entire range handler in RangeSlider\\r\\nRANGE_SLIDER_RANGE_HANDLE=Range\\r\\n\\r\\n#XBUT: Button text for close button in the LightBox\\r\\nLIGHTBOX_CLOSE_BUTTON=Close\\r\\n\\r\\n#XTOL: Tooltip on the button to allow to scroll back\\r\\nHEADERCONTAINER_BUTTON_PREV_SECTION=Previous\\r\\n\\r\\n#XTOL: Tooltip on the button to allow to scroll forward\\r\\nHEADERCONTAINER_BUTTON_NEXT_SECTION=Next\\r\\n\\r\\n#XTXT: Error message for LightBox image not loaded due to timeout.\\r\\nLIGHTBOX_IMAGE_TIMED_OUT=Image could not be loaded\\r\\n\\r\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\r\\nLIGHTBOX_IMAGE_TIMED_OUT_DETAILS=This image is too big to load right now. Please try again later.\\r\\n\\r\\n#XTXT: Error message for LightBox image not loaded.\\r\\nLIGHTBOX_IMAGE_ERROR=An error has occurred.\\r\\n\\r\\n#XTXT: Error message for LightBox image not loaded due to timeout detailed message.\\r\\nLIGHTBOX_IMAGE_ERROR_DETAILS=We could not find the image at the specified location, or the server is not responding.\\r\\n\\r\\n#XACT: ARIA announcement for enlarged image\\r\\nLIGHTBOX_ARIA_ENLARGED=Enlarged image of {0}\\r\\n\\r\\n#XACT: ARIA keyboard announcement for the DEL key for removing a tile\\r\\nTILE_REMOVE_BY_DEL_KEY=Press delete key to remove the item.\\r\\n\\r\\n#XACT: ARIA text for GenericTile in actions scope\\r\\nGENERICTILE_ACTIONS_ARIA_TEXT=Removable tile\\r\\n\\r\\n#XTOL: Tooltip for REMOVE button in the GenericTile\\r\\nGENERICTILE_REMOVEBUTTON_TEXT=Remove\\r\\n\\r\\n#XTXT: Reached maximum number of notifications in NotificationListGroup title\\r\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_TITLE=There are {0} more notifications\\r\\n\\r\\n#XTXT: Reached maximum number of notifications in NotificationListGroup\\r\\nNOTIFICATION_LIST_GROUP_MAX_NOTIFICATIONS_BODY=You need to close or take action on the listed notifications to display more.\\r\\n\\r\\n#XTOL: Tooltip of the button for increasing for example the quantity of a product inside shopping-cart application\\r\\nSTEP_INPUT_INCREASE_BTN=Increase\\r\\n\\r\\n#XTOL: Tooltip of the button for decreasing for example the quantity of a product inside shopping-cart application\\r\\nSTEP_INPUT_DECREASE_BTN=Decrease\\r\\n\\r\\n#XMIT: Radio button control name caption\\r\\nRADIOBUTTON_NAME=Radio Button\\r\\n\\r\\n#XTIT: Radio button control name plural caption\\r\\nRADIOBUTTON_NAME_PLURAL=Radio Buttons\\r\\n\\r\\n#XMIT: Text control name caption\\r\\nTEXT_NAME=Text\\r\\n\\r\\n#XTIT: Text control name plural caption\\r\\nTEXT_NAME_PLURAL=Texts\\r\\n\\r\\n#XMIT: Date picker control name caption\\r\\nDATEPICKER_NAME=Date Picker\\r\\n\\r\\n#XACT: ARIA role for the control Object Identifier\\r\\nOI_ARIA_ROLE=Object Identifier\\r\\n\\r\\n#XTIT: Date picker control name plural caption\\r\\nDATEPICKER_NAME_PLURAL=Date Pickers\\r\\n\\r\\n#XMIT: Check Box control name caption\\r\\nCHECKBOX_NAME=Checkbox\\r\\n\\r\\n#XTIT: Check Box control name plural caption\\r\\nCHECKBOX_NAME_PLURAL=Checkboxes\\r\\n\\r\\n#XMIT: Rating Indicator control name caption\\r\\nRATINGINDICATOR_NAME=Rating Indicator\\r\\n\\r\\n#XTIT: Rating Indicator control name plural caption\\r\\nRATINGINDICATOR_NAME_PLURAL=Rating Indicators\\r\\n\\r\\n#XMIT: Page control name caption\\r\\nPAGE_NAME=Page\\r\\n\\r\\n#XTIT: Page control name plural caption\\r\\nPAGE_NAME_PLURAL=Pages\\r\\n\\r\\n#XMIT: Label control name caption\\r\\nLABEL_NAME=Label\\r\\n\\r\\n#XTIT: Label control name plural caption\\r\\nLABEL_NAME_PLURAL=Labels\\r\\n\\r\\n#XMIT: Link control name caption\\r\\nLINK_NAME=Link\\r\\n\\r\\n#XTIT: Link control name plural caption\\r\\nLINK_NAME_PLURAL=Links\\r\\n\\r\\n#XMIT: Scroll container control name caption\\r\\nSCROLL_CONTAINER_CONTROL_NAME=Container\\r\\n\\r\\n#XTIT: Scroll container control name plural caption\\r\\nSCROLL_CONTAINER_CONTROL_NAME_PLURAL=Containers\\r\\n\\r\\n#XMIT: Panel control name caption\\r\\nPANEL_NAME=Panel\\r\\n\\r\\n#XTIT: Panel control name plural caption\\r\\nPANEL_NAME_PLURAL=Panels\\r\\n\\r\\n#XMIT: ListItemBase control name caption\\r\\nLIST_ITEM_BASE_NAME=List Item\\r\\n\\r\\n#XTIT: ListItemBase control name plural caption\\r\\nLIST_ITEM_BASE_NAME_PLURAL=List Items\\r\\n\\r\\n#XACT:Author of Notification List Item\\r\\nNOTIFICATION_LIST_ITEM_CREATED_BY=Created By\\r\\n\\r\\n#XACT: Unread status of Notification List Item\\r\\nNOTIFICATION_LIST_GROUP_UNREAD=Notification group unread.\\r\\n\\r\\n#XACT: Read status of Notification List Item\\r\\nNOTIFICATION_LIST_GROUP_READ=Notification group read.\\r\\n\\r\\n#XMIT: Image control name caption\\r\\nIMAGE_NAME=Image\\r\\n\\r\\n#XTIT: Image control name plural caption\\r\\nIMAGE_NAME_PLURAL=Images\\r\\n\\r\\n#XMIT: InputBase control name caption\\r\\nINPUT_BASE_NAME=Input\\r\\n\\r\\n#XTIT: InputBase control name plural caption\\r\\nINPUT_BASE_NAME_PLURAL=Inputs\\r\\n\\r\\n#XMIT: Title control name caption\\r\\nTITLE_NAME=Title\\r\\n\\r\\n#XTIT: Title control name plural caption\\r\\nTITLE_NAME_PLURAL=Titles\\r\\n\\r\\n#XMIT: Slider control name caption\\r\\nSLIDER_NAME=Slider\\r\\n\\r\\n#XTIT: Slider control name plural caption\\r\\nSLIDER_NAME_PLURAL=Sliders\\r\\n\\r\\n#XMIT: ListBase control name caption\\r\\nLIST_BASE_NAME=List\\r\\n\\r\\n#XTIT: ListBase control name plural caption\\r\\nLIST_BASE_NAME_PLURAL=Lists\\r\\n\\r\\n#XMIT: Responsive Table control name caption\\r\\nTABLE_NAME=Table\\r\\n\\r\\n#XTIT: Table control name plural caption\\r\\nTABLE_NAME_PLURAL=Tables\\r\\n\\r\\n#XACT: Aria label for Table select all CheckBox\\r\\nTABLE_CHECKBOX_SELECT_ALL=Select all rows\\r\\n\\r\\n#XTIT: Column control name caption\\r\\nCOLUMN_NAME=Column\\r\\n\\r\\n#XTIT: Column control name plural caption\\r\\nCOLUMN_NAME_PLURAL=Columns\\r\\n\\r\\n#XMIT: FlexBox control name caption\\r\\nFLEXBOX_CONTROL_NAME=Container\\r\\n\\r\\n#XTIT: FlexBox control name plural caption\\r\\nFLEXBOX_CONTROL_NAME_PLURAL=Containers\\r\\n\\r\\n#XBUT: Pdf viewer's popup close button\\r\\nPDF_VIEWER_POPUP_CLOSE_BUTTON=Close\\r\\n\\r\\n#XTXT: Pdf viewer's download link\\r\\nPDF_VIEWER_DOWNLOAD_TEXT=Download\\r\\n\\r\\n#XTXT: Text in error placeholder of pdf viewer\\r\\nPDF_VIEWER_PLACEHOLDER_ERROR_TEXT=The PDF file could not be loaded.\\r\\n\\r\\n#XACT: PDF viewer's accessibility label\\r\\nPDF_VIEWER_ACCESSIBILITY_LABEL=PDF Viewer\\r\\n\\r\\n#XTIT: PDF viewer's message box header for source validation error\\r\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_HEADER=Source Validation Error\\r\\n\\r\\n#XMSG: PDF viewer's message box text for source validation error\\r\\nPDF_VIEWER_SOURCE_VALIDATION_MESSAGE_TEXT=Could not validate the source of the file. Show the file anyway?\\r\\n\\r\\n#XBUT: MultiEditField prefilled Item keep\\r\\nMULTI_EDIT_KEEP_TEXT=Keep Existing Values\\r\\n\\r\\n#XBUT: MultiEditField prefilled Item blank\\r\\nMULTI_EDIT_BLANK_TEXT=Leave Blank\\r\\n\\r\\n#XBUT: MultiEditField prefilled Item new\\r\\nMULTI_EDIT_NEW_TEXT=Use Value Help\\r\\n\\r\\n#XTXT: Text representing the Select's picker title text\\r\\nSELECT_PICKER_TITLE_TEXT=Select\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/openui5-sap.m/resources/sap/m/messagebundle.properties\n// module id = llbd\n// module chunks = 1","module.exports = \"TITLE=todos\\nINPUT_PLACEHOLDER=What needs to be done?\\nITEM_LEFT=item left\\nITEMS_LEFT=items left\\nCLEAR_COMPLETED=Clear completed\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./i18n/i18n_en.properties\n// module id = lupY\n// module chunks = 1","import UIComponent from \"sap/ui/core/UIComponent\";\nimport manifest from \"./manifest\";\n\n// require classes used in manifest\nimport \"sap/ui/model/json/JSONModel\"\nimport \"sap/ui/model/resource/ResourceModel\";\n\n// require resources used in manifest\nimport \"./controller/App.controller.js\";\nimport \"./view/App.view.xml\";\nimport \"./i18n/i18n.properties\";\nimport \"./i18n/i18n_en.properties\";\nimport \"./i18n/i18n_de.properties\";\n\nimport \"./css/styles.css\"\n\nexport default UIComponent.extend('sap.ui.demo.todo.Component', {\n\tmetadata: {\n\t\tmanifest,\n\t}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./Component.js","require(\"sap/m/themes/sap_belize/StandardListItem.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides control sap.m.StandardListItem.\nsap.ui.define(['./ListItemBase', './library', 'sap/ui/core/IconPool', 'sap/ui/core/library'],\n\tfunction(ListItemBase, library, IconPool, coreLibrary) {\n\t\"use strict\";\n\n\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.ui.core.ValueState\n\tvar ValueState = coreLibrary.ValueState;\n\n\n\n\t/**\n\t * Constructor for a new StandardListItem.\n\t *\n\t * @param {string} [sId] Id for the new control, generated automatically if no id is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * <code>sap.m.StandardListItem</code> is a list item providing the most common use cases, e.g. image, title and description.\n\t * @extends sap.m.ListItemBase\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @alias sap.m.StandardListItem\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar StandardListItem = ListItemBase.extend(\"sap.m.StandardListItem\", /** @lends sap.m.StandardListItem.prototype */ { metadata : {\n\n\t\tlibrary : \"sap.m\",\n\t\tproperties : {\n\n\t\t\t/**\n\t\t\t * Defines the title of the list item.\n\t\t\t */\n\t\t\ttitle : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the additional information for the title.\n\t\t\t * <b>Note:</b> This is only visible when the <code>title</code> property is not empty.\n\t\t\t */\n\t\t\tdescription : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the list item icon.\n\t\t\t */\n\t\t\ticon : {type : \"sap.ui.core.URI\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the indentation of the icon. If set to <code>false</code>, the icon will not be shown as embedded. Instead it will take the full height of the list item.\n\t\t\t */\n\t\t\ticonInset : {type : \"boolean\", group : \"Appearance\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * By default, one or more requests are sent to get the density perfect version of the icon if the given version of the icon doesn't exist on the server.\n\t\t\t * <b>Note:</b> If bandwidth is a key factor for the application, set this value to <code>false</code>.\n\t\t\t */\n\t\t\ticonDensityAware : {type : \"boolean\", group : \"Misc\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Defines the icon that is shown while the list item is pressed.\n\t\t\t */\n\t\t\tactiveIcon : {type : \"sap.ui.core.URI\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines an additional information text.\n\t\t\t */\n\t\t\tinfo : {type : \"string\", group : \"Misc\", defaultValue : null},\n\n\t\t\t/**\n\t\t\t * Defines the state of the information text, e.g. <code>Error</code>, <code>Warning</code>, <code>Success</code>.\n\t\t\t */\n\t\t\tinfoState : {type : \"sap.ui.core.ValueState\", group : \"Misc\", defaultValue : ValueState.None},\n\n\t\t\t/**\n\t\t\t * By default, the title size adapts to the available space and gets bigger if the description is empty. If you have list items with and without descriptions, this results in titles with different sizes. In this case, it can be better to switch the size adaption off by setting this property to <code>false</code>.\n\t\t\t * @since 1.16.3\n\t\t\t */\n\t\t\tadaptTitleSize : {type : \"boolean\", group : \"Appearance\", defaultValue : true},\n\n\t\t\t/**\n\t\t\t * Defines the <code>title</code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\t\t\t * @since 1.28.0\n\t\t\t */\n\t\t\ttitleTextDirection : {type : \"sap.ui.core.TextDirection\", group : \"Appearance\", defaultValue : TextDirection.Inherit},\n\n\t\t\t/**\n\t\t\t * Defines the <code>info</code> directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\t\t\t * @since 1.28.0\n\t\t\t */\n\t\t\tinfoTextDirection : {type : \"sap.ui.core.TextDirection\", group : \"Appearance\", defaultValue : TextDirection.Inherit}\n\t\t},\n\t\tdesignTime : true\n\t}});\n\n\tStandardListItem.prototype.exit = function() {\n\t\tif (this._oImage) {\n\t\t\tthis._oImage.destroy(\"KeepDom\");\n\t\t}\n\n\t\tListItemBase.prototype.exit.apply(this, arguments);\n\t};\n\n\tStandardListItem.prototype.setIcon = function(sIcon) {\n\t\tvar sOldIcon = this.getIcon();\n\t\tthis.setProperty(\"icon\", sIcon);\n\n\t\t// destroy the internal control if it is changed from Icon to Image or Image to Icon\n\t\tif (this._oImage && (!sIcon || IconPool.isIconURI(sIcon) != IconPool.isIconURI(sOldIcon))) {\n\t\t\tthis._oImage.destroy(\"KeepDom\");\n\t\t\tthis._oImage = undefined;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * @private\n\t */\n\tStandardListItem.prototype._getImage = function() {\n\t\tvar oImage = this._oImage;\n\n\t\tif (oImage) {\n\t\t\toImage.setSrc(this.getIcon());\n\t\t\tif (oImage instanceof sap.m.Image) {\n\t\t\t\toImage.setDensityAware(this.getIconDensityAware());\n\t\t\t}\n\t\t} else {\n\t\t\toImage = IconPool.createControlByURI({\n\t\t\t\tid : this.getId() + \"-img\",\n\t\t\t\tsrc : this.getIcon(),\n\t\t\t\tdensityAware : this.getIconDensityAware(),\n\t\t\t\tuseIconTooltip : false\n\t\t\t}, sap.m.Image).setParent(this, null, true);\n\t\t}\n\n\t\tvar sImgStyle = this.getIconInset() ? \"sapMSLIImg\" : \"sapMSLIImgThumb\";\n\t\toImage.addStyleClass(oImage instanceof sap.m.Image ? sImgStyle : sImgStyle + \"Icon\", true);\n\n\t\tthis._oImage = oImage;\n\t\treturn this._oImage;\n\t};\n\n\t// overwrite base method to hook into the active handling\n\tStandardListItem.prototype._activeHandlingInheritor = function() {\n\t\tif (this._oImage) {\n\t\t\tvar sActiveIcon = this.getActiveIcon();\n\t\t\tsActiveIcon && this._oImage.setSrc(sActiveIcon);\n\t\t}\n\t};\n\n\t// overwrite base method to hook into the inactive handling\n\tStandardListItem.prototype._inactiveHandlingInheritor = function() {\n\t\tif (this._oImage) {\n\t\t\tthis._oImage.setSrc(this.getIcon());\n\t\t}\n\t};\n\n\tStandardListItem.prototype.getContentAnnouncement = function(oBundle) {\n\t\tvar sAnnouncement = \"\",\n\t\t\tsInfoState = this.getInfoState(),\n\t\t\toIconInfo = IconPool.getIconInfo(this.getIcon()) || {};\n\n\t\tsAnnouncement += (oIconInfo.text || oIconInfo.name || \"\") + \" \";\n\t\tsAnnouncement += this.getTitle() + \" \" + this.getDescription() + \" \" + this.getInfo() + \" \";\n\n\t\tif (sInfoState != \"None\" && sInfoState != this.getHighlight()) {\n\t\t\tsAnnouncement += oBundle.getText(\"LIST_ITEM_STATE_\" + sInfoState.toUpperCase());\n\t\t}\n\n\t\treturn sAnnouncement;\n\t};\n\n\treturn StandardListItem;\n\n});\n\n\njQuery.sap.setObject(\"sap.m.StandardListItemRenderer\", require(\"sap/m/StandardListItemRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/StandardListItem.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n/**\n * @namespace\n * @name sap.ui.core.delegate\n * @public\n */\n\n// Provides class sap.ui.core.delegate.ItemNavigation\nsap.ui.define(['jquery.sap.global', 'sap/ui/base/EventProvider'],\n\tfunction(jQuery, EventProvider) {\n\t\"use strict\";\n\t/* eslint-disable no-lonely-if */\n\n\t/**\n\t * Creates an <code>ItemNavigation</code> delegate that can be attached to controls requiring\n\t * capabilities for keyboard navigation between items.\n\t *\n\t * @class Delegate for the navigation between DOM nodes with the keyboard.\n\t *\n\t * The <code>ItemNavigation</code> provides keyboard and mouse navigation between DOM nodes representing items.\n\t * This means that controls rendering a list of items can attach this delegate to get a common keyboard and mouse support\n\t * to navigate between these items.\n\t * It is possible to navigate between the items via the arrow keys.\n\t * If needed, paging using the Page Up and Page Down keys is possible. (To activate call <code>setPageSize</code> with a value &gt; 0.)\n\t * HOME and END keys are also supported.\n\t * Focusing an item via mouse also is also supported. For mouse navigation, the <code>mousedown</code> event is used.\n\t *\n\t * As the <code>ItemNavigation</code> works with DOM nodes, the items and the control area must be provided as\n\t * DOM references. There is one root DOM reference (set via <code>setRootDomRef</code>).\n\t * All item DOM references (set via <code>setItemDomRefs</code>) must be places somewhere inside of this root DOM reference.\n\t * Only focusable items are used for the navigation, meaning disabled items or separator items are just ignored by navigating\n\t * through the items. In some cases however, it makes sense to put the non-focusable items in the array of the DOM references to\n\t * keep the indexes stable or like in the calling control.\n\t * <b>Hint:</b> To make a DOM reference focusable a <code>tabindex</code> of -1 can be set.\n\t *\n\t * <b>Note</b> After re-rendering of the control or changing the DOM nodes of the control, the\n\t * DOM references of the <code>ItemNavigation</code> must be updated. Then the same item\n\t * (corresponding to the index) will get the focus.\n\t *\n\t * The <code>ItemNavigation</code> adjusts the <code>tabindex</code> of all DOM references relating to the current\n\t * focused item. So if the control containing the items gets the focus (e.g. via tab navigation),\n\t * it is always the focused items which will be focused.\n\t *\n\t * <b>Note:</b> If the <code>ItemNavigation</code> is nested in another <code>ItemNavigation</code>\n\t * (e.g. <code>SegmentedButton</code> in <code>Toolbar</code>), the <code>RootDomRef</code> will always have <code>tabindex</code> -1.\n\t *\n\t * Per default the <code>ItemNavigation</code> cycles over the items.\n\t * It navigates again to the first item if the Arrow Down or Arrow Right key is pressed while\n\t * the last item has the focus. It navigates to the last item if arrow up or\n\t * arrow left is pressed while the first item has the focus.\n\t * If you want to stop the navigation at the first and last item,\n\t * call the <code>setCycling</code> method with a value of <code>false</code>.\n\t *\n\t * It is possible to have multiple columns in the item navigation. If multiple columns\n\t * are used, the keyboard navigation changes. The Arrow Right and Arrow Left keys will take the user to the next or previous\n\t * item, and the Arrow Up and Arrow Down keys will navigate the same way but in a vertical direction.\n\t *\n\t * The <code>ItemNavigation</code> also allows setting a selected index that is used to identify\n\t * the selected item. Initially, if no other focus is set, the selected item will be the focused one.\n\t * Note that navigating through the items will not change the selected item, only the focus.\n\t * (For example a radio group has one selected item.)\n\t *\n\t * @author SAP SE\n\t *\n\t * @extends sap.ui.base.EventProvider\n\t *\n\t * @param {Element} oDomRef The root DOM reference that includes all items\n\t * @param {Element[]} aItemDomRefs Array of DOM references representing the items for the navigation\n\t * @param {boolean} [bNotInTabChain=false] Whether the selected element should be in the tab chain or not\n\t *\n\t * @version 1.52.3\n\t * @alias sap.ui.core.delegate.ItemNavigation\n\t * @public\n\t */\n\tvar ItemNavigation = EventProvider.extend(\"sap.ui.core.delegate.ItemNavigation\", /** @lends sap.ui.core.delegate.ItemNavigation.prototype */ {\n\t\tconstructor: function(oDomRef, aItemDomRefs, bNotInTabChain) {\n\n\t\t\tEventProvider.apply(this);\n\n\t\t\t// the surrounding dom ref that is focused initially\n\t\t\tthis.oDomRef = null;\n\n\t\t\tif (oDomRef) {\n\t\t\t\tthis.setRootDomRef(oDomRef);\n\t\t\t}\n\n\t\t\t// the array of dom refs representing the items\n\t\t\tthis.aItemDomRefs = [];\n\t\t\tif (aItemDomRefs) {\n\t\t\t\tthis.setItemDomRefs(aItemDomRefs);\n\t\t\t}\n\n\t\t\t// initialize Tabindex\n\t\t\tthis.iTabIndex = -1;\n\n\t\t\t// whether the active element should get a tabindex of 0 or -1\n\t\t\tthis.iActiveTabIndex = !!bNotInTabChain ? -1 : 0;\n\n\t\t\t// the initial focusedindex\n\t\t\tthis.iFocusedIndex = -1;\n\n\t\t\t// the initial selected index (if any)\n\t\t\tthis.iSelectedIndex = -1;\n\n\t\t\t// default for cycling\n\t\t\tthis.bCycling = true;\n\n\t\t\t// default for table mode\n\t\t\tthis.bTableMode = false;\n\n\t\t\t// the pagesize for pageup and down events\n\t\t\tthis.iPageSize = -1;\n\n\t\t\t// a marker to enable focusin to decide HOW the focus arrived\n\t\t\tthis._bMouseDownHappened = false;\n\n\t\t\t// default disabled modifiers these modifiers will not be handled by ItemNavigation\n\t\t\tthis.oDisabledModifiers = {\n\t\t\t\tsapend : [\"alt\", \"shift\"],\n\t\t\t\tsaphome : [\"alt\", \"shift\"]\n\t\t\t};\n\t\t}\n\t});\n\n\tItemNavigation.Events = {\n\t\tBeforeFocus: \"BeforeFocus\",\n\t\tAfterFocus: \"AfterFocus\",\n\t\tBorderReached: \"BorderReached\",\n\t\tFocusAgain: \"FocusAgain\",\n\t\tFocusLeave: \"FocusLeave\"\n\t};\n\n\t/**\n\t * The 'beforeFocus' event is fired before the actual item is focused.\n\t *\n\t * @name sap.ui.core.delegate.ItemNavigation#beforeFocus\n\t * @event\n\t * @param {int} index Index of the item\n\t * @param {jQuery.Event} event Event that leads to the focus change\n\t * @public\n\t */\n\n\t/**\n\t * The 'afterFocus' event is fired after the actual item is focused.\n\t * The control can register to this event and react on the focus change.\n\t *\n\t * @name sap.ui.core.delegate.ItemNavigation#afterFocus\n\t * @event\n\t * @param {int} index Index of the item\n\t * @param {jQuery.Event} event Event that leads to the focus change\n\t * @public\n\t */\n\n\t/**\n\t * The 'borderReached' event is fired if the border of the items is reached and\n\t * no cycling is used, meaning an application can react on this.\n\t *\n\t * For example if the first item is focused and the Arrow Left key is pressed.\n\t *\n\t * @name sap.ui.core.delegate.ItemNavigation#borderReached\n\t * @event\n\t * @param {int} index Index of the item\n\t * @param {jQuery.Event} event Event that leads to the focus change\n\t * @public\n\t */\n\n\t/**\n\t * The 'focusAgain' event is fired if the current focused item is focused again\n\t * (e.g. click again on focused item.)\n\t *\n\t * @name sap.ui.core.delegate.ItemNavigation#focusAgain\n\t * @event\n\t * @param {int} index Index of the item\n\t * @param {jQuery.Event} event Event that leads to the focus change\n\t * @public\n\t */\n\n\t/**\n\t * The 'focusLeave' event fired if the focus is set outside the control handled by the <code>ItemNavigation</code>.\n\t *\n\t * @name sap.ui.core.delegate.ItemNavigation#focusLeave\n\t * @event\n\t * @param {int} index Index of the item\n\t * @param {jQuery.Event} event Event that leads to the focus change\n\t * @public\n\t */\n\n\t/**\n\t * Sets the disabled modifiers\n\t * These modifiers will not be handled by the <code>ItemNavigation</code>\n\t *\n\t * <pre>\n\t * Example: Disable shift + up handling of the <code>ItemNavigation</code>\n\t *\n\t * oItemNavigation.setDisabledModifiers({\n\t *     sapnext : [\"shift\"]\n\t * });\n\t *\n\t * Possible keys are : \"shift\", \"alt\", \"ctrl\", \"meta\"\n\t * Possible events are : \"sapnext\", \"sapprevious\", \"saphome\", \"sapend\"\n\t * </pre>\n\t *\n\t * @param {Object} oDisabledModifiers Object that includes event type with disabled keys as an array\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @public\n\t */\n\tItemNavigation.prototype.setDisabledModifiers = function(oDisabledModifiers) {\n\t\tthis.oDisabledModifiers = oDisabledModifiers;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns disabled modifiers\n\t * These modifiers will not be handled by the <code>ItemNavigation</code>\n\t *\n\t * @param {object} oDisabledModifiers Object that includes event type with disabled keys as an array\n\t * @return {object} Object that includes event type with disabled keys as an array\n\t * @public\n\t */\n\tItemNavigation.prototype.getDisabledModifiers = function(oDisabledModifiers) {\n\t\treturn this.oDisabledModifiers;\n\t};\n\n\t/**\n\t * Check whether given event has disabled modifier or not\n\t *\n\t * @param {jQuery.Event} oEvent jQuery event\n\t * @return {Boolean} Flag if disabled modifiers are set\n\t * @public\n\t */\n\tItemNavigation.prototype.hasDisabledModifier = function(oEvent) {\n\t\tvar aDisabledKeys = this.oDisabledModifiers[oEvent.type.replace(\"modifiers\", \"\")];\n\t\tif (Array.isArray(aDisabledKeys)) {\n\t\t\tfor (var i = 0; i < aDisabledKeys.length; i++) {\n\t\t\t\tif (oEvent[aDisabledKeys[i] + \"Key\"]) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t/**\n\t * Sets the root DOM reference surrounding the items\n\t *\n\t * @param {object} oDomRef Root DOM reference\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @public\n\t */\n\tItemNavigation.prototype.setRootDomRef = function(oDomRef) {\n\t\tthis.oDomRef = oDomRef;\n\n\t\t// in nested ItemNavigation the tabindex must only be set at the root DOM from the parent ItemNavigation\n\t\tif (!jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\t\t\tif (this.iFocusedIndex >= 0) {\n\t\t\t\tjQuery(this.oDomRef).attr(\"tabIndex\", this.iTabIndex);\n\t\t\t} else {\n\t\t\t\tjQuery(this.oDomRef).attr(\"tabIndex\", this.iActiveTabIndex);\n\t\t\t}\n\t\t}\n\n\t\tjQuery(this.oDomRef).data(\"sap.INRoot\", this);\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns the root DOM reference surrounding the items\n\t *\n\t * @return {Element} Root DOM reference\n\t * @public\n\t */\n\tItemNavigation.prototype.getRootDomRef = function() {\n\t\treturn this.oDomRef;\n\t};\n\n\t/**\n\t * Returns the array of item DOM references\n\t *\n\t * @return {Element[]} Array of item DOM references\n\t * @public\n\t */\n\tItemNavigation.prototype.getItemDomRefs = function() {\n\t\treturn this.aItemDomRefs;\n\t};\n\n\t/**\n\t * Sets the item DOM references as an array for the items\n\t *\n\t * @param {Element[]} aItemDomRefs Array of DOM references or DOM node list object, representing the items\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @public\n\t */\n\tItemNavigation.prototype.setItemDomRefs = function(aItemDomRefs) {\n\t\tjQuery.sap.assert(typeof aItemDomRefs === \"object\" && typeof aItemDomRefs.length === \"number\", \"aItemDomRefs must be an array of DOM elements\");\n\t\tthis.aItemDomRefs = aItemDomRefs;\n\n\t\tif (this.iFocusedIndex > aItemDomRefs.length - 1) {\n\t\t\tthis.iFocusedIndex = aItemDomRefs.length - 1;\n\t\t}\n\n\t\t// in nested ItemNavigation the tabindex must only be set if it's the focused item of the parent ItemNavigation\n\t\tfor (var i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\tif (this.aItemDomRefs[i]) { // separators return null here\n\t\t\t\tvar $Item = jQuery(this.aItemDomRefs[i]);\n\n\t\t\t\t// as this code can be executed even if the items are not visible (e.g. Popup is closed)\n\t\t\t\t// no focusable check can be performed. So only for the currently focused item\n\t\t\t\t// the tabindex is set to 0. For all items with tabindex 0 the tabindex is set to -1\n\t\t\t\t// Items without tabindex are checked for focusable on the first focusin on the root.\n\t\t\t\tif (i == this.iFocusedIndex && !$Item.data(\"sap.INRoot\")) {\n\t\t\t\t\t$Item.attr(\"tabIndex\", this.iActiveTabIndex);\n\t\t\t\t} else if ($Item.attr(\"tabindex\") == \"0\") { // set tabindex to -1 only if already set to 0\n\t\t\t\t\t$Item.attr(\"tabIndex\", -1);\n\t\t\t\t}\n\n\t\t\t\t$Item.data(\"sap.INItem\", true);\n\t\t\t\t$Item.data(\"sap.InNavArea\", true); //Item is in navigation area - allow navigation mode and edit mode\n\n\t\t\t\tif ($Item.data(\"sap.INRoot\") && i != this.iFocusedIndex) {\n\n\t\t\t\t\t// item is root of a nested ItemNavigation -> set tabindexes from its items to -1\n\t\t\t\t\t$Item.data(\"sap.INRoot\").setNestedItemsTabindex();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the <code>tabindex</code> of the items.\n\t *\n\t * This cannot be done while setting items because at this point of time the items might\n\t * be invisible (because e.g. a popup closed), meaning the focusable check will fail.\n\t * So the items <code>tabindex</code>es are set if the rootDom is focused the first time.\n\t *\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @private\n\t */\n\tItemNavigation.prototype.setItemsTabindex = function() {\n\n\t\tfor (var i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\tif (this.aItemDomRefs[i]) { // separators return null here\n\t\t\t\tvar $Item = jQuery(this.aItemDomRefs[i]);\n\t\t\t\tif ($Item.is(\":sapFocusable\")) {\n\n\t\t\t\t\t// not focusable items (like labels) must not get a tabindex attribute\n\t\t\t\t\tif (i == this.iFocusedIndex && !$Item.data(\"sap.INRoot\")) {\n\t\t\t\t\t\t$Item.attr(\"tabIndex\", this.iActiveTabIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$Item.attr(\"tabIndex\", -1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets <code>tabindex</code> of item to -1\n\t * if called from parent <code>ItemNavigation</code> if ItemNavigation is nested.\n\t * In the nested case the <code>tabindex</code> is ruled by the parent <code>ItemNavigation</code>,\n\t * only the top items can have <code>tabindex</code> = 0.\n\t *\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @private\n\t */\n\tItemNavigation.prototype.setNestedItemsTabindex = function() {\n\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\t\t\tfor (var i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\t\tif (this.aItemDomRefs[i] && jQuery(this.aItemDomRefs[i]).attr(\"tabindex\") == \"0\") { // separators return null here\n\t\t\t\t\tjQuery(this.aItemDomRefs[i]).attr(\"tabIndex\", -1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Destroys the delegate and releases all DOM references.\n\t *\n\t */\n\tItemNavigation.prototype.destroy = function() {\n\n\t\tif (this.oDomRef) {\n\t\t\tjQuery(this.oDomRef).removeData(\"sap.INRoot\");\n\t\t\tthis.oDomRef = null;\n\t\t}\n\n\t\tif (this.aItemDomRefs) {\n\t\t\tfor (var i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\t\tif (this.aItemDomRefs[i]) { // separators return null here\n\t\t\t\t\tjQuery(this.aItemDomRefs[i]).removeData(\"sap.INItem\");\n\t\t\t\t\tjQuery(this.aItemDomRefs[i]).removeData(\"sap.InNavArea\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.aItemDomRefs = null;\n\t\t}\n\n\t\tthis._bItemTabIndex = undefined;\n\t\tthis.iFocusedIndex = -1;\n\t};\n\n\t/**\n\t * Sets whether the <code>ItemNavigation</code> should cycle through the items.\n\t *\n\t * If cycling is disabled the navigation stops at the first and last item, if the corresponding arrow keys are used.\n\t *\n\t * @param {boolean} bCycling Set to true if cycling should be done, else false\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @public\n\t */\n\tItemNavigation.prototype.setCycling = function(bCycling) {\n\t\tthis.bCycling = bCycling;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets whether the <code>ItemNavigation</code> should use the table mode to navigate through\n\t * the items (navigation in a grid).\n\t *\n\t * @param {boolean} bTableMode Set to true if table mode should be used, else false\n\t * @param {boolean} [bTableList] This sets a different behavior for table mode.\n\t * In this mode we keep using table navigation but there are some differences. e.g.\n\t * <ul>\n\t * \t<li>Page-up moves focus to the first row, not to the first cell like in table mode</li>\n\t * \t<li>Page-down moves focus to the last row, not to the last cell like in table mode</li>\n\t * </ul>\n\t *\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @public\n\t */\n\tItemNavigation.prototype.setTableMode = function(bTableMode, bTableList) {\n\t\tthis.bTableMode = bTableMode;\n\t\tif (this.oConfiguration === undefined) {\n\t\t\tthis.oConfiguration = sap.ui.getCore().getConfiguration();\n\t\t}\n\t\tthis.bTableList = bTableMode ? bTableList : false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the page size of the item navigation to allow Page Up and Page Down keys.\n\t *\n\t * @param {int} iPageSize The page size, needs to be at least 1\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @public\n\t */\n\tItemNavigation.prototype.setPageSize = function(iPageSize) {\n\t\tthis.iPageSize = iPageSize;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets the selected index if the used control supports selection.\n\t *\n\t * @param {int} iIndex Index of the first selected item\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @public\n\t */\n\tItemNavigation.prototype.setSelectedIndex = function(iIndex) {\n\t\tthis.iSelectedIndex = iIndex;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets whether the items are displayed in columns.\n\t *\n\t * If columns are used, the Arrow Up and Arrow Down keys navigate to the next or previous\n\t * item of the column. If the first or last item of the column is reached, the next focused\n\t * item is then in the next or previous column.\n\t *\n\t * @param {int} iColumns Count of columns for the table mode or cycling mode\n\t * @param {boolean} bNoColumnChange Forbids jumping to an other column with Arrow Up and Arrow Down keys\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @public\n\t */\n\tItemNavigation.prototype.setColumns = function(iColumns, bNoColumnChange) {\n\t\tthis.iColumns = iColumns;\n\t\tthis.bNoColumnChange = bNoColumnChange;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Sets behavior of HOME and END keys if columns are used.\n\t *\n\t * @param {boolean} bStayInRow HOME -> go to first item in row; END -> go to last item in row\n\t * @param {boolean} bCtrlEnabled HOME/END with CTRL -> go to first/last item of all\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @public\n\t */\n\tItemNavigation.prototype.setHomeEndColumnMode = function(bStayInRow, bCtrlEnabled) {\n\n\t\t\tthis._bStayInRow = bStayInRow;\n\t\t\tthis._bCtrlEnabled = bCtrlEnabled;\n\n\t\t\treturn this;\n\n\t};\n\n\t/**\n\t * Sets the focus to the item with the given index.\n\t *\n\t * @param {int} iIndex Index of the item to focus\n\t * @param {jQuery.Event} oEvent Event that leads to focus change\n\t * @private\n\t */\n\tItemNavigation.prototype.focusItem = function(iIndex, oEvent) {\n\n\t\tjQuery.sap.log.info(\"FocusItem: \" + iIndex + \" iFocusedIndex: \" + this.iFocusedIndex, \"focusItem\", \"ItemNavigation\");\n\n\t\tif (iIndex == this.iFocusedIndex && this.aItemDomRefs[this.iFocusedIndex] == document.activeElement) {\n\t\t\tthis.fireEvent(ItemNavigation.Events.FocusAgain, {\n\t\t\t\tindex: iIndex,\n\t\t\t\tevent: oEvent\n\t\t\t});\n\t\t\treturn; // item already focused -> nothing to do\n\t\t}\n\n\t\t// if there is no item to put the focus on, we don't even try it, if working in table mode we just focus the next item\n\t\tif (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\tif (this.bTableMode) {\n\t\t\t\tvar iCol = iIndex % this.iColumns;\n\t\t\t\tvar iOldIndex = iIndex;\n\t\t\t\tif (oEvent && oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_RIGHT) {\n\t\t\t\t\tif (iCol < this.iColumns - 1) {\n\t\t\t\t\t\tiIndex += this.oConfiguration.getRTL() ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (oEvent && oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_LEFT) {\n\t\t\t\t\tif (iCol > 1) {\n\t\t\t\t\t\tiIndex -= this.oConfiguration.getRTL() ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (iCol > 1) {\n\t\t\t\t\t\tiIndex -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (iIndex != iOldIndex) {\n\t\t\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fireEvent(ItemNavigation.Events.BeforeFocus, {\n\t\t\tindex: iIndex,\n\t\t\tevent: oEvent\n\t\t});\n\n\t\tthis.setFocusedIndex(iIndex);\n\t\tthis.bISetFocus = true;\n\n\t\tif (oEvent && jQuery(this.aItemDomRefs[this.iFocusedIndex]).data(\"sap.INRoot\")) {\n\n\t\t\t// store event type for nested ItemNavigations\n\t\t\tvar oItemItemNavigation = jQuery(this.aItemDomRefs[this.iFocusedIndex]).data(\"sap.INRoot\");\n\t\t\toItemItemNavigation._sFocusEvent = oEvent.type;\n\t\t}\n\n\t\tjQuery.sap.log.info(\"Set Focus on ID: \" + this.aItemDomRefs[this.iFocusedIndex].id, \"focusItem\", \"ItemNavigation\");\n\t\tjQuery.sap.focus(this.aItemDomRefs[this.iFocusedIndex]);\n\n\t\tthis.fireEvent(ItemNavigation.Events.AfterFocus, {\n\t\t\tindex: iIndex,\n\t\t\tevent: oEvent\n\t\t});\n\t};\n\n\t/**\n\t * Sets the focused index to the given index.\n\t *\n\t * @param {int} iIndex Index of the item\n\t * @return {sap.ui.core.delegate.ItemNavigation} <code>this</code> to allow method chaining\n\t * @private\n\t */\n\tItemNavigation.prototype.setFocusedIndex = function(iIndex) {\n\t\tvar $Item;\n\n\t\tif (this.aItemDomRefs.length < 0) {\n\t\t\t// no items -> don't change TabIndex\n\t\t\tthis.iFocusedIndex = -1;\n\t\t\treturn this;\n\t\t}\n\n\t\tif (iIndex < 0) {\n\t\t\tiIndex = 0;\n\t\t}\n\n\t\tif (iIndex > this.aItemDomRefs.length - 1) {\n\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t}\n\n\t\tjQuery(this.oDomRef).attr(\"tabIndex\", this.iTabIndex);\n\n\t\tif (this.iFocusedIndex !== -1 && this.aItemDomRefs.length > this.iFocusedIndex) {\n\t\t\tjQuery(this.aItemDomRefs[this.iFocusedIndex]).attr(\"tabIndex\", -1);\n\n\t\t\t// if focus is in nested ItemNavigation but is moved to an other item, remove tabindex from nested item\n\t\t\t$Item = jQuery(this.aItemDomRefs[this.iFocusedIndex]);\n\t\t\tif ($Item.data(\"sap.INRoot\") && iIndex != this.iFocusedIndex) {\n\t\t\t\tjQuery($Item.data(\"sap.INRoot\").aItemDomRefs[$Item.data(\"sap.INRoot\").iFocusedIndex]).attr(\"tabIndex\", -1);\n\t\t\t}\n\t\t}\n\n\t\tthis.iFocusedIndex = iIndex;\n\t\tvar oFocusItem = this.aItemDomRefs[this.iFocusedIndex];\n\n\t\t$Item = jQuery(this.aItemDomRefs[this.iFocusedIndex]);\n\t\tif (!$Item.data(\"sap.INRoot\")) {\n\n\t\t\t// in nested ItemNavigation the nested item gets the tabindex\n\t\t\tjQuery(oFocusItem).attr(\"tabIndex\", this.iActiveTabIndex);\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Returns the focused DOM reference.\n\t *\n\t * @return {Element} Focused DOM reference\n\t * @private\n\t */\n\tItemNavigation.prototype.getFocusedDomRef = function() {\n\t\treturn this.aItemDomRefs[this.iFocusedIndex];\n\t};\n\n\t/**\n\t * Returns index of the focused item.\n\t *\n\t * @return {int} focused index\n\t * @private\n\t */\n\tItemNavigation.prototype.getFocusedIndex = function() {\n\t\treturn this.iFocusedIndex;\n\t};\n\n\t/**\n\t * Handles the onfocusin event.\n\t *\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onfocusin = function(oEvent) {\n\n\t\tvar oSource = oEvent.target;\n\t\tvar i = 0;\n\n\t\tif (oSource == this.oDomRef) {\n\n\t\t\t// focus occured on the main dom ref\n\t\t\t// on first focus - set tabindex for items\n\t\t\tif (!this._bItemTabIndex) {\n\t\t\t\tthis.setItemsTabindex();\n\t\t\t\tthis._bItemTabIndex = true;\n\t\t\t}\n\n\t\t\t// if the focus came by clicking AND it did not target one of the elements, but the root element, do nothing\n\t\t\t// (otherwise clicking the scrollbar re-focuses the previously focused element, which causes the browser to scroll it into view)\n\t\t\tif (this._bMouseDownHappened) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar iIndex;\n\n\t\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\") && this._sFocusEvent && !jQuery(this.oDomRef).data(\"sap.InNavArea\")) {\n\n\t\t\t\t// if nested ItemNavigation need to know if focused by parent ItemNavigation (not in Navigation mode)\n\t\t\t\tswitch (this._sFocusEvent) {\n\t\t\t\t\tcase \"sapnext\":\n\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"sapprevious\":\n\t\t\t\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (this.iSelectedIndex != -1) {\n\t\t\t\t\t\t\tiIndex = this.iSelectedIndex;\n\t\t\t\t\t\t} else if (this.iFocusedIndex != -1) {\n\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis._sFocusEvent = undefined;\n\t\t\t} else {\n\t\t\t\tif (this.iSelectedIndex != -1) {\n\t\t\t\t\tiIndex = this.iSelectedIndex;\n\t\t\t\t} else if (this.iFocusedIndex != -1) {\n\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tiIndex = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t\tif (this.iFocusedIndex == -1) {\n\n\t\t\t\t// no item focused, maybe not focusable -> try the next one\n\t\t\t\tfor (i = iIndex + 1; i < this.aItemDomRefs.length; i++) {\n\t\t\t\t\tthis.focusItem(i, oEvent);\n\t\t\t\t\tif (this.iFocusedIndex == i) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.iFocusedIndex == -1 && iIndex > 0) {\n\n\t\t\t\t\t// still no item selected, try to find a previous one\n\t\t\t\t\tfor (i = iIndex - 1; i >= 0; i--) {\n\t\t\t\t\t\tthis.focusItem(i, oEvent);\n\t\t\t\t\t\tif (this.iFocusedIndex == i) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// cancel the bubbling of event in this case\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t} else if (!this.bISetFocus) {\n\n\t\t\t// check if this is really the already focused item\n\t\t\t// in case of a click on a label this could be an other item\n\t\t\tif (this.aItemDomRefs && oEvent.target != this.aItemDomRefs[this.iFocusedIndex]) {\n\t\t\t\tfor (i = 0; i < this.aItemDomRefs.length; i++) {\n\t\t\t\t\tif (oEvent.target == this.aItemDomRefs[i]) {\n\t\t\t\t\t\tthis.focusItem(i, oEvent);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// give focused item to registered application\n\t\t\t\tthis.fireEvent(ItemNavigation.Events.AfterFocus,{index:this.iFocusedIndex, event:oEvent});\n\t\t\t}\n\t\t}\n\n\t\tthis.bISetFocus = false;\n\t};\n\n\t/**\n\t * Handles the onsapfocusleave event\n\t *\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsapfocusleave = function(oEvent) {\n\t\tif (!oEvent.relatedControlId || !jQuery.sap.containsOrEquals(this.oDomRef, sap.ui.getCore().byId(oEvent.relatedControlId).getFocusDomRef())) {\n\n\t\t\t// entirely leaving the control handled by this ItemNavigation instance\n\t\t\tvar iIndex;\n\t\t\tif (this.iSelectedIndex != -1) {\n\t\t\t\tiIndex = this.iSelectedIndex;\n\t\t\t} else if (this.iFocusedIndex != -1) {\n\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t} else {\n\t\t\t\tiIndex = 0;\n\t\t\t}\n\t\t\tthis.setFocusedIndex(iIndex);\n\n\t\t\tvar $DomRef;\n\n\t\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\n\t\t\t\t// if in nested ItemNavigation and focus moves to item of parent ItemNavigation -> do not set Tabindex\n\t\t\t\tvar oParentDomRef;\n\t\t\t\t$DomRef = jQuery(this.oDomRef);\n\n\t\t\t\twhile (!oParentDomRef) {\n\t\t\t\t\t$DomRef = $DomRef.parent();\n\t\t\t\t\tif ($DomRef.data(\"sap.INRoot\")) {\n\t\t\t\t\t\toParentDomRef = $DomRef.get(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!oEvent.relatedControlId || jQuery.sap.containsOrEquals(oParentDomRef, sap.ui.getCore().byId(oEvent.relatedControlId).getFocusDomRef())) {\n\t\t\t\t\tjQuery(this.aItemDomRefs[this.iFocusedIndex]).attr(\"tabIndex\", -1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$DomRef = jQuery(this.oDomRef);\n\t\t\tif ($DomRef.data(\"sap.InNavArea\") === false) { // check for false to avoid undefinded\n\n\t\t\t\t// if in action mode switch back to navigation mode\n\t\t\t\t$DomRef.data(\"sap.InNavArea\", true);\n\t\t\t}\n\n\t\t\tthis.fireEvent(ItemNavigation.Events.FocusLeave, {\n\t\t\t\tindex: iIndex,\n\t\t\t\tevent: oEvent\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Handles the onmousedown event\n\t * Sets the focus to the item if it occured on an item\n\t *\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onmousedown = function(oEvent) {\n\n\t\t// set the focus to the clicked element or back to the last\n\t\tvar oSource = oEvent.target;\n\n\t\tvar checkFocusableParent = function( oDomRef, oItem){\n\n\t\t\t// as table cell might have focusable content that have not focusable DOM insinde\n\t\t\t// the table cell should not get the focus but the focusable element inside\n\t\t\tvar bFocusableParent = false;\n\t\t\tvar $CheckDom = jQuery(oDomRef);\n\t\t\twhile (!$CheckDom.is(\":sapFocusable\") && $CheckDom.get(0) != oItem) {\n\t\t\t\t$CheckDom = $CheckDom.parent();\n\t\t\t}\n\n\t\t\tif ($CheckDom.get(0) != oItem) {\n\t\t\t\t// focusable Dom found inside item\n\t\t\t\tbFocusableParent = true;\n\t\t\t}\n\n\t\t\treturn bFocusableParent;\n\n\t\t};\n\n\t\tif (jQuery.sap.containsOrEquals(this.oDomRef, oSource)) {\n\n\t\t\t// the mouse down occured inside the main dom ref\n\t\t\tfor (var i = 0; i < this.aItemDomRefs.length;i++) {\n\t\t\t\tvar oItem = this.aItemDomRefs[i];\n\t\t\t\tif (jQuery.sap.containsOrEquals(oItem,oSource)) {\n\t\t\t\t\tif (!this.bTableMode) {\n\n\t\t\t\t\t\t// the mousedown occured inside of an item\n\t\t\t\t\t\tthis.focusItem(i, oEvent);\n\n\t\t\t\t\t\t// no oEvent.preventDefault(); because cursor will not be set in Textfield\n\t\t\t\t\t\t// no oEvent.stopPropagation(); because e.g. DatePicker can not close popup\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// only focus the items if the click did not happen on a\n\t\t\t\t\t\t// focusable element!\n\t\t\t\t\t\tif (oItem === oSource || !checkFocusableParent(oSource, oItem)) {\n\t\t\t\t\t\t\tthis.focusItem(i, oEvent);\n\n\t\t\t\t\t\t\t// the table mode requires not to prevent the default\n\t\t\t\t\t\t\t// behavior on click since we want to allow text selection\n\t\t\t\t\t\t\t// click into the control, ...\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oSource == this.oDomRef) {\n\n\t\t\t\t// root DomRef of item navigation has been clicked\n\t\t\t\t// focus will also come in a moment - let it know that it was the mouse who caused the focus\n\t\t\t\tthis._bMouseDownHappened = true;\n\t\t\t\tvar that = this;\n\t\t\t\twindow.setTimeout(\n\t\t\t\t\tfunction(){\n\t\t\t\t\t\tthat._bMouseDownHappened = false;\n\t\t\t\t\t}, 20\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Handles the onsapnext event\n\t * Sets the focus to the next item\n\t *\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsapnext = function(oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\treturn;\n\t\t}\n\n\t\tif (jQuery(this.oDomRef).data(\"sap.InNavArea\")) {\n\n\t\t\t// control is in navigation mode -> no ItemNavigation\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus the next item\n\t\tvar iIndex = this.iFocusedIndex,\n\t\t\tbFirstTime = true,\n\t\t\tbBorderReached = false;\n\n\t\tif (iIndex > -1) {\n\t\t\tif (this.bTableMode) {\n\n\t\t\t\tvar iRowCount = this.aItemDomRefs.length / this.iColumns,\n\t\t\t\t\tiRow = Math.floor(iIndex / this.iColumns),\n\t\t\t\t\tiCol = iIndex % this.iColumns;\n\n\t\t\t\tif (oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_DOWN) {\n\t\t\t\t\tif (iRow  < iRowCount - 1) {\n\t\t\t\t\t\tiIndex += this.iColumns;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (iCol < this.iColumns - 1) {\n\t\t\t\t\t\tiIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tif (this.iColumns > 1 && oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_DOWN) {\n\t\t\t\t\t\tif ((iIndex + this.iColumns) >= this.aItemDomRefs.length) {\n\t\t\t\t\t\t\tif (!this.bNoColumnChange) {\n\t\t\t\t\t\t\t\t// on bottom -> begin on top of next column\n\t\t\t\t\t\t\t\tif ((iIndex % this.iColumns) < (this.iColumns - 1)) {\n\t\t\t\t\t\t\t\t\tiIndex = (iIndex % this.iColumns) + 1;\n\t\t\t\t\t\t\t\t} else if (this.bCycling) {\n\t\t\t\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// do not go to an other item;\n\t\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex = iIndex + this.iColumns;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (iIndex == this.aItemDomRefs.length - 1) {\n\n\t\t\t\t\t\t\t// last item\n\t\t\t\t\t\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\n\t\t\t\t\t\t\t\t// if nested ItemNavigations leave here to ItemNavigation of parent\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if (this.bCycling) {\n\n\t\t\t\t\t\t\t\t// in cycling case focus first one, if not - don't change\n\t\t\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// last one, no next item, so leave focus on already focused item (to prevent endless loops)\n\t\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (iIndex === this.iFocusedIndex) {\n\t\t\t\t\t\tif (bFirstTime) {\n\t\t\t\t\t\t\tbFirstTime = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"ItemNavigation has no visible/existing items and is hence unable to select the next one\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// if item is not visible or a dummy item go to the next one\n\t\t\t\t// !jQuery(this.aItemDomRefs[iIndex]).is(\":visible\") and jQuery(this.aItemDomRefs[iIndex]).css(\"visibility\") === \"hidden\"\n\t\t\t\t// - is not needed as .is(\":sapFocusable\") do these checks already\n\t\t\t\t} while (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\"));\n\t\t\t}\n\n\t\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t\tif (bBorderReached) {\n\t\t\t\tthis.fireEvent(ItemNavigation.Events.BorderReached, {\n\t\t\t\t\tindex: iIndex,\n\t\t\t\t\tevent: oEvent\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// cancel the event otherwise the browser will scroll\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\t/**\n\t * Ensure the sapnext event with modifiers is also handled\n\t *\n\t * @see #onsapnext\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsapnextmodifiers = function(oEvent) {\n\t\tif (this.hasDisabledModifier(oEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onsapnext(oEvent);\n\t};\n\n\t/**\n\t * Handles the onsapprevious event\n\t * Sets the focus to the previous item\n\t *\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsapprevious = function(oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\treturn;\n\t\t}\n\n\t\tif (jQuery(this.oDomRef).data(\"sap.InNavArea\")) {\n\n\t\t\t// control is in navigation mode -> no ItemNavigation\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus the previous item\n\t\tvar iIndex = this.iFocusedIndex,\n\t\t\tbFirstTime = true,\n\t\t\tbBorderReached = false;\n\t\tvar iCol = 0;\n\n\t\tif (iIndex > -1) {\n\t\t\tif (this.bTableMode) {\n\t\t\t\tvar iRow = Math.floor(iIndex / this.iColumns);\n\t\t\t\tiCol = iIndex % this.iColumns;\n\n\t\t\t\tif (oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_UP) {\n\t\t\t\t\tif (iRow  > 0) {\n\t\t\t\t\t\tiIndex -= this.iColumns;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (iCol > 0) {\n\t\t\t\t\t\tiIndex -= 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tif (this.iColumns > 1 && oEvent.keyCode == jQuery.sap.KeyCodes.ARROW_UP) {\n\t\t\t\t\t\tif ((iIndex - this.iColumns) < 0) {\n\t\t\t\t\t\t\tif (!this.bNoColumnChange) {\n\t\t\t\t\t\t\t\t// on top -> begin on end of previous column\n\t\t\t\t\t\t\t\tiCol = 0;\n\n\t\t\t\t\t\t\t\tif ((iIndex % this.iColumns) > 0) {\n\t\t\t\t\t\t\t\t\tiCol = (iIndex % this.iColumns) - 1;\n\t\t\t\t\t\t\t\t} else if (this.bCycling) {\n\t\t\t\t\t\t\t\t\tiCol = Math.min(this.iColumns - 1, this.aItemDomRefs.length - 1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (iIndex === 0 && iCol === 0) {\n\t\t\t\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar iRows = Math.ceil(this.aItemDomRefs.length / this.iColumns);\n\t\t\t\t\t\t\t\t\tiIndex = iCol + ((iRows - 1) * this.iColumns);\n\n\t\t\t\t\t\t\t\t\tif (iIndex >= this.aItemDomRefs.length) {\n\t\t\t\t\t\t\t\t\t\tiIndex = iIndex - this.iColumns;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// do not go to an other item;\n\t\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex = iIndex - this.iColumns;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (iIndex == 0) {\n\n\t\t\t\t\t\t\t// first item\n\t\t\t\t\t\t\tif (jQuery(this.oDomRef).data(\"sap.INItem\")) {\n\n\t\t\t\t\t\t\t\t// if nested ItemNavigations leave here to ItemNavigation of parent\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if (this.bCycling) {\n\n\t\t\t\t\t\t\t\t// in cycling case focus last one, if not - don't change\n\t\t\t\t\t\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// first one, no next item, so leave focus on already focused item (to prevent endless loops)\n\t\t\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tiIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (iIndex == this.iFocusedIndex) {\n\t\t\t\t\t\tif (bFirstTime) {\n\t\t\t\t\t\t\tbFirstTime = false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\"ItemNavigation has no visible/existing items and is hence unable to select the previous one\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// if item is not visible or a dummy item go to the next one\n\t\t\t\t} while (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\"));\n\t\t\t}\n\n\t\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t\tif (bBorderReached) {\n\t\t\t\tthis.fireEvent(ItemNavigation.Events.BorderReached, {\n\t\t\t\t\tindex: iIndex,\n\t\t\t\t\tevent: oEvent\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// cancel the event otherwise the browser will scroll\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\t/**\n\t * Ensure the sapprevious event with modifiers is also handled\n\t *\n\t * @see #onsapprevious\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsappreviousmodifiers = function(oEvent) {\n\t\tif (this.hasDisabledModifier(oEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onsapprevious(oEvent);\n\t};\n\n\t/**\n\t * Handles the onsappageup event\n\t * Sets the focus to the previous page item of <code>iPageSize</code> > 0\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsappageup = function(oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar iIndex = 0;\n\t\tvar bBorderReached = false;\n\n\t\tif (this.iPageSize > 0) {\n\t\t\tiIndex = this.iFocusedIndex;\n\n\t\t\tif (iIndex > -1) {\n\t\t\t\tiIndex = iIndex - this.iPageSize;\n\n\t\t\t\twhile (iIndex > 0 && !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\t\t\tiIndex--;\n\t\t\t\t}\n\n\t\t\t\tif (iIndex < 0) {\n\t\t\t\t\tif (!this.bNoColumnChange) {\n\t\t\t\t\t\tiIndex = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t\t}\n\t\t} else if (this.bTableMode) {\n\t\t\tiIndex = this.iFocusedIndex % this.iColumns;\n\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t}\n\n\t\tif (bBorderReached) {\n\t\t\tthis.fireEvent(ItemNavigation.Events.BorderReached, {\n\t\t\t\tindex: iIndex,\n\t\t\t\tevent: oEvent\n\t\t\t});\n\t\t}\n\n\t\t// cancel the event otherwise the browser will scroll\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\n\t};\n\n\t/**\n\t * Handles the onsappagedown event.\n\t *\n\t * Sets the focus to the previous page item of <code>iPageSize</code> > 0\n\t *\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsappagedown = function(oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar iIndex = 0;\n\t\tvar bBorderReached = false;\n\n\t\tif (this.iPageSize > 0) {\n\t\t\tiIndex = this.iFocusedIndex;\n\n\t\t\tif (iIndex > -1) {\n\t\t\t\tiIndex = iIndex + this.iPageSize;\n\n\t\t\t\twhile (iIndex < this.aItemDomRefs.length - 1 && !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\t\t\tiIndex++;\n\t\t\t\t}\n\n\t\t\t\tif (iIndex > this.aItemDomRefs.length - 1) {\n\t\t\t\t\tif (!this.bNoColumnChange) {\n\t\t\t\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tiIndex = this.iFocusedIndex;\n\t\t\t\t\t\tbBorderReached = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t\t}\n\t\t} else if (this.bTableMode) {\n\t\t\tvar iRowCount = this.aItemDomRefs.length / this.iColumns,\n\t\t\t\tiCol = this.iFocusedIndex % this.iColumns;\n\n\t\t\tiIndex = (iRowCount - 1) * this.iColumns + iCol;\n\t\t\tthis.focusItem(iIndex, oEvent);\n\t\t}\n\n\t\tif (bBorderReached) {\n\t\t\tthis.fireEvent(ItemNavigation.Events.BorderReached, {\n\t\t\t\tindex: iIndex,\n\t\t\t\tevent: oEvent\n\t\t\t});\n\t\t}\n\n\t\t// cancel the event otherwise the browser will scroll\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\t};\n\n\t/**\n\t * Handles the onsaphome event\n\t *\n\t * Sets the focus to first visible and focusable item\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsaphome = function(oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\t// or shift or alt key is pressed\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar iIndex = 0;\n\t\tvar iRow = 0;\n\t\tif (this.bTableMode) {\n\n\t\t\tif (!this.bTableList && !(oEvent.metaKey || oEvent.ctrlKey)) {\n\t\t\t\tiRow = Math.floor(this.iFocusedIndex / this.iColumns);\n\t\t\t\tiIndex = iRow * this.iColumns;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!!(oEvent.metaKey || oEvent.ctrlKey) && !this._bCtrlEnabled) {\n\n\t\t\t\t// do not handle ctrl\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._bStayInRow && !(this._bCtrlEnabled && (oEvent.metaKey || oEvent.ctrlKey)) && this.iColumns > 0) {\n\t\t\t\tiRow = Math.floor(this.iFocusedIndex / this.iColumns);\n\t\t\t\tiIndex = iRow * this.iColumns;\n\t\t\t} else {\n\t\t\t\twhile (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\t\t\tiIndex++;\n\n\t\t\t\t\tif (iIndex == this.aItemDomRefs.length) {\n\n\t\t\t\t\t\t// no visible item -> no new focus\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t// cancel the event otherwise the browser will scroll\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\t};\n\n\t/**\n\t * Ensure the sapprevious event with modifiers is also handled\n\t *\n\t * @see #onsaphome\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsaphomemodifiers = function(oEvent) {\n\t\tif (this.hasDisabledModifier(oEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onsaphome(oEvent);\n\t};\n\n\t/**\n\t * Handles the onsapend event\n\t *\n\t * Sets the focus to last visible and focusable item\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsapend = function(oEvent) {\n\n\t\tif (!jQuery.sap.containsOrEquals(this.oDomRef, oEvent.target)) {\n\n\t\t\t// current element is not part of the navigation content\n\t\t\t// or shift or alt key is pressed\n\t\t\treturn;\n\t\t}\n\n\t\t// in the table mode we only react on events of the domrefs\n\t\tif (this.bTableMode && this.aItemDomRefs.indexOf(oEvent.target) === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar iIndex = this.aItemDomRefs.length - 1;\n\t\tvar iRow = 0;\n\n\t\tif (this.bTableMode) {\n\t\t\tif (!this.bTableList && !(oEvent.metaKey || oEvent.ctrlKey)) {\n\t\t\t\tiRow = Math.floor(this.iFocusedIndex / this.iColumns);\n\t\t\t\tiIndex = iRow * this.iColumns + this.iColumns - 1;\n\t\t\t}\n\t\t} else {\n\n\t\t\tif (!!(oEvent.metaKey || oEvent.ctrlKey) && !this._bCtrlEnabled) {\n\n\t\t\t\t// do not handle ctrl\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._bStayInRow && !(this._bCtrlEnabled && (oEvent.metaKey || oEvent.ctrlKey)) && this.iColumns > 0) {\n\t\t\t\tiRow = Math.floor(this.iFocusedIndex / this.iColumns);\n\t\t\t\tiIndex = (iRow + 1) * this.iColumns - 1;\n\t\t\t\tif (iIndex >= this.aItemDomRefs.length) {\n\t\t\t\t\t// item not exist -> use last one\n\t\t\t\t\tiIndex = this.aItemDomRefs.length - 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile (!this.aItemDomRefs[iIndex] || !jQuery(this.aItemDomRefs[iIndex]).is(\":sapFocusable\")) {\n\t\t\t\t\tiIndex--;\n\n\t\t\t\t\tif (iIndex < 0) {\n\n\t\t\t\t\t\t// no visible item -> no new focus\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.focusItem(iIndex, oEvent);\n\n\t\t// cancel the event otherwise the browser will scroll\n\t\toEvent.preventDefault();\n\t\toEvent.stopPropagation();\n\t};\n\n\t/**\n\t * Ensure the sapprevious event with modifiers is also handled.\n\t *\n\t * @see #onsapend\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onsapendmodifiers = function(oEvent) {\n\t\tif (this.hasDisabledModifier(oEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onsapend(oEvent);\n\t};\n\n\t/**\n\t * Sets <code>tabindex</code> of the root DOM reference to 0.\n\t * Is used, for example in image map for IE browser in order to avoid <code>tabindex</code> -1 on image\n\t * with which it would not be tabable at all.\n\t *\n\t * @private\n\t */\n\tItemNavigation.prototype.setTabIndex0 = function() {\n\t\tthis.iTabIndex = 0;\n\t\tthis.iActiveTabIndex = 0;\n\t};\n\n\t/**\n\t * toggle navigation/action mode on F2\n\t *\n\t * @param {jQuery.Event} oEvent the browser event\n\t * @private\n\t */\n\tItemNavigation.prototype.onkeyup = function(oEvent) {\n\n\t\tif (oEvent.keyCode == jQuery.sap.KeyCodes.F2) {\n\n\t\t\tvar $DomRef = jQuery(this.oDomRef);\n\n\t\t\tif ($DomRef.data(\"sap.InNavArea\")) {\n\t\t\t\t$DomRef.data(\"sap.InNavArea\", false);\n\t\t\t} else if ($DomRef.data(\"sap.InNavArea\") === false) { // check for false to avoid undefined\n\t\t\t\t$DomRef.data(\"sap.InNavArea\", true);\n\t\t\t}\n\n\t\t\toEvent.preventDefault();\n\t\t\toEvent.stopPropagation();\n\t\t}\n\t};\n\n\treturn ItemNavigation;\n\n});\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.ui.core/resources/sap/ui/core/delegate/ItemNavigation.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['./ListItemBaseRenderer', 'sap/m/library', 'sap/ui/Device'],\n\tfunction(ListItemBaseRenderer, library, Device) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.m.ListGrowingDirection\n\tvar ListGrowingDirection = library.ListGrowingDirection;\n\n\t// shortcut for sap.m.ListKeyboardMode\n\tvar ListKeyboardMode = library.ListKeyboardMode;\n\n\t// shortcut for sap.m.ToolbarDesign\n\tvar ToolbarDesign = library.ToolbarDesign;\n\n\n\t/**\n\t * List renderer.\n\t * @namespace\n\t */\n\tvar ListBaseRenderer = {};\n\n\t/**\n\t * Determines the order of the mode for the renderer\n\t * -1 is for the beginning of the content\n\t * +1 is for the end of the content\n\t *  0 is to ignore this mode\n\t * @static\n\t */\n\tListBaseRenderer.ModeOrder = {\n\t\tNone : 0,\n\t\tDelete : 1,\n\t\tMultiSelect : -1,\n\t\tSingleSelect : 1,\n\t\tSingleSelectLeft : -1,\n\t\tSingleSelectMaster : 0\n\t};\n\n\t/**\n\t * Renders the HTML for the given control, using the provided\n\t * {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager}\n\t *          oRenderManager the RenderManager that can be used for writing to the\n\t *          Render-Output-Buffer\n\t * @param {sap.ui.core.Control}\n\t *          oControl an object representation of the control that should be\n\t *          rendered\n\t */\n\tListBaseRenderer.render = function(rm, oControl) {\n\t\t// container\n\t\trm.write(\"<div\");\n\t\trm.addClass(\"sapMList\");\n\t\trm.writeControlData(oControl);\n\n\t\tif (oControl.getInset()) {\n\t\t\trm.addClass(\"sapMListInsetBG\");\n\t\t}\n\t\tif (oControl.getWidth()) {\n\t\t\trm.addStyle(\"width\", oControl.getWidth());\n\t\t}\n\n\t\t// background\n\t\tif (oControl.getBackgroundDesign) {\n\t\t\trm.addClass(\"sapMListBG\" + oControl.getBackgroundDesign());\n\t\t}\n\n\t\t// tooltip\n\t\tvar sTooltip = oControl.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\t// run hook method\n\t\tthis.renderContainerAttributes(rm, oControl);\n\n\t\trm.writeStyles();\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\t// render header\n\t\tvar sHeaderText = oControl.getHeaderText();\n\t\tvar oHeaderTBar = oControl.getHeaderToolbar();\n\t\tif (oHeaderTBar) {\n\t\t\toHeaderTBar.setDesign(ToolbarDesign.Transparent, true);\n\t\t\toHeaderTBar.addStyleClass(\"sapMListHdrTBar\");\n\t\t\trm.renderControl(oHeaderTBar);\n\t\t} else if (sHeaderText) {\n\t\t\trm.write(\"<header class='sapMListHdr'\");\n\t\t\trm.writeAttribute(\"id\", oControl.getId(\"header\"));\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(sHeaderText);\n\t\t\trm.write(\"</header>\");\n\t\t}\n\n\t\t// render info bar\n\t\tvar oInfoTBar = oControl.getInfoToolbar();\n\t\tif (oInfoTBar) {\n\t\t\toInfoTBar.setDesign(ToolbarDesign.Info, true);\n\t\t\toInfoTBar.addStyleClass(\"sapMListInfoTBar\");\n\t\t\trm.renderControl(oInfoTBar);\n\t\t}\n\n\t\t// determine items rendering\n\t\tvar aItems = oControl.getItems(),\n\t\t\tbShowNoData = oControl.getShowNoData(),\n\t\t\tbRenderItems = oControl.shouldRenderItems() && aItems.length,\n\t\t\tiTabIndex = oControl.getKeyboardMode() == ListKeyboardMode.Edit ? -1 : 0,\n\t\t\tbUpwardGrowing = oControl.getGrowingDirection() == ListGrowingDirection.Upwards && oControl.getGrowing();\n\n\t\t// render top growing\n\t\tif (bUpwardGrowing) {\n\t\t\tthis.renderGrowing(rm, oControl);\n\t\t}\n\n\t\t// dummy keyboard handling area\n\t\tif (bRenderItems || bShowNoData) {\n\t\t\tthis.renderDummyArea(rm, oControl, \"before\", -1);\n\t\t}\n\n\t\t// run hook method to start building list\n\t\tthis.renderListStartAttributes(rm, oControl);\n\n\t\t// write accessibility state\n\t\trm.writeAccessibilityState(oControl, this.getAccessibilityState(oControl));\n\n\t\t// list attributes\n\t\trm.addClass(\"sapMListUl\");\n\t\tif (oControl._iItemNeedsHighlight) {\n\t\t\trm.addClass(\"sapMListHighlight\");\n\t\t}\n\n\t\trm.writeAttribute(\"id\", oControl.getId(\"listUl\"));\n\t\tif (bRenderItems || bShowNoData) {\n\t\t\trm.writeAttribute(\"tabindex\", iTabIndex);\n\t\t}\n\n\t\t// separators\n\t\trm.addClass(\"sapMListShowSeparators\" + oControl.getShowSeparators());\n\n\t\t// modes\n\t\trm.addClass(\"sapMListMode\" + oControl.getMode());\n\n\t\t// inset\n\t\toControl.getInset() && rm.addClass(\"sapMListInset\");\n\n\t\t// write inserted styles and classes\n\t\trm.writeClasses();\n\t\trm.writeStyles();\n\t\trm.write(\">\");\n\n\t\t// run hook method to render list head attributes\n\t\tthis.renderListHeadAttributes(rm, oControl);\n\n\t\t// render child controls\n\t\tif (bRenderItems) {\n\t\t\tif (bUpwardGrowing) {\n\t\t\t\taItems.reverse();\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\n\t\t\t\trm.renderControl(aItems[i]);\n\t\t\t}\n\t\t}\n\n\t\t// render no-data if needed\n\t\tif (!bRenderItems && bShowNoData) {\n\t\t\tthis.renderNoData(rm, oControl);\n\t\t}\n\n\t\t// run hook method to finish building list\n\t\tthis.renderListEndAttributes(rm, oControl);\n\n\t\t// dummy keyboard handling area\n\t\tif (bRenderItems || bShowNoData) {\n\t\t\tthis.renderDummyArea(rm, oControl, \"after\", iTabIndex);\n\t\t}\n\n\t\t// render bottom growing\n\t\tif (!bUpwardGrowing) {\n\t\t\tthis.renderGrowing(rm, oControl);\n\t\t}\n\n\t\t// footer\n\t\tif (oControl.getFooterText()) {\n\t\t\trm.write(\"<footer class='sapMListFtr'\");\n\t\t\trm.writeAttribute(\"id\", oControl.getId(\"footer\"));\n\t\t\trm.write(\">\");\n\t\t\trm.writeEscaped(oControl.getFooterText());\n\t\t\trm.write(\"</footer>\");\n\t\t}\n\n\t\t// done\n\t\trm.write(\"</div>\");\n\t};\n\n\t/**\n\t * This hook method is called to render container attributes\n\t *\n\t * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tListBaseRenderer.renderContainerAttributes = function(rm, oControl) {\n\t};\n\n\t/**\n\t * This hook method is called after <ul> and before first <li>\n\t *\n\t * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tListBaseRenderer.renderListHeadAttributes = function(rm, oControl) {\n\t};\n\n\t/**\n\t * This hook method is called to render list tag\n\t *\n\t * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tListBaseRenderer.renderListStartAttributes = function(rm, oControl) {\n\t\trm.write(\"<ul\");\n\t\toControl.addNavSection(oControl.getId(\"listUl\"));\n\t};\n\n\t/**\n\t * Returns aria accessibility role\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control\n\t * @returns {String}\n\t */\n\tListBaseRenderer.getAriaRole = function(oControl) {\n\t\treturn \"listbox\";\n\t};\n\n\t/**\n\t * Returns the inner aria labelledby ids for the accessibility\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control\n\t * @returns {String|undefined}\n\t */\n\tListBaseRenderer.getAriaLabelledBy = function(oControl) {\n\t};\n\n\t/**\n\t * Returns the inner aria describedby ids for the accessibility\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control\n\t * @returns {String|undefined}\n\t */\n\tListBaseRenderer.getAriaDescribedBy = function(oControl) {\n\t\tif (oControl.getFooterText()) {\n\t\t\treturn oControl.getId(\"footer\");\n\t\t}\n\t};\n\n\t/**\n\t * Returns the accessibility state of the control\n\t *\n\t * @param {sap.ui.core.Control} oControl an object representation of the control\n\t */\n\tListBaseRenderer.getAccessibilityState = function(oControl) {\n\t\treturn {\n\t\t\trole : this.getAriaRole(oControl),\n\t\t\tlabelledby : {\n\t\t\t\tvalue : this.getAriaLabelledBy(oControl),\n\t\t\t\tappend : true\n\t\t\t},\n\t\t\tdescribedby : {\n\t\t\t\tvalue : this.getAriaDescribedBy(oControl),\n\t\t\t\tappend : true\n\t\t\t}\n\t\t};\n\t};\n\n\t/**\n\t * This hook method is called to finish list rendering\n\t *\n\t * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tListBaseRenderer.renderListEndAttributes = function(rm, oControl) {\n\t\trm.write(\"</ul>\");\n\t};\n\n\t/**\n\t * This hook method is called to render no data field\n\t *\n\t * @param {sap.ui.core.RenderManager} rm the RenderManager that can be used for writing to the render output buffer\n\t * @param {sap.ui.core.Control} oControl an object representation of the control that should be rendered\n\t */\n\tListBaseRenderer.renderNoData = function(rm, oControl) {\n\t\trm.write(\"<li\");\n\t\trm.writeAttribute(\"tabindex\", oControl.getKeyboardMode() == ListKeyboardMode.Navigation ? -1 : 0);\n\t\trm.writeAttribute(\"id\", oControl.getId(\"nodata\"));\n\t\trm.addClass(\"sapMLIB sapMListNoData sapMLIBTypeInactive\");\n\t\tListItemBaseRenderer.addFocusableClasses.call(ListItemBaseRenderer, rm);\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\n\t\trm.write(\"<div\");\n\t\trm.addClass(\"sapMListNoDataText\");\n\t\trm.writeAttribute(\"id\", oControl.getId(\"nodata-text\"));\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\t\trm.writeEscaped(oControl.getNoDataText(true));\n\t\trm.write(\"</div>\");\n\n\t\trm.write(\"</li>\");\n\t};\n\n\n\tListBaseRenderer.renderDummyArea = function(rm, oControl, sAreaId, iTabIndex) {\n\t\trm.write(\"<div\");\n\t\trm.writeAttribute(\"id\", oControl.getId(sAreaId));\n\t\trm.writeAttribute(\"tabindex\", iTabIndex);\n\n\t\tif (Device.system.desktop) {\n\t\t\trm.addClass(\"sapMListDummyArea\").writeClasses();\n\t\t}\n\n\t\trm.write(\"></div>\");\n\t};\n\n\tListBaseRenderer.renderGrowing = function(rm, oControl) {\n\t\tvar oGrowingDelegate = oControl._oGrowingDelegate;\n\t\tif (!oGrowingDelegate) {\n\t\t\treturn;\n\t\t}\n\n\t\toGrowingDelegate.render(rm);\n\t};\n\n\treturn ListBaseRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ListBaseRenderer.js","require(\"sap/m/themes/sap_belize/InputBase.less\");\n/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define(['jquery.sap.global', './library', 'sap/ui/core/Control', 'sap/ui/core/EnabledPropagator', 'sap/ui/core/IconPool', './delegate/ValueStateMessage', 'sap/ui/core/message/MessageMixin', 'sap/ui/core/library', 'sap/ui/Device', 'jquery.sap.keycodes'],\n\tfunction(jQuery, library, Control, EnabledPropagator, IconPool, ValueStateMessage, MessageMixin, coreLibrary, Device) {\n\t\"use strict\";\n\n\t// shortcut for sap.ui.core.TextDirection\n\tvar TextDirection = coreLibrary.TextDirection;\n\n\t// shortcut for sap.ui.core.TextAlign\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.ui.core.ValueState\n\tvar ValueState = coreLibrary.ValueState;\n\n\t/**\n\t * Constructor for a new <code>sap.m.InputBase</code>.\n\t *\n\t * @param {string} [sId] ID for the new control, generated automatically if no ID is given\n\t * @param {object} [mSettings] Initial settings for the new control\n\t *\n\t * @class\n\t * The <code>sap.m.InputBase</code> control provides a basic functionality for input controls.\n\t *\n\t * @extends sap.ui.core.Control\n\t * @implements sap.ui.core.IFormContent\n\t *\n\t * @author SAP SE\n\t * @version 1.52.3\n\t *\n\t * @constructor\n\t * @public\n\t * @since 1.12.0\n\t * @alias sap.m.InputBase\n\t * @ui5-metamodel This control/element also will be described in the UI5 (legacy) designtime metamodel\n\t */\n\tvar InputBase = Control.extend(\"sap.m.InputBase\", /** @lends sap.m.InputBase.prototype */ { metadata: {\n\n\t\tinterfaces : [\"sap.ui.core.IFormContent\"],\n\t\tlibrary: \"sap.m\",\n\t\tproperties: {\n\n\t\t\t/**\n\t\t\t * Defines the value of the control.\n\t\t\t */\n\t\t\tvalue: { type: \"string\", group: \"Data\", defaultValue: null, bindable: \"bindable\" },\n\n\t\t\t/**\n\t\t\t * Defines the width of the control.\n\t\t\t */\n\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Dimension\", defaultValue: null },\n\n\t\t\t/**\n\t\t\t * Indicates whether the user can interact with the control or not.\n\t\t\t * <b>Note:</b> Disabled controls cannot be focused and they are out of the tab-chain.\n\t\t\t */\n\t\t\tenabled: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t/**\n\t\t\t * Visualizes the validation state of the control, e.g. <code>Error</code>, <code>Warning</code>, <code>Success</code>.\n\t\t\t */\n\t\t\tvalueState: { type: \"sap.ui.core.ValueState\", group: \"Appearance\", defaultValue: ValueState.None },\n\n\t\t\t/**\n\t\t\t * Defines the name of the control for the purposes of form submission.\n\t\t\t */\n\t\t\tname: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t/**\n\t\t\t * Defines a short hint intended to aid the user with data entry when the control has no value.\n\t\t\t */\n\t\t\tplaceholder: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t/**\n\t\t\t * Defines whether the control can be modified by the user or not.\n\t\t\t * <b>Note:</b> A user can tab to non-editable control, highlight it, and copy the text from it.\n\t\t\t * @since 1.12.0\n\t\t\t */\n\t\t\teditable: { type: \"boolean\", group: \"Behavior\", defaultValue: true },\n\n\t\t\t/**\n\t\t\t * Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.\n\t\t\t * @since 1.26.0\n\t\t\t */\n\t\t\tvalueStateText: { type: \"string\", group: \"Misc\", defaultValue: null },\n\n\t\t\t/**\n\t\t\t * Indicates whether the value state message should be shown or not.\n\t\t\t * @since 1.26.0\n\t\t\t */\n\t\t\tshowValueStateMessage: { type: \"boolean\", group: \"Misc\", defaultValue: true },\n\n\t\t\t/**\n\t\t\t * Defines the horizontal alignment of the text that is shown inside the input field.\n\t\t\t * @since 1.26.0\n\t\t\t */\n\t\t\ttextAlign: { type: \"sap.ui.core.TextAlign\", group: \"Appearance\", defaultValue: TextAlign.Initial },\n\n\t\t\t/**\n\t\t\t * Defines the text directionality of the input field, e.g. <code>RTL</code>, <code>LTR</code>\n\t\t\t * @since 1.28.0\n\t\t\t */\n\t\t\ttextDirection: { type: \"sap.ui.core.TextDirection\", group: \"Appearance\", defaultValue: TextDirection.Inherit },\n\n\t\t\t/**\n\t\t\t * Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\n\t\t\t * the field and a label (see aggregation <code>labelFor</code> of <code>sap.m.Label</code>) cannot be established\n\t\t\t * (e.g. one label should label multiple fields).\n\t\t\t * @since 1.38.4\n\t\t\t */\n\t\t\trequired : {type : \"boolean\", group : \"Misc\", defaultValue : false}\n\t\t},\n\t\tassociations: {\n\n\t\t\t/**\n\t\t\t * Association to controls / IDs that label this control (see WAI-ARIA attribute aria-labelledby).\n\t\t\t * @since 1.27.0\n\t\t\t */\n\t\t\tariaLabelledBy: { type: \"sap.ui.core.Control\", multiple: true, singularName: \"ariaLabelledBy\" }\n\t\t},\n\t\tevents: {\n\n\t\t\t/**\n\t\t\t * Is fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed.\n\t\t\t */\n\t\t\tchange: {\n\t\t\t\tparameters: {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The new <code>value</code> of the <code>control</code>.\n\t\t\t\t\t */\n\t\t\t\t\tvalue: { type: \"string\" }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdesignTime : true\n\t}});\n\n\tEnabledPropagator.call(InputBase.prototype);\n\tIconPool.insertFontFaceStyle();\n\t// apply the message mixin so all message on the input will get the associated label-texts injected\n\tMessageMixin.call(InputBase.prototype);\n\n\n\t/* =========================================================== */\n\t/* Private methods and properties                              */\n\t/* =========================================================== */\n\n\t/* ----------------------------------------------------------- */\n\t/* Private properties                                          */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n\t * Use labels as placeholder configuration.\n\t * It can be necessary for the subclasses to overwrite this when\n\t * native placeholder usage causes undesired input events or when\n\t * placeholder attribute is not supported for the specified type.\n\t * https://html.spec.whatwg.org/multipage/forms.html#input-type-attr-summary\n\t *\n\t * @see sap.m.InputBase#oninput\n\t * @protected\n\t */\n\tInputBase.prototype.bShowLabelAsPlaceholder = !Device.support.input.placeholder;\n\n\t/* ----------------------------------------------------------- */\n\t/* Private methods                                             */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n\t * To allow setting of default placeholder e.g. in DatePicker\n\t *\n\t * FIXME: Remove this workaround\n\t * What is the difference between _getPlaceholder and getPlaceholder\n\t */\n\tInputBase.prototype._getPlaceholder = function() {\n\t\treturn this.getPlaceholder();\n\t};\n\n\t/**\n\t * Update the synthetic placeholder visibility.\n\t */\n\tInputBase.prototype._setLabelVisibility = function() {\n\t\tif (!this.bShowLabelAsPlaceholder) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sValue = this.$(\"inner\").val();\n\t\tthis.$(\"placeholder\").css(\"display\", sValue ? \"none\" : \"inline\");\n\t};\n\n\t/**\n\t * Returns the DOM value respect to maxLength\n\t * When parameter is set chops the given parameter\n\t *\n\t * TODO: write two different functions for two different behaviour\n\t */\n\tInputBase.prototype._getInputValue = function(sValue) {\n\t\tsValue = (sValue === undefined) ? this.$(\"inner\").val() || \"\" : sValue.toString();\n\n\t\tif (this.getMaxLength && this.getMaxLength() > 0) {\n\t\t\tsValue = sValue.substring(0, this.getMaxLength());\n\t\t}\n\n\t\treturn sValue;\n\t};\n\n\t/**\n\t * Returns the name of the tag element used for the input.\n\t */\n\tInputBase.prototype._getInputElementTagName = function() {\n\t\tif (!this._sInputTagElementName) {\n\t\t\tthis._sInputTagElementName = this._$input && this._$input.get(0) && this._$input.get(0).tagName;\n\t\t}\n\n\t\treturn this._sInputTagElementName;\n\t};\n\n\t/* =========================================================== */\n\t/* Lifecycle methods                                           */\n\t/* =========================================================== */\n\n\t/*\n\t * Initialization hook.\n\t *\n\t * TODO: respect hungarian notation for variables\n\t */\n\tInputBase.prototype.init = function() {\n\n\t\t// last changed value\n\t\tthis._lastValue = \"\";\n\n\t\t/**\n\t\t * Indicates whether the input field is in the rendering phase.\n\t\t *\n\t\t * @protected\n\t\t */\n\t\tthis.bRenderingPhase = false;\n\n\t\t/**\n\t\t * Indicates whether the <code>focusout</code> event is triggered due a rendering.\n\t\t */\n\t\tthis.bFocusoutDueRendering = false;\n\n\t\t/**\n\t\t * Internal variable used to handle html input firing input events when value contains accented characters in IE10+\n\t\t * @private\n\t\t */\n\t\tthis._bIgnoreNextInputEventNonASCII = false;\n\n\t\tthis._oValueStateMessage = new ValueStateMessage(this);\n\t};\n\n\tInputBase.prototype.onBeforeRendering = function() {\n\n\t\tif (this._bCheckDomValue && !this.bRenderingPhase) {\n\n\t\t\t// remember dom value in case of invalidation during keystrokes\n\t\t\t// so the following should only be used onAfterRendering\n\t\t\tthis._sDomValue = this._getInputValue();\n\t\t}\n\n\t\t// mark the rendering phase\n\t\tthis.bRenderingPhase = true;\n\t};\n\n\tInputBase.prototype.onAfterRendering = function() {\n\n\t\t// maybe control is invalidated on keystrokes and\n\t\t// even the value property did not change\n\t\t// dom value is still the old value\n\t\t// FIXME: This is very ugly to implement this because of the binding\n\t\tif (this._bCheckDomValue && this._sDomValue !== this._getInputValue()) {\n\n\t\t\t// so we should keep the dom up-to-date\n\t\t\tthis.$(\"inner\").val(this._sDomValue);\n\t\t}\n\n\t\t// now dom value is up-to-date\n\t\tthis._bCheckDomValue = false;\n\n\t\t// handle synthetic placeholder visibility\n\t\tthis._setLabelVisibility();\n\n\t\t// rendering phase is finished\n\t\tthis.bRenderingPhase = false;\n\t};\n\n\tInputBase.prototype.exit = function() {\n\n\t\tif (this._oValueStateMessage) {\n\t\t\tthis._oValueStateMessage.destroy();\n\t\t}\n\n\t\tthis._oValueStateMessage = null;\n\t};\n\n\t/* =========================================================== */\n\t/* Event handlers                                              */\n\t/* =========================================================== */\n\n\t/**\n\t * Handles the touch start event of the Input.\n\t *\n\t * @param {jQuery.Event} oEvent The event object.\n\t * @private\n\t */\n\tInputBase.prototype.ontouchstart = function(oEvent) {\n\n\t\t// mark the event for components that needs to know if the event was handled\n\t\toEvent.setMarked();\n\t};\n\n\t/**\n\t * Sets up at focus a touch listener on mobile devices.\n\t *\n\t * @private\n\t */\n\tInputBase.prototype.onfocusin = function(oEvent) {\n\t\t// iE10+ fires the input event when an input field with a native placeholder is focused\n\t\tthis._bIgnoreNextInput = !this.bShowLabelAsPlaceholder &&\n\t\t\tDevice.browser.msie &&\n\t\t\tDevice.browser.version > 9 &&\n\t\t\t!!this.getPlaceholder() &&\n\t\t\t!this._getInputValue() &&\n\t\t\tthis._getInputElementTagName() === \"INPUT\"; // Make sure that we are applying this fix only for input html elements\n\t\tthis.$().toggleClass(\"sapMFocus\", true);\n\n\t\tif (this.shouldValueStateMessageBeOpened()) {\n\n\t\t\t// open value state message popup when focus is in the input\n\t\t\tthis.openValueStateMessage();\n\t\t}\n\t};\n\n\t/**\n\t * Handles the <code>focusout</code> event of the Input.\n\t *\n\t * @param {jQuery.Event} oEvent The event object.\n\t * @private\n\t */\n\tInputBase.prototype.onfocusout = function(oEvent) {\n\t\tthis.bFocusoutDueRendering = this.bRenderingPhase;\n\t\tthis.$().toggleClass(\"sapMFocus\", false);\n\n\t\t// because dom is replaced during the rendering\n\t\t// onfocusout event is triggered probably focus goes to the document\n\t\t// so we ignore this event that comes during the rendering\n\t\tif (this.bRenderingPhase) {\n\t\t\treturn;\n\t\t}\n\n\t\t// close value state message popup when focus is out of the input\n\t\tthis.closeValueStateMessage();\n\t};\n\n\t/**\n\t * Handles the <code>sapfocusleave</code> event of the input.\n\t *\n\t * @param {jQuery.Event} oEvent The event object.\n\t */\n\tInputBase.prototype.onsapfocusleave = function(oEvent) {\n\n\t\tif (!this.preventChangeOnFocusLeave(oEvent)) {\n\t\t\tthis.onChange(oEvent);\n\t\t}\n\t};\n\n\t/**\n\t * Hook method to prevent the change event from being fired when the text input field loses focus.\n\t *\n\t * @param {jQuery.Event} [oEvent] The event object.\n\t * @returns {boolean} Whether or not the change event should be prevented.\n\t * @protected\n\t * @since 1.46\n\t */\n\tInputBase.prototype.preventChangeOnFocusLeave = function(oEvent) {\n\t\treturn this.bFocusoutDueRendering;\n\t};\n\n\t/*\n\t * Gets the change event additional parameters.\n\t *\n\t * @returns {object} A map object with the parameters\n\t * @protected\n\t * @since 1.48\n\t */\n\tInputBase.prototype.getChangeEventParams = function() {\n\t\treturn {};\n\t};\n\n\t/**\n\t * Handle when input is tapped.\n\t *\n\t * @param {jQuery.Event} oEvent The event object.\n\t * @private\n\t */\n\tInputBase.prototype.ontap = function(oEvent) {\n\t\t// put the focus to the editable input when synthetic placeholder is tapped\n\t\t// label for attribute breaks the screen readers labelledby announcement\n\t\tif (this.getEnabled() &&\n\t\t\tthis.getEditable() &&\n\t\t\tthis.bShowLabelAsPlaceholder &&\n\t\t\toEvent.target.id === this.getId() + \"-placeholder\") {\n\t\t\tthis.focus();\n\t\t}\n\t};\n\n\t/**\n\t * Handles the change event.\n\t *\n\t * @protected\n\t * @param {object} oEvent\n\t * @param {object} [mParameters] Additional event parameters to be passed in to the change event handler if the\n\t * value has changed\n\t * @param {string} sNewValue Passed value on change\n\t * @returns {true|undefined} true when change event is fired\n\t */\n\tInputBase.prototype.onChange = function(oEvent, mParameters, sNewValue) {\n\n\t\tmParameters = mParameters || this.getChangeEventParams();\n\n\t\t// check the control is editable or not\n\t\tif (!this.getEditable() || !this.getEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get the dom value respect to max length if there is no passed value onChange\n\t\tvar sValue = this._getInputValue(sNewValue);\n\n\t\t// compare with the old known value\n\t\tif (sValue !== this._lastValue) {\n\n\t\t\t// save the value on change\n\t\t\tthis.setValue(sValue);\n\n\t\t\tif (oEvent) {\n\t\t\t//IE10+ fires Input event when Non-ASCII characters are used. As this is a real change\n\t\t\t// event shouldn't be ignored.\n\t\t\t\tthis._bIgnoreNextInputEventNonASCII = false;\n\t\t\t}\n\n\t\t\t// get the value back maybe formatted\n\t\t\tsValue = this.getValue();\n\n\t\t\t// remember the last value on change\n\t\t\tthis._lastValue = sValue;\n\n\t\t\t// fire change event\n\t\t\tthis.fireChangeEvent(sValue, mParameters);\n\n\t\t\t// inform change detection\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// same value as before --> ignore Dom update\n\t\t\tthis._bCheckDomValue = false;\n\t\t}\n\t};\n\n\t/**\n\t * Fires the change event for the listeners\n\t *\n\t * @protected\n\t * @param {String} sValue value of the input.\n\t * @param {Object} [oParams] extra event parameters.\n\t * @since 1.22.1\n\t */\n\tInputBase.prototype.fireChangeEvent = function(sValue, oParams) {\n\t\t// generate event parameters\n\t\tvar oChangeEvent = jQuery.extend({\n\t\t\tvalue : sValue,\n\n\t\t\t// backwards compatibility\n\t\t\tnewValue : sValue\n\t\t}, oParams);\n\n\t\t// fire change event\n\t\tthis.fireChange(oChangeEvent);\n\t};\n\n\t/**\n\t * Hook method that gets called when the input value is reverted with hitting escape.\n\t * It may require to re-implement this method from sub classes for control specific behaviour.\n\t *\n\t * @protected\n\t * @param {String} sValue Reverted value of the input.\n\t * @since 1.26\n\t */\n\tInputBase.prototype.onValueRevertedByEscape = function(sValue, sPreviousValue) {\n\n\t\t// fire private live change event\n\t\tthis.fireEvent(\"liveChange\", {\n\t\t\tvalue: sValue,\n\n\t\t\t//indicate that ESC key is trigger\n\t\t\tescPressed: true,\n\n\t\t\t//the value that was before pressing ESC key\n\t\t\tpreviousValue: sPreviousValue,\n\n\t\t\t// backwards compatibility\n\t\t\tnewValue: sValue\n\t\t});\n\t};\n\n\t/* ----------------------------------------------------------- */\n\t/* Keyboard handling                                           */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n\t * Handle when enter is pressed.\n\t *\n\t * @param {jQuery.Event} oEvent The event object.\n\t * @private\n\t */\n\tInputBase.prototype.onsapenter = function(oEvent) {\n\n\t\t// handle change event on enter\n\t\tthis.onChange(oEvent);\n\t};\n\n\t/**\n\t * Handle when escape is pressed.\n\t *\n\t * @param {jQuery.Event} oEvent The event object.\n\t * @private\n\t */\n\tInputBase.prototype.onsapescape = function(oEvent) {\n\n\t\t// get the dom value that respect to max length\n\t\tvar sValue = this._getInputValue();\n\n\t\t// compare last known value and dom value\n\t\tif (sValue !== this._lastValue) {\n\n\t\t\t// mark the event that it is handled\n\t\t\toEvent.setMarked();\n\t\t\toEvent.preventDefault();\n\n\t\t\t// revert to the old dom value\n\t\t\tthis.updateDomValue(this._lastValue);\n\n\t\t\t// value is reverted, now call the hook to inform\n\t\t\tthis.onValueRevertedByEscape(this._lastValue, sValue);\n\t\t}\n\t};\n\n\t/**\n\t * Handle DOM input event.\n\t *\n\t * This event is fired synchronously when the value of an <code><input></code> or <code><textarea></code> element is changed.\n\t * IE9 does not fire an input event when the user removes characters via BACKSPACE / DEL / CUT\n\t * InputBase normalize this behaviour for IE9 and calls oninput for the subclasses\n\t *\n\t * When the input event is buggy the input event is marked as \"invalid\".\n\t * - IE10+ fires the input event when an input field with a native placeholder is focused.\n\t * - IE11 fires input event from read-only fields.\n\t * - IE11 fires input event after rendering when value contains an accented character\n\t * - IE11 fires input event whenever placeholder attribute is changed\n\t *\n\t * @param {jQuery.Event} oEvent The event object.\n\t */\n\tInputBase.prototype.oninput = function(oEvent) {\n\n\t\t// ie 10+ fires the input event when an input field with a native placeholder is focused\n\t\tif (this._bIgnoreNextInput) {\n\t\t\tthis._bIgnoreNextInput = false;\n\t\t\toEvent.setMarked(\"invalid\");\n\t\t\treturn;\n\t\t}\n\n\t\t// ie11 fires input event from read-only fields\n\t\tif (!this.getEditable()) {\n\t\t\toEvent.setMarked(\"invalid\");\n\t\t\treturn;\n\t\t}\n\n\t\t//IE10+ fires the input event when attribute \"value\" is set with Non-ASCII characters\n\t\tif (this._bIgnoreNextInputEventNonASCII && this.getValue() === this._lastValue) {\n\t\t\tthis._bIgnoreNextInputEventNonASCII = false;\n\t\t\toEvent.setMarked(\"invalid\");\n\t\t\treturn;\n\t\t}\n\n\t\t// ie11 fires input event after rendering when value contains an accented character\n\t\t// ie11 fires input event whenever placeholder attribute is changed\n\t\tif (document.activeElement !== oEvent.target && Device.browser.msie && this.getValue() === this._lastValue) {\n\t\t\toEvent.setMarked(\"invalid\");\n\t\t\treturn;\n\t\t}\n\n\t\t// dom value updated other than value property\n\t\tthis._bCheckDomValue = true;\n\n\t\t// update the synthetic placeholder visibility\n\t\tthis._setLabelVisibility();\n\t};\n\n\t/**\n\t * Handle keydown event.\n\t *\n\t * @param {jQuery.Event} oEvent The event object.\n\t * @private\n\t */\n\tInputBase.prototype.onkeydown = function(oEvent) {\n\n\t\t// Prevents browser back to previous page in IE\n\t\tif (this.getDomRef(\"inner\").getAttribute(\"readonly\") && oEvent.keyCode == jQuery.sap.KeyCodes.BACKSPACE) {\n\t\t\toEvent.preventDefault();\n\t\t}\n\t};\n\n\t/**\n\t * Handle cut event.\n\t *\n\t * @param {jQuery.Event} oEvent The event object.\n\t * @private\n\t */\n\tInputBase.prototype.oncut = function(oEvent) {};\n\n\t/* =========================================================== */\n\t/* API methods                                                 */\n\t/* =========================================================== */\n\n\t/* ----------------------------------------------------------- */\n\t/* protected methods                                           */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n\t * Selects the text within the input field between the specified start and end positions.\n\t * Only supported for input control's type of Text, Url, Tel and Password.\n\t *\n\t * @param {int} iSelectionStart The index into the text at which the first selected character is located.\n\t * @param {int} iSelectionEnd The index into the text at which the last selected character is located.\n\t * @returns {sap.m.InputBase} <code>this</code> to allow method chaining.\n\t * @protected\n\t * @since 1.22.1\n\t */\n\tInputBase.prototype.selectText = function(iSelectionStart, iSelectionEnd) {\n\t\tthis.$(\"inner\").selectText(iSelectionStart, iSelectionEnd);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Retrieves the selected text.\n\t * Only supported for input control's type of Text, Url, Tel and Password.\n\t *\n\t * @returns {string} The selected text.\n\t * @protected\n\t * @since 1.32\n\t */\n\tInputBase.prototype.getSelectedText = function() {\n\t\treturn this.$(\"inner\").getSelectedText();\n\t};\n\n\t/**\n\t * Overwrite setProperty function to know value property changes via API\n\t * @overwrite\n\t */\n\tInputBase.prototype.setProperty = function(sPropertyName, oValue, bSuppressInvalidate) {\n\t\tif (sPropertyName == \"value\") {\n\n\t\t\t// dom value will be updated with value property\n\t\t\tthis._bCheckDomValue = false;\n\t\t}\n\n\t\treturn Control.prototype.setProperty.apply(this, arguments);\n\t};\n\n\t/**\n\t * Returns an object representing the serialized focus information.\n\t * To be overwritten by subclasses.\n\t *\n\t * @returns {object} An object representing the serialized focus information.\n\t * @protected\n\t */\n\tInputBase.prototype.getFocusInfo = function() {\n\t\tvar oFocusInfo = Control.prototype.getFocusInfo.call(this),\n\t\t\toFocusDomRef = this.getFocusDomRef();\n\n\t\t// extend the serialized focus information with the current text selection and the cursor position\n\t\tjQuery.extend(oFocusInfo, {\n\t\t\tcursorPos: 0,\n\t\t\tselectionStart: 0,\n\t\t\tselectionEnd: 0\n\t\t});\n\n\t\tif (oFocusDomRef) {\n\t\t\toFocusInfo.cursorPos = jQuery(oFocusDomRef).cursorPos();\n\n\t\t\ttry {\n\t\t\t\toFocusInfo.selectionStart = oFocusDomRef.selectionStart;\n\t\t\t\toFocusInfo.selectionEnd = oFocusDomRef.selectionEnd;\n\t\t\t} catch (e) {\n\t\t\t\t// note: chrome fail to read the \"selectionStart\" property from HTMLInputElement: The input element's type \"number\" does not support selection.\n\t\t\t}\n\t\t}\n\n\t\treturn oFocusInfo;\n\t};\n\n\t/**\n\t * Applies the focus info.\n\t * To be overwritten by subclasses.\n\t *\n\t * @param {object} oFocusInfo\n\t * @protected\n\t */\n\tInputBase.prototype.applyFocusInfo = function(oFocusInfo) {\n\t\tControl.prototype.applyFocusInfo.call(this, oFocusInfo);\n\t\tthis.$(\"inner\").cursorPos(oFocusInfo.cursorPos);\n\t\tthis.selectText(oFocusInfo.selectionStart, oFocusInfo.selectionEnd);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Registers an event listener to the browser input event.\n\t *\n\t * @param {function} fnCallback Function to be called when the value of the input element is changed.\n\t * @deprecated Since 1.22. Instead, use event delegation(oninput) to listen input event.\n\t * @return {sap.m.InputBase} <code>this</code> to allow method chaining.\n\t * @protected\n\t */\n\tInputBase.prototype.bindToInputEvent = function(fnCallback) {\n\n\t\t// remove the previous event delegate\n\t\tif (this._oInputEventDelegate) {\n\t\t\tthis.removeEventDelegate(this._oInputEventDelegate);\n\t\t}\n\n\t\t// generate new input event delegate\n\t\tthis._oInputEventDelegate = {\n\t\t\toninput : fnCallback\n\t\t};\n\n\t\t// add the input event delegate\n\t\treturn this.addEventDelegate(this._oInputEventDelegate);\n\t};\n\n\t/**\n\t * Sets the DOM value of the input field and handles placeholder visibility.\n\t *\n\t * @param {string} sValue value of the input field.\n\t * @return {sap.m.InputBase} <code>this</code> to allow method chaining.\n\t * @since 1.22\n\t * @protected\n\t */\n\tInputBase.prototype.updateDomValue = function(sValue) {\n\n\t\tif (!this.isActive()) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// respect to max length\n\t\tsValue = this._getInputValue(sValue);\n\n\t\t//Ignore the input event which is raised by MS Internet Explorer when non-ASCII characters are typed in\n\t\tif (Device.browser.msie && Device.browser.version > 9 && !/^[\\x00-\\x7F]*$/.test(sValue)){\n\t\t\tthis._bIgnoreNextInput = true;\n\t\t}\n\n\t\t// update the DOM value when necessary\n\t\t// otherwise cursor can goto end of text unnecessarily\n\t\tif (this._getInputValue() !== sValue) {\n\t\t\tthis.$(\"inner\").val(sValue);\n\n\t\t\t// dom value updated other than value property\n\t\t\tthis._bCheckDomValue = true;\n\t\t}\n\n\t\t// update synthetic placeholder visibility\n\t\tthis._setLabelVisibility();\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Close value state message popup.\n\t *\n\t * @since 1.26\n\t * @protected\n\t */\n\tInputBase.prototype.closeValueStateMessage = function() {\n\t\tif (this._oValueStateMessage) {\n\t\t\tthis._oValueStateMessage.close();\n\t\t}\n\t};\n\n\t/**\n\t * Gets the DOM element reference where the message popup is attached.\n\t *\n\t * @returns {object} The DOM element reference where the message popup is attached\n\t * @since 1.26\n\t * @protected\n\t */\n\tInputBase.prototype.getDomRefForValueStateMessage = function() {\n\t\treturn this.getFocusDomRef();\n\t};\n\n\tInputBase.prototype.iOpenMessagePopupDuration = 0;\n\n\t/**\n\t * Gets the ID of the value state message.\n\t *\n\t * @returns {string} The ID of the value state message\n\t * @since 1.42\n\t */\n\tInputBase.prototype.getValueStateMessageId = function() {\n\t\treturn this.getId() + \"-message\";\n\t};\n\n\t/**\n\t * Gets the labels referencing this control.\n\t *\n\t * @returns {sap.m.Label[]} Array of objects which are the current targets of the <code>ariaLabelledBy</code>\n\t * association and the labels referencing this control.\n\t * @since 1.48\n\t * @protected\n\t */\n\tInputBase.prototype.getLabels = function() {\n\t\tvar aLabelIDs = this.getAriaLabelledBy().map(function(sLabelID) {\n\t\t\treturn sap.ui.getCore().byId(sLabelID);\n\t\t});\n\n\t\tvar oLabelEnablement = sap.ui.require(\"sap/ui/core/LabelEnablement\");\n\n\t\tif (oLabelEnablement) {\n\t\t\taLabelIDs = aLabelIDs.concat(oLabelEnablement.getReferencingLabels(this).map(function(sLabelID) {\n\t\t\t\treturn sap.ui.getCore().byId(sLabelID);\n\t\t\t}));\n\t\t}\n\n\t\treturn aLabelIDs;\n\t};\n\n\t/**\n\t * Open value state message popup.\n\t *\n\t * @since 1.26\n\t * @protected\n\t */\n\tInputBase.prototype.openValueStateMessage = function() {\n\t\tif (this._oValueStateMessage) {\n\t\t\tthis._oValueStateMessage.open();\n\t\t}\n\t};\n\n\tInputBase.prototype.updateValueStateClasses = function(sValueState, sOldValueState) {\n\t\tvar $This = this.$(),\n\t\t\t$Input = this.$(\"inner\"),\n\t\t\tmValueState = ValueState;\n\n\t\tif (sOldValueState !== mValueState.None) {\n\t\t\t$This.removeClass(\"sapMInputBaseState sapMInputBase\" + sOldValueState);\n\t\t\t$Input.removeClass(\"sapMInputBaseStateInner sapMInputBase\" + sOldValueState + \"Inner\");\n\t\t}\n\n\t\tif (sValueState !== mValueState.None) {\n\t\t\t$This.addClass(\"sapMInputBaseState sapMInputBase\" + sValueState);\n\t\t\t$Input.addClass(\"sapMInputBaseStateInner sapMInputBase\" + sValueState + \"Inner\");\n\t\t}\n\t};\n\n\tInputBase.prototype.shouldValueStateMessageBeOpened = function() {\n\t\treturn (this.getValueState() !== ValueState.None) &&\n\t\t\t\tthis.getEditable() &&\n\t\t\t\tthis.getEnabled() &&\n\t\t\t\tthis.getShowValueStateMessage();\n\t};\n\n\t/* ----------------------------------------------------------- */\n\t/* public methods                                              */\n\t/* ----------------------------------------------------------- */\n\n\t/**\n\t * Setter for property <code>valueState</code>.\n\t *\n\t * Default value is <code>None</code>.\n\t *\n\t * @param {sap.ui.core.ValueState} sValueState New value for property <code>valueState</code>.\n\t * @return {sap.m.InputBase} <code>this</code> to allow method chaining.\n\t * @public\n\t */\n\tInputBase.prototype.setValueState = function(sValueState) {\n\t\tvar sOldValueState = this.getValueState();\n\t\tthis.setProperty(\"valueState\", sValueState, true);\n\n\t\t// get the value back in case of invalid value\n\t\tsValueState = this.getValueState();\n\t\tif (sValueState === sOldValueState) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar oDomRef = this.getDomRef();\n\n\t\tif (!oDomRef) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar $Input = this.$(\"inner\"),\n\t\t\tmValueState = ValueState;\n\n\t\tif (sValueState === mValueState.Error) {\n\t\t\t$Input.attr(\"aria-invalid\", \"true\");\n\t\t} else {\n\t\t\t$Input.removeAttr(\"aria-invalid\");\n\t\t}\n\n\t\tthis.updateValueStateClasses(sValueState, sOldValueState);\n\n\t\tif ($Input[0] === document.activeElement) {\n\t\t\tif (sValueState === mValueState.None) {\n\t\t\t\tthis.closeValueStateMessage();\n\t\t\t} else if (this.shouldValueStateMessageBeOpened()) {\n\t\t\t\tthis.openValueStateMessage();\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * Setter for property <code>valueStateText</code>.\n\t *\n\t * Default value is empty/<code>undefined</code>.\n\t *\n\t * @param {string} sText New value for property <code>valueStateText</code>.\n\t * @returns {sap.m.InputBase} <code>this</code> to allow method chaining\n\t * @since 1.26\n\t * @public\n\t */\n\tInputBase.prototype.setValueStateText = function(sText) {\n\t\tthis.setProperty(\"valueStateText\", sText, true);\n\t\tthis.$(\"message\").text(this.getValueStateText());\n\t\treturn this;\n\t};\n\n\t/**\n\t * Setter for property <code>value</code>.\n\t *\n\t * Default value is empty/<code>undefined</code>.\n\t *\n\t * @param {string} sValue New value for property <code>value</code>.\n\t * @return {sap.m.InputBase} <code>this</code> to allow method chaining.\n\t * @public\n\t */\n\tInputBase.prototype.setValue = function(sValue) {\n\n\t\t// validate given value\n\t\tsValue = this.validateProperty(\"value\", sValue);\n\n\t\t// get the value respect to the max length\n\t\tsValue = this._getInputValue(sValue);\n\n\t\t// update the dom value when necessary\n\t\tthis.updateDomValue(sValue);\n\n\t\t//Ignore the input event which is raised by MS Internet Explorer when non-ASCII characters are typed in\n\t\tif (Device.browser.msie && Device.browser.version > 9 && !/^[\\x00-\\x7F]*$/.test(sValue)){\n\t\t\tthis._bIgnoreNextInputEventNonASCII = true;\n\t\t}\n\n\t\t// check if we need to update the last value because\n\t\t// when setProperty(\"value\") called setValue is called again via binding\n\t\tif (sValue !== this.getProperty(\"value\")) {\n\t\t\tthis._lastValue = sValue;\n\t\t}\n\n\t\t// update value property\n\t\tthis.setProperty(\"value\", sValue, true);\n\n\t\treturn this;\n\t};\n\n\tInputBase.prototype.getFocusDomRef = function() {\n\t\treturn this.getDomRef(\"inner\");\n\t};\n\n\tInputBase.prototype.getIdForLabel = function() {\n\t\treturn this.getId() + \"-inner\";\n\t};\n\n\tInputBase.prototype.setTooltip = function(vTooltip) {\n\t\tvar oDomRef = this.getDomRef();\n\n\t\tthis._refreshTooltipBaseDelegate(vTooltip);\n\t\tthis.setAggregation(\"tooltip\", vTooltip, true);\n\n\t\tif (!oDomRef) {\n\t\t\treturn this;\n\t\t}\n\n\t\tvar sTooltip = this.getTooltip_AsString();\n\n\t\tif (sTooltip) {\n\t\t\toDomRef.setAttribute(\"title\", sTooltip);\n\t\t} else {\n\t\t\toDomRef.removeAttribute(\"title\");\n\t\t}\n\n\t\tif (sap.ui.getCore().getConfiguration().getAccessibility()) {\n\n\t\t\tvar oDescribedByDomRef = this.getDomRef(\"describedby\"),\n\t\t\t\tsAnnouncement = this.getRenderer().getDescribedByAnnouncement(this),\n\t\t\t\tsDescribedbyId = this.getId() + \"-describedby\",\n\t\t\t\tsAriaDescribedByAttr = \"aria-describedby\",\n\t\t\t\toFocusDomRef = this.getFocusDomRef(),\n\t\t\t\tsAriaDescribedby = oFocusDomRef.getAttribute(sAriaDescribedByAttr);\n\n\t\t\tif (!oDescribedByDomRef && sAnnouncement) {\n\t\t\t\toDescribedByDomRef = document.createElement(\"span\");\n\t\t\t\toDescribedByDomRef.id = sDescribedbyId;\n\t\t\t\toDescribedByDomRef.setAttribute(\"aria-hidden\", \"true\");\n\t\t\t\toDescribedByDomRef.className = \"sapUiInvisibleText\";\n\n\t\t\t\tif (this.getAriaDescribedBy) {\n\t\t\t\t\toFocusDomRef.setAttribute(sAriaDescribedByAttr, (this.getAriaDescribedBy().join(\" \") + \" \" + sDescribedbyId).trim());\n\t\t\t\t} else {\n\t\t\t\t\toFocusDomRef.setAttribute(sAriaDescribedByAttr, sDescribedbyId);\n\t\t\t\t}\n\n\t\t\t\toDomRef.appendChild(oDescribedByDomRef);\n\t\t\t} else if (oDescribedByDomRef && !sAnnouncement) {\n\t\t\t\toDomRef.removeChild(oDescribedByDomRef);\n\t\t\t\tvar sDescribedByDomRefId = oDescribedByDomRef.id;\n\n\t\t\t\tif (sAriaDescribedby && sDescribedByDomRefId) {\n\t\t\t\t\toFocusDomRef.setAttribute(sAriaDescribedByAttr, sAriaDescribedby.replace(sDescribedByDomRefId, \"\").trim());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oDescribedByDomRef) {\n\t\t\t\toDescribedByDomRef.textContent = sAnnouncement;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n\t/**\n\t * @see sap.ui.core.Control#getAccessibilityInfo\n\t * @protected\n\t */\n\tInputBase.prototype.getAccessibilityInfo = function() {\n\t\tvar sRequired = this.getRequired() ? 'Required' : '',\n\t\t\toRenderer = this.getRenderer();\n\n\t\treturn {\n\t\t\trole: oRenderer.getAriaRole(this),\n\t\t\ttype: sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"ACC_CTR_TYPE_INPUT\"),\n\t\t\tdescription: [this.getValue() || \"\", oRenderer.getLabelledByAnnouncement(this), oRenderer.getDescribedByAnnouncement(this), sRequired].join(\" \").trim(),\n\t\t\tfocusable: this.getEnabled(),\n\t\t\tenabled: this.getEnabled(),\n\t\t\teditable: this.getEnabled() && this.getEditable()\n\t\t};\n\t};\n\n\t// do not cache jQuery object and define _$input for compatibility reasons\n\tObject.defineProperty(InputBase.prototype, \"_$input\", {\n\t\tget: function() {\n\t\t\treturn this.$(\"inner\");\n\t\t}\n\t});\n\n\treturn InputBase;\n\n});\n\njQuery.sap.setObject(\"sap.m.InputBaseRenderer\", require(\"sap/m/InputBaseRenderer\"));\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/InputBase.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\nsap.ui.define([\"sap/m/library\", \"sap/ui/Device\", \"sap/ui/core/InvisibleText\"],\n\tfunction(library, Device, InvisibleText) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.m.ListType\n\tvar ListType = library.ListType;\n\n\t// shortcut for sap.m.ListMode\n\tvar ListMode = library.ListMode;\n\n\n\t/**\n\t * ListitemBase renderer.\n\t *\n\t * @namespace\n\t */\n\tvar ListItemBaseRenderer = {};\n\n\t// create ARIA announcements\n\tvar mAriaAnnouncements = {};\n\n\tListItemBaseRenderer.renderInvisible = function(rm, oLI) {\n\t\tthis.openItemTag(rm, oLI);\n\t\trm.writeInvisiblePlaceholderData(oLI);\n\t\trm.write(\">\");\n\t\tthis.closeItemTag(rm, oLI);\n\t};\n\n\t/**\n\t * Renders the highlight state.\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI An object representation of the control that is rendered.\n\t * @protected\n\t */\n\tListItemBaseRenderer.renderHighlight = function(rm, oLI) {\n\t\tvar sHighlight = oLI.getHighlight();\n\t\tif (sHighlight == \"None\") {\n\t\t\treturn;\n\t\t}\n\n\t\trm.write(\"<div\");\n\t\trm.addClass(\"sapMLIBHighlight\");\n\t\trm.addClass(\"sapMLIBHighlight\" + sHighlight);\n\t\trm.writeClasses();\n\t\trm.write(\"></div>\");\n\t};\n\n\tListItemBaseRenderer.isModeMatched = function(sMode, iOrder) {\n\t\tvar mOrderConfig = (sap.m.ListBaseRenderer || {}).ModeOrder || {};\n\t\treturn (mOrderConfig[sMode] == iOrder);\n\t};\n\n\t/**\n\t * Renders the mode when item mode is in correct order\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n\t * @param {int} [iOrder] expected order for the rendering\n\t * @protected\n\t */\n\tListItemBaseRenderer.renderMode = function(rm, oLI, iOrder) {\n\t\tvar sMode = oLI.getMode();\n\t\tif (!this.isModeMatched(sMode, iOrder)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar oModeControl = oLI.getModeControl(true);\n\t\tif (oModeControl) {\n\t\t\tthis.renderModeContent(rm, oLI, oModeControl);\n\t\t}\n\t};\n\n\tListItemBaseRenderer.renderModeContent = function(rm, oLI, oModeControl) {\n\t\tthis.decorateMode(oModeControl, oLI);\n\t\trm.renderControl(oModeControl);\n\t};\n\n\tListItemBaseRenderer.decorateMode = function(oModeControl, oLI) {\n\n\t\t/* Remove animation classes to avoid unexpected re-rendering bahavior */\n\t\toModeControl.removeStyleClass(\"sapMLIBSelectAnimation sapMLIBUnselectAnimation\");\n\n\t\t// determine whether animation is necessary or not\n\t\tif (!sap.ui.getCore().getConfiguration().getAnimation() ||\n\t\t\t!oLI.getListProperty(\"modeAnimationOn\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sMode = oLI.getMode(),\n\t\t\tsLastListMode = oLI.getListProperty(\"lastMode\");\n\n\t\t// determine whether list mode is changed or not\n\t\tif (!sLastListMode || sLastListMode == sMode) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (sMode == ListMode.None) {\n\t\t\toModeControl.addStyleClass(\"sapMLIBUnselectAnimation\");\n\t\t} else {\n\t\t\toModeControl.addStyleClass(\"sapMLIBSelectAnimation\");\n\t\t}\n\t};\n\n\t/**\n\t * Renders counter if it is not empty\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI An object representation of the control that is rendered.\n\t * @protected\n\t */\n\tListItemBaseRenderer.renderCounter = function(rm, oLI) {\n\t\tvar iCounter = oLI.getCounter();\n\t\tif (iCounter) {\n\t\t\tthis.renderCounterContent(rm, oLI, iCounter);\n\t\t}\n\t};\n\n\tListItemBaseRenderer.renderCounterContent = function(rm, oLI, iCounter) {\n\t\trm.write(\"<div\");\n\t\trm.writeAttribute(\"id\", oLI.getId() + \"-counter\");\n\t\tvar sAriaLabel = sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(\"LIST_ITEM_COUNTER\", iCounter);\n\t\trm.writeAttribute(\"aria-label\", sAriaLabel);\n\t\trm.addClass(\"sapMLIBCounter\");\n\t\trm.writeClasses();\n\t\trm.write(\">\");\n\t\trm.write(iCounter);\n\t\trm.write(\"</div>\");\n\t};\n\n\t/**\n\t * Renders type for the list item\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n\t * @protected\n\t */\n\tListItemBaseRenderer.renderType = function(rm, oLI) {\n\t\tvar oTypeControl = oLI.getTypeControl();\n\t\tif (oTypeControl) {\n\t\t\trm.renderControl(oTypeControl);\n\t\t}\n\t};\n\n\t/**\n\t * Renders list item HTML starting tag\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n\t * @protected\n\t */\n\tListItemBaseRenderer.openItemTag = function(rm, oLI) {\n\t\trm.write(\"<\" + oLI.TagName);\n\t};\n\n\t/**\n\t * Renders list item HTML closing tag\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n\t * @protected\n\t */\n\tListItemBaseRenderer.closeItemTag = function(rm, oLI) {\n\t\trm.write(\"</\" + oLI.TagName + \">\");\n\t};\n\n\tListItemBaseRenderer.renderTabIndex = function(rm, oLI) {\n\t\trm.writeAttribute(\"tabindex\", \"-1\");\n\t};\n\n\tListItemBaseRenderer.renderTooltip = function(rm, oLI) {\n\t\tvar sTooltip = oLI.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\trm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\t};\n\n\t/**\n\t * Adds the classes needed to recognize the element as focusable.\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer\n\t * @param {sap.ui.core.Control} [oLI] an object representation of the control that should be rendered\n\t * @protected\n\t */\n\tListItemBaseRenderer.addFocusableClasses = function(rm, oLI) {\n\t\tif (Device.system.desktop) {\n\t\t\trm.addClass(\"sapMLIBFocusable\");\n\t\t\tthis.addLegacyOutlineClass(rm, oLI);\n\t\t}\n\t};\n\n\t/**\n\t * Adds the classes for legacy browsers, which do not support normal outlines.\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer\n\t * @param {sap.ui.core.Control} [oLI] an object representation of the control that should be rendered\n\t * @protected\n\t */\n\tListItemBaseRenderer.addLegacyOutlineClass = function(rm, oLI) {\n\t\tif (Device.browser.msie || Device.browser.edge) {\n\t\t\trm.addClass(\"sapMLIBLegacyOutline\");\n\t\t}\n\t};\n\n\t/**\n\t * Creates an invisible aria node for the given message bundle text\n\t * in the static UIArea and returns its id for ARIA announcements\n\t *\n\t * This method should be used when text is reached frequently.\n\t *\n\t * @param {String} sKey key of the announcement\n\t * @param {String} [sBundleText] key of the announcement\n\t * @returns {String} id of the generated invisible aria node\n\t * @protected\n\t */\n\tListItemBaseRenderer.getAriaAnnouncement = function(sKey, sBundleText) {\n\t\tif (mAriaAnnouncements[sKey]) {\n\t\t\treturn mAriaAnnouncements[sKey];\n\t\t}\n\n\t\tsBundleText = sBundleText || \"LIST_ITEM_\" + sKey.toUpperCase();\n\t\tmAriaAnnouncements[sKey] = new InvisibleText({\n\t\t\ttext : sap.ui.getCore().getLibraryResourceBundle(\"sap.m\").getText(sBundleText)\n\t\t}).toStatic().getId();\n\n\t\treturn mAriaAnnouncements[sKey];\n\t};\n\n\n\t/**\n\t * Returns aria accessibility role\n\t *\n\t * @param {sap.ui.core.Control} oLI an object representation of the control\n\t * @returns {String}\n\t * @protected\n\t */\n\tListItemBaseRenderer.getAriaRole = function(oLI) {\n\t\treturn \"option\";\n\t};\n\n\t/**\n\t * Returns the inner aria labelledby ids for the accessibility\n\t *\n\t * @param {sap.ui.core.Control} oLI an object representation of the control\n\t * @returns {String|undefined}\n\t * @protected\n\t */\n\tListItemBaseRenderer.getAriaLabelledBy = function(oLI) {\n\t\tif (!oLI.getContentAnnouncement && oLI.getAriaLabelledBy().length) {\n\t\t\treturn oLI.getId();\n\t\t}\n\t};\n\n\t/**\n\t * Returns the inner aria describedby ids for the accessibility\n\t *\n\t * @param {sap.ui.core.Control} oLI an object representation of the control\n\t * @returns {String|undefined}\n\t * @protected\n\t */\n\tListItemBaseRenderer.getAriaDescribedBy = function(oLI) {\n\t\tif (oLI.getContentAnnouncement) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tvar aDescribedBy = [],\n\t\t\tsType = oLI.getType(),\n\t\t\tmType = ListType;\n\n\t\tif (oLI.getListProperty(\"showUnread\") && oLI.getUnread()) {\n\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"unread\"));\n\t\t}\n\n\t\tif (oLI.getMode() == ListMode.Delete) {\n\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"deletable\"));\n\t\t}\n\n\t\tif (sType == mType.Navigation) {\n\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"navigation\"));\n\t\t} else {\n\t\t\tif (sType == mType.Detail || sType == mType.DetailAndActive) {\n\t\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"detail\"));\n\t\t\t}\n\t\t\tif (sType == mType.Active || sType == mType.DetailAndActive) {\n\t\t\t\taDescribedBy.push(this.getAriaAnnouncement(\"active\"));\n\t\t\t}\n\t\t}\n\n\t\treturn aDescribedBy.join(\" \");\n\t};\n\n\t/**\n\t * Returns the accessibility state of the control\n\t *\n\t * @param {sap.ui.core.Control} oLI an object representation of the control\n\t * @protected\n\t */\n\tListItemBaseRenderer.getAccessibilityState = function(oLI) {\n\t\tvar sAriaLabelledBy = this.getAriaLabelledBy(oLI),\n\t\t\tsAriaDescribedBy = this.getAriaDescribedBy(oLI),\n\t\t\tmAccessibilityState = {\n\t\t\t\trole: this.getAriaRole(oLI)\n\t\t\t};\n\n\t\tif (oLI.isSelectable()) {\n\t\t\tmAccessibilityState.selected = oLI.getProperty(\"selected\");\n\t\t}\n\n\t\tif (sAriaLabelledBy) {\n\t\t\tmAccessibilityState.labelledby = {\n\t\t\t\tvalue: sAriaLabelledBy.trim(),\n\t\t\t\tappend: true\n\t\t\t};\n\t\t}\n\n\t\tif (sAriaDescribedBy) {\n\t\t\tmAccessibilityState.describedby = {\n\t\t\t\tvalue: sAriaDescribedBy.trim(),\n\t\t\t\tappend: true\n\t\t\t};\n\t\t}\n\n\t\treturn mAccessibilityState;\n\t};\n\n\t/**\n\t * Hook for rendering list item contents\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n\t * @protected\n\t */\n\tListItemBaseRenderer.renderLIContent = function(rm, oLI) {\n\t};\n\n\t/**\n\t * Hook for changing list item attributes\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n\t * @protected\n\t */\n\tListItemBaseRenderer.renderLIAttributes = function(rm, oLI) {\n\t};\n\n\t/**\n\t * Renders the former part of the item.\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI An object representation of the control that is rendered.\n\t * @protected\n\t */\n\tListItemBaseRenderer.renderContentFormer = function(rm, oLI) {\n\t\tthis.renderHighlight(rm, oLI);\n\t\tthis.renderMode(rm, oLI, -1);\n\t};\n\n\t/**\n\t * Renders the latter part of the item.\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI An object representation of the control that is rendered.\n\t * @protected\n\t */\n\tListItemBaseRenderer.renderContentLatter = function(rm, oLI) {\n\t\tthis.renderCounter(rm, oLI);\n\t\tthis.renderType(rm, oLI);\n\t\tthis.renderMode(rm, oLI, 1);\n\t};\n\n\tListItemBaseRenderer.renderLIContentWrapper = function(rm, oLI) {\n\t\trm.write('<div class=\"sapMLIBContent\"');\n\t\trm.writeAttribute(\"id\", oLI.getId() + \"-content\");\n\t\trm.write(\">\");\n\t\tthis.renderLIContent(rm, oLI);\n\t\trm.write('</div>');\n\t};\n\n\n\t/**\n\t * Renders the HTML for the given control, using the provided.\n\t *\n\t * {@link sap.ui.core.RenderManager}.\n\t *\n\t * @param {sap.ui.core.RenderManager} rm The RenderManager that can be used for writing to the Render-Output-Buffer.\n\t * @param {sap.ui.core.Control} oLI an object representation of the control that should be rendered.\n\t * @public\n\t */\n\tListItemBaseRenderer.render = function(rm, oLI) {\n\n\t\t// render invisible placeholder\n\t\tif (!oLI.getVisible()) {\n\t\t\tthis.renderInvisible(rm, oLI);\n\t\t\treturn false;\n\t\t}\n\n\t\t// start\n\t\tthis.openItemTag(rm, oLI);\n\t\trm.writeControlData(oLI);\n\n\t\t// classes\n\t\trm.addClass(\"sapMLIB\");\n\t\trm.addClass(\"sapMLIB-CTX\");\n\t\trm.addClass(\"sapMLIBShowSeparator\");\n\t\trm.addClass(\"sapMLIBType\" + oLI.getType());\n\n\t\tif (Device.system.desktop && oLI.isActionable()) {\n\t\t\trm.addClass(\"sapMLIBActionable\");\n\t\t\trm.addClass(\"sapMLIBHoverable\");\n\t\t}\n\n\t\tif (oLI.getSelected()) {\n\t\t\trm.addClass(\"sapMLIBSelected\");\n\t\t}\n\n\t\tif (oLI.getListProperty(\"showUnread\") && oLI.getUnread()) {\n\t\t\trm.addClass(\"sapMLIBUnread\");\n\t\t}\n\n\t\tthis.addFocusableClasses(rm, oLI);\n\n\t\t// attributes\n\t\tthis.renderTooltip(rm, oLI);\n\t\tthis.renderTabIndex(rm, oLI);\n\n\t\t// handle accessibility states\n\t\tif (sap.ui.getCore().getConfiguration().getAccessibility()) {\n\t\t\trm.writeAccessibilityState(oLI, this.getAccessibilityState(oLI));\n\t\t}\n\n\t\t// item attributes hook\n\t\tthis.renderLIAttributes(rm, oLI);\n\n\t\trm.writeClasses();\n\t\trm.writeStyles();\n\t\trm.write(\">\");\n\n\t\tthis.renderContentFormer(rm, oLI);\n\t\tthis.renderLIContentWrapper(rm, oLI);\n\t\tthis.renderContentLatter(rm, oLI);\n\n\t\tthis.closeItemTag(rm, oLI);\n\t};\n\n\treturn ListItemBaseRenderer;\n\n}, /* bExport= */ true);\n\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/ListItemBaseRenderer.js","/*!\n * UI development toolkit for HTML5 (OpenUI5)\n * (c) Copyright 2009-2017 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n\n// Provides default renderer for control sap.m.Title\nsap.ui.define([\"sap/ui/core/library\"],\n\tfunction(coreLibrary) {\n\t\"use strict\";\n\n\n\t// shortcut for sap.ui.core.TextAlign\n\tvar TextAlign = coreLibrary.TextAlign;\n\n\t// shortcut for sap.ui.core.TitleLevel\n\tvar TitleLevel = coreLibrary.TitleLevel;\n\n\n\t/**\n\t * @class Title renderer.\n\t * @static\n\t */\n\tvar TitleRenderer = {};\n\n\t/**\n\t * Renders the HTML for the given control, using the provided {@link sap.ui.core.RenderManager}.\n\t * @param {sap.ui.core.RenderManager} oRm the RenderManager that can be used for writing to the Render-Output-Buffer\n\t * @param {sap.ui.core.Control} oShell an object representation of the control that should be rendered\n\t */\n\tTitleRenderer.render = function(oRm, oTitle){\n\t\tvar oAssoTitle = oTitle._getTitle(),\n\t\t\tsLevel = (oAssoTitle ? oAssoTitle.getLevel() : oTitle.getLevel()) || TitleLevel.Auto,\n\t\t\tbAutoLevel = sLevel == TitleLevel.Auto,\n\t\t\tsTag = bAutoLevel ? \"div\" : sLevel;\n\n\t\toRm.write(\"<\", sTag);\n\t\toRm.writeControlData(oTitle);\n\t\toRm.addClass(\"sapMTitle\");\n\t\toRm.addClass(\"sapMTitleStyle\" + (oTitle.getTitleStyle() || TitleLevel.Auto));\n\t\toRm.addClass(oTitle.getWrapping() ? \"sapMTitleWrap\" : \"sapMTitleNoWrap\");\n\t\toRm.addClass(\"sapUiSelectable\");\n\n\t\tvar sWidth = oTitle.getWidth();\n\t\tif (!sWidth) {\n\t\t\toRm.addClass(\"sapMTitleMaxWidth\");\n\t\t} else {\n\t\t\toRm.addStyle(\"width\", sWidth);\n\t\t}\n\n\t\tvar sTextAlign = oTitle.getTextAlign();\n\t\tif (sTextAlign && sTextAlign != TextAlign.Initial) {\n\t\t\toRm.addClass(\"sapMTitleAlign\" + sTextAlign);\n\t\t}\n\n\t\tif (oTitle.getParent() instanceof sap.m.Toolbar) {\n\t\t\toRm.addClass(\"sapMTitleTB\");\n\t\t}\n\n\t\tvar sTooltip = oAssoTitle ? oAssoTitle.getTooltip_AsString() : oTitle.getTooltip_AsString();\n\t\tif (sTooltip) {\n\t\t\toRm.writeAttributeEscaped(\"title\", sTooltip);\n\t\t}\n\n\t\tif (bAutoLevel) {\n\t\t\toRm.writeAttribute(\"role\", \"heading\");\n\t\t}\n\n\t\toRm.writeClasses();\n\t\toRm.writeStyles();\n\n\t\toRm.write(\"><span\");\n\t\toRm.writeAttribute(\"id\", oTitle.getId() + \"-inner\");\n\t\toRm.write(\">\");\n\t\toRm.writeEscaped(oAssoTitle ? oAssoTitle.getText() : oTitle.getText());\n\t\toRm.write(\"</span></\", sTag, \">\");\n\t};\n\n\treturn TitleRenderer;\n\n}, /* bExport= */ true);\n\n\n// WEBPACK FOOTER //\n// ../bower_components/openui5-sap.m/resources/sap/m/TitleRenderer.js","\n      jQuery.sap.registerPreloadedModules({\n        version: \"2.0\",\n        url: '.',\n        modules: {\n          \"sap/m/Shell.js\": function(){require(\"sap/m/Shell\")},\n\"sap/m/App.js\": function(){require(\"sap/m/App\")},\n\"sap/m/Page.js\": function(){require(\"sap/m/Page\")},\n\"sap/m/Toolbar.js\": function(){require(\"sap/m/Toolbar\")},\n\"sap/m/SearchField.js\": function(){require(\"sap/m/SearchField\")},\n\"sap/m/Input.js\": function(){require(\"sap/m/Input\")},\n\"sap/m/List.js\": function(){require(\"sap/m/List\")},\n\"sap/m/Label.js\": function(){require(\"sap/m/Label\")},\n\"sap/m/CustomListItem.js\": function(){require(\"sap/m/CustomListItem\")},\n\"sap/m/Bar.js\": function(){require(\"sap/m/Bar\")},\n\"sap/m/SegmentedButton.js\": function(){require(\"sap/m/SegmentedButton\")},\n\"sap/m/SegmentedButtonItem.js\": function(){require(\"sap/m/SegmentedButtonItem\")},\n\"sap/m/Button.js\": function(){require(\"sap/m/Button\")},\n\n        }\n      });\n      var parser = new DOMParser();\n      var xml = parser.parseFromString(\"<mvc:View xmlns:mvc=\\\"sap.ui.core.mvc\\\" xmlns=\\\"sap.m\\\" controllerName=\\\"sap.ui.demo.todo.controller.App\\\" displayBlock=\\\"true\\\">\\n\\t<Shell>\\n\\t\\t<App>\\n\\t\\t\\t<Page title=\\\"{i18n>TITLE}\\\" backgroundDesign=\\\"Solid\\\">\\n\\t\\t\\t\\t<subHeader>\\n\\t\\t\\t\\t\\t<Toolbar>\\n\\t\\t\\t\\t\\t\\t<SearchField\\n\\t\\t\\t\\t\\t\\t\\tid=\\\"searchTodoItemsInput\\\"\\n\\t\\t\\t\\t\\t\\t\\tliveChange=\\\"onSearch\\\"\\n\\t\\t\\t\\t\\t\\t\\twidth=\\\"100%\\\" />\\n\\t\\t\\t\\t\\t</Toolbar>\\n\\t\\t\\t\\t</subHeader>\\n\\t\\t\\t\\t<content>\\n\\t\\t\\t\\t\\t<Input class=\\\"todoInput\\\" id=\\\"addTodoItemInput\\\" value=\\\"{/newTodo}\\\" placeholder=\\\"{i18n>INPUT_PLACEHOLDER}\\\" change=\\\"addTodo\\\" />\\n\\t\\t\\t\\t\\t<List id=\\\"todoList\\\"\\n\\t\\t\\t\\t\\t\\titems=\\\"{ path: '/todos', events: { change: '.updateItemsLeftCount' } }\\\"\\n\\t\\t\\t\\t\\t\\tmode=\\\"MultiSelect\\\"\\n\\t\\t\\t\\t\\t\\tgrowing=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\tgrowingScrollToLoad=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\tshowNoData=\\\"false\\\"\\n\\t\\t\\t\\t\\t\\tshowSeparators=\\\"None\\\"\\n\\t\\t\\t\\t\\t\\trememberSelections=\\\"false\\\">\\n\\t\\t\\t\\t\\t\\t<infoToolbar>\\n\\t\\t\\t\\t\\t\\t\\t<Toolbar>\\n\\t\\t\\t\\t\\t\\t\\t\\t<Label id=\\\"itemsLeftLabel\\\" text=\\\"{= ${/itemsLeftCount} === 1 ? ${/itemsLeftCount} + ' ' + ${i18n>ITEM_LEFT} : ${/itemsLeftCount} + ' ' + ${i18n>ITEMS_LEFT} }\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t</Toolbar>\\n\\t\\t\\t\\t\\t\\t</infoToolbar>\\n\\t\\t\\t\\t\\t\\t<CustomListItem class=\\\"todoListItem\\\" selected=\\\"{completed}\\\">\\n\\t\\t\\t\\t\\t\\t\\t<Input enabled=\\\"{=!${completed}}\\\" value=\\\"{title}\\\"/>\\n\\t\\t\\t\\t\\t\\t</CustomListItem>\\n\\t\\t\\t\\t\\t</List>\\n\\t\\t\\t\\t</content>\\n\\t\\t\\t\\t<footer>\\n\\t\\t\\t\\t\\t<Bar>\\n\\t\\t\\t\\t\\t\\t<contentMiddle>\\n\\t\\t\\t\\t\\t\\t\\t<SegmentedButton selectedKey=\\\"all\\\" select=\\\"onFilter\\\" class=\\\"sapMSegmentedButtonNoAutoWidth\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<items>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<SegmentedButtonItem id=\\\"filterButton-all\\\" text=\\\"All\\\" key=\\\"all\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<SegmentedButtonItem id=\\\"filterButton-active\\\" text=\\\"Active\\\" key=\\\"active\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<SegmentedButtonItem id=\\\"filterButton-completed\\\" text=\\\"Completed\\\" key=\\\"completed\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t</items>\\n\\t\\t\\t\\t\\t\\t\\t</SegmentedButton>\\n\\t\\t\\t\\t\\t\\t</contentMiddle>\\n\\t\\t\\t\\t\\t\\t<contentRight>\\n\\t\\t\\t\\t\\t\\t\\t<Button id=\\\"clearCompleted\\\" enabled=\\\"{/itemsRemovable}\\\" icon=\\\"sap-icon://delete\\\" text=\\\"{i18n>CLEAR_COMPLETED}\\\" press=\\\"clearCompleted\\\" />\\n\\t\\t\\t\\t\\t\\t</contentRight>\\n\\t\\t\\t\\t\\t</Bar>\\n\\t\\t\\t\\t</footer>\\n\\t\\t\\t</Page>\\n\\t\\t</App>\\n\\t</Shell>\\n</mvc:View>\\n\", \"text/xml\");\n      module.exports = xml;\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./view/App.view.xml\n// module id = vhzV\n// module chunks = 1","sap.ui.define([\n\t\"sap/ui/core/mvc/Controller\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/model/Filter\",\n\t\"sap/ui/model/FilterOperator\"\n], function(Controller, JSONModel, Filter, FilterOperator) {\n\t'use strict';\n\n\treturn Controller.extend('sap.ui.demo.todo.controller.App', {\n\n\t\tonInit: function() {\n\t\t\tthis.aSearchFilters = [];\n\t\t\tthis.aTabFilters = [];\n\t\t},\n\n\t\t/**\n\t\t * Adds a new todo item to the bottom of the list.\n\t\t */\n\t\taddTodo: function() {\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar aTodos = jQuery.extend(true, [], oModel.getProperty('/todos'));\n\n\t\t\taTodos.push({\n\t\t\t\ttitle: oModel.getProperty('/newTodo'),\n\t\t\t\tcompleted: false\n\t\t\t});\n\n\t\t\toModel.setProperty('/todos', aTodos);\n\t\t\toModel.setProperty('/newTodo', '');\n\t\t},\n\n\t\t/**\n\t\t * Removes all completed items from the todo list.\n\t\t */\n\t\tclearCompleted: function() {\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar aTodos = jQuery.extend(true, [], oModel.getProperty('/todos'));\n\n\t\t\tvar i = aTodos.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar oTodo = aTodos[i];\n\t\t\t\tif (oTodo.completed) {\n\t\t\t\t\taTodos.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toModel.setProperty('/todos', aTodos);\n\t\t},\n\n\t\t/**\n\t\t * Updates the number of items not yet completed\n\t\t */\n\t\tupdateItemsLeftCount: function() {\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar aTodos = oModel.getProperty('/todos') || [];\n\n\t\t\tvar iItemsLeft = aTodos.filter(function(oTodo) {\n\t\t\t\treturn oTodo.completed !== true;\n\t\t\t}).length;\n\n\t\t\toModel.setProperty('/itemsLeftCount', iItemsLeft);\n\t\t},\n\n\t\t/**\n\t\t * Trigger search for specific items. The removal of items is disable as long as the search is used.\n\t\t * @param {sap.ui.base.Event} oEvent Input changed event\n\t\t */\n\t\tonSearch: function(oEvent) {\n\t\t\tvar oModel = this.getView().getModel();\n\n\t\t\t// First reset current filters\n\t\t\tthis.aSearchFilters = [];\n\n\t\t\t// add filter for search\n\t\t\tvar sQuery = oEvent.getSource().getValue();\n\t\t\tif (sQuery && sQuery.length > 0) {\n\t\t\t\toModel.setProperty('/itemsRemovable', false);\n\t\t\t\tvar filter = new Filter(\"title\", FilterOperator.Contains, sQuery);\n\t\t\t\tthis.aSearchFilters.push(filter);\n\t\t\t} else {\n\t\t\t\toModel.setProperty('/itemsRemovable', true);\n\t\t\t}\n\n\t\t\tthis._applyListFilters();\n\t\t},\n\n\t\tonFilter: function(oEvent) {\n\n\t\t\t// First reset current filters\n\t\t\tthis.aTabFilters = [];\n\n\t\t\t// add filter for search\n\t\t\tvar sFilterKey = oEvent.getParameter(\"key\");\n\n\t\t\t// eslint-disable-line default-case\n\t\t\tswitch (sFilterKey) {\n\t\t\t\tcase \"active\":\n\t\t\t\t\tthis.aTabFilters.push(new Filter(\"completed\", FilterOperator.EQ, false));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"completed\":\n\t\t\t\t\tthis.aTabFilters.push(new Filter(\"completed\", FilterOperator.EQ, true));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"all\":\n\t\t\t\tdefault:\n\t\t\t\t\t// Don't use any filter\n\t\t\t}\n\n\t\t\tthis._applyListFilters();\n\t\t},\n\n\t\t_applyListFilters: function() {\n\t\t\tvar oList = this.byId(\"todoList\");\n\t\t\tvar oBinding = oList.getBinding(\"items\");\n\n\t\t\toBinding.filter(this.aSearchFilters.concat(this.aTabFilters), \"todos\");\n\t\t}\n\n\t});\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./controller/App.controller.js"],"sourceRoot":""}